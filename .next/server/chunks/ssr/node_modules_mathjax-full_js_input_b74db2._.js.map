{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"FindTeX.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/FindTeX.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the TeX version of the FindMath object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractFindMath} from '../../core/FindMath.js';\nimport {OptionList} from '../../util/Options.js';\nimport {sortLength, quotePattern} from '../../util/string.js';\nimport {ProtoItem, protoItem} from '../../core/MathItem.js';\n\n/**\n * Shorthand types for data about end delimiters and delimiter pairs\n */\nexport type EndItem = [string, boolean, RegExp];\nexport type Delims = [string, string];\n\n/*****************************************************************/\n/*\n *  Implements the FindTeX class (extends AbstractFindMath)\n *\n *  Locates TeX expressions within strings\n */\n\n/*\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class FindTeX<N, T, D> extends AbstractFindMath<N, T, D> {\n\n  /**\n   * @type {OptionList}\n   */\n  public static OPTIONS: OptionList = {\n    inlineMath: [              // The start/end delimiter pairs for in-line math\n      //  ['$', '$'],              //  (comment out any you don't want, or add your own, but\n      ['\\\\(', '\\\\)']           //  be sure that you don't have an extra comma at the end)\n    ],\n\n    displayMath: [             // The start/end delimiter pairs for display math\n      ['$$', '$$'],            //  (comment out any you don't want, or add your own, but\n      ['\\\\[', '\\\\]']           //  be sure that you don't have an extra comma at the end)\n    ],\n\n    processEscapes: true,      // set to true to allow \\$ to produce a dollar without\n    //   starting in-line math mode\n    processEnvironments: true, // set to true to process \\begin{xxx}...\\end{xxx} outside\n    //   of math mode, false to prevent that\n    processRefs: true,         // set to true to process \\ref{...} outside of math mode\n  };\n\n  /**\n   * The regular expression for any starting delimiter\n   */\n  protected start: RegExp;\n\n  /**\n   * The end-delimiter data keyed to the opening delimiter string\n   */\n  protected end: {[name: string]: EndItem};\n\n  /**\n   * False if the configuration has no delimiters (so search can be skipped), true otherwise\n   */\n  protected hasPatterns: boolean;\n\n  /**\n   * The index of the \\begin...\\end pattern in the regex match array\n   */\n  protected env: number;\n\n  /**\n   * The index of the \\ref and escaped character patters in the regex match array\n   */\n  protected sub: number;\n\n  /**\n   * @override\n   */\n  constructor(options: OptionList) {\n    super(options);\n    this.getPatterns();\n  }\n\n  /**\n   * Create the patterns needed for searching the strings for TeX\n   *   based on the configuration options\n   */\n  protected getPatterns() {\n    let options = this.options;\n    let starts: string[] = [], parts: string[] = [], subparts: string[] = [];\n    this.end = {};\n    this.env = this.sub = 0;\n    let i = 1;\n    options['inlineMath'].forEach((delims: Delims) => this.addPattern(starts, delims, false));\n    options['displayMath'].forEach((delims: Delims) => this.addPattern(starts, delims, true));\n    if (starts.length) {\n      parts.push(starts.sort(sortLength).join('|'));\n    }\n    if (options['processEnvironments']) {\n      parts.push('\\\\\\\\begin\\\\s*\\\\{([^}]*)\\\\}');\n      this.env = i;\n      i++;\n    }\n    if (options['processEscapes']) {\n      subparts.push('\\\\\\\\([\\\\\\\\$])');\n    }\n    if (options['processRefs']) {\n      subparts.push('(\\\\\\\\(?:eq)?ref\\\\s*\\\\{[^}]*\\\\})');\n    }\n    if (subparts.length) {\n      parts.push('(' + subparts.join('|') + ')');\n      this.sub = i;\n    }\n    this.start = new RegExp(parts.join('|'), 'g');\n    this.hasPatterns = (parts.length > 0);\n  }\n\n  /**\n   * Add the needed patterns for a pair of delimiters\n   *\n   * @param {string[]} starts  Array of starting delimiter strings\n   * @param {Delims} delims    Array of delimiter strings, as [start, end]\n   * @param {boolean} display  True if the delimiters are for display mode\n   */\n  protected addPattern(starts: string[], delims: Delims, display: boolean) {\n    let [open, close] = delims;\n    starts.push(quotePattern(open));\n    this.end[open] = [close, display, this.endPattern(close)];\n  }\n\n  /**\n   * Create the pattern for a close delimiter\n   *\n   * @param {string} end   The end delimiter text\n   * @param {string} endp  The end delimiter pattern (overrides the literal end pattern)\n   * @return {RegExp}      The regular expression for the end delimiter\n   */\n  protected endPattern(end: string, endp?: string): RegExp {\n    return new RegExp((endp || quotePattern(end)) + '|\\\\\\\\(?:[a-zA-Z]|.)|[{}]', 'g');\n  }\n\n  /**\n   * Search for the end delimiter given the start delimiter,\n   *   skipping braced groups, and control sequences that aren't\n   *   the close delimiter.\n   *\n   * @param {string} text            The string being searched for the end delimiter\n   * @param {number} n               The index of the string being searched\n   * @param {RegExpExecArray} start  The result array from the start-delimiter search\n   * @param {EndItem} end            The end-delimiter data corresponding to the start delimiter\n   * @return {ProtoItem<N,T>}        The proto math item for the math, if found\n   */\n  protected findEnd(text: string, n: number, start: RegExpExecArray, end: EndItem): ProtoItem<N, T> {\n    let [close, display, pattern] = end;\n    let i = pattern.lastIndex = start.index + start[0].length;\n    let match: RegExpExecArray, braces: number = 0;\n    while ((match = pattern.exec(text))) {\n      if ((match[1] || match[0]) === close && braces === 0) {\n        return protoItem<N, T>(start[0], text.substr(i, match.index - i), match[0],\n                               n, start.index, match.index + match[0].length, display);\n      } else if (match[0] === '{') {\n        braces++;\n      } else if (match[0] === '}' && braces) {\n        braces--;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Search a string for math delimited by one of the delimiter pairs,\n   *   or by \\begin{env}...\\end{env}, or \\eqref{...}, \\ref{...}, \\\\, or \\$.\n   *\n   * @param {ProtoItem[]} math  The array of proto math items located so far\n   * @param {number} n          The index of the string being searched\n   * @param {string} text       The string being searched\n   */\n  protected findMathInString(math: ProtoItem<N, T>[], n: number, text: string) {\n    let start, match;\n    this.start.lastIndex = 0;\n    while ((start = this.start.exec(text))) {\n      if (start[this.env] !== undefined && this.env) {\n        let end = '\\\\\\\\end\\\\s*(\\\\{' + quotePattern(start[this.env]) + '\\\\})';\n        match = this.findEnd(text, n, start, ['{' + start[this.env] + '}', true, this.endPattern(null, end)]);\n        if (match) {\n          match.math = match.open + match.math + match.close;\n          match.open = match.close = '';\n        }\n      } else if (start[this.sub] !== undefined && this.sub) {\n        let math = start[this.sub];\n        let end = start.index + start[this.sub].length;\n        if (math.length === 2) {\n          match = protoItem<N, T>('', math.substr(1), '', n, start.index, end);\n        } else {\n          match = protoItem<N, T>('', math, '', n, start.index, end, false);\n        }\n      } else {\n        match = this.findEnd(text, n, start, this.end[start[0]]);\n      }\n      if (match) {\n        math.push(match);\n        this.start.lastIndex = match.end.n;\n      }\n    }\n  }\n\n  /**\n   * Search for math in an array of strings and return an array of matches.\n   *\n   * @override\n   */\n  public findMath(strings: string[]) {\n    let math: ProtoItem<N, T>[] = [];\n    if (this.hasPatterns) {\n      for (let i = 0, m = strings.length; i < m; i++) {\n        this.findMathInString(math, i, strings[i]);\n      }\n    }\n    return math;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"file":"NodeUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/NodeUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Node utility methods.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {TextNode, MMLNODE, MmlNode, AbstractMmlNode, AbstractMmlEmptyNode} from '../../core/MmlTree/MmlNode.js';\nimport {MmlMo} from '../../core/MmlTree/MmlNodes/mo.js';\nimport {Property, PropertyList} from '../../core/Tree/Node.js';\nimport {Args} from './Types.js';\nimport {OperatorDef} from '../../core/MmlTree/OperatorDictionary.js';\n\n\nnamespace NodeUtil {\n\n  const attrs: Map<String, boolean> = new Map([\n    ['autoOP', true],\n    ['fnOP', true],\n    ['movesupsub', true],\n    ['subsupOK', true],\n    ['texprimestyle', true],\n    ['useHeight', true],\n    ['variantForm', true],\n    ['withDelims', true],\n    ['mathaccent', true],\n    ['open', true],\n    ['close', true]\n  ]);\n\n\n  /**\n   * Creates a single character from a unicode hex string.\n   * @param {string} code The code.\n   * @return {string} The newly created entity.\n   */\n  export function createEntity(code: string): string  {\n    return String.fromCodePoint(parseInt(code, 16));\n  }\n\n\n  /**\n   * Get the children of the a node.\n   * @param {MmlNode} node The node.\n   * @return {MMLNODE[]} Its children.\n   */\n  export function getChildren(node: MmlNode): MMLNODE[] {\n    return (node.childNodes as MMLNODE[]);\n  }\n\n\n  /**\n   * Get text content of a node.\n   * @param {TextNode} node The node.\n   * @return {string} Its text content.\n   */\n  export function getText(node: TextNode): string {\n    return node.getText();\n  }\n\n\n  /**\n   * Append children to a node.\n   * @param {MmlNode} node The node.\n   * @param {MMLNODE[]} children A list of new children.\n   */\n  export function appendChildren(node: MmlNode, children: MMLNODE[])  {\n    for (let child of children) {\n      node.appendChild(child);\n    }\n  }\n\n\n  /**\n   * Sets an attribute of a node.\n   * @param {MmlNode} node The node.\n   * @param {string} attribute An attribute.\n   * @param {Args} value The attribute value.\n   */\n  export function setAttribute(node: MmlNode, attribute: string, value: Args) {\n    node.attributes.set(attribute, value);\n  }\n\n\n  /**\n   * Sets a property of a node.\n   * @param {MmlNode} node The node.\n   * @param {string} property The property.\n   * @param {Args} value The property value.\n   */\n  export function setProperty(node: MmlNode, property: string, value: Args) {\n    node.setProperty(property, value);\n  }\n\n\n  /**\n   * Sets properties and attributes of a node.\n   * @param {MmlNode} node The node.\n   * @param {PropertyList} properties A list of property/attribute value pairs.\n   */\n  export function setProperties(node: MmlNode, properties: PropertyList) {\n    for (const name of Object.keys(properties)) {\n      let value = properties[name];\n      if (name === 'texClass') {\n        node.texClass = (value as number);\n        node.setProperty(name, value);\n      } else if (name === 'movablelimits') {\n        node.setProperty('movablelimits', value);\n        if (node.isKind('mo') || node.isKind('mstyle')) {\n          node.attributes.set('movablelimits', value);\n        }\n      } else if (name === 'inferred') {\n        // ignore\n      } else if (attrs.has(name)) {\n        node.setProperty(name, value);\n      } else {\n        node.attributes.set(name, value);\n      }\n    }\n  }\n\n\n  /**\n   * Returns the property of a node.\n   * @param {MmlNode} node The node.\n   * @param {string} property A property name.\n   * @return {Property} Value of the property.\n   */\n  export function getProperty(node: MmlNode, property: string): Property  {\n    return node.getProperty(property);\n  }\n\n\n  /**\n   * Returns the attribute of a node.\n   * @param {MmlNode} node The node.\n   * @param {string} attr A attribute name.\n   * @return {Property} Value of the attribute.\n   */\n  export function getAttribute(node: MmlNode, attr: string): Property  {\n    return node.attributes.get(attr);\n  }\n\n\n  /**\n   * Removes a set of properties from a node.\n   * @param {MmlNode} node The node.\n   * @param {string[]} ...properties  A list of properties.\n   */\n  export function removeProperties(node: MmlNode, ...properties: string[]) {\n    node.removeProperty(...properties);\n  }\n\n\n  /**\n   * Returns a child node at a given position.\n   * @param {MmlNode} node The node.\n   * @param {number} position The position of the child.\n   * @return {MMLNODE} The child node at position.\n   */\n  export function getChildAt(node: MmlNode, position: number): MMLNODE {\n    return (node.childNodes[position] as MMLNODE);\n  }\n\n\n  /**\n   * Set node child at position.\n   * @param {MmlNode} node The node.\n   * @param {number} position The position of the new child.\n   * @param {MmlNode} child The new child.\n   */\n  export function setChild(node: MmlNode, position: number, child: MmlNode) {\n    let children = node.childNodes;\n    children[position] = child;\n    if (child) {\n      child.parent = node;\n    }\n  }\n\n\n  /**\n   * Copies children between nodes.\n   * @param {MmlNode} oldNode The source node.\n   * @param {MmlNode} newNode The target node.\n   */\n  export function copyChildren(oldNode: MmlNode, newNode: MmlNode) {\n    let children = oldNode.childNodes as (TextNode | MmlNode)[];\n    for (let i = 0; i < children.length; i++) {\n      setChild(newNode, i, children[i]);\n    }\n  }\n\n\n  /**\n   * Copies attributes between nodes.\n   * @param {MmlNode} oldNode The source node.\n   * @param {MmlNode} newNode The target node.\n   */\n  export function copyAttributes(oldNode: MmlNode, newNode: MmlNode) {\n    newNode.attributes = oldNode.attributes;\n    setProperties(newNode, oldNode.getAllProperties());\n  }\n\n\n  /**\n   * Checks if node is of a particular type.\n   * @param {MmlNode} node The node.\n   * @param {string} kind The type to check.\n   * @return {boolean} True if node is of the given type.\n   */\n  export function isType(node: MmlNode, kind: string): boolean  {\n    return node.isKind(kind);\n  }\n\n\n  /**\n   * Checks if the node is embellished.\n   * @param {MmlNode} node The node.\n   * @return {boolean} True if node is embellished.\n   */\n  export function isEmbellished(node: MmlNode): boolean {\n    return node.isEmbellished;\n  }\n\n\n  /**\n   * Gets the texclass of a node.\n   * @param {MmlNode} node The node.\n   * @return {number} Its texclass.\n   */\n  export function getTexClass(node: MmlNode): number  {\n    return node.texClass;\n  }\n\n\n  /**\n   * Gets the mo element at the core of the node.\n   * @param {MmlNode} node The node.\n   * @return {MmlNode} The MO node at the core.\n   */\n  export function getCoreMO(node: MmlNode): MmlNode  {\n    return node.coreMO();\n  }\n\n\n  /**\n   * Checks if an object is a node.\n   * @param {any} item The object.\n   * @return {boolean} True if it is a node.\n   */\n  export function isNode(item: any): boolean  {\n    return item instanceof AbstractMmlNode || item instanceof AbstractMmlEmptyNode;\n  }\n\n\n  /**\n   * Checks if the node is an inferred mrow.\n   * @param {MmlNode} node The node.\n   * @return {boolean} True if the node is an inferred mrow.\n   */\n  export function isInferred(node: MmlNode): boolean {\n    return node.isInferred;\n  }\n\n\n  /**\n   * Gets the operator definition of a node.\n   * @param {MmlNode} node The node.\n   * @return {OperatorDef} If node is an MO returns the operator definition. O/w\n   *    null.\n   */\n  export function getForm(node: MmlNode): OperatorDef {\n    if (!isType(node, 'mo')) {\n      return null;\n    }\n    let mo = node as MmlMo;\n    let forms = mo.getForms();\n    for (let form of forms) {\n      let symbol = MmlMo.OPTABLE[form][mo.getText()];\n      if (symbol) {\n        return symbol;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport default NodeUtil;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"file":"FilterUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/FilterUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Utility functions for standard pre and post filters.\n *\n * @author sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {TEXCLASS, MMLNODE, MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport NodeUtil from './NodeUtil.js';\nimport ParseOptions from './ParseOptions.js';\nimport {MmlMo} from '../../core/MmlTree/MmlNodes/mo.js';\nimport {Attributes} from '../../core/MmlTree/Attributes.js';\n\n\nnamespace FilterUtil {\n\n  /**\n   * Visitor to set stretchy attributes to false on <mo> elements, if they are\n   * not used as delimiters. Also wraps non-stretchy infix delimiters into a\n   * TeXAtom.\n   * @param {MmlNode} math The node to rewrite.\n   * @param {ParseOptions} data The parse options.\n   */\n  export let cleanStretchy = function(arg: {math: any, data: ParseOptions}) {\n    let options = arg.data;\n    for (let mo of options.getList('fixStretchy')) {\n      if (NodeUtil.getProperty(mo, 'fixStretchy')) {\n        let symbol = NodeUtil.getForm(mo);\n        if (symbol && symbol[3] && symbol[3]['stretchy']) {\n          NodeUtil.setAttribute(mo, 'stretchy', false);\n        }\n        const parent = mo.parent;\n        if (!NodeUtil.getTexClass(mo) && (!symbol || !symbol[2])) {\n          const texAtom = options.nodeFactory.create('node', 'TeXAtom', [mo]);\n          parent.replaceChild(texAtom, mo);\n          texAtom.inheritAttributesFrom(mo);\n        }\n        NodeUtil.removeProperties(mo, 'fixStretchy');\n      }\n    }\n  };\n\n\n  /**\n   * Visitor that removes superfluous attributes from nodes. I.e., if a node has\n   * an attribute, which is also an inherited attribute it will be removed. This\n   * is necessary as attributes are set bottom up in the parser.\n   * @param {ParseOptions} data The parse options.\n   */\n  export let cleanAttributes = function(arg: {data: ParseOptions}) {\n    let node = arg.data.root as MmlNode;\n    node.walkTree((mml: MmlNode, _d: any) => {\n      let attribs = mml.attributes as any;\n      if (!attribs) {\n        return;\n      }\n      const keep = new Set((attribs.get('mjx-keep-attrs') || '').split(/ /));\n      delete (attribs.getAllAttributes())['mjx-keep-attrs'];\n      for (const key of attribs.getExplicitNames()) {\n        if (!keep.has(key) && attribs.attributes[key] === mml.attributes.getInherited(key)) {\n          delete attribs.attributes[key];\n        }\n      }\n    }, {});\n  };\n\n\n  /**\n   * Combine adjacent <mo> elements that are relations (since MathML treats the\n   * spacing very differently)\n   * @param {ParseOptions} data The parse options.\n   */\n  export let combineRelations = function(arg: {data: ParseOptions}) {\n    const remove: MmlNode[] = [];\n    for (let mo of arg.data.getList('mo')) {\n      if (mo.getProperty('relationsCombined') || !mo.parent ||\n          (mo.parent && !NodeUtil.isType(mo.parent, 'mrow')) ||\n          NodeUtil.getTexClass(mo) !== TEXCLASS.REL) {\n        // @test Prime, PrimeSup, Named Function\n        continue;\n      }\n      let mml = mo.parent;\n      let m2: MmlNode;\n      let children = mml.childNodes as MMLNODE[];\n      let next = children.indexOf(mo) + 1;\n      let variantForm = NodeUtil.getProperty(mo, 'variantForm');\n      while (next < children.length && (m2 = children[next]) &&\n             NodeUtil.isType(m2, 'mo') &&\n             NodeUtil.getTexClass(m2) === TEXCLASS.REL) {\n        if (variantForm === NodeUtil.getProperty(m2, 'variantForm') &&\n            _compareExplicit(mo, m2)) {\n          // @test Shift Left, Less Equal,\n          //       Multirel Font X, Multirel Mathvariant X\n          NodeUtil.appendChildren(mo, NodeUtil.getChildren(m2));\n          // This treatment means we might loose some inheritance structure, but\n          // no properties.\n          _copyExplicit(['stretchy', 'rspace'], mo, m2);\n          for (const name of m2.getPropertyNames()) {\n            mo.setProperty(name, m2.getProperty(name));\n          }\n          children.splice(next, 1);\n          remove.push(m2);\n          m2.parent = null;\n          m2.setProperty('relationsCombined', true);\n        } else {\n          // @test Preset Rspace Lspace\n          if (mo.attributes.getExplicit('rspace') == null) {\n            // @test Mulitrel Mathvariant 3, Mulitrel Mathvariant 4\n            NodeUtil.setAttribute(mo, 'rspace', '0pt');\n          }\n          if (m2.attributes.getExplicit('lspace') == null) {\n            // @test Mulitrel Mathvariant 3, Mulitrel Mathvariant 4\n            NodeUtil.setAttribute(m2, 'lspace', '0pt');\n          }\n          break;\n        }\n      }\n      mo.attributes.setInherited('form', (mo as MmlMo).getForms()[0]);\n    }\n    arg.data.removeFromList('mo', remove);\n  };\n\n\n  /**\n   * Copies the specified explicit attributes from node2 to node1.\n   * @param {string[]} attrs List of explicit attribute names.\n   * @param {MmlNode} node1 The goal node.\n   * @param {MmlNode} node2 The source node.\n   */\n  let _copyExplicit = function(attrs: string[],\n                               node1: MmlNode, node2: MmlNode) {\n    let attr1 = node1.attributes;\n    let attr2 = node2.attributes;\n    attrs.forEach(x => {\n      let attr = attr2.getExplicit(x);\n      if (attr != null) {\n        // @test Infix Stretchy Right, Preset Lspace Rspace\n        attr1.set(x, attr);\n      }\n    });\n  };\n\n\n  /**\n   * Compares the explicit attributes of two nodes. Returns true if they\n   * coincide, with the following exceptions:\n   *   - lspace attribute of node1 is ignored.\n   *   - rspace attribute of node2 is ignored.\n   *   - stretchy=false attributes are ignored.\n   * @param {MmlNode} node1 The first node.\n   * @param {MmlNode} node2 Its next sibling.\n   */\n  let _compareExplicit = function(node1: MmlNode, node2: MmlNode) {\n    let filter = (attr: Attributes, space: string): string[] => {\n      let exp = attr.getExplicitNames();\n      return exp.filter(x => {\n        return x !== space &&\n          (x !== 'stretchy' ||\n           attr.getExplicit('stretchy'));\n      });\n    };\n    let attr1 = node1.attributes;\n    let attr2 = node2.attributes;\n    let exp1 = filter(attr1, 'lspace');\n    let exp2 = filter(attr2, 'rspace');\n    if (exp1.length !== exp2.length) {\n      return false;\n    }\n    for (let name of exp1) {\n      if (attr1.getExplicit(name) !== attr2.getExplicit(name)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Cleans msubsup and munderover elements.\n   * @param {ParseOptions} options The parse options.\n   * @param {string} low String representing the lower part of the expression.\n   * @param {string} up String representing the upper part.\n   */\n  let _cleanSubSup = function(options: ParseOptions, low: string, up: string) {\n    const remove: MmlNode[] = [];\n    for (let mml of options.getList('m' + low + up) as any[]) {\n      const children = mml.childNodes;\n      if (children[mml[low]] && children[mml[up]]) {\n        continue;\n      }\n      const parent = mml.parent;\n      let newNode = (children[mml[low]] ?\n                 options.nodeFactory.create('node', 'm' + low, [children[mml.base], children[mml[low]]]) :\n                 options.nodeFactory.create('node', 'm' + up, [children[mml.base], children[mml[up]]]));\n      NodeUtil.copyAttributes(mml, newNode);\n      if (parent) {\n        parent.replaceChild(newNode, mml);\n      } else {\n        options.root = newNode;\n      }\n      remove.push(mml);\n    }\n    options.removeFromList('m' + low + up, remove);\n  };\n\n\n  /**\n   * Visitor that rewrites incomplete msubsup/munderover elements in the given\n   * node into corresponding msub/sup/under/over nodes.\n   * @param {MmlNode} math The node to rewrite.\n   * @param {ParseOptions} data The parse options.\n   */\n  export let cleanSubSup = function(arg: {math: any, data: ParseOptions}) {\n    let options = arg.data;\n    if (options.error) {\n      return;\n    }\n    _cleanSubSup(options, 'sub', 'sup');\n    _cleanSubSup(options, 'under', 'over');\n  };\n\n\n  /**\n   * Looks through the list of munderover elements for ones that have\n   * movablelimits and bases that are not mo's, and creates new msubsup\n   * elements to replace them if they aren't in displaystyle.\n   *\n   * @param {MmlNode} ath The node to rewrite.\n   * @param {ParseOptions} data The parse options.\n   */\n  let _moveLimits = function (options: ParseOptions, underover: string, subsup: string) {\n    const remove: MmlNode[] = [];\n    for (const mml of options.getList(underover)) {\n      if (mml.attributes.get('displaystyle')) {\n        continue;\n      }\n      const base = mml.childNodes[(mml as any).base] as MmlNode;\n      const mo = base.coreMO();\n      if (base.getProperty('movablelimits') && !mo.attributes.getExplicit('movablelimits')) {\n        let node = options.nodeFactory.create('node', subsup, mml.childNodes);\n        NodeUtil.copyAttributes(mml, node);\n        if (mml.parent) {\n          mml.parent.replaceChild(node, mml);\n        } else {\n          options.root = node;\n        }\n        remove.push(mml);\n      }\n    }\n    options.removeFromList(underover, remove);\n  };\n\n  /**\n   * Visitor that rewrites in-line munderover elements with movablelimits but bases\n   * that are not mo's into explicit msubsup elements.\n   *\n   * @param {ParseOptions} data  The parse options to use\n   */\n  export let moveLimits = function (arg: {data: ParseOptions}) {\n    const options = arg.data;\n    _moveLimits(options, 'munderover', 'msubsup');\n    _moveLimits(options, 'munder', 'msub');\n    _moveLimits(options, 'mover', 'msup');\n  };\n\n\n  /**\n   * Recursively sets the inherited attributes on the math tree.\n   * @param {MmlNode} math The node to rewrite.\n   * @param {ParseOptions} data The parse options.\n   */\n  export let setInherited = function(arg: {math: any, data: ParseOptions}) {\n    arg.data.root.setInheritedAttributes({}, arg.math['display'], 0, false);\n  };\n\n}\n\n\nexport default FilterUtil;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"file":"TexError.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/TexError.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Error class for the TeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nexport default class TexError {\n\n  private static pattern =\n    /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g;\n\n  /**\n   * Default error message.\n   * @type {string}\n   */\n  public message: string;\n\n  /**\n   * The old MathJax processing function.\n   * @param {string} str The basic error message.\n   * @param {string[]} args The arguments to be replaced in the error message.\n   * @return {string} The processed error string.\n   */\n  private static processString(str: string, args: string[]): string {\n    let parts = str.split(TexError.pattern);\n    for (let i = 1, m = parts.length; i < m; i += 2) {\n      let c = parts[i].charAt(0);  // first char will be { or \\d or a char to be\n                                   // kept literally\n      if (c >= '0' && c <= '9') {    // %n\n        parts[i] = args[parseInt(parts[i], 10) - 1];\n        if (typeof parts[i] === 'number') {\n          parts[i] = parts[i].toString();\n        }\n      } else if (c === '{') {        // %{n} or %{plural:%n|...}\n        c = parts[i].substr(1);\n        if (c >= '0' && c <= '9') {  // %{n}\n          parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];\n          if (typeof parts[i] === 'number') {\n            parts[i] = parts[i].toString();\n          }\n        } else {                     // %{plural:%n|...}\n          let match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n          if (match) {\n            // Removed plural here.\n            parts[i] = '%' + parts[i];\n          }\n        }\n      }\n      if (parts[i] == null) {\n        parts[i] = '???';\n      }\n    }\n    return parts.join('');\n  }\n\n  /**\n   * @constructor\n   * @param{string} id        message id (for localization)\n   * @param{string} message   text of English message\n   * @param{string[]=} rest   any substitution arguments\n   */\n  constructor(public id: string, message: string, ...rest: string[]) {\n    this.message = TexError.processString(message, rest);\n  }\n\n}\n"],"names":[],"mappings":";;;;AAyBA,IAAA,WAAA;IAuDE,SAAA,SAAmB,EAAU,EAAE,OAAe;QAAE,IAAA,OAAA,EAAA,CAAiB;YAAjB,IAAA,KAAA,CAAiB,EAAjB,KAAA,UAAA,MAAiB,EAAjB,IAAiB,CAAA;YAAjB,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAiB;;QAA9C,IAAA,CAAA,EAAE,GAAF,EAAE,CAAQ;QAC3B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAxCc,SAAA,aAAa,GAA5B,SAA6B,GAAW,EAAE,IAAc;QACtD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAE;YAC/C,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE;gBACxB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5C,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBAChC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;iBAChC;aACF,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;gBACpB,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE;oBACxB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC3E,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;wBAChC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;qBAChC;iBACF,MAAM;oBACL,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;oBAC1D,IAAI,KAAK,EAAE;wBAET,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC3B;iBACF;aACF;YACD,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;gBACpB,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;aAClB;SACF;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IA7Cc,SAAA,OAAO,GACpB,iEAAiE,CAAC;IAwDtE,OAAA,QAAC;CAAA,AA3DD,IA2DC;kBA3DoB,QAAQ","ignoreList":[0]}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"file":"ParseUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ParseUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview A namespace for utility functions for the TeX Parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {TEXCLASS, MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {EnvList} from './StackItem.js';\nimport {ArrayItem} from './base/BaseItems.js';\nimport ParseOptions from './ParseOptions.js';\nimport NodeUtil from './NodeUtil.js';\nimport TexParser from './TexParser.js';\nimport TexError from './TexError.js';\nimport {entities} from '../../util/Entities.js';\nimport {MmlMunderover} from '../../core/MmlTree/MmlNodes/munderover.js';\n\n\nnamespace ParseUtil {\n\n  // TODO (VS): Combine some of this with lengths in util.\n  const emPerInch = 7.2;\n  const pxPerInch = 72;\n  // Note, the following are TeX CM font values.\n  const UNIT_CASES: {[key: string]: ((m: number) => number)}  = {\n    'em': m => m,\n    'ex': m => m * .43,\n    'pt': m => m / 10,                    // 10 pt to an em\n    'pc': m => m * 1.2,                   // 12 pt to a pc\n    'px': m => m * emPerInch / pxPerInch,\n    'in': m => m * emPerInch,\n    'cm': m => m * emPerInch / 2.54, // 2.54 cm to an inch\n    'mm': m => m * emPerInch / 25.4, // 10 mm to a cm\n    'mu': m => m / 18,\n  };\n  const num = '([-+]?([.,]\\\\d+|\\\\d+([.,]\\\\d*)?))';\n  const unit = '(pt|em|ex|mu|px|mm|cm|in|pc)';\n  const dimenEnd = RegExp('^\\\\s*' + num + '\\\\s*' + unit + '\\\\s*$');\n  const dimenRest = RegExp('^\\\\s*' + num + '\\\\s*' + unit + ' ?');\n\n\n  /**\n   * Matches for a dimension argument.\n   * @param {string} dim The argument.\n   * @param {boolean} rest Allow for trailing garbage in the dimension string.\n   * @return {[string, string, number]} The match result as (Anglosaxon) value,\n   *     unit name, length of matched string. The latter is interesting in the\n   *     case of trailing garbage.\n   */\n  export function matchDimen(\n    dim: string, rest: boolean = false): [string, string, number] {\n      let match = dim.match(rest ? dimenRest : dimenEnd);\n      return match ?\n        muReplace([match[1].replace(/,/, '.'), match[4], match[0].length]) :\n        [null, null, 0];\n  }\n\n\n  /**\n   * Transforms mu dimension to em if necessary.\n   * @param {[string, string, number]} [value, unit, length] The dimension triple.\n   * @return {[string, string, number]} [value, unit, length] The transformed triple.\n   */\n  function muReplace([value, unit, length]: [string, string, number]): [string, string, number] {\n    if (unit !== 'mu') {\n      return [value, unit, length];\n    }\n    let em = Em(UNIT_CASES[unit](parseFloat(value || '1')));\n    return [em.slice(0, -2), 'em', length];\n  }\n\n\n  /**\n   * Convert a dimension string into standard em dimension.\n   * @param {string} dim The attribute string.\n   * @return {number} The numerical value.\n   */\n  export function dimen2em(dim: string): number {\n    let [value, unit] = matchDimen(dim);\n    let m = parseFloat(value || '1');\n    let func = UNIT_CASES[unit];\n    return func ? func(m) : 0;\n  }\n\n\n  /**\n   * Turns a number into an em value.\n   * @param {number} m The number.\n   * @return {string} The em dimension string.\n   */\n  export function Em(m: number): string {\n    if (Math.abs(m) < .0006) {\n      return '0em';\n    }\n    return m.toFixed(3).replace(/\\.?0+$/, '') + 'em';\n  }\n\n\n  /**\n   * Takes an array of numbers and returns a space-separated string of em values.\n   * @param {number[]} W  The widths to be turned into em values\n   * @return {string}     The numbers with em units, separated by spaces.\n   */\n  export function cols(...W: number[]): string {\n    return W.map(n => Em(n)).join(' ');\n  }\n\n\n  /**\n   * Create an mrow that has stretchy delimiters at either end, as needed\n   * @param {ParseOptions} configuration Current parse options.\n   * @param {string} open The opening fence.\n   * @param {MmlNode} mml The enclosed node.\n   * @param {string} close The closing fence.\n   * @param {string=} big Bigg command.\n   */\n  export function fenced(configuration: ParseOptions, open: string, mml: MmlNode,\n                         close: string, big: string = '', color: string = '') {\n    // @test Fenced, Fenced3\n    let nf = configuration.nodeFactory;\n    let mrow = nf.create('node', 'mrow', [],\n                         {open: open, close: close, texClass: TEXCLASS.INNER});\n    let mo;\n    if (big) {\n      mo = new TexParser('\\\\' + big + 'l' + open, configuration.parser.stack.env, configuration).mml();\n    } else {\n      let openNode = nf.create('text', open);\n      mo = nf.create('node', 'mo', [],\n                     {fence: true, stretchy: true, symmetric: true, texClass: TEXCLASS.OPEN},\n                     openNode);\n    }\n    NodeUtil.appendChildren(mrow, [mo, mml]);\n    if (big) {\n      mo = new TexParser('\\\\' + big + 'r' + close, configuration.parser.stack.env, configuration).mml();\n    } else {\n      let closeNode = nf.create('text', close);\n      mo = nf.create('node', 'mo', [],\n                     {fence: true, stretchy: true, symmetric: true, texClass: TEXCLASS.CLOSE},\n                     closeNode);\n    }\n    color && mo.attributes.set('mathcolor', color);\n    NodeUtil.appendChildren(mrow, [mo]);\n    return mrow;\n  }\n\n\n  /**\n   *  Create an mrow that has \\\\mathchoice using \\\\bigg and \\\\big for the delimiters.\n   * @param {ParseOptions} configuration The current parse options.\n   * @param {string} open The opening fence.\n   * @param {MmlNode} mml The enclosed node.\n   * @param {string} close The closing fence.\n   * @return {MmlNode} The mrow node.\n   */\n  export function fixedFence(configuration: ParseOptions, open: string,\n                             mml: MmlNode, close: string): MmlNode {\n    // @test Choose, Over With Delims, Above with Delims\n    let mrow = configuration.nodeFactory.create('node',\n      'mrow', [], {open: open, close: close, texClass: TEXCLASS.ORD});\n    if (open) {\n      NodeUtil.appendChildren(mrow, [mathPalette(configuration, open, 'l')]);\n    }\n    if (NodeUtil.isType(mml, 'mrow')) {\n      NodeUtil.appendChildren(mrow, NodeUtil.getChildren(mml));\n    } else {\n      NodeUtil.appendChildren(mrow, [mml]);\n    }\n    if (close) {\n      NodeUtil.appendChildren(mrow, [mathPalette(configuration, close, 'r')]);\n    }\n    return mrow;\n  }\n\n\n  /**\n   * Generates a mathchoice element for fences. These will be resolved later,\n   * once the position, and therefore size, of the of the fenced expression is\n   * known.\n   * @param {ParseOptions} configuration The current parse otpions.\n   * @param {string} fence The fence.\n   * @param {string} side The side of the fence (l or r).\n   * @return {MmlNode} The mathchoice node.\n   */\n  export function mathPalette(configuration: ParseOptions, fence: string,\n                              side: string): MmlNode  {\n    if (fence === '{' || fence === '}') {\n      fence = '\\\\' + fence;\n    }\n    let D = '{\\\\bigg' + side + ' ' + fence + '}';\n    let T = '{\\\\big' + side + ' ' + fence + '}';\n    return new TexParser('\\\\mathchoice' + D + T + T + T, {}, configuration).mml();\n  }\n\n\n  /**\n   * If the initial child, skipping any initial space or\n   * empty braces (TeXAtom with child being an empty inferred row),\n   * is an <mo>, precede it by an empty <mi> to force the <mo> to\n   * be infix.\n   * @param {ParseOptions} configuration The current parse options.\n   * @param {MmlNode[]} nodes The row of nodes to scan for an initial <mo>\n   */\n  export function fixInitialMO(configuration: ParseOptions, nodes: MmlNode[]) {\n    for (let i = 0, m = nodes.length; i < m; i++) {\n      let child = nodes[i];\n      if (child && (!NodeUtil.isType(child, 'mspace') &&\n                    (!NodeUtil.isType(child, 'TeXAtom') ||\n                     (NodeUtil.getChildren(child)[0] &&\n                      NodeUtil.getChildren(NodeUtil.getChildren(child)[0]).length)))) {\n        if (NodeUtil.isEmbellished(child) ||\n            (NodeUtil.isType(child, 'TeXAtom') && NodeUtil.getTexClass(child) === TEXCLASS.REL)) {\n          let mi = configuration.nodeFactory.create('node', 'mi');\n          nodes.unshift(mi);\n        }\n        break;\n      }\n    }\n  }\n\n\n  /**\n   * Break up a string into text and math blocks.\n   * @param {TexParser} parser The calling parser.\n   * @param {string} text The text in the math expression to parse.\n   * @param {number|string=} level The scriptlevel.\n   * @param {string} font The mathvariant to use\n   * @return {MmlNode[]} The nodes corresponding to the internal math expression.\n   */\n  export function internalMath(parser: TexParser, text: string,\n                               level?: number | string, font?: string): MmlNode[] {\n    if (parser.configuration.options.internalMath) {\n      return parser.configuration.options.internalMath(parser, text, level, font);\n    }\n    let mathvariant = font || parser.stack.env.font;\n    let def = (mathvariant ? {mathvariant} : {});\n    let mml: MmlNode[] = [], i = 0, k = 0, c, node, match = '', braces = 0;\n    if (text.match(/\\\\?[${}\\\\]|\\\\\\(|\\\\(eq)?ref\\s*\\{/)) {\n      while (i < text.length) {\n        c = text.charAt(i++);\n        if (c === '$') {\n          if (match === '$' && braces === 0) {\n            // @test Interspersed Text\n            node = parser.create(\n              'node', 'TeXAtom',\n              [(new TexParser(text.slice(k, i - 1), {}, parser.configuration)).mml()]);\n            mml.push(node);\n            match = '';\n            k = i;\n          } else if (match === '') {\n            // @test Interspersed Text\n            if (k < i - 1) {\n              // @test Interspersed Text\n              mml.push(internalText(parser, text.slice(k, i - 1), def));\n            }\n            match = '$';\n            k = i;\n          }\n        } else if (c === '{' && match !== '') {\n          // @test Mbox Mbox, Mbox Math\n          braces++;\n        } else if (c === '}') {\n          // @test Mbox Mbox, Mbox Math\n          if (match === '}' && braces === 0) {\n            // @test Mbox Eqref, Mbox Math\n            let atom = (new TexParser(text.slice(k, i), {}, parser.configuration)).mml();\n            node = parser.create('node', 'TeXAtom', [atom], def);\n            mml.push(node);\n            match = '';\n            k = i;\n          } else if (match !== '') {\n            // @test Mbox Math, Mbox Mbox\n            if (braces) {\n              // @test Mbox Math, Mbox Mbox\n              braces--;\n            }\n          }\n        } else if (c === '\\\\') {\n          // @test Mbox Eqref, Mbox CR\n          if (match === '' && text.substr(i).match(/^(eq)?ref\\s*\\{/)) {\n            // @test Mbox Eqref\n            let len = ((RegExp as any)['$&'] as string).length;\n            if (k < i - 1) {\n              // @test Mbox Eqref\n              mml.push(internalText(parser, text.slice(k, i - 1), def));\n            }\n            match = '}';\n            k = i - 1;\n            i += len;\n          } else {\n            // @test Mbox CR, Mbox Mbox\n            c = text.charAt(i++);\n            if (c === '(' && match === '') {\n              // @test Mbox Internal Display\n              if (k < i - 2) {\n                // @test Mbox Internal Display\n                mml.push(internalText(parser, text.slice(k, i - 2), def));\n              }\n              match = ')'; k = i;\n            } else if (c === ')' && match === ')' && braces === 0) {\n              // @test Mbox Internal Display\n              node = parser.create(\n                'node', 'TeXAtom',\n                [(new TexParser(text.slice(k, i - 2), {}, parser.configuration)).mml()]);\n              mml.push(node);\n              match = '';\n              k = i;\n            } else if (c.match(/[${}\\\\]/) && match === '')  {\n              // @test Mbox CR\n              i--;\n              text = text.substr(0, i - 1) + text.substr(i); // remove \\ from \\$, \\{, \\}, or \\\\\n            }\n          }\n        }\n      }\n      if (match !== '') {\n        // @test Internal Math Error\n        throw new TexError('MathNotTerminated', 'Math not terminated in text box');\n      }\n    }\n    if (k < text.length) {\n      // @test Interspersed Text, Mbox Mbox\n      mml.push(internalText(parser, text.slice(k), def));\n    }\n    if (level != null) {\n      // @test Label, Fbox, Hbox\n      mml = [parser.create('node', 'mstyle', mml, {displaystyle: false, scriptlevel: level})];\n    } else if (mml.length > 1) {\n      // @test Interspersed Text\n      mml = [parser.create('node', 'mrow', mml)];\n    }\n    return mml;\n  }\n\n\n  /**\n   * Parses text internal to boxes or labels.\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} text The text to parse.\n   * @param {EnvList} def The attributes of the text node.\n   * @return {MmlNode} The text node.\n   */\n  export function internalText(parser: TexParser, text: string, def: EnvList): MmlNode {\n    // @test Label, Fbox, Hbox\n    text = text.replace(/^\\s+/, entities.nbsp).replace(/\\s+$/, entities.nbsp);\n    let textNode = parser.create('text', text);\n    return parser.create('node', 'mtext', [], def, textNode);\n  }\n\n  /**\n   * Create an munderover node with the given script position.\n   * @param {TexParser} parser   The current TeX parser.\n   * @param {MmlNode} base       The base node.\n   * @param {MmlNode} script     The under- or over-script.\n   * @param {string} pos         Either 'over' or 'under'.\n   * @param {boolean} stack      True if super- or sub-scripts should stack.\n   * @return {MmlNode}           The generated node (MmlMunderover or TeXAtom)\n   */\n  export function underOver(parser: TexParser, base: MmlNode, script: MmlNode, pos: string, stack: boolean): MmlNode {\n    // @test Overline\n    ParseUtil.checkMovableLimits(base);\n    if (NodeUtil.isType(base, 'munderover') && NodeUtil.isEmbellished(base)) {\n      // @test Overline Limits\n      NodeUtil.setProperties(NodeUtil.getCoreMO(base), {lspace: 0, rspace: 0});\n      const mo = parser.create('node', 'mo', [], {rspace: 0});\n      base = parser.create('node', 'mrow', [mo, base]);\n      // TODO? add an empty <mi> so it's not embellished any more\n    }\n    const mml = parser.create('node', 'munderover', [base]) as MmlMunderover;\n    NodeUtil.setChild(mml, pos === 'over' ?  mml.over : mml.under, script);\n    let node: MmlNode = mml;\n    if (stack) {\n      // @test Overbrace 1 2 3, Underbrace, Overbrace Op 1 2\n      node = parser.create('node', 'TeXAtom', [mml], {texClass: TEXCLASS.OP, movesupsub: true});\n    }\n    NodeUtil.setProperty(node, 'subsupOK', true);\n    return node;\n  }\n\n  /**\n   * Set movablelimits to false if necessary.\n   * @param {MmlNode} base   The base node being tested.\n   */\n  export function checkMovableLimits(base: MmlNode) {\n    const symbol = (NodeUtil.isType(base, 'mo') ? NodeUtil.getForm(base) : null);\n    if (NodeUtil.getProperty(base, 'movablelimits') || (symbol && symbol[3] && symbol[3].movablelimits)) {\n      // @test Overline Sum\n      NodeUtil.setProperties(base, {movablelimits: false});\n    }\n  }\n\n  /**\n   * Trim spaces from a string.\n   * @param {string} text The string to clean.\n   * @return {string} The string with leading and trailing whitespace removed.\n   */\n  export function trimSpaces(text: string): string {\n    if (typeof(text) !== 'string') {\n      return text;\n    }\n    let TEXT = text.trim();\n    if (TEXT.match(/\\\\$/) && text.match(/ $/)) {\n      TEXT += ' ';\n    }\n    return TEXT;\n  }\n\n\n  /**\n   * Sets alignment in array definitions.\n   * @param {ArrayItem} array The array item.\n   * @param {string} align The alignment string.\n   * @return {ArrayItem} The altered array item.\n   */\n  export function setArrayAlign(array: ArrayItem, align: string): ArrayItem {\n    // @test Array1, Array2, Array Test\n    align = ParseUtil.trimSpaces(align || '');\n    if (align === 't') {\n      array.arraydef.align = 'baseline 1';\n    } else if (align === 'b') {\n      array.arraydef.align = 'baseline -1';\n    } else if (align === 'c') {\n      array.arraydef.align = 'axis';\n    } else if (align) {\n      array.arraydef.align = align;\n    } // FIXME: should be an error?\n    return array;\n  }\n\n\n  /**\n   * Replace macro parameters with their values.\n   * @param {TexParser} parser The current TeX parser.\n   * @param {string[]} args A list of arguments for macro parameters.\n   * @param {string} str The macro parameter string.\n   * @return {string} The string with all parameters replaced by arguments.\n   */\n  export function substituteArgs(parser: TexParser, args: string[],\n                                 str: string): string {\n    let text = '';\n    let newstring = '';\n    let i = 0;\n    while (i < str.length) {\n      let c = str.charAt(i++);\n      if (c === '\\\\') {\n        text += c + str.charAt(i++);\n      }\n      else if (c === '#') {\n        c = str.charAt(i++);\n        if (c === '#') {\n          text += c;\n        } else {\n          if (!c.match(/[1-9]/) || parseInt(c, 10) > args.length) {\n            throw new TexError('IllegalMacroParam',\n                                'Illegal macro parameter reference');\n          }\n          newstring = addArgs(parser, addArgs(parser, newstring, text),\n                              args[parseInt(c, 10) - 1]);\n          text = '';\n        }\n      } else {\n        text += c;\n      }\n    }\n    return addArgs(parser, newstring, text);\n  }\n\n\n  /**\n   * Adds a new expanded argument to an already macro parameter string.  Makes\n   * sure that macros are followed by a space if their names could accidentally\n   * be continued into the following text.\n   * @param {TexParser} parser The current TeX parser.\n   * @param {string} s1 The already expanded string.\n   * @param {string} s2 The string to add.\n   * @return {string} The combined string.\n   */\n  export function addArgs(parser: TexParser, s1: string, s2: string): string {\n    if (s2.match(/^[a-z]/i) && s1.match(/(^|[^\\\\])(\\\\\\\\)*\\\\[a-z]+$/i)) {\n      s1 += ' ';\n    }\n    if (s1.length + s2.length > parser.configuration.options['maxBuffer']) {\n      throw new TexError('MaxBufferSize',\n                          'MathJax internal buffer size exceeded; is there a' +\n                          ' recursive macro call?');\n    }\n    return s1 + s2;\n  }\n\n  /**\n   * Report an error if there are too many macro substitutions.\n   * @param {TexParser} parser The current TeX parser.\n   * @param {boolean} isMacro  True if we are substituting a macro, false for environment.\n   */\n  export function checkMaxMacros(parser: TexParser, isMacro: boolean = true) {\n    if (++parser.macroCount <= parser.configuration.options['maxMacros']) {\n      return;\n    }\n    if (isMacro) {\n      throw new TexError('MaxMacroSub1',\n                         'MathJax maximum macro substitution count exceeded; ' +\n                         'is here a recursive macro call?');\n    } else {\n      throw new TexError('MaxMacroSub2',\n                         'MathJax maximum substitution count exceeded; ' +\n                         'is there a recursive latex environment?');\n    }\n  }\n\n\n  /**\n   *  Check for bad nesting of equation environments\n   */\n  export function checkEqnEnv(parser: TexParser) {\n    if (parser.stack.global.eqnenv) {\n      // @test ErroneousNestingEq\n      throw new TexError('ErroneousNestingEq', 'Erroneous nesting of equation structures');\n    }\n    parser.stack.global.eqnenv = true;\n  }\n\n  /**\n   * Copy an MmlNode and add it (and its children) to the proper lists.\n   *\n   * @param {MmlNode} node       The MmlNode to copy\n   * @param {TexParser} parser   The active tex parser\n   * @return {MmlNode}           The duplicate tree\n   */\n  export function copyNode(node: MmlNode, parser: TexParser): MmlNode  {\n    const tree = node.copy() as MmlNode;\n    const options = parser.configuration;\n    tree.walkTree((n: MmlNode) => {\n      options.addNode(n.kind, n);\n      const lists = (n.getProperty('in-lists') as string || '').split(/,/);\n      for (const list of lists) {\n        list && options.addNode(list, n);\n      }\n    });\n    return tree;\n  }\n\n  /**\n   * This is a placeholder for future security filtering of attributes.\n   * @param {TexParser} parser The current parser.\n   * @param {string} name The attribute name.\n   * @param {string} value The attribute value to filter.\n   * @return {string} The filtered value.\n   */\n  export function MmlFilterAttribute(_parser: TexParser, _name: string, value: string): string {\n    // TODO: Implement in security package.\n    return value;\n  }\n\n\n  /**\n   * Initialises an stack environment with current font definition in the parser.\n   * @param {TexParser} parser The current tex parser.\n   * @return {EnvList} The initialised environment list.\n   */\n  export function getFontDef(parser: TexParser): EnvList {\n    const font = parser.stack.env['font'];\n    return (font ? {mathvariant: font} : {});\n  }\n\n\n  /**\n   * Splits a package option list of the form [x=y,z=1] into an attribute list\n   * of the form {x: y, z: 1}.\n   * @param {string} attrib The attributes of the package.\n   * @param {{[key: string]: number}?} allowed A list of allowed options. If\n   *     given only allowed arguments are returned.\n   * @param {boolean?} error If true, raises an exception if not allowed options\n   *     are found.\n   * @return {EnvList} The attribute list.\n   */\n  export function keyvalOptions(attrib: string,\n                                allowed: {[key: string]: number} = null,\n                                error: boolean = false): EnvList {\n    let def: EnvList = readKeyval(attrib);\n    if (allowed) {\n      for (let key of Object.keys(def)) {\n        if (!allowed.hasOwnProperty(key)) {\n          if (error) {\n            throw new TexError('InvalidOption', 'Invalid option: %1', key);\n          }\n          delete def[key];\n        }\n      }\n    }\n    return def;\n  }\n\n\n  /**\n   * Implementation of the keyval function from https://www.ctan.org/pkg/keyval\n   * @param {string} text The optional parameter string for a package or\n   *     command.\n   * @return {EnvList} Set of options as key/value pairs.\n   */\n  function readKeyval(text: string): EnvList {\n    let options: EnvList = {};\n    let rest = text;\n    let end, key, val;\n    while (rest) {\n      [key, end, rest] = readValue(rest, ['=', ',']);\n      if (end === '=') {\n        [val, end, rest] = readValue(rest, [',']);\n        val = (val === 'false' || val === 'true') ?\n            JSON.parse(val) : val;\n        options[key] = val;\n      } else if (key) {\n        options[key] = true;\n      }\n    }\n    return options;\n  }\n\n\n  /**\n   * Removes pairs of outer braces.\n   * @param {string} text The string to clean.\n   * @param {number} count The number of outer braces to slice off.\n   * @return {string} The cleaned string.\n   */\n  function removeBraces(text: string, count: number): string {\n    while (count > 0) {\n      text = text.trim().slice(1, -1);\n      count--;\n    }\n    return text.trim();\n  }\n\n\n  /**\n   * Read a value from the given string until an end parameter is reached or\n   * string is exhausted.\n   * @param {string} text The string to process.\n   * @param {string[]} end List of possible end characters.\n   * @return {[string, string, string]} The collected value, the actual end\n   *     character, and the rest of the string still to parse.\n   */\n  function readValue(text: string, end: string[]): [string, string, string] {\n    let length = text.length;\n    let braces = 0;\n    let value = '';\n    let index = 0;\n    let start = 0;             // Counter for the starting left braces.\n    let startCount = true;     // Flag for counting starting left braces.\n    let stopCount = false;     // If true right braces are found directly\n                               // after starting braces, but no other char yet.\n    while (index < length) {\n      let c = text[index++];\n      switch (c) {\n      case ' ':                // Ignore spaces.\n        break;\n      case '{':\n        if (startCount) {      // Count start left braces at start.\n          start++;\n        } else {\n          stopCount = false;\n          if (start > braces) {   // Some start left braces have been closed.\n            start = braces;\n          }\n        }\n        braces++;\n        break;\n      case '}':\n        if (braces) {          // Closing braces.\n          braces--;\n        }\n        if (startCount || stopCount) {  // Closing braces at the start.\n          start--;\n          stopCount = true;    // Continue to close braces.\n        }\n        startCount = false;    // Stop counting start left braces.\n        break;\n      default:\n        if (!braces && end.indexOf(c) !== -1) {   // End character reached.\n          return [stopCount ? 'true' :            // If Stop count is true we\n                                                  // have balanced braces, only.\n                  removeBraces(value, start), c, text.slice(index)];\n        }\n        startCount = false;\n        stopCount = false;\n      }\n      value += c;\n    }\n    if (braces) {\n      throw new TexError('ExtraOpenMissingClose',\n                         'Extra open brace or missing close brace');\n    }\n    return [stopCount ? 'true' : removeBraces(value, start), '', text.slice(index)];\n  }\n\n}\n\nexport default ParseUtil;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"file":"Stack.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/Stack.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The Stack for the TeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport NodeUtil from './NodeUtil.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {StackItem, EnvList} from './StackItem.js';\nimport StackItemFactory from './StackItemFactory.js';\n\n\nexport default class Stack {\n\n  /**\n   * @type {EnvList}\n   */\n  public global: EnvList = {};\n\n  /**\n   * The actual stack, a list of stack items.\n   * @type {Array.<StackItem>}\n   */\n  private stack: StackItem[] = [];\n\n  /**\n   * @constructor\n   * @param {StackItemFactory} factory The stack item factory.\n   * @param {EnvList} env The environment.\n   * @param {boolean} inner True if parser has been called recursively.\n   */\n  constructor(private _factory: StackItemFactory,\n              private _env: EnvList, inner: boolean) {\n    this.global = {isInner: inner};\n    this.stack = [ this._factory.create('start', this.global) ];\n    if (_env) {\n      this.stack[0].env = _env;\n    }\n    this.env = this.stack[0].env;\n  }\n\n\n  /**\n   * Set the environment of the stack.\n   * @param {EnvList} env The new environment.\n   */\n  public set env(env: EnvList) {\n    this._env = env;\n  }\n\n\n  /**\n   * Retrieves the environment of that stack.\n   * @return {EnvList} The current environment.\n   */\n  public get env(): EnvList {\n    return this._env;\n  }\n\n\n  /**\n   * Pushes items or nodes onto stack.\n   * @param {...StackItem|MmlNode} args A list of items to push.\n   */\n  public Push(...args: (StackItem | MmlNode)[]) {\n    for (const node of args) {\n      if (!node) {\n        continue;\n      }\n      const item = NodeUtil.isNode(node) ?\n        this._factory.create('mml', node) : node as StackItem;\n      item.global = this.global;\n      const [top, success] =\n        this.stack.length ? this.Top().checkItem(item) : [null, true];\n      if (!success) {\n        continue;\n      }\n      if (top) {\n        this.Pop();\n        this.Push(...top);\n        continue;\n      }\n      this.stack.push(item);\n      if (item.env) {\n        if (item.copyEnv) {\n          Object.assign(item.env, this.env);\n        }\n        this.env = item.env;\n      } else {\n        item.env = this.env;\n      }\n    }\n  }\n\n\n  /**\n   * Pop the topmost elements off the stack.\n   * @return {StackItem} A stack item.\n   */\n  public Pop(): StackItem {\n    const item = this.stack.pop();\n    if (!item.isOpen) {\n      delete item.env;\n    }\n    this.env = (this.stack.length ? this.Top().env : {});\n    return item;\n  }\n\n\n  /**\n   * Lookup the nth elements on the stack without removing them.\n   * @param {number=} n Position of element that should be returned. Default 1.\n   * @return {StackItem} Nth item on the stack.\n   */\n  public Top(n: number = 1): StackItem {\n    return this.stack.length < n ? null : this.stack[this.stack.length - n];\n  }\n\n\n  /**\n   * Lookup the topmost element on the stack, returning the Mml node in that\n   * item. Optionally pops the Mml node from that stack item.\n   * @param {boolean=} noPop Pop top item if true.\n   * @return {MmlNode} The Mml node in the topmost stack item.\n   */\n  public Prev(noPop?: boolean): MmlNode | void {\n    const top = this.Top();\n    return noPop ? top.First : top.Pop();\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return 'stack[\\n  ' + this.stack.join('\\n  ') + '\\n]';\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1592, "column": 0}, "map": {"version":3,"file":"TexParser.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/TexParser.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The TexParser. Implements the basic parsing functionality and\n *     administers the global stack and tree objects.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport ParseUtil from './ParseUtil.js';\nimport {HandlerType} from './MapHandler.js';\nimport Stack from './Stack.js';\nimport StackItemFactory from './StackItemFactory.js';\nimport {Tags} from './Tags.js';\nimport TexError from './TexError.js';\nimport {MmlNode, AbstractMmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {ParseInput, ParseResult} from './Types.js';\nimport ParseOptions from './ParseOptions.js';\nimport {StackItem, EnvList} from './StackItem.js';\nimport {Symbol} from './Symbol.js';\nimport {OptionList} from '../../util/Options.js';\n\n\n/**\n * The main Tex Parser class.\n */\nexport default class TexParser {\n\n  /**\n   * Counter for recursive macros.\n   * @type {number}\n   */\n  public macroCount: number = 0;\n\n  /**\n   * The stack for items and created nodes.\n   * @type {Stack}\n   */\n  public stack: Stack;\n\n  /**\n   * Current position in the string that is parsed.\n   * @type {number}\n   */\n  public i: number = 0;\n\n  /**\n   * The last command sequence\n   * @type {string}\n   */\n  public currentCS: string = '';\n\n  /**\n   * @constructor\n   * @param {string} string The string to parse.\n   * @param {EnvList} env The intial environment representing the current parse\n   *     state of the overall expression translation.\n   * @param {ParseOptions} configuration A parser configuration.\n   */\n  constructor(private _string: string, env: EnvList, public configuration: ParseOptions) {\n    const inner = env.hasOwnProperty('isInner');\n    const isInner = env['isInner'] as boolean;\n    delete env['isInner'];\n    let ENV: EnvList;\n    if (env) {\n      ENV = {};\n      for (const id of Object.keys(env)) {\n        ENV[id] = env[id];\n      }\n    }\n    this.configuration.pushParser(this);\n    this.stack = new Stack(this.itemFactory, ENV, inner ? isInner : true);\n    this.Parse();\n    this.Push(this.itemFactory.create('stop'));\n  }\n\n  /**\n   * @return {OptionList} The configuration options.\n   */\n  get options(): OptionList {\n    return this.configuration.options;\n  }\n\n  /**\n   * @return {StackItemFactory} The factory for stack items.\n   */\n  get itemFactory(): StackItemFactory {\n    return this.configuration.itemFactory;\n  }\n\n  /**\n   * @return {Tags} The tags style of this configuration.\n   */\n  get tags(): Tags {\n    return this.configuration.tags;\n  }\n\n  /**\n   * Sets the string that should be parsed.\n   * @param {string} str The new string to parse.\n   */\n  set string(str: string) {\n    this._string = str;\n  }\n\n  /**\n   * @return {string} The string that is currently parsed.\n   */\n  get string(): string {\n    return this._string;\n  }\n\n\n  /**\n   * Parses the input with the specified kind of map.\n   * @param {HandlerType} kind Configuration name.\n   * @param {ParseInput} input Input to be parsed.\n   * @return {ParseResult} The output of the parsing function.\n   */\n  public parse(kind: HandlerType, input: ParseInput): ParseResult {\n    return this.configuration.handlers.get(kind).parse(input);\n  }\n\n\n  /**\n   * Maps a symbol to its \"parse value\" if it exists.\n   * @param {HandlerType} kind Configuration name.\n   * @param {string} symbol The symbol to parse.\n   * @return {any} A boolean, Character, or Macro.\n   */\n  public lookup(kind: HandlerType, symbol: string): any {\n    return this.configuration.handlers.get(kind).lookup(symbol);\n  }\n\n\n  /**\n   * Checks if a symbol is contained in one of the symbol mappings of the\n   * specified kind.\n   * @param {HandlerType} kind Configuration name.\n   * @param {string} symbol The symbol to parse.\n   * @return {boolean} True if the symbol is contained in the given types of\n   *     symbol mapping.\n   */\n  public contains(kind: HandlerType, symbol: string): boolean {\n    return this.configuration.handlers.get(kind).contains(symbol);\n  }\n\n\n  /**\n   * @override\n   */\n  public toString(): string {\n    let str = '';\n    for (const config of Array.from(this.configuration.handlers.keys())) {\n      str += config + ': ' +\n        this.configuration.handlers.get(config as HandlerType) + '\\n';\n    }\n    return str;\n  }\n\n\n  /**\n   * Parses the current input string.\n   */\n  public Parse() {\n    let c: string;\n    while (this.i < this.string.length) {\n      c = this.getCodePoint();\n      this.i += c.length;\n      this.parse('character', [this, c]);\n    }\n  }\n\n\n  /**\n   * Pushes a new item onto the stack. The item can also be a Mml node,\n   *   but if the mml item is an inferred row, push its children instead.\n   * @param {StackItem|MmlNode} arg The new item.\n   */\n  public Push(arg: StackItem | MmlNode) {\n    if (arg instanceof AbstractMmlNode && arg.isInferred) {\n      this.PushAll(arg.childNodes);\n    } else {\n      this.stack.Push(arg);\n    }\n  }\n\n\n  /**\n   * Pushes a list of new items onto the stack.\n   * @param {StackItem|MmlNode[]} args The new items.\n   */\n  public PushAll(args: (StackItem | MmlNode)[]) {\n    for (const arg of args) {\n      this.stack.Push(arg);\n    }\n  }\n\n\n  /**\n   * @return {MmlNode} The internal Mathml structure.\n   */\n  public mml(): MmlNode {\n    if (!this.stack.Top().isKind('mml')) {\n      return null;\n    }\n    let node = this.stack.Top().First;\n    this.configuration.popParser();\n    return node;\n  }\n\n  /************************************************************************\n   *\n   *   String handling routines\n   */\n\n  /**\n   * Convert delimiter to character.\n   * @param {string} c The delimiter name.\n   * @return {string} The corresponding character.\n   */\n  public convertDelimiter(c: string): string {\n    const symbol = this.lookup('delimiter', c) as Symbol;\n    return symbol ? symbol.char : null;\n  }\n\n  /**\n   * @return {string}   Get the next unicode character in the string\n   */\n  public getCodePoint(): string {\n    const code = this.string.codePointAt(this.i);\n    return code === undefined ? '' : String.fromCodePoint(code);\n  }\n\n  /**\n   * @return {boolean} True if the next character to parse is a space.\n   */\n  public nextIsSpace(): boolean {\n    return !!this.string.charAt(this.i).match(/\\s/);\n  }\n\n  /**\n   * @return {string} Get the next non-space character.\n   */\n  public GetNext(): string {\n    while (this.nextIsSpace()) {\n      this.i++;\n    }\n    return this.getCodePoint();\n  }\n\n  /**\n   * @return {string} Get and return a control-sequence name\n   */\n  public GetCS(): string {\n    let CS = this.string.slice(this.i).match(/^(([a-z]+) ?|[\\uD800-\\uDBFF].|.)/i);\n    if (CS) {\n      this.i += CS[0].length;\n      return CS[2] || CS[1];\n    } else {\n      this.i++;\n      return ' ';\n    }\n  }\n\n  /**\n   * Get and return a TeX argument (either a single character or control\n   *     sequence, or the contents of the next set of braces).\n   * @param {string} name Name of the current control sequence.\n   * @param {boolean} noneOK? True if no argument is OK.\n   * @return {string} The next argument.\n   */\n  public GetArgument(_name: string, noneOK?: boolean): string {\n    switch (this.GetNext()) {\n    case '':\n      if (!noneOK) {\n        // @test MissingArgFor\n        throw new TexError('MissingArgFor', 'Missing argument for %1', this.currentCS);\n      }\n      return null;\n    case '}':\n      if (!noneOK) {\n        // @test ExtraCloseMissingOpen\n        throw new TexError('ExtraCloseMissingOpen',\n                            'Extra close brace or missing open brace');\n      }\n      return null;\n    case '\\\\':\n      this.i++;\n      return '\\\\' + this.GetCS();\n    case '{':\n      let j = ++this.i, parens = 1;\n      while (this.i < this.string.length) {\n        switch (this.string.charAt(this.i++)) {\n        case '\\\\':  this.i++; break;\n        case '{':   parens++; break;\n        case '}':\n          if (--parens === 0) {\n            return this.string.slice(j, this.i - 1);\n          }\n          break;\n        }\n      }\n      // @test MissingCloseBrace\n      throw new TexError('MissingCloseBrace', 'Missing close brace');\n    }\n    const c = this.getCodePoint();\n    this.i += c.length;\n    return c;\n  }\n\n\n  /**\n   * Get an optional LaTeX argument in brackets.\n   * @param {string} name Name of the current control sequence.\n   * @param {string} def? The default value for the optional argument.\n   * @return {string} The optional argument.\n   */\n  public GetBrackets(_name: string, def?: string): string {\n    if (this.GetNext() !== '[') {\n      return def;\n    }\n    let j = ++this.i, parens = 0;\n    while (this.i < this.string.length) {\n      switch (this.string.charAt(this.i++)) {\n      case '{':   parens++; break;\n      case '\\\\':  this.i++; break;\n      case '}':\n        if (parens-- <= 0) {\n          // @test ExtraCloseLooking1\n          throw new TexError('ExtraCloseLooking',\n                              'Extra close brace while looking for %1', '\\']\\'');\n        }\n        break;\n      case ']':\n        if (parens === 0) {\n          return this.string.slice(j, this.i - 1);\n        }\n        break;\n      }\n    }\n    // @test MissingCloseBracket\n    throw new TexError('MissingCloseBracket',\n                        'Could not find closing \\']\\' for argument to %1', this.currentCS);\n  }\n\n  /**\n   *  Get the name of a delimiter (check it in the delimiter list).\n   * @param {string} name Name of the current control sequence.\n   * @param {boolean} braceOK? Are braces around the delimiter OK.\n   * @return {string} The delimiter name.\n   */\n  public GetDelimiter(name: string, braceOK?: boolean): string {\n    let c = this.GetNext(); this.i += c.length;\n    if (this.i <= this.string.length) {\n      if (c === '\\\\') {\n        c += this.GetCS();\n      } else if (c === '{' && braceOK) {\n        this.i--;\n        c = this.GetArgument(name).trim();\n      }\n      if (this.contains('delimiter', c)) {\n        return this.convertDelimiter(c);\n      }\n    }\n    // @test MissingOrUnrecognizedDelim1, MissingOrUnrecognizedDelim2\n    throw new TexError('MissingOrUnrecognizedDelim',\n                        'Missing or unrecognized delimiter for %1', this.currentCS);\n  }\n\n  /**\n   * Get a dimension (including its units).\n   * @param {string} name Name of the current control sequence.\n   * @return {string} The dimension string.\n   */\n  public GetDimen(name: string): string {\n    if (this.GetNext() === '{') {\n      let dimen = this.GetArgument(name);\n      let [value, unit] = ParseUtil.matchDimen(dimen);\n      if (value) {\n        // @test Raise In Line, Lower 2, (Raise|Lower) Negative\n        return value + unit;\n      }\n    } else {\n      // @test Above, Raise, Lower, Modulo, Above With Delims\n      let dimen = this.string.slice(this.i);\n      let [value, unit, length] = ParseUtil.matchDimen(dimen, true);\n      if (value) {\n        this.i += length;\n        return value + unit;\n      }\n    }\n    // @test MissingDimOrUnits\n    throw new TexError('MissingDimOrUnits',\n                        'Missing dimension or its units for %1', this.currentCS);\n  }\n\n  /**\n   *  Get everything up to the given control sequence (token)\n   * @param {string} name Name of the current control sequence.\n   * @param {string} token The element until where to parse.\n   * @return {string} The text between the current position and the given token.\n   */\n  public GetUpTo(_name: string, token: string): string {\n    while (this.nextIsSpace()) {\n      this.i++;\n    }\n    let j = this.i;\n    let parens = 0;\n    while (this.i < this.string.length) {\n      let k = this.i;\n      let c = this.GetNext(); this.i += c.length;\n      switch (c) {\n      case '\\\\':  c += this.GetCS(); break;\n      case '{':   parens++; break;\n      case '}':\n        if (parens === 0) {\n          // @test ExtraCloseLooking2\n          throw new TexError('ExtraCloseLooking',\n                              'Extra close brace while looking for %1', token);\n        }\n        parens--;\n        break;\n      }\n      if (parens === 0 && c === token) {\n        return this.string.slice(j, k);\n      }\n    }\n    // @test TokenNotFoundForCommand\n    throw new TexError('TokenNotFoundForCommand',\n                        'Could not find %1 for %2', token, this.currentCS);\n  }\n\n  /**\n   * Parse the arguments of a control sequence in a new parser instance.\n   * @param {string} name Name of the current control sequence.\n   * @return {MmlNode} The parsed node.\n   */\n  public ParseArg(name: string): MmlNode  {\n    return new TexParser(this.GetArgument(name), this.stack.env,\n                         this.configuration).mml();\n  }\n\n  /**\n   * Parses a given string up to a given token in a new parser instance.\n   * @param {string} name Name of the current control sequence.\n   * @param {string} token A Token at which to end parsing.\n   * @return {MmlNode} The parsed node.\n   */\n  public ParseUpTo(name: string, token: string): MmlNode {\n    return new TexParser(this.GetUpTo(name, token), this.stack.env,\n                         this.configuration).mml();\n  }\n\n\n  /**\n   * Get a delimiter or empty argument\n   * @param {string} name Name of the current control sequence.\n   * @return {string} The delimiter.\n   */\n  public GetDelimiterArg(name: string): string {\n    let c = ParseUtil.trimSpaces(this.GetArgument(name));\n    if (c === '') {\n      return null;\n    }\n    if (this.contains('delimiter', c)) {\n      return c;\n    }\n    // @test MissingOrUnrecognizedDelim\n    throw new TexError('MissingOrUnrecognizedDelim',\n                        'Missing or unrecognized delimiter for %1', this.currentCS);\n  }\n\n  /**\n   * @return {boolean} True if a star follows the control sequence name.\n   */\n  public GetStar(): boolean {\n    let star = (this.GetNext() === '*');\n    if (star) {\n      this.i++;\n    }\n    return star;\n  }\n\n\n  /**\n   * Convenience method to create nodes with the node factory of the current\n   * configuration.\n   * @param {string} kind The kind of node to create.\n   * @param {any[]} ...rest The remaining arguments for the creation method.\n   * @return {MmlNode} The newly created node.\n   */\n  public create(kind: string, ...rest: any[]): MmlNode {\n    return this.configuration.nodeFactory.create(kind, ...rest);\n  }\n\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,iBAAA,2CAAuC;AAEvC,IAAA,aAAA,uCAA+B;AAG/B,IAAA,gBAAA,0CAAqC;AACrC,IAAA,wDAAuE;AAWvE,IAAA,YAAA;IAiCE,SAAA,UAAoB,OAAe,EAAE,GAAY,EAAS,aAA2B;;QAAjE,IAAA,CAAA,OAAO,GAAP,OAAO,CAAQ;QAAuB,IAAA,CAAA,aAAa,GAAb,aAAa,CAAc;QA3B9E,IAAA,CAAA,UAAU,GAAW,CAAC,CAAC;QAYvB,IAAA,CAAA,CAAC,GAAW,CAAC,CAAC;QAMd,IAAA,CAAA,SAAS,GAAW,EAAE,CAAC;QAU5B,IAAM,KAAK,GAAG,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC5C,IAAM,OAAO,GAAG,GAAG,CAAC,SAAS,CAAY,CAAC;QAC1C,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC;QACtB,IAAI,GAAY,CAAC;QACjB,IAAI,GAAG,EAAE;YACP,GAAG,GAAG,CAAA,CAAE,CAAC;;gBACT,IAAiB,IAAA,KAAA,SAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;oBAA9B,IAAM,EAAE,GAAA,GAAA,KAAA;oBACX,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;iBACnB;;;;;;;;;;;;SACF;QACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,WAAA,OAAK,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACtE,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7C,CAAC;IAKD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QACpC,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,aAAW,EAAA;aAAf;YACE,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;QACxC,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,MAAI,EAAA;aAAR;YACE,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QACjC,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,QAAM,EAAA;aAOV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aATD,SAAW,GAAW;YACpB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACrB,CAAC;;;OAAA;IAgBM,UAAA,SAAA,CAAA,KAAK,GAAZ,SAAa,IAAiB,EAAE,KAAiB;QAC/C,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC5D,CAAC;IASM,UAAA,SAAA,CAAA,MAAM,GAAb,SAAc,IAAiB,EAAE,MAAc;QAC7C,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC;IAWM,UAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,IAAiB,EAAE,MAAc;QAC/C,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAChE,CAAC;IAMM,UAAA,SAAA,CAAA,QAAQ,GAAf;;QACE,IAAI,GAAG,GAAG,EAAE,CAAC;;YACb,IAAqB,IAAA,KAAA,SAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAhE,IAAM,MAAM,GAAA,GAAA,KAAA;gBACf,GAAG,IAAI,MAAM,GAAG,IAAI,GAClB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAqB,CAAC,GAAG,IAAI,CAAC;aACjE;;;;;;;;;;;;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAMM,UAAA,SAAA,CAAA,KAAK,GAAZ;QACE,IAAI,CAAS,CAAC;QACd,MAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;YAClC,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACxB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBAAC,IAAI;gBAAE,CAAC;aAAC,CAAC,CAAC;SACpC;IACH,CAAC;IAQM,UAAA,SAAA,CAAA,IAAI,GAAX,SAAY,GAAwB;QAClC,IAAI,GAAG,YAAY,aAAA,eAAe,IAAI,GAAG,CAAC,UAAU,EAAE;YACpD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SAC9B,MAAM;YACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACtB;IACH,CAAC;IAOM,UAAA,SAAA,CAAA,OAAO,GAAd,SAAe,IAA6B;;;YAC1C,IAAkB,IAAA,SAAA,SAAA,IAAI,CAAA,EAAA,WAAA,OAAA,IAAA,EAAA,EAAA,CAAA,SAAA,IAAA,EAAA,WAAA,OAAA,IAAA,GAAE;gBAAnB,IAAM,GAAG,GAAA,SAAA,KAAA;gBACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACtB;;;;;;;;;;;;IACH,CAAC;IAMM,UAAA,SAAA,CAAA,GAAG,GAAV;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACnC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IAYM,UAAA,SAAA,CAAA,gBAAgB,GAAvB,SAAwB,CAAS;QAC/B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAW,CAAC;QACrD,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IACrC,CAAC;IAKM,UAAA,SAAA,CAAA,YAAY,GAAnB;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C,OAAO,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC9D,CAAC;IAKM,UAAA,SAAA,CAAA,WAAW,GAAlB;QACE,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAKM,UAAA,SAAA,CAAA,OAAO,GAAd;QACE,MAAO,IAAI,CAAC,WAAW,EAAE,CAAE;YACzB,IAAI,CAAC,CAAC,EAAE,CAAC;SACV;QACD,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAC7B,CAAC;IAKM,UAAA,SAAA,CAAA,KAAK,GAAZ;QACE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAC9E,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACvB,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;SACvB,MAAM;YACL,IAAI,CAAC,CAAC,EAAE,CAAC;YACT,OAAO,GAAG,CAAC;SACZ;IACH,CAAC;IASM,UAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,KAAa,EAAE,MAAgB;QAChD,OAAQ,IAAI,CAAC,OAAO,EAAE,EAAE;YACxB,KAAK,EAAE;gBACL,IAAI,CAAC,MAAM,EAAE;oBAEX,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,yBAAyB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBAChF;gBACD,OAAO,IAAI,CAAC;YACd,KAAK,GAAG;gBACN,IAAI,CAAC,MAAM,EAAE;oBAEX,MAAM,IAAI,cAAA,OAAQ,CAAC,uBAAuB,EACtB,yCAAyC,CAAC,CAAC;iBAChE;gBACD,OAAO,IAAI,CAAC;YACd,KAAK,IAAI;gBACP,IAAI,CAAC,CAAC,EAAE,CAAC;gBACT,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YAC7B,KAAK,GAAG;gBACN,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;gBAC7B,MAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;oBAClC,OAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;wBACtC,KAAK,IAAI;4BAAG,IAAI,CAAC,CAAC,EAAE,CAAC;4BAAC,MAAM;wBAC5B,KAAK,GAAG;4BAAI,MAAM,EAAE,CAAC;4BAAC,MAAM;wBAC5B,KAAK,GAAG;4BACN,IAAI,EAAE,MAAM,KAAK,CAAC,EAAE;gCAClB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;6BACzC;4BACD,MAAM;qBACP;iBACF;gBAED,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;SAChE;QACD,IAAM,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAC9B,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;QACnB,OAAO,CAAC,CAAC;IACX,CAAC;IASM,UAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,KAAa,EAAE,GAAY;QAC5C,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,EAAE;YAC1B,OAAO,GAAG,CAAC;SACZ;QACD,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC;QAC7B,MAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;YAClC,OAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;gBACtC,KAAK,GAAG;oBAAI,MAAM,EAAE,CAAC;oBAAC,MAAM;gBAC5B,KAAK,IAAI;oBAAG,IAAI,CAAC,CAAC,EAAE,CAAC;oBAAC,MAAM;gBAC5B,KAAK,GAAG;oBACN,IAAI,MAAM,EAAE,IAAI,CAAC,EAAE;wBAEjB,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAClB,wCAAwC,EAAE,OAAO,CAAC,CAAC;qBACxE;oBACD,MAAM;gBACR,KAAK,GAAG;oBACN,IAAI,MAAM,KAAK,CAAC,EAAE;wBAChB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;qBACzC;oBACD,MAAM;aACP;SACF;QAED,MAAM,IAAI,cAAA,OAAQ,CAAC,qBAAqB,EACpB,iDAAiD,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACzF,CAAC;IAQM,UAAA,SAAA,CAAA,YAAY,GAAnB,SAAoB,IAAY,EAAE,OAAiB;QACjD,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;QAC3C,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAChC,IAAI,CAAC,KAAK,IAAI,EAAE;gBACd,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;aACnB,MAAM,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,EAAE;gBAC/B,IAAI,CAAC,CAAC,EAAE,CAAC;gBACT,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;aACnC;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE;gBACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;aACjC;SACF;QAED,MAAM,IAAI,cAAA,OAAQ,CAAC,4BAA4B,EAC3B,0CAA0C,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAClF,CAAC;IAOM,UAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,IAAY;QAC1B,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,EAAE;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAA,KAAA,OAAgB,eAAA,OAAS,CAAC,UAAU,CAAC,KAAK,CAAC,EAAA,EAAA,EAA1C,KAAK,GAAA,EAAA,CAAA,EAAA,EAAE,IAAI,GAAA,EAAA,CAAA,EAA+B,CAAC;YAChD,IAAI,KAAK,EAAE;gBAET,OAAO,KAAK,GAAG,IAAI,CAAC;aACrB;SACF,MAAM;YAEL,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClC,IAAA,KAAA,OAAwB,eAAA,OAAS,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,EAAA,EAAA,EAAxD,KAAK,GAAA,EAAA,CAAA,EAAA,EAAE,IAAI,GAAA,EAAA,CAAA,EAAA,EAAE,QAAM,GAAA,EAAA,CAAA,EAAqC,CAAC;YAC9D,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,CAAC,IAAI,QAAM,CAAC;gBACjB,OAAO,KAAK,GAAG,IAAI,CAAC;aACrB;SACF;QAED,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAClB,uCAAuC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/E,CAAC;IAQM,UAAA,SAAA,CAAA,OAAO,GAAd,SAAe,KAAa,EAAE,KAAa;QACzC,MAAO,IAAI,CAAC,WAAW,EAAE,CAAE;YACzB,IAAI,CAAC,CAAC,EAAE,CAAC;SACV;QACD,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QACf,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,MAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAE;YAClC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;YAC3C,OAAQ,CAAC,EAAE;gBACX,KAAK,IAAI;oBAAG,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBAAC,MAAM;gBACrC,KAAK,GAAG;oBAAI,MAAM,EAAE,CAAC;oBAAC,MAAM;gBAC5B,KAAK,GAAG;oBACN,IAAI,MAAM,KAAK,CAAC,EAAE;wBAEhB,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAClB,wCAAwC,EAAE,KAAK,CAAC,CAAC;qBACtE;oBACD,MAAM,EAAE,CAAC;oBACT,MAAM;aACP;YACD,IAAI,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE;gBAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAChC;SACF;QAED,MAAM,IAAI,cAAA,OAAQ,CAAC,yBAAyB,EACxB,0BAA0B,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACzE,CAAC;IAOM,UAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,IAAY;QAC1B,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EACtC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;IACjD,CAAC;IAQM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAY,EAAE,KAAa;QAC1C,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,EACzC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;IACjD,CAAC;IAQM,UAAA,SAAA,CAAA,eAAe,GAAtB,SAAuB,IAAY;QACjC,IAAI,CAAC,GAAG,eAAA,OAAS,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,EAAE,EAAE;YACZ,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE;YACjC,OAAO,CAAC,CAAC;SACV;QAED,MAAM,IAAI,cAAA,OAAQ,CAAC,4BAA4B,EAC3B,0CAA0C,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAClF,CAAC;IAKM,UAAA,SAAA,CAAA,OAAO,GAAd;QACE,IAAI,IAAI,GAAG,AAAC,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,CAAC,CAAC;QACpC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,CAAC,EAAE,CAAC;SACV;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAUM,UAAA,SAAA,CAAA,MAAM,GAAb,SAAc,IAAY;;QAAE,IAAA,OAAA,EAAA,CAAc;YAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;YAAd,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;QACxC,OAAO,CAAA,KAAA,IAAI,CAAC,aAAa,CAAC,WAAW,CAAA,CAAC,MAAM,CAAA,KAAA,CAAA,IAAA,cAAA;YAAC,IAAI;SAAA,EAAA,OAAK,IAAI,GAAA,QAAE;IAC9D,CAAC;IAGH,OAAA,SAAC;AAAD,CAAC,AAvdD,IAudC","ignoreList":[0]}},
    {"offset": {"line": 1980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1985, "column": 0}, "map": {"version":3,"file":"StackItem.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/StackItem.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items hold information on the TexParser stack.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {FactoryNodeClass} from '../../core/Tree/Factory.js';\nimport TexError from './TexError.js';\nimport StackItemFactory from './StackItemFactory.js';\n\n// Union types for abbreviation.\nexport type EnvProp = string | number | boolean;\n\nexport type EnvList = {[key: string]: EnvProp};\n\n// This is the type for all fields that used to be set with With.\nexport type Prop = string | number | boolean | MmlNode | PropList;\n\nexport type PropList = {[key: string]: Prop};\n\nexport type CheckType = [(MmlNode | StackItem)[], boolean];\n\n\nexport interface NodeStack {\n\n  /**\n   * Get or set the topmost element on the node stack without removing it.\n   * @return {MmlNode} The topmost node on the stack.\n   */\n  First: MmlNode;\n\n  /**\n   * Get or set the last element on the node stack without removing it.\n   * @return {MmlNode} The last node on the stack.\n   */\n  Last: MmlNode;\n\n  /**\n   * @return {MmlNode} The topmost node on the item's node stack.\n   */\n  Pop(): MmlNode | void;\n\n  /**\n   * Pushes new nodes onto the items node stack.\n   * @param {MmlNode[]} ...nodes A list of nodes.\n   */\n  Push(...nodes: MmlNode[]): void;\n\n  /**\n   * Get the top n elements on the node stack without removing them.\n   * @param {number=} n Number of elements that should be returned.\n   * @return {MmlNode[]} List of nodes on top of stack.\n   */\n  Peek(n?: number): MmlNode[];\n\n  /**\n   * @return {number} The size of the stack.\n   */\n  Size(): number;\n\n  /**\n   * Clears the stack.\n   */\n  Clear(): void;\n\n  /**\n   * Returns nodes on the stack item's node stack as an Mml node. I.e., in case\n   * the item contains more than one node, it creates an mrow.\n   * @param {boolean=} inferred If set the mrow will be an inferred mrow.\n   * @param {boolean=} forceRow If set an mrow will be created, regardless of\n   *     how many nodes the item contains.\n   * @return {MmlNode} The topmost Mml node.\n   */\n  toMml(inferred?: boolean, forceRow?: boolean): MmlNode;\n\n}\n\n\nexport abstract class MmlStack implements NodeStack {\n\n  /**\n   * @constructor\n   * @extends {NodeStack}\n   * @param {MmlNode[]} nodes An initial list of nodes to put on the stack.\n   */\n  constructor(private _nodes: MmlNode[]) { }\n\n  /**\n   * @return {MmlNode[]} The nodes on the stack.\n   */\n  protected get nodes(): MmlNode[] {\n    return this._nodes;\n  }\n\n  /**\n   * @override\n   */\n  public Push(...nodes: MmlNode[]) {\n    this._nodes.push(...nodes);\n  }\n\n\n  /**\n   * @override\n   */\n  public Pop(): MmlNode {\n    return this._nodes.pop();\n  }\n\n\n  /**\n   * @override\n   */\n  public get First(): MmlNode {\n    return this._nodes[this.Size() - 1];\n  }\n\n\n  /**\n   * @override\n   */\n  public set First(node: MmlNode) {\n    this._nodes[this.Size() - 1] = node;\n  }\n\n\n  /**\n   * @override\n   */\n  public get Last(): MmlNode {\n    return this._nodes[0];\n  }\n\n\n  /**\n   * @override\n   */\n  public set Last(node: MmlNode) {\n    this._nodes[0] = node;\n  }\n\n\n  /**\n   * @override\n   */\n  public Peek(n?: number): MmlNode[] {\n    if (n == null) {\n      n = 1;\n    }\n    return this._nodes.slice(this.Size() - n);\n  }\n\n\n  /**\n   * @override\n   */\n  public Size(): number {\n    return this._nodes.length;\n  }\n\n\n  /**\n   * @override\n   */\n  public Clear(): void {\n    this._nodes = [];\n  }\n\n\n  protected abstract get factory(): StackItemFactory;\n\n  /**\n   * @override\n   */\n  public toMml(inferred: boolean = true, forceRow?: boolean) {\n    if (this._nodes.length === 1 && !forceRow) {\n      return this.First;\n    }\n    // @test Two Identifiers\n    return this.create(\n      'node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});\n  }\n\n\n  /**\n   * Convenience method to create nodes with the node factory on this stack.\n   * @param {string} kind The kind of node to create.\n   * @param {any[]} ...rest The remaining arguments for the creation method.\n   * @return {MmlNode} The newly created node.\n   */\n  public create(kind: string, ...rest: any[]): MmlNode {\n    return this.factory.configuration.nodeFactory.create(kind, ...rest);\n  }\n\n}\n\nexport interface StackItem extends NodeStack {\n\n\n  /**\n   * Type of stack item.\n   * @type {string}\n   */\n  kind: string;\n\n  /**\n   * Is this a closing item, e.g., end.\n   * @type {boolean}\n   */\n  isClose: boolean;\n\n  /**\n   * Is this an opening item, e.g., begin.\n   * @type {boolean}\n   */\n  isOpen: boolean;\n\n  /**\n   * Is this a finalising item, i.e., one that only collects nodes.\n   * @type {boolean}\n   */\n  isFinal: boolean;\n\n  /**\n   * Global properties of the parser.\n   * @type {EnvList}\n   */\n   global: EnvList;\n\n  /**\n   * Local properties of the stack item.\n   * @type {EnvList}\n   */\n   env: EnvList;\n\n  /**\n   * Copy local properties when pushed to stack?\n   * @type {boolean}\n   */\n   copyEnv: boolean;\n\n  /**\n   * Tests if item is of the given type.\n   * @param {string} kind The type.\n   * @return {boolean} True if item is of that type.\n   */\n  isKind(kind: string): boolean;\n\n  /**\n   * Get a property of the item.\n   * @param {string} key Property name.\n   * @return {Prop} Property value if it exists.\n   */\n  getProperty(key: string): Prop;\n\n  /**\n   * Set a property.\n   * @param {string} key Property name.\n   * @param {Prop} value Property value.\n   * @return {StackItem} The item for pipelining.\n   */\n  setProperty(key: string, value: Prop): StackItem;\n\n  /**\n   * Sets a list of properties.\n   * @param {PropList} def The properties to set.\n   * @return {StackItem} Returns the stack item object for pipelining.\n   */\n  setProperties(def: PropList): StackItem;\n\n  /**\n   * Convenience method for returning the string property \"name\".\n   * @return {string} The value for the name property.\n   */\n  getName(): string;\n\n  /**\n   * TeX parsing in MathJax is essentially implemented via a nested stack\n   * automaton. That is the tex parser works on a stack, and each item on the\n   * stack can have a data stack of its own. Data on the stack is either a stack\n   * item or a node.\n   *\n   * The checkItem method effectively implements the recursive checking of\n   * input data from the parser against data recursively given on the stack.\n   *\n   * I.e., new input is parsed resulting in a new item. When pushed on the stack\n   * it is checked against the top most item on the stack. This either leads to\n   * the item being pushed onto the stack or combined with the top most\n   * element(s), pushing a new item, which is recursively checked, unless an\n   * error is thrown.\n   *\n   * A simple example: If \\\\end{foo} is parsed, an endItem is created, pushed on\n   * the stack. Nodes on the stack are collapsed into content of the 'foo'\n   * environment, until a beginItem for 'foo' is found.  If a beginItem is not\n   * for 'foo' or does not exist an error is thrown.\n   *\n   * @param {StackItem} item The pushed item.\n   * @return {CheckType} True/false or an item or node.\n   */\n  checkItem(item: StackItem): CheckType;\n\n}\n\nexport interface StackItemClass extends FactoryNodeClass<StackItem> {\n  // new (factory: StackItemFactory, ...args: any[]): StackItem;\n}\n\n\n/**\n * Abstract basic item class that implements most of the stack item\n * functionality. In particular, it contains the base method for checkItem.\n */\nexport abstract class BaseItem extends MmlStack implements StackItem {\n\n  /**\n   * The fail value.\n   * @type {CheckType}\n   */\n  protected static fail: CheckType = [null, false];\n\n  /**\n   * The success value.\n   * @type {CheckType}\n   */\n  protected static success: CheckType = [null, true];\n\n  /**\n   * A list of basic errors.\n   * @type {{[key: string]: string[]}}\n   */\n  protected static errors: {[key: string]: string[]} = {\n    // @test ExtraOpenMissingClose\n    end: ['MissingBeginExtraEnd', 'Missing \\\\begin{%1} or extra \\\\end{%1}'],\n    // @test ExtraCloseMissingOpen\n    close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],\n    // @test MissingLeftExtraRight\n    right: ['MissingLeftExtraRight', 'Missing \\\\left or extra \\\\right'],\n    middle: ['ExtraMiddle', 'Extra \\\\middle']\n  };\n\n\n  /**\n   * @override\n   */\n  public global: EnvList = {};\n\n  private _env: EnvList;\n\n  private _properties: PropList = {};\n\n\n  /**\n   * @constructor\n   * @extends {MmlStack}\n   */\n  constructor(protected factory: StackItemFactory, ...nodes: MmlNode[]) {\n    super(nodes);\n    if (this.isOpen) {\n      this._env = {};\n    }\n  }\n\n  /**\n   * @return {string} The type of the stack item.\n   */\n    public get kind(): string {\n    return 'base';\n  }\n\n  /**\n   * @return {EnvList} Get the private environment\n   */\n  public get env(): EnvList {\n    return this._env;\n  }\n\n  /**\n   * Set the private environment\n   * @param {EnvList} value New private environemt.\n   */\n  public set env(value: EnvList) {\n    this._env = value;\n  }\n\n  /**\n   * Default is to copy local environment when pushed on stack\n   */\n  public get copyEnv() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public getProperty(key: string): Prop {\n    return this._properties[key];\n  }\n\n  /**\n   * @override\n   */\n  public setProperty(key: string, value: Prop) {\n    this._properties[key] = value;\n    return this;\n  }\n\n\n  /**\n   * @return {boolean} True if item is an opening entity, i.e., it expects a\n   *     closing counterpart on the stack later.\n   */\n  get isOpen(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean} True if item is an closing entity, i.e., it needs an\n   *     opening counterpart already on the stack.\n   */\n  get isClose(): boolean {\n    return false;\n  }\n\n\n  /**\n   * @return {boolean} True if item is final, i.e., it contains one or multiple\n   *      finished parsed nodes.\n   */\n  get isFinal(): boolean {\n    return false;\n  }\n\n\n  /**\n   * @override\n   */\n  public isKind(kind: string) {\n    return kind === this.kind;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('over') && this.isOpen) {\n      item.setProperty('num', this.toMml(false));\n      this.Clear();\n    }\n    if (item.isKind('cell') && this.isOpen) {\n      if (item.getProperty('linebreak')) {\n        return BaseItem.fail;\n      }\n      // @test Ampersand-error\n      throw new TexError('Misplaced', 'Misplaced %1', item.getName());\n    }\n    if (item.isClose && this.getErrors(item.kind)) {\n      // @test ExtraOpenMissingClose, ExtraCloseMissingOpen,\n      //       MissingLeftExtraRight, MissingBeginExtraEnd\n      const [id, message] = this.getErrors(item.kind);\n      throw new TexError(id, message, item.getName());\n    }\n    if (!item.isFinal) {\n      return BaseItem.success;\n    }\n    this.Push(item.First);\n    return BaseItem.fail;\n  }\n\n\n  /**\n   * Clears the item's environment.\n   */\n  public clearEnv() {\n    for (const id of Object.keys(this.env)) {\n      delete this.env[id];\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public setProperties(def: PropList) {\n    Object.assign(this._properties, def);\n    return this;\n  }\n\n\n  /**\n   * @override\n   */\n  public getName() {\n    return this.getProperty('name') as string;\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return this.kind + '[' + this.nodes.join('; ') + ']';\n  }\n\n\n  /**\n   * Get error messages for a particular types of stack items. This reads error\n   * messages from the static errors object, which can be extended in\n   * subclasses.\n   * @param {string} kind The stack item type.\n   * @return {string[]} The list of arguments for the TeXError.\n   */\n  public getErrors(kind: string): string[] {\n    const CLASS = (this.constructor as typeof BaseItem);\n    return (CLASS.errors || {})[kind] || BaseItem.errors[kind];\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2293, "column": 0}, "map": {"version":3,"file":"StackItemFactory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/StackItemFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview A factory for stack items. This allows particular items to be\n *     overwritten later.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {StackItemClass, StackItem, BaseItem} from './StackItem.js';\nimport ParseOptions from './ParseOptions.js';\nimport {AbstractFactory} from '../../core/Tree/Factory.js';\n\n\nclass DummyItem extends BaseItem {}\n\n/**\n * The StackItemFactory is initially populated with the default stack item\n * classes. They can be changed, deleted or added to, if and when necessary.\n *\n * @constructor\n * @extends {AbstractFactory}\n */\nexport default class StackItemFactory extends AbstractFactory<StackItem, StackItemClass> {\n\n  /**\n   * @override\n   */\n  public static DefaultStackItems: {[kind: string]: StackItemClass} = {\n    [DummyItem.prototype.kind]: DummyItem\n  };\n\n\n  /**\n   * @override\n   */\n  public defaultKind = 'dummy';\n\n\n  /**\n   * The parser configuration.\n   * @type {ParseOptions}\n   */\n  public configuration: ParseOptions = null;\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,2CAAmE;AAEnE,IAAA,qDAA2D;AAG3D,IAAA,YAAA,SAAA,MAAA;IAAwB,UAAA,WAAA,QAAQ;IAAhC,SAAA;;IAAkC,CAAC;IAAD,OAAA,SAAC;AAAD,CAAC,AAAnC,CAAwB,eAAA,QAAQ,GAAG;AASnC,IAAA,mBAAA,SAAA,MAAA;IAA8C,UAAA,kBAAA,QAA0C;IAAxF,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAsBC;QATQ,MAAA,WAAW,GAAG,OAAO,CAAC;QAOtB,MAAA,aAAa,GAAiB,IAAI,CAAC;;IAE5C,CAAC;IAjBe,iBAAA,iBAAiB,GAAA,CAAA,KAAA,CAAA,GAC7B,EAAA,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,SAAS,MACrC;IAeJ,OAAA,gBAAC;CAAA,AAtBD,CAA8C,aAAA,eAAe,GAsB5D;kBAtBoB,gBAAgB","ignoreList":[0]}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2344, "column": 0}, "map": {"version":3,"file":"NodeFactory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/NodeFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Node factory for creating MmlNodes. This allows extension\n *     packages to add node constructors or overwrite existing ones.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {TextNode, MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {MmlFactory} from '../../core/MmlTree/MmlFactory.js';\nimport ParseOptions from './ParseOptions.js';\nimport NodeUtil from './NodeUtil.js';\n\n\nexport type NodeFactoryMethod = (factory: NodeFactory, kind: string, ...rest: any[]) => MmlNode;\n\nexport class NodeFactory {\n\n  /**\n   * Parser configuration that can be used to pass information between node methods.\n   * @type {ParseOption}\n   */\n  public configuration: ParseOptions;\n\n\n  /**\n   * The external node factory.\n   * @type {MmlFactory}\n   */\n  protected mmlFactory: MmlFactory = null;\n\n\n  /**\n   * The factory table populated with some default methods.\n   */\n  private factory: {[kind: string]: NodeFactoryMethod} =\n    {'node': NodeFactory.createNode,\n     'token': NodeFactory.createToken,\n     'text': NodeFactory.createText,\n     'error': NodeFactory.createError\n    };\n\n  /**\n   * Default node generation function.\n   * @param {NodeFactory} factory The current node factory.\n   * @param {string} kind The type of node to create.\n   * @param {MmlNode[]} children Its children.\n   * @param {any=} def Its properties.\n   * @param {TextNode=} text An optional text node if this is a token.\n   * @return {MmlNode} The newly created Mml node.\n   */\n  public static createNode(factory: NodeFactory, kind: string,\n                           children: MmlNode[] = [], def: any = {},\n                           text?: TextNode): MmlNode {\n    const node = factory.mmlFactory.create(kind);\n    node.setChildren(children);\n    if (text) {\n      node.appendChild(text);\n    }\n    NodeUtil.setProperties(node, def);\n    return node;\n  }\n\n\n  /**\n   * Default token generation function.\n   * @param {NodeFactory} factory The current node factory.\n   * @param {string} kind The type of node to create.\n   * @param {any} def Its properties.\n   * @param {string} text Text of the token.\n   * @return {MmlNode} The newly created token node.\n   */\n  public static createToken(factory: NodeFactory, kind: string,\n                            def: any = {}, text: string = ''): MmlNode  {\n    const textNode = factory.create('text', text);\n    return factory.create('node', kind, [], def, textNode);\n  }\n\n\n  /**\n   * Default text node generation function.\n   * @param {NodeFactory} factory The current node factory.\n   * @param {string} text The text for the new node.\n   * @return {TextNode} The newly created text node.\n   */\n  public static createText(factory: NodeFactory, text: string): TextNode  {\n    if (text == null) {\n      return null;\n    }\n    return (factory.mmlFactory.create('text') as TextNode).setText(text);\n  }\n\n\n  /**\n   * Default error node generation function.\n   * @param {NodeFactory} factory The current node factory.\n   * @param {string} message The error message.\n   * @return {MmlNode} The newly created error node.\n   */\n  public static createError(factory: NodeFactory, message: string): MmlNode  {\n    let text = factory.create('text', message);\n    let mtext = factory.create('node', 'mtext', [], {}, text);\n    let error = factory.create('node', 'merror', [mtext], {'data-mjx-error': message});\n    return error;\n  }\n\n\n  /**\n   * @param {MmlFactory} mmlFactory   The MmlFactory for the TeX jax to use\n   */\n  public setMmlFactory(mmlFactory: MmlFactory) {\n    this.mmlFactory = mmlFactory;\n  }\n\n  /**\n   * Adds a method to the factory.\n   * @param {string} kind The type of node the method creates.\n   * @param {NodeFactoryMethod} func The node creator.\n   */\n  public set(kind: string, func: NodeFactoryMethod) {\n    this.factory[kind] = func;\n  }\n\n\n  /**\n   * Adds a set of node creators to the factory.\n   * @param {Object.<NodeFactoryMethod>} maps The set of functions.\n   */\n  public setCreators(maps: {[kind: string]: NodeFactoryMethod}) {\n    for (let kind in maps) {\n      this.set(kind, maps[kind]);\n    }\n  }\n\n\n  /**\n   * Creates a node for the internal data structure from the factory.\n   * @param {string} kind The type of node to be created.\n   * @param {any[]} ...rest The arguments for the node.\n   * @return {MmlNode} The created node.\n   */\n  public create(kind: string, ...rest: any[]): MmlNode {\n    const func = this.factory[kind] || this.factory['node'];\n    const node = func(this, rest[0], ...rest.slice(1));\n    if (kind === 'node') {\n      this.configuration.addNode(rest[0], node);\n    }\n    return node;\n  }\n\n\n  /**\n   * @param {string} kind The method for generating a node of given kind.\n   */\n  public get(kind: string) {\n    return this.factory[kind];\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2471, "column": 0}, "map": {"version":3,"file":"ParseOptions.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ParseOptions.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Factory generating maps to keep options for the TeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport StackItemFactory from './StackItemFactory.js';\nimport {Tags} from './Tags.js';\nimport {SubHandlers} from './MapHandler.js';\nimport {NodeFactory} from './NodeFactory.js';\nimport NodeUtil from './NodeUtil.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport TexParser from './TexParser.js';\nimport {defaultOptions, OptionList} from '../../util/Options.js';\nimport {ParserConfiguration} from './Configuration.js';\n\n\n/**\n * @class\n */\nexport default class ParseOptions {\n\n  /**\n   * A set of sub handlers\n   * @type {SubHandlers}\n   */\n  public handlers: SubHandlers;\n\n  /**\n   * A set of options, mapping names to string or boolean values.\n   * @type {OptionList}\n   */\n  public options: OptionList = {};\n\n  /**\n   * The current item factory.\n   * @type {StackItemFactory}\n   */\n  public itemFactory: StackItemFactory;\n\n  /**\n   * The current node factory.\n   * @type {NodeFactory}\n   */\n  public nodeFactory: NodeFactory;\n\n  /**\n   * The current tagging object.\n   * @type {Tags}\n   */\n  public tags: Tags;\n\n  /**\n   * Storage area for parser-specific package data (indexed by package name)\n   * @type {Map<string, any>}\n   */\n  public packageData: Map<string, any> = new Map();\n\n  // Fields for ephemeral options, i.e., options that will be cleared for each\n  // run of the parser.\n  /**\n   * Stack of previous tex parsers. This is used to keep track of parser\n   * settings when expressions are recursively parsed.\n   * @type {TexParser[]}\n   */\n  public parsers: TexParser[] = [];\n\n\n  /**\n   * The current root node.\n   * @type {MmlNode}\n   */\n  public root: MmlNode = null;\n\n  /**\n   * List of node lists saved with respect to some property or their kind.\n   * @type {{[key: string]: MmlNode[]}}\n   */\n  public nodeLists: {[key: string]: MmlNode[]} = {};\n\n  /**\n   * Error state of the parser.\n   * @type {boolean}\n   */\n  public error: boolean = false;\n\n\n\n  /**\n   * @constructor\n   * @param {Configuration} configuration Configuration object of the current\n   *     TeX parser.\n   * @param {OptionList[]} options   [TeX options, Tag options, {packages}]\n   */\n  public constructor(configuration: ParserConfiguration, options: OptionList[] = []) {\n    this.handlers = configuration.handlers;\n    // Add node factory methods from packages.\n    this.nodeFactory = new NodeFactory();\n    this.nodeFactory.configuration = this;\n    this.nodeFactory.setCreators(configuration.nodes);\n    // Add stackitems from packages.\n    this.itemFactory = new StackItemFactory(configuration.items);\n    this.itemFactory.configuration = this;\n    // Set default options for parser from packages and for tags.\n    defaultOptions(this.options, ...options);\n    defaultOptions(this.options, configuration.options);\n  }\n\n\n  // Methods for dealing with ephemeral fields.\n  /**\n   * Pushes a new tex parser onto the stack.\n   * @param {TexParser} parser The new parser.\n   */\n  public pushParser(parser: TexParser) {\n    this.parsers.unshift(parser);\n  }\n\n\n  /**\n   * Pops a parser of the tex parser stack.\n   */\n  public popParser() {\n    this.parsers.shift();\n  }\n\n\n  /**\n   * @return {TexParser} The currently active tex parser.\n   */\n  public get parser(): TexParser {\n    return this.parsers[0];\n  }\n\n  /**\n   * Clears all the ephemeral options.\n   */\n  public clear() {\n    this.parsers = [];\n    this.root = null;\n    this.nodeLists = {};\n    this.error = false;\n    this.tags.resetTag();\n  }\n\n\n  /**\n   * Saves a tree node to a list of nodes for post processing.\n   * @param {string} property The property name that will be used for\n   *     postprocessing.\n   * @param {MmlNode} node The node to save.\n   */\n  public addNode(property: string, node: MmlNode) {\n    let list = this.nodeLists[property];\n    if (!list) {\n      list = this.nodeLists[property] = [];\n    }\n    list.push(node);\n    if (node.kind !== property) {\n      //\n      // If the list is not just for its kind, record that it is in this list\n      //   so that if it is copied, the copy can also be added to the list.\n      //\n      const inlists = (NodeUtil.getProperty(node, 'in-lists') as string || '');\n      const lists = (inlists ? inlists.split(/,/) : []).concat(property).join(',');\n      NodeUtil.setProperty(node, 'in-lists', lists);\n    }\n  }\n\n\n  /**\n   * Gets a saved node list with respect to a given property. It first ensures\n   * that all the nodes are \"live\", i.e., actually live in the current\n   * tree. Sometimes nodes are created, saved in the node list but discarded\n   * later in the parsing. These will be filtered out here.\n   *\n   * NB: Do not use this method before the root field of the options is\n   * set. Otherwise, your node list will always be empty!\n   * @param {string} property The property for which to retrieve the node list.\n   */\n  public getList(property: string) {\n    let list = this.nodeLists[property] || [];\n    let result = [];\n    for (let node of list) {\n      if (this.inTree(node)) {\n        result.push(node);\n      }\n    }\n    this.nodeLists[property] = result;\n    return result;\n  }\n\n\n  /**\n   * Remove a list of nodes from a saved list (e.g., when a filter removes the\n   * node from the DOM, like for munderover => munder).\n   *\n   * @param {string} property The property from which to remove nodes.\n   * @param {MmlNode[]} nodes The nodes to remove.\n   */\n  public removeFromList(property: string, nodes: MmlNode[]) {\n    const list = this.nodeLists[property] || [];\n    for (const node of nodes) {\n      const i = list.indexOf(node);\n      if (i >= 0) {\n        list.splice(i, 1);\n      }\n    }\n  }\n\n\n  /**\n   * Tests if the node is in the tree spanned by the current root node.\n   * @param {MmlNode} node The node to test.\n   */\n  private inTree(node: MmlNode) {\n    while (node && node !== this.root) {\n      node = node.parent;\n    }\n    return !!node;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2642, "column": 0}, "map": {"version":3,"file":"Tags.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/Tags.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Class for generating tags, references, etc.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport TexParser from './TexParser.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {MathItem} from '../../core/MathItem.js';\nimport {EnvList} from './StackItem.js';\nimport ParseOptions from './ParseOptions.js';\nimport {OptionList} from '../../util/Options.js';\n\n\n/**\n *  Simple class for label objects.\n */\nexport class Label {\n\n  /**\n   * @constructor\n   * @param {string=} tag The tag that's displayed.\n   * @param {string=} id The id that serves as reference.\n   */\n  constructor(public tag: string = '???', public id: string = '') {}\n}\n\n\n/**\n * A simple class for keeping track of tag information.\n */\nexport class TagInfo {\n\n  /**\n   * @constructor\n   * @param {string} env The environment name (e.g., align).\n   * @param {boolean} taggable Environment supports tags (e.g., align* does, but\n   *     split does not.)\n   * @param {boolean} defaultTags Environment is tagged by default (e.g., align\n   *     is, but align* is not).\n   * @param {string} tag The tag name (e.g., 1).\n   * @param {string} tagId The unique id for that tag (e.g., mjx-eqn:1).\n   * @param {string} tagFormat The formatted tag (e.g., \"(1)\").\n   * @param {boolean} noTag A no tagging command has been set (e.g., \\notag,\n   *     \\nonumber).\n   * @param {string} labelId The label referring to the tag.\n   */\n  constructor(readonly env: string = '',\n              readonly taggable: boolean = false,\n              readonly defaultTags: boolean = false,\n              public tag: string = null,\n              public tagId: string = '',\n              public tagFormat: string = '',\n              public noTag: boolean = false,\n              public labelId: string = '') {}\n\n}\n\n\nexport interface Tags {\n\n  /**\n   * The global configurations in which the parsing takes place.\n   * @type {ParseOptions}\n   */\n  configuration: ParseOptions;\n\n  /**\n   * IDs used in this equation.\n   * @type {Object.<boolean>}\n   */\n  ids: {[key: string]: boolean};\n\n  /**\n   * IDs used in previous equations.\n   * @type {Object.<boolean>}\n   */\n  allIds: {[key: string]: boolean};\n\n  /**\n   * Labels in the current equation.\n   * @type {Object.<Label>}\n   */\n  labels: {[key: string]: Label};\n\n  /**\n   * Labels in previous equations.\n   * @type {Object.<Label>}\n   */\n  allLabels: {[key: string]: Label};\n\n  /**\n   * The label to use for the next tag.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * True if the equation contains an undefined label and must be reprocessed later.\n   * @type {boolean}\n   */\n  redo: boolean;\n\n  /**\n   * True when recompiling to update undefined references\n   * @type {boolean}\n   */\n  refUpdate: boolean;\n\n  /**\n   * The environment that is currently tagged.\n   * @type {string}\n   */\n  env: string;\n\n  /**\n   * The currently active tag.\n   * @type {TagInfo}\n   */\n  currentTag: TagInfo;\n\n  /**\n   * How to format tags.\n   * @param {string} tag The tag string.\n   * @return {string} The formatted numbered tag.\n   */\n  formatTag(tag: string): string;\n\n  /**\n   * How to format URLs for references.\n   * @param {string} id The reference id.\n   * @param {string} base The base URL in the reference.\n   * @return {}\n   */\n  formatUrl(id: string, base: string): string;\n\n  /**\n   * Set the tag automatically, by incrementing equation number.\n   */\n  autoTag(): void;\n\n  /**\n   * @return {MmlNode|void} Generates and returns the tag node.\n   */\n  getTag(): MmlNode | void;\n\n  /**\n   * Clears tagging information.\n   */\n  clearTag(): void;\n\n  /**\n   * Resets the tag structure after an expression has been typeset.\n   */\n  resetTag(): void;\n\n  /**\n   * Fully resets the tag structure, in particular all the tagging and label\n   * history.\n   * @param {number} offset A new offset value to start counting ids from.\n   */\n  reset(offset?: number): void;\n\n  /**\n   * Initialise tagging for a MathItem\n   * (clear equation-specific labels and ids, set counter\n   * and check for recompile)\n   * @param {MathItem} math   The MathItem for the current equation\n   */\n    startEquation(math: MathItem<any, any, any>): void;\n\n  /**\n   * Move equation-specific labels and ids to global ones,\n   * save the counter, and mark the MathItem for redos\n   */\n    finishEquation(math: MathItem<any, any, any>): void;\n\n  /**\n   * Finalizes tag creation.\n   * @param {MmlNode} node\n   * @param {EnvList} env List of environment properties.\n   * @return {MmlNode} The newly created tag.\n   */\n  finalize(node: MmlNode, env: EnvList): MmlNode;\n\n  /**\n   * Starts tagging on a given environment.\n   * @param {string} env The name of the environment.\n   * @param {boolean} taggable True if taggable.\n   * @param {boolean} defaultTags True if tagged by default.\n   */\n  start(env: string, taggable: boolean, defaultTags: boolean): void;\n\n  /**\n   * End tagging.\n   */\n  end(): void;\n\n  /**\n   * Computes the next tag.\n   * @param {string} tag The tag content.\n   * @param {boolean} noFormat True if tag should not be formatted.\n   */\n  tag(tag: string, noFormat: boolean): void;\n\n  /**\n   * Call an explicit no tag.\n   */\n  notag(): void;\n\n  /**\n   * Entag an element by creating a table around it.\n   * @param {MmlNode} node The node to be tagged.\n   * @param {MmlNode} tag The tag node.\n   * @return {MmlNode} The table node containing the original node and tag.\n   */\n  enTag(node: MmlNode, tag: MmlNode): MmlNode;\n}\n\n\nexport class AbstractTags implements Tags {\n\n  /**\n   * Current equation number.\n   * @type {number}\n   */\n  protected counter: number = 0;\n\n  /**\n   * Equation number as equation begins.\n   * @type {number}\n   */\n  protected allCounter: number = 0;\n\n  /**\n   * @override\n   */\n  public configuration: ParseOptions = null;\n\n  /**\n   * @override\n   */\n  public ids: {[key: string]: boolean} = {};\n\n  /**\n   * @override\n   */\n  public allIds: {[key: string]: boolean} = {};\n\n  /**\n   * @override\n   */\n  public labels: {[key: string]: Label} = {};\n\n  /**\n   * @override\n   */\n  public allLabels: {[key: string]: Label} = {};\n\n  /**\n   * @override\n   */\n  public redo: boolean = false;\n\n  /**\n   * @override\n   */\n  public refUpdate: boolean = false;\n\n  /**\n   * @override\n   */\n  public currentTag: TagInfo = new TagInfo();\n\n\n  /**\n   * Chronology of all previous tags, in case we need to look something up in\n   * the finalize method.\n   * @type {TagInfo[]}\n   */\n  protected history: TagInfo[] = [];\n\n  private stack: TagInfo[] = [];\n\n  /**\n   * @override\n   */\n  public start(env: string, taggable: boolean, defaultTags: boolean) {\n    if (this.currentTag) {\n      this.stack.push(this.currentTag);\n    }\n    this.currentTag = new TagInfo(env, taggable, defaultTags);\n  }\n\n  public get env() {\n    return this.currentTag.env;\n  }\n\n\n  /**\n   * @override\n   */\n  public end() {\n    this.history.push(this.currentTag);\n    this.currentTag = this.stack.pop();\n  }\n\n\n  /**\n   * @override\n   */\n  public tag(tag: string, noFormat: boolean) {\n    this.currentTag.tag = tag;\n    this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);\n    this.currentTag.noTag = false;\n  }\n\n\n  /**\n   * @override\n   */\n  public notag() {\n    this.tag('', true);\n    this.currentTag.noTag = true;\n  }\n\n  protected get noTag(): boolean {\n    return this.currentTag.noTag;\n  }\n\n  public set label(label: string) {\n    this.currentTag.labelId = label;\n  }\n\n  public get label() {\n    return this.currentTag.labelId;\n  }\n\n  /**\n   * @override\n   */\n  public formatUrl(id: string, base: string) {\n    return base + '#' + encodeURIComponent(id);\n  }\n\n  /**\n   * @override\n   */\n  public formatTag(tag: string) {\n    return '(' + tag + ')';\n  }\n\n  /**\n   * How to format ids for labelling equations.\n   * @param {string} id The unique part of the id (e.g., label or number).\n   * @return {string} The formatted id.\n   */\n  protected formatId(id: string): string {\n    return 'mjx-eqn:' + id.replace(/\\s/g, '_');\n  }\n\n  /**\n   * How to format numbers in tags.\n   * @param {number} n The tag number.\n   * @return {string} The formatted number.\n   */\n  protected formatNumber(n: number): string {\n    return n.toString();\n  }\n\n  // Tag handling functions.\n  /**\n   * @override\n   */\n  public autoTag() {\n    if (this.currentTag.tag == null) {\n      this.counter++;\n      this.tag(this.formatNumber(this.counter), false);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public clearTag() {\n    this.label = '';\n    this.tag(null, true);\n    this.currentTag.tagId = '';\n  }\n\n\n  /**\n   * @override\n   */\n  public getTag(force: boolean = false) {\n    if (force) {\n      this.autoTag();\n      return this.makeTag();\n    }\n    const ct = this.currentTag;\n    if (ct.taggable && !ct.noTag) {\n      if (ct.defaultTags) {\n        this.autoTag();\n      }\n      if (ct.tag) {\n        return this.makeTag();\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * @override\n   */\n  public resetTag() {\n    this.history = [];\n    this.redo = false;\n    this.refUpdate = false;\n    this.clearTag();\n  }\n\n  /**\n   * @override\n   */\n  public reset(offset: number = 0) {\n    this.resetTag();\n    this.counter = this.allCounter = offset;\n    this.allLabels = {};\n    this.allIds = {};\n  }\n\n  /**\n   * @override\n   */\n  public startEquation(math: MathItem<any, any, any>) {\n    this.history = [];\n    this.stack = [];\n    this.clearTag();\n    this.currentTag = new TagInfo('', undefined, undefined);\n    this.labels = {};\n    this.ids = {};\n    this.counter = this.allCounter;\n    this.redo = false;\n    const recompile = math.inputData.recompile;\n    if (recompile) {\n      this.refUpdate = true;\n      this.counter = recompile.counter;\n    }\n  }\n\n  /**\n   * @override\n   */\n  public finishEquation(math: MathItem<any, any, any>) {\n    if (this.redo) {\n      math.inputData.recompile = {\n        state: math.state(),\n        counter: this.allCounter\n      };\n    }\n    if (!this.refUpdate) {\n      this.allCounter = this.counter;\n    }\n    Object.assign(this.allIds, this.ids);\n    Object.assign(this.allLabels, this.labels);\n  }\n\n  /**\n   * @override\n   */\n  public finalize(node: MmlNode, env: EnvList): MmlNode {\n    if (!env.display || this.currentTag.env ||\n        this.currentTag.tag == null) {\n      return node;\n    }\n    let tag = this.makeTag();\n    let table = this.enTag(node, tag);\n    return table;\n  }\n\n  /**\n   * @override\n   */\n  public enTag = function(node: MmlNode, tag: MmlNode): MmlNode {\n    let nf = this.configuration.nodeFactory;\n    let cell = nf.create('node', 'mtd', [node]);\n    let row = nf.create('node', 'mlabeledtr', [tag, cell]);\n    let table = nf.create('node', 'mtable', [row], {\n      side: this.configuration.options['tagSide'],\n      minlabelspacing: this.configuration.options['tagIndent'],\n      displaystyle: true\n    });\n    return table;\n  };\n\n\n  /**\n   * Sets the tag id.\n   */\n  private makeId() {\n    this.currentTag.tagId = this.formatId(\n      this.configuration.options['useLabelIds'] ?\n        (this.label || this.currentTag.tag) : this.currentTag.tag);\n  }\n\n\n  /**\n   * @return {MmlNode} The actual tag node as an mtd.\n   */\n  private makeTag(): MmlNode {\n    this.makeId();\n    if (this.label) {\n      this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);\n    }\n    let mml = new TexParser('\\\\text{' + this.currentTag.tagFormat + '}', {},\n                            this.configuration).mml();\n    return this.configuration.nodeFactory.create('node', 'mtd', [mml],\n                                                 {id: this.currentTag.tagId});\n  }\n\n}\n\n\n/**\n * No tags, except where explicitly set.\n * @constructor\n * @extends {AbstractTags}\n */\nexport class NoTags extends AbstractTags {\n\n  /**\n   * @override\n   */\n  public autoTag() {}\n\n  /**\n   * @override\n   */\n  public getTag() {\n    return !this.currentTag.tag ? null : super.getTag();\n  }\n\n}\n\n\n/**\n * Tags every display formula. Exceptions are: Environments that explicitly\n * disallow tags, e.g., equation*.\n * @constructor\n * @extends {AbstractTags}\n */\nexport class AllTags extends AbstractTags {\n\n  /**\n   * @override\n   */\n  public finalize(node: MmlNode, env: EnvList) {\n    if (!env.display || this.history.find(\n      function(x: TagInfo) { return x.taggable; })) {\n      return node;\n    }\n    let tag = this.getTag(true);\n    return this.enTag(node, tag);\n  }\n\n}\n\n\n/**\n * Class interface for factory.\n * @interface\n */\nexport interface TagsClass {\n  new (): Tags;\n}\n\n\nexport namespace TagsFactory {\n\n  let tagsMapping = new Map<string, TagsClass>([\n    ['none', NoTags],\n    ['all', AllTags]\n  ]);\n\n  let defaultTags = 'none';\n\n  /**\n   * The default options for tagging\n   * @type {OptionList}\n   */\n  export let OPTIONS: OptionList = {\n    // Tagging style, used to be autonumber in v2.\n    tags: defaultTags,\n    // This specifies the side on which \\tag{} macros will place the tags.\n    // Set to 'left' to place on the left-hand side.\n    tagSide: 'right',\n    // This is the amount of indentation (from right or left) for the tags.\n    tagIndent: '0.8em',\n    // make element ID's use \\label name rather than equation number\n    // MJ puts in an equation prefix: mjx-eqn\n    // When true it uses the label name XXX as mjx-eqn:XXX\n    // If false it uses the actual number N that is displayed: mjx-eqn:N\n    useLabelIds: true,\n    // Set to true in order to prevent error messages for duplicate label ids\n    ignoreDuplicateLabels: false\n  };\n\n\n  /**\n   * Add a tagging object.\n   * @param {string} name Name of the tagging object.\n   * @param {TagsClass} constr The class of the Tagging object.\n   */\n  export let add = function(name: string, constr: TagsClass) {\n    tagsMapping.set(name, constr);\n  };\n\n\n  /**\n   * Adds a list of tagging objects to the factory.\n   * @param {{[name: string]: TagsClass}} tags The list of tagging objects.\n   */\n  export let addTags = function(tags: {[name: string]: TagsClass}) {\n    for (const key of Object.keys(tags)) {\n      TagsFactory.add(key, tags[key]);\n    }\n  };\n\n\n  /**\n   * Creates a new tagging object.\n   * @param {string} name The name of the tagging object.\n   * @return {Tags} The newly created object.\n   */\n  export let create = function(name: string): Tags {\n    let constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);\n    if (!constr) {\n        throw Error('Unknown tags class');\n    }\n    return new constr();\n  };\n\n\n  /**\n   * Set the name of the default tagging object.\n   * @param {string} name The default.\n   */\n  export let setDefault = function(name: string) {\n    defaultTags = name;\n  };\n\n\n  /**\n   * @return {Tags} The default tagging object.\n   */\n  export let getDefault = function(): Tags {\n    return TagsFactory.create(defaultTags);\n  };\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3011, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3016, "column": 0}, "map": {"version":3,"file":"MapHandler.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/MapHandler.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Singleton class for handling symbol maps.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {AbstractSymbolMap, SymbolMap} from './SymbolMap.js';\nimport {ParseInput, ParseResult, ParseMethod} from './Types.js';\n// import {ParserConfiguration} from './Configuration.js';\nimport {PrioritizedList} from '../../util/PrioritizedList.js';\nimport {FunctionList} from '../../util/FunctionList.js';\n\n\nexport type HandlerType = 'delimiter' | 'macro' | 'character' | 'environment';\n\nexport type HandlerConfig = {[P in HandlerType]?: string[]};\nexport type FallbackConfig = {[P in HandlerType]?: ParseMethod};\n\n\nexport namespace MapHandler {\n\n  let maps: Map<string, SymbolMap> = new Map();\n\n  /**\n   * Adds a new symbol map to the map handler. Might overwrite an existing\n   * symbol map of the same name.\n   *\n   * @param {SymbolMap} map Registers a new symbol map.\n   */\n  export let register = function(map: SymbolMap): void {\n    maps.set(map.name, map);\n  };\n\n\n  /**\n   * Looks up a symbol map if it exists.\n   *\n   * @param {string} name The name of the symbol map.\n   * @return {SymbolMap} The symbol map with the given name or null.\n   */\n  export let getMap = function(name: string): SymbolMap {\n    return maps.get(name);\n  };\n\n}\n\n\n/**\n * Class of symbol mappings that are active in a configuration.\n */\nexport class SubHandler {\n\n  private _configuration: PrioritizedList<SymbolMap> = new PrioritizedList<SymbolMap>();\n  private _fallback: FunctionList = new FunctionList();\n\n  /**\n   * Adds a list of symbol maps to the handler.\n   * @param {string[]} maps The names of the symbol maps to add.\n   * @param {ParseMethod} fallback A fallback method.\n   * @param {number} priority Optionally a priority.\n   */\n  public add(maps: string[], fallback: ParseMethod,\n             priority: number = PrioritizedList.DEFAULTPRIORITY) {\n    for (const name of maps.slice().reverse()) {\n      let map = MapHandler.getMap(name);\n      if (!map) {\n        this.warn('Configuration ' + name + ' not found! Omitted.');\n        return;\n      }\n      this._configuration.add(map, priority);\n    }\n    if (fallback) {\n      this._fallback.add(fallback, priority);\n    }\n  }\n\n  /**\n   * Parses the given input with the first applicable symbol map.\n   * @param {ParseInput} input The input for the parser.\n   * @return {ParseResult} The output of the parsing function.\n   */\n  public parse(input: ParseInput): ParseResult {\n    for (let {item: map} of this._configuration) {\n      const result = map.parse(input);\n      if (result) {\n        return result;\n      }\n    }\n    let [env, symbol] = input;\n    Array.from(this._fallback)[0].item(env, symbol);\n  }\n\n\n  /**\n   * Maps a symbol to its \"parse value\" if it exists.\n   *\n   * @param {string} symbol The symbol to parse.\n   * @return {T} A boolean, Character, or Macro.\n   */\n  public lookup<T>(symbol: string): T {\n    let map = this.applicable(symbol) as AbstractSymbolMap<T>;\n    return map ? map.lookup(symbol) : null;\n  }\n\n\n  /**\n   * Checks if a symbol is contained in one of the symbol mappings of this\n   * configuration.\n   *\n   * @param {string} symbol The symbol to parse.\n   * @return {boolean} True if the symbol is contained in the mapping.\n   */\n  public contains(symbol: string): boolean {\n    return this.applicable(symbol) ? true : false;\n  }\n\n\n  /**\n   * @override\n   */\n  public toString(): string {\n    let names = [];\n    for (let {item: map} of this._configuration) {\n      names.push(map.name);\n    }\n    return names.join(', ');\n  }\n\n\n  /**\n   * Retrieves the first applicable symbol map in the configuration.\n   * @param {string} symbol The symbol to parse.\n   * @return {SymbolMap} A map that can parse the symbol.\n   */\n  public applicable(symbol: string): SymbolMap {\n    for (let {item: map} of this._configuration) {\n      if (map.contains(symbol)) {\n        return map;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * Retrieves the map of the given name.\n   * @param {string} name Name of the symbol map.\n   * @return {SymbolMap} The map if it exists.\n   */\n  public retrieve(name: string): SymbolMap {\n    for (let {item: map} of this._configuration) {\n      if (map.name === name) {\n        return map;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * Prints a warning message.\n   * @param {string} message The warning.\n   */\n  private warn(message: string) {\n    console.log('TexParser Warning: ' + message);\n  }\n\n}\n\n\nexport class SubHandlers {\n\n  private map = new Map<HandlerType, SubHandler>();\n\n  /**\n   * Adds a symbol map to the configuration if it exists.\n   * @param {string} name of the symbol map.\n   */\n  public add(handlers: HandlerConfig, fallbacks: FallbackConfig,\n             priority: number = PrioritizedList.DEFAULTPRIORITY): void {\n    for (const key of Object.keys(handlers)) {\n      let name = key as HandlerType;\n      let subHandler = this.get(name);\n      if (!subHandler) {\n        subHandler = new SubHandler();\n        this.set(name, subHandler);\n      }\n      subHandler.add(handlers[name], fallbacks[name], priority);\n    }\n  }\n\n\n  /**\n   * Setter for subhandlers.\n   * @param {HandlerType} name The name of the subhandler.\n   * @param {SubHandler} subHandler The subhandler.\n   */\n  public set(name: HandlerType, subHandler: SubHandler) {\n    this.map.set(name, subHandler);\n  }\n\n\n  /**\n   * Getter for subhandler.\n   * @param {HandlerType} name Name of the subhandler.\n   * @return {SubHandler} The subhandler by that name if it exists.\n   */\n  public get(name: HandlerType): SubHandler {\n    return this.map.get(name);\n  }\n\n\n  /**\n   * Retrieves a symbol map of the given name.\n   * @param {string} name Name of the symbol map.\n   * @return {SymbolMap} The map if it exists. O/w null.\n   */\n  public retrieve(name: string): SymbolMap {\n    for (const handler of this.map.values()) {\n      let map = handler.retrieve(name);\n      if (map) {\n        return map;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * All names of registered subhandlers.\n   * @return {IterableIterator<string>} Iterable list of keys.\n   */\n  public keys(): IterableIterator<string> {\n    return this.map.keys();\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3275, "column": 0}, "map": {"version":3,"file":"Configuration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/Configuration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration options for the TexParser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {HandlerConfig, FallbackConfig} from './MapHandler.js';\nimport {StackItemClass} from './StackItem.js';\nimport {TagsClass} from './Tags.js';\nimport {userOptions, defaultOptions, OptionList} from '../../util/Options.js';\nimport {SubHandlers} from './MapHandler.js';\nimport {FunctionList} from '../../util/FunctionList.js';\nimport {TeX} from '../tex.js';\nimport {PrioritizedList} from '../../util/PrioritizedList.js';\nimport {TagsFactory} from './Tags.js';\n\n\nexport type StackItemConfig = {[kind: string]: StackItemClass};\nexport type TagsConfig = {[kind: string]: TagsClass};\nexport type Processor<T> = [T, number];\nexport type ProtoProcessor<T> = Processor<T> | T;\nexport type ProcessorList = Processor<Function>[];\nexport type ConfigMethod = (c: ParserConfiguration, j: TeX<any, any, any>) => void;\nexport type InitMethod = (c: ParserConfiguration) => void;\n\n\n\nexport class Configuration {\n\n  /**\n   * Creates a function priority pair.\n   * @param {ProtoProcessor<T>} func The function or processor.\n   * @param {number} priority The default priority.\n   * @return {Processor} The processor pair.\n   * @template T\n   */\n  private static makeProcessor<T>(func: ProtoProcessor<T>, priority: number): Processor<T> {\n    return Array.isArray(func) ? func : [func, priority];\n  }\n\n  /**\n   * Creates a configuration for a package.\n   * @param {string} name The package name or empty string.\n   * @param {Object} config See `create` method.\n   * @return {Configuration} The newly generated configuration.\n   */\n  private static _create(name: string,\n                         config: {handler?: HandlerConfig,\n                                  fallback?: FallbackConfig,\n                                  items?: StackItemConfig,\n                                  tags?: TagsConfig,\n                                  options?: OptionList,\n                                  nodes?: {[key: string]: any},\n                                  preprocessors?: ProtoProcessor<Function>[],\n                                  postprocessors?: ProtoProcessor<Function>[],\n                                  init?: ProtoProcessor<InitMethod>,\n                                  config?: ProtoProcessor<ConfigMethod>,\n                                  priority?: number,\n                                  parser?: string,\n                                 } = {}): Configuration {\n    let priority = config.priority || PrioritizedList.DEFAULTPRIORITY;\n    let init = config.init ? this.makeProcessor(config.init, priority) : null;\n    let conf = config.config ? this.makeProcessor(config.config, priority) : null;\n    let preprocessors = (config.preprocessors || []).map(\n      pre => this.makeProcessor(pre, priority));\n    let postprocessors = (config.postprocessors || []).map(\n      post => this.makeProcessor(post, priority));\n    let parser = config.parser || 'tex';\n    return new Configuration(\n      name,\n      config.handler || {},\n      config.fallback || {},\n      config.items || {},\n      config.tags || {},\n      config.options || {},\n      config.nodes || {},\n      preprocessors, postprocessors, init, conf, priority,\n      parser\n    );\n  }\n\n  /**\n   * Creator pattern for creating a named package configuration. This will be\n   * administered in the configuration handler and can be retrieved again.\n   * @param {string} name The package name.\n   * @param {Object} config The configuration parameters:\n   * Configuration for the TexParser consist of the following:\n   *  * _handler_  configuration mapping handler types to lists of symbol mappings.\n   *  * _fallback_ configuration mapping handler types to fallback methods.\n   *  * _items_ for the StackItem factory.\n   *  * _tags_ mapping tagging configurations to tagging objects.\n   *  * _options_ parse options for the packages.\n   *  * _nodes_ for the Node factory.\n   *  * _preprocessors_ list of functions for preprocessing the LaTeX\n   *      string wrt. to given parse options. Can contain a priority.\n   *  * _postprocessors_ list of functions for postprocessing the MmlNode\n   *      wrt. to given parse options. Can contain a priority.\n   *  * _init_ init method and optionally its priority.\n   *  * _config_ config method and optionally its priority.\n   *  * _priority_ default priority of the configuration.\n   *  * _parser_ the name of the parser that this configuration targets.\n   * @return {Configuration} The newly generated configuration.\n   */\n  public static create(name: string,\n                       config: {handler?: HandlerConfig,\n                                fallback?: FallbackConfig,\n                                items?: StackItemConfig,\n                                tags?: TagsConfig,\n                                options?: OptionList,\n                                nodes?: {[key: string]: any},\n                                preprocessors?: ProtoProcessor<Function>[],\n                                postprocessors?: ProtoProcessor<Function>[],\n                                init?: ProtoProcessor<InitMethod>,\n                                config?: ProtoProcessor<ConfigMethod>,\n                                priority?: number,\n                                parser?: string,\n                               } = {}): Configuration {\n    let configuration = Configuration._create(name, config);\n    ConfigurationHandler.set(name, configuration);\n    return configuration;\n  }\n\n  /**\n   * Creates an unnamed, ephemeral package configuration. It will not added to\n   * the configuration handler.\n   * @param {Object} config See `create` method.\n   * @return {Configuration} The ephemeral package configuration.\n   */\n  public static local(config: {handler?: HandlerConfig,\n                              fallback?: FallbackConfig,\n                              items?: StackItemConfig,\n                              tags?: TagsConfig,\n                              options?: OptionList,\n                              nodes?: {[key: string]: any},\n                              preprocessors?: ProtoProcessor<Function>[],\n                              postprocessors?: ProtoProcessor<Function>[],\n                              init?: ProtoProcessor<InitMethod>,\n                              config?: ProtoProcessor<ConfigMethod>,\n                              priority?: number,\n                              parser?: string,\n                             } = {}): Configuration {\n    return Configuration._create('', config);\n  }\n\n\n  /**\n   * @constructor\n   */\n  private constructor(readonly name: string,\n                      readonly handler: HandlerConfig = {},\n                      readonly fallback: FallbackConfig = {},\n                      readonly items: StackItemConfig = {},\n                      readonly tags: TagsConfig = {},\n                      readonly options: OptionList = {},\n                      readonly nodes: {[key: string]: any} = {},\n                      readonly preprocessors: ProcessorList = [],\n                      readonly postprocessors: ProcessorList = [],\n                      readonly initMethod: Processor<InitMethod> = null,\n                      readonly configMethod: Processor<ConfigMethod> = null,\n                      public priority: number,\n                      readonly parser: string\n                     ) {\n    this.handler = Object.assign(\n      {character: [], delimiter: [], macro: [], environment: []}, handler);\n  }\n\n  /**\n   * The init method.\n   * @type {Function}\n   */\n  public get init(): InitMethod {\n    return this.initMethod ? this.initMethod[0] : null;\n  }\n\n  /**\n   * The config method to call once jax is ready.\n   * @type {FunctionList}\n   */\n  public get config(): ConfigMethod {\n    return this.configMethod ? this.configMethod[0] : null;\n  }\n\n}\n\n\nexport namespace ConfigurationHandler {\n\n  let maps: Map<string, Configuration> = new Map();\n\n  /**\n   * Adds a new configuration to the handler overwriting old ones.\n   *\n   * @param {string} name The name of the configuration.\n   * @param {Configuration} map The configuration mapping.\n   */\n  export let set = function(name: string, map: Configuration): void {\n    maps.set(name, map);\n  };\n\n\n  /**\n   * Looks up a configuration.\n   *\n   * @param {string} name The name of the configuration.\n   * @return {Configuration} The configuration with the given name or null.\n   */\n  export let get = function(name: string): Configuration {\n    return maps.get(name);\n  };\n\n  /**\n   * @return {string[]} All configurations in the handler.\n   */\n  export let keys = function(): IterableIterator<string> {\n    return maps.keys();\n  };\n\n}\n\n\n/**\n * Parser configuration combines the configurations of the currently selected\n * packages.\n * @constructor\n */\nexport class ParserConfiguration {\n\n  /**\n   * Priority list of init methods.\n   * @type {FunctionList}\n   */\n  protected initMethod: FunctionList = new FunctionList();\n\n  /**\n   * Priority list of init methods to call once jax is ready.\n   * @type {FunctionList}\n   */\n  protected configMethod: FunctionList = new FunctionList();\n\n  /**\n   * An ordered list of cofigurations.\n   * @type {PrioritizedList<Configuration>}\n   */\n  protected configurations: PrioritizedList<Configuration> = new PrioritizedList();\n\n  /**\n   * The list of parsers this configuration targets\n   */\n  protected parsers: string[] = [];\n\n  /**\n   * The subhandlers for this configuration.\n   * @type {SubHandlers}\n   */\n  public handlers: SubHandlers = new SubHandlers();\n\n  /**\n   * The collated stack items.\n   * @type {StackItemConfig}\n   */\n  public items: StackItemConfig = {};\n\n  /**\n   * The collated tag configurations.\n   * @type {TagsConfig}\n   */\n  public tags: TagsConfig = {};\n\n  /**\n   * The collated options.\n   * @type {OptionList}\n   */\n  public options: OptionList = {};\n\n  /**\n   * The collated node creators.\n   * @type {{[key: string]: any}}\n   */\n  public nodes: {[key: string]: any}  = {};\n\n  /**\n   * @constructor\n   * @param {(string|[string,number])[]} packages A list of packages with\n   *     optional priorities.\n   * @parm {string[]} parsers   The names of the parsers this package targets\n   */\n  constructor(packages: (string | [string, number])[], parsers: string[] = ['tex']) {\n    this.parsers = parsers;\n    for (const pkg of packages.slice().reverse()) {\n      this.addPackage(pkg);\n    }\n    for (let {item: config, priority: priority} of this.configurations) {\n      this.append(config, priority);\n    }\n  }\n\n  /**\n   * Init method for the configuration;\n   */\n  public init() {\n    this.initMethod.execute(this);\n  }\n\n  /**\n   * Init method for when the jax is ready\n   * @param {TeX} jax The TeX jax for this configuration\n   */\n  public config(jax: TeX<any, any, any>) {\n    this.configMethod.execute(this, jax);\n    for (const config of this.configurations) {\n      this.addFilters(jax, config.item);\n    }\n  }\n\n  /**\n   * Retrieves and adds configuration for a package with priority.\n   * @param {(string | [string, number]} pkg Package with priority.\n   */\n  public addPackage(pkg: (string | [string, number])) {\n    const name = typeof pkg === 'string' ? pkg : pkg[0];\n    const conf = this.getPackage(name);\n    conf && this.configurations.add(conf, typeof pkg === 'string' ? conf.priority : pkg[1]);\n  }\n\n  /**\n   * Adds a configuration after the input jax is created.  (Used by \\require.)\n   * Sets items, nodes and runs configuration method explicitly.\n   *\n   * @param {string} name            The name of the package to add\n   * @param {TeX} jax                The TeX jax where it is being registered\n   * @param {OptionList=} options    The options for the configuration.\n   */\n  public add(name: string, jax: TeX<any, any, any>, options: OptionList = {}) {\n    const config = this.getPackage(name);\n    this.append(config);\n    this.configurations.add(config, config.priority);\n    this.init();\n    const parser = jax.parseOptions;\n    parser.nodeFactory.setCreators(config.nodes);\n    for (const kind of Object.keys(config.items)) {\n      parser.itemFactory.setNodeClass(kind, config.items[kind]);\n    }\n    TagsFactory.addTags(config.tags);\n    defaultOptions(parser.options, config.options);\n    userOptions(parser.options, options);\n    this.addFilters(jax, config);\n    if (config.config) {\n      config.config(this, jax);\n    }\n  }\n\n /**\n  * Find a package and check that it is for the targeted parser\n  *\n  * @param {string} name       The name of the package to check\n  * @return {Configuration}    The configuration for the package\n  */\n  protected getPackage(name: string): Configuration {\n    const config = ConfigurationHandler.get(name);\n    if (config && this.parsers.indexOf(config.parser) < 0) {\n      throw Error(`Package ${name} doesn't target the proper parser`);\n    }\n    return config;\n  }\n\n  /**\n   * Appends a configuration to the overall configuration object.\n   * @param {Configuration} config A configuration.\n   * @param {number} priority The configurations optional priority.\n   */\n  public append(config: Configuration, priority?: number) {\n    priority = priority || config.priority;\n    if (config.initMethod) {\n      this.initMethod.add(config.initMethod[0], config.initMethod[1]);\n    }\n    if (config.configMethod) {\n        this.configMethod.add(config.configMethod[0], config.configMethod[1]);\n      }\n    this.handlers.add(config.handler, config.fallback, priority);\n    Object.assign(this.items, config.items);\n    Object.assign(this.tags, config.tags);\n    defaultOptions(this.options, config.options);\n    Object.assign(this.nodes, config.nodes);\n  }\n\n  /**\n   * Adds pre- and postprocessor as filters to the jax.\n   * @param {TeX<any} jax The TeX Jax.\n   * @param {Configuration} config The configuration whose processors are added.\n   */\n  private addFilters(jax: TeX<any, any, any>, config: Configuration) {\n    for (const [pre, priority] of config.preprocessors) {\n      jax.preFilters.add(pre, priority);\n    }\n    for (const [post, priority] of config.postprocessors) {\n      jax.postFilters.add(post, priority);\n    }\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAA,gDAA8E;AAC9E,IAAA,6CAA4C;AAC5C,IAAA,0DAAwD;AAExD,IAAA,gEAA8D;AAC9D,IAAA,iCAAsC;AAatC,IAAA,gBAAA;IAyHE,SAAA,cAA6B,IAAY,EACZ,OAA2B,EAC3B,QAA6B,EAC7B,KAA2B,EAC3B,IAAqB,EACrB,OAAwB,EACxB,KAAgC,EAChC,aAAiC,EACjC,cAAkC,EAClC,UAAwC,EACxC,YAA4C,EAC9C,QAAgB,EACd,MAAc;QAXd,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA,CAAA,CAA2B;QAAA;QAC3B,IAAA,aAAA,KAAA,GAAA;YAAA,WAAA,CAAA,CAA6B;QAAA;QAC7B,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAA,CAA2B;QAAA;QAC3B,IAAA,SAAA,KAAA,GAAA;YAAA,OAAA,CAAA,CAAqB;QAAA;QACrB,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA,CAAA,CAAwB;QAAA;QACxB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAA,CAAgC;QAAA;QAChC,IAAA,kBAAA,KAAA,GAAA;YAAA,gBAAA,EAAiC;QAAA;QACjC,IAAA,mBAAA,KAAA,GAAA;YAAA,iBAAA,EAAkC;QAAA;QAClC,IAAA,eAAA,KAAA,GAAA;YAAA,aAAA,IAAwC;QAAA;QACxC,IAAA,iBAAA,KAAA,GAAA;YAAA,eAAA,IAA4C;QAAA;QAV5C,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAQ;QACZ,IAAA,CAAA,OAAO,GAAP,OAAO,CAAoB;QAC3B,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAqB;QAC7B,IAAA,CAAA,KAAK,GAAL,KAAK,CAAsB;QAC3B,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAiB;QACrB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAiB;QACxB,IAAA,CAAA,KAAK,GAAL,KAAK,CAA2B;QAChC,IAAA,CAAA,aAAa,GAAb,aAAa,CAAoB;QACjC,IAAA,CAAA,cAAc,GAAd,cAAc,CAAoB;QAClC,IAAA,CAAA,UAAU,GAAV,UAAU,CAA8B;QACxC,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAgC;QAC9C,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAQ;QACd,IAAA,CAAA,MAAM,GAAN,MAAM,CAAQ;QAEzC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAC1B;YAAC,SAAS,EAAE,EAAE;YAAE,SAAS,EAAE,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,WAAW,EAAE,EAAE;QAAA,CAAC,EAAE,OAAO,CAAC,CAAC;IACzE,CAAC;IAhIc,cAAA,aAAa,GAA5B,SAAgC,IAAuB,EAAE,QAAgB;QACvE,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAAC,IAAI;YAAE,QAAQ;SAAC,CAAC;IACvD,CAAC;IAQc,cAAA,OAAO,GAAtB,SAAuB,IAAY,EACZ,MAYc;QAbrC,IAAA,QAAA,IAAA,CAiCC;QAhCsB,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAYc;QAAA;QACnC,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,qBAAA,eAAe,CAAC,eAAe,CAAC;QAClE,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1E,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9E,IAAI,aAAa,GAAG,CAAC,MAAM,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,GAAG,CAClD,SAAA,GAAG;YAAI,OAAA,KAAI,CAAC,aAAa,CAAC,GAAG,EAAE,QAAQ,CAAC;QAAjC,CAAiC,CAAC,CAAC;QAC5C,IAAI,cAAc,GAAG,CAAC,MAAM,CAAC,cAAc,IAAI,EAAE,CAAC,CAAC,GAAG,CACpD,SAAA,IAAI;YAAI,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC;QAAlC,CAAkC,CAAC,CAAC;QAC9C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAC;QACpC,OAAO,IAAI,aAAa,CACtB,IAAI,EACJ,MAAM,CAAC,OAAO,IAAI,CAAA,CAAE,EACpB,MAAM,CAAC,QAAQ,IAAI,CAAA,CAAE,EACrB,MAAM,CAAC,KAAK,IAAI,CAAA,CAAE,EAClB,MAAM,CAAC,IAAI,IAAI,CAAA,CAAE,EACjB,MAAM,CAAC,OAAO,IAAI,CAAA,CAAE,EACpB,MAAM,CAAC,KAAK,IAAI,CAAA,CAAE,EAClB,aAAa,EAAE,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EACnD,MAAM,CACP,CAAC;IACJ,CAAC;IAwBa,cAAA,MAAM,GAApB,SAAqB,IAAY,EACZ,MAYc;QAZd,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAYc;QAAA;QACjC,IAAI,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACxD,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QAC9C,OAAO,aAAa,CAAC;IACvB,CAAC;IAQa,cAAA,KAAK,GAAnB,SAAoB,MAYa;QAZb,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAA,CAYa;QAAA;QAC/B,OAAO,aAAa,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IA4BD,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrD,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,QAAM,EAAA;aAAjB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACzD,CAAC;;;OAAA;IAEH,OAAA,aAAC;AAAD,CAAC,AA3JD,IA2JC;AA3JY,QAAA,aAAA,GAAA,cAAa;AA8J1B,IAAiB,oBAAoB,CAgCpC;AAhCD,CAAA,SAAiB,oBAAoB;IAEnC,IAAI,IAAI,GAA+B,IAAI,GAAG,EAAE,CAAC;IAQtC,qBAAA,GAAG,GAAG,SAAS,IAAY,EAAE,GAAkB;QACxD,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACtB,CAAC,CAAC;IASS,qBAAA,GAAG,GAAG,SAAS,IAAY;QACpC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;IAKS,qBAAA,IAAI,GAAG;QAChB,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;IACrB,CAAC,CAAC;AAEJ,CAAC,EAhCgB,oBAAoB,GAApB,QAAA,oBAAoB,IAAA,CAApB,QAAA,oBAAoB,GAAA,CAAA,CAAA,GAgCpC;AAQD,IAAA,sBAAA;IA6DE,SAAA,oBAAY,QAAuC,EAAE,OAA2B;;QAA3B,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA;gBAAqB,KAAK;aAAC;QAAA;QAvDtE,IAAA,CAAA,UAAU,GAAiB,IAAI,kBAAA,YAAY,EAAE,CAAC;QAM9C,IAAA,CAAA,YAAY,GAAiB,IAAI,kBAAA,YAAY,EAAE,CAAC;QAMhD,IAAA,CAAA,cAAc,GAAmC,IAAI,qBAAA,eAAe,EAAE,CAAC;QAKvE,IAAA,CAAA,OAAO,GAAa,EAAE,CAAC;QAM1B,IAAA,CAAA,QAAQ,GAAgB,IAAI,gBAAA,WAAW,EAAE,CAAC;QAM1C,IAAA,CAAA,KAAK,GAAoB,CAAA,CAAE,CAAC;QAM5B,IAAA,CAAA,IAAI,GAAe,CAAA,CAAE,CAAC;QAMtB,IAAA,CAAA,OAAO,GAAe,CAAA,CAAE,CAAC;QAMzB,IAAA,CAAA,KAAK,GAA0B,CAAA,CAAE,CAAC;QASvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;YACvB,IAAkB,IAAA,KAAA,SAAA,QAAQ,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAzC,IAAM,GAAG,GAAA,GAAA,KAAA;gBACZ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACtB;;;;;;;;;;;;;YACD,IAA+C,IAAA,KAAA,SAAA,IAAI,CAAC,cAAc,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA3D,IAAA,KAAA,GAAA,KAAkC,EAA3B,MAAM,GAAA,GAAA,IAAA,EAAY,QAAQ,GAAA,GAAA,QAAA;gBACxC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;aAC/B;;;;;;;;;;;;IACH,CAAC;IAKM,oBAAA,SAAA,CAAA,IAAI,GAAX;QACE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAMM,oBAAA,SAAA,CAAA,MAAM,GAAb,SAAc,GAAuB;;QACnC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;YACrC,IAAqB,IAAA,KAAA,SAAA,IAAI,CAAC,cAAc,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAArC,IAAM,MAAM,GAAA,GAAA,KAAA;gBACf,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;aACnC;;;;;;;;;;;;IACH,CAAC;IAMM,oBAAA,SAAA,CAAA,UAAU,GAAjB,SAAkB,GAAgC;QAChD,IAAM,IAAI,GAAG,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACpD,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC;IAUM,oBAAA,SAAA,CAAA,GAAG,GAAV,SAAW,IAAY,EAAE,GAAuB,EAAE,OAAwB;;QAAxB,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA,CAAA,CAAwB;QAAA;QACxE,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAM,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;YAC7C,IAAmB,IAAA,KAAA,SAAA,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAzC,IAAM,IAAI,GAAA,GAAA,KAAA;gBACb,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;aAC3D;;;;;;;;;;;;QACD,UAAA,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjC,CAAA,GAAA,aAAA,cAAc,EAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAA,GAAA,aAAA,WAAW,EAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC7B,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC1B;IACH,CAAC;IAQS,oBAAA,SAAA,CAAA,UAAU,GAApB,SAAqB,IAAY;QAC/B,IAAM,MAAM,GAAG,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACrD,MAAM,KAAK,CAAC,WAAA,MAAA,CAAW,IAAI,EAAA,oCAAmC,CAAC,CAAC;SACjE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAOM,oBAAA,SAAA,CAAA,MAAM,GAAb,SAAc,MAAqB,EAAE,QAAiB;QACpD,QAAQ,GAAG,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC;QACvC,IAAI,MAAM,CAAC,UAAU,EAAE;YACrB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;QACD,IAAI,MAAM,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SACvE;QACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QACxC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QACtC,CAAA,GAAA,aAAA,cAAc,EAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAOO,oBAAA,SAAA,CAAA,UAAU,GAAlB,SAAmB,GAAuB,EAAE,MAAqB;;;YAC/D,IAA8B,IAAA,KAAA,SAAA,MAAM,CAAC,aAAa,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAzC,IAAA,KAAA,OAAA,GAAA,KAAA,EAAA,EAAe,EAAd,GAAG,GAAA,EAAA,CAAA,EAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,EAAA;gBACvB,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;aACnC;;;;;;;;;;;;;YACD,IAA+B,IAAA,KAAA,SAAA,MAAM,CAAC,cAAc,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA3C,IAAA,KAAA,OAAA,GAAA,KAAA,EAAA,EAAgB,EAAf,IAAI,GAAA,EAAA,CAAA,EAAA,EAAE,QAAQ,GAAA,EAAA,CAAA,EAAA;gBACxB,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aACrC;;;;;;;;;;;;IACH,CAAC;IAEH,OAAA,mBAAC;AAAD,CAAC,AA9KD,IA8KC;AA9KY,QAAA,mBAAA,GAAA,oBAAmB","ignoreList":[0]}},
    {"offset": {"line": 3610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3615, "column": 0}, "map": {"version":3,"file":"Symbol.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/Symbol.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Symbol classes.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Args, Attributes, ParseMethod} from './Types.js';\n\n\n/**\n * Symbol class\n */\nexport class Symbol {\n\n  /**\n   * @constructor\n   * @param {string} symbol The symbol parsed.\n   * @param {string} char The corresponding translation.\n   * @param {Attributes} attributes The attributes for the translation.\n   */\n  constructor(private _symbol: string, private _char: string,\n              private _attributes: Attributes) {\n  }\n\n  public get symbol(): string {\n    return this._symbol;\n  }\n\n  public get char(): string {\n    return this._char;\n  }\n\n  public get attributes(): Attributes {\n    return this._attributes;\n  }\n\n}\n\n\nexport class Macro {\n\n  /**\n   * @constructor\n   * @param {string} symbol The symbol parsed\n   * @param {ParseMethod} func The parsing function for that symbol.\n   * @param {Args[]} args Additional arguments for the function.\n   */\n  constructor(private _symbol: string, private _func: ParseMethod,\n              private _args: Args[] = []) {\n  }\n\n  public get symbol(): string {\n    return this._symbol;\n  }\n\n  public get func(): ParseMethod {\n    return this._func;\n  }\n\n  public get args(): Args[] {\n    return this._args;\n  }\n\n}\n"],"names":[],"mappings":";;;;;AA8BA,IAAA,SAAA;IAQE,SAAA,OAAoB,OAAe,EAAU,KAAa,EACtC,WAAuB;QADvB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAQ;QAAU,IAAA,CAAA,KAAK,GAAL,KAAK,CAAQ;QACtC,IAAA,CAAA,WAAW,GAAX,WAAW,CAAY;IAC3C,CAAC;IAED,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,QAAM,EAAA;aAAjB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,YAAU,EAAA;aAArB;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;;;OAAA;IAEH,OAAA,MAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,QAAA,MAAA,GAAA,OAAM;AA2BnB,IAAA,QAAA;IAQE,SAAA,MAAoB,OAAe,EAAU,KAAkB,EAC3C,KAAkB;QAAlB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,EAAkB;QAAA;QADlB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAQ;QAAU,IAAA,CAAA,KAAK,GAAL,KAAK,CAAa;QAC3C,IAAA,CAAA,KAAK,GAAL,KAAK,CAAa;IACtC,CAAC;IAED,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,QAAM,EAAA;aAAjB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAEH,OAAA,KAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,QAAA,KAAA,GAAA,MAAK","ignoreList":[0]}},
    {"offset": {"line": 3683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3688, "column": 0}, "map": {"version":3,"file":"SymbolMap.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/SymbolMap.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Symbol map classes.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Attributes, Args, ParseMethod, ParseInput, ParseResult} from './Types.js';\nimport {Symbol, Macro} from './Symbol.js';\nimport {MapHandler} from './MapHandler.js';\n\n\n/**\n * SymbolMaps are the base components for the input parsers.\n *\n * They provide a contains method that checks if a map is applicable (contains)\n * a particular string. Implementing classes then perform the actual symbol\n * parsing, from simple regular expression test, straight forward symbol mapping\n * to transformational functionality on the parsed string.\n *\n * @interface\n */\nexport interface SymbolMap {\n\n  /**\n   * @return {string} The name of the map.\n   */\n  name: string;\n\n  /**\n   * @return {ParseMethod} The default parsing method.\n   */\n  parser: ParseMethod;\n\n  /**\n   * @param {string} symbol A symbol to parse.\n   * @return {boolean} True if the symbol map applies to the symbol.\n   */\n  contains(symbol: string): boolean;\n\n  /**\n   * @param {string} symbol A symbol to parse.\n   * @return {ParseMethod} A parse method for the symbol.\n   */\n  parserFor(symbol: string): ParseMethod;\n\n  /**\n   * @param {TexParser} env The current parser.\n   * @param {string} symbol A symbol to parse.\n   * @return {ParseResult} The parsed symbol and the rest of the string.\n   */\n  parse([env, symbol]: ParseInput): ParseResult;\n\n}\n\n/**\n * @param {ParseResult} result    The result to check\n * @return {ParseResult}          True if result was void, result otherwise\n */\nexport function parseResult(result: ParseResult): ParseResult {\n  return result === void 0 ? true : result;\n}\n\n/**\n * Abstract implementation of symbol maps.\n * @template T\n */\nexport abstract class AbstractSymbolMap<T> implements SymbolMap {\n\n  /**\n   * @constructor\n   * @implements {SymbolMap}\n   * @param {string} name Name of the mapping.\n   * @param {ParseMethod} parser The parser for the mappiong.\n   */\n  constructor(private _name: string, private _parser: ParseMethod) {\n    MapHandler.register(this);\n  }\n\n\n  /**\n   * @override\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n\n  /**\n   * @override\n   */\n  public abstract contains(symbol: string): boolean;\n\n\n  /**\n   * @override\n   */\n  public parserFor(symbol: string) {\n    return this.contains(symbol) ? this.parser : null;\n  }\n\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    let parser = this.parserFor(symbol);\n    let mapped = this.lookup(symbol);\n    return (parser && mapped) ? parseResult(parser(env, mapped as any)) : null;\n  }\n\n\n  public set parser(parser: ParseMethod) {\n    this._parser = parser;\n  }\n\n  public get parser(): ParseMethod {\n    return this._parser;\n  }\n\n\n  /**\n   * @param {string} symbol\n   * @return {T}\n   */\n  public abstract lookup(symbol: string): T;\n\n}\n\n\n\n/**\n * Regular expressions used for parsing strings.\n */\nexport class RegExpMap extends AbstractSymbolMap<string> {\n\n  /**\n   * @constructor\n   * @extends {AbstractSymbolMap}\n   * @param {string} name Name of the mapping.\n   * @param {ParseMethod} parser The parser for the mappiong.\n   * @param {RegExp} regexp The regular expression.\n   */\n  constructor(name: string, parser: ParseMethod, private _regExp: RegExp) {\n    super(name, parser);\n  }\n\n\n  /**\n   * @override\n   */\n  public contains(symbol: string) {\n    return this._regExp.test(symbol);\n  }\n\n\n  /**\n   * @override\n   */\n  public lookup(symbol: string): string {\n    return this.contains(symbol) ? symbol : null;\n  }\n\n}\n\n\n/**\n * Parse maps associate strings with parsing functionality.\n * @constructor\n * @extends {AbstractSymbolMap}\n * @template K\n */\nexport abstract class AbstractParseMap<K> extends AbstractSymbolMap<K> {\n\n  private map: Map<string, K> = new Map<string, K>();\n\n  /**\n   * @override\n   */\n  public lookup(symbol: string): K {\n    return this.map.get(symbol);\n  }\n\n  /**\n   * @override\n   */\n  public contains(symbol: string) {\n    return this.map.has(symbol);\n  }\n\n  /**\n   * Sets mapping for a symbol.\n   * @param {string} symbol The symbol to map.\n   * @param {K} object The symbols value in the mapping's codomain.\n   */\n  public add(symbol: string, object: K) {\n    this.map.set(symbol, object);\n  }\n\n  /**\n   * Removes a symbol from the map\n   * @param {string} symbol The symbol to remove\n   */\n  public remove(symbol: string) {\n    this.map.delete(symbol);\n  }\n\n}\n\n\n/**\n * Maps symbols that can all be parsed with the same method.\n *\n * @constructor\n * @extends {AbstractParseMap}\n */\nexport class CharacterMap extends AbstractParseMap<Symbol> {\n\n  /**\n   * @constructor\n   * @param {string} name Name of the mapping.\n   * @param {ParseMethod} parser The parser for the mapping.\n   * @param {JSON} json The JSON representation of the character mapping.\n   */\n  constructor(name: string, parser: ParseMethod,\n              json: {[index: string]: string | [string, Attributes]}) {\n    super(name, parser);\n    for (const key of Object.keys(json)) {\n      let value = json[key];\n      let [char, attrs] = (typeof(value) === 'string') ? [value, null] : value;\n      let character = new Symbol(key, char, attrs);\n      this.add(key, character);\n    }\n  }\n\n}\n\n\n/**\n * Maps symbols that are delimiters, that are all parsed with the same method.\n *\n * @constructor\n * @extends {CharacterMap}\n */\nexport class DelimiterMap extends CharacterMap {\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    return super.parse([env, '\\\\' + symbol]);\n  }\n\n}\n\n\n/**\n * Maps macros that all bring their own parsing method.\n *\n * @constructor\n * @extends {AbstractParseMap}\n */\nexport class MacroMap extends AbstractParseMap<Macro> {\n\n  /**\n   * @constructor\n   * @param {string} name Name of the mapping.\n   * @param {JSON} json The JSON representation of the macro map.\n   * @param {Record<string, ParseMethod>} functionMap Collection of parse\n   *     functions for the single macros.\n   */\n  constructor(name: string,\n              json: {[index: string]: string | Args[]},\n              functionMap: Record<string, ParseMethod>) {\n    super(name, null);\n    for (const key of Object.keys(json)) {\n      let value = json[key];\n      let [func, ...attrs] = (typeof(value) === 'string') ? [value] : value;\n      let character = new Macro(key, functionMap[func as string], attrs);\n      this.add(key, character);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public parserFor(symbol: string) {\n    let macro = this.lookup(symbol);\n    return macro ? macro.func : null;\n  }\n\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    let macro = this.lookup(symbol);\n    let parser = this.parserFor(symbol);\n    if (!macro || !parser) {\n      return null;\n    }\n    return parseResult(parser(env, macro.symbol, ...macro.args));\n  }\n\n}\n\n\n/**\n * Maps macros that all bring their own parsing method.\n *\n * @constructor\n * @extends {MacroMap}\n */\nexport class CommandMap extends MacroMap {\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    let macro = this.lookup(symbol);\n    let parser = this.parserFor(symbol);\n    if (!macro || !parser) {\n      return null;\n    }\n    let saveCommand = env.currentCS;\n    env.currentCS = '\\\\' + symbol;\n    let result = parser(env, '\\\\' + macro.symbol, ...macro.args);\n    env.currentCS = saveCommand;\n    return parseResult(result);\n  }\n\n}\n\n\n/**\n * Maps macros for environments. It has a general parsing method for\n * environments, i.e., one that deals with begin/end, and each environment has\n * its own parsing method returning the content.\n *\n * @constructor\n * @extends {MacroMap}\n */\nexport class EnvironmentMap extends MacroMap {\n\n  /**\n   * @constructor\n   * @param {string} name Name of the mapping.\n   * @param {ParseMethod} parser The parser for the environments.\n   * @param {JSON} json The JSON representation of the macro map.\n   * @param {Record<string, ParseMethod>} functionMap Collection of parse\n   *     functions for the single macros.\n   */\n  constructor(name: string,\n              parser: ParseMethod,\n              json: {[index: string]: string | Args[]},\n              functionMap: Record<string, ParseMethod>) {\n    super(name, json, functionMap);\n    this.parser = parser;\n  }\n\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    let macro = this.lookup(symbol);\n    let envParser = this.parserFor(symbol);\n    if (!macro || !envParser) {\n      return null;\n    }\n    return parseResult(this.parser(env, macro.symbol, envParser, macro.args));\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3971, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3976, "column": 0}, "map": {"version":3,"file":"BaseItems.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/base/BaseItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items for basic Tex parsing.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {MapHandler} from '../MapHandler.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport {entities} from '../../../util/Entities.js';\nimport {MmlNode, TextNode, TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMsubsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\nimport TexError from '../TexError.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {Property} from '../../../core/Tree/Node.js';\nimport StackItemFactory from '../StackItemFactory.js';\nimport {CheckType, BaseItem, StackItem, EnvList} from '../StackItem.js';\n\n\n/**\n * Initial item on the stack. It's pushed when parsing begins.\n */\nexport class StartItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, public global: EnvList) {\n    super(factory);\n  }\n\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'start';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('stop')) {\n      let node = this.toMml();\n      if (!this.global.isInner) {\n        node = this.factory.configuration.tags.finalize(node, this.env);\n      }\n      return [[this.factory.create('mml', node)], true];\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n\n/**\n * Final item on the stack. Errors will be thrown if other items than the start\n * item are still on the stack.\n */\nexport class StopItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'stop';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item indicating an open brace.\n */\nexport class OpenItem extends BaseItem {\n\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test ExtraOpenMissingClose\n    'stop': ['ExtraOpenMissingClose',\n             'Extra open brace or missing close brace']\n  });\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'open';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('close')) {\n      // @test PrimeSup\n      let mml = this.toMml();\n      const node = this.create('node', 'TeXAtom', [mml]);\n      return [[this.factory.create('mml', node)], true];\n    }\n    return super.checkItem(item);\n  }\n}\n\n\n/**\n * Item indicating a close brace. Collapses stack until an OpenItem is found.\n */\nexport class CloseItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'close';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item indicating an we are currently dealing with a prime mark.\n */\nexport class PrimeItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'prime';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    let [top0, top1] = this.Peek(2);\n    if (!NodeUtil.isType(top0, 'msubsup') || NodeUtil.isType(top0, 'msup')) {\n      // @test Prime, Double Prime\n      const node = this.create('node', 'msup', [top0, top1]);\n      return [[node, item], true];\n    }\n    NodeUtil.setChild(top0, (top0 as MmlMsubsup).sup, top1);\n    return [[top0, item], true];\n  }\n}\n\n\n/**\n * Item indicating an we are currently dealing with a sub/superscript\n * expression.\n */\nexport class SubsupItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test MissingScript Sub, MissingScript Sup\n    'stop': ['MissingScript',\n             'Missing superscript or subscript argument'],\n    // @test MissingOpenForSup\n    'sup': ['MissingOpenForSup',\n            'Missing open brace for superscript'],\n    // @test MissingOpenForSub\n    'sub': ['MissingOpenForSub',\n            'Missing open brace for subscript']\n  });\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'subsup';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType | null {\n    if (item.isKind('open') || item.isKind('left')) {\n      return BaseItem.success;\n    }\n    const top = this.First;\n    const position = this.getProperty('position') as number;\n    if (item.isKind('mml')) {\n      if (this.getProperty('primes')) {\n        if (position !== 2) {\n          // @test Prime on Sub\n          NodeUtil.setChild(top, 2, this.getProperty('primes') as MmlNode);\n        } else {\n          // @test Prime on Prime\n          NodeUtil.setProperty(this.getProperty('primes') as MmlNode, 'variantForm', true);\n          const node = this.create('node', 'mrow', [this.getProperty('primes') as MmlNode, item.First]);\n          item.First = node;\n        }\n      }\n      NodeUtil.setChild(top, position, item.First);\n      if (this.getProperty('movesupsub') != null) {\n        // @test Limits Subsup (currently does not work! Check again!)\n        NodeUtil.setProperty(top, 'movesupsub', this.getProperty('movesupsub') as Property);\n      }\n      const result = this.factory.create('mml', top);\n      return [[result], true];\n    }\n    if (super.checkItem(item)[1]) {\n      // @test Brace Superscript Error, MissingOpenForSup, MissingOpenForSub\n      const error = this.getErrors(['', 'sub', 'sup'][position]);\n      throw new TexError(error[0], error[1], ...error.splice(2));\n    }\n    return null;\n  }\n\n}\n\n\n/**\n * Item indicating an we are currently dealing with an \\\\over command.\n */\nexport class OverItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory) {\n    super(factory);\n    this.setProperty('name', '\\\\over');\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'over';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('over')) {\n      // @test Double Over\n      throw new TexError(\n        'AmbiguousUseOf', 'Ambiguous use of %1', item.getName());\n    }\n    if (item.isClose) {\n      // @test Over\n      let mml = this.create('node',\n                            'mfrac', [this.getProperty('num') as MmlNode, this.toMml(false)]);\n      if (this.getProperty('thickness') != null) {\n        // @test Choose, Above, Above with Delims\n        NodeUtil.setAttribute(mml, 'linethickness',\n                              this.getProperty('thickness') as string);\n      }\n      if (this.getProperty('open') || this.getProperty('close')) {\n        // @test Choose\n        NodeUtil.setProperty(mml, 'withDelims', true);\n        mml = ParseUtil.fixedFence(this.factory.configuration,\n                                   this.getProperty('open') as string, mml,\n                                   this.getProperty('close') as string);\n      }\n      return [[this.factory.create('mml', mml), item], true];\n    }\n    return super.checkItem(item);\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return 'over[' + this.getProperty('num') +\n      ' / ' + this.nodes.join('; ') + ']';\n  }\n\n}\n\n\n/**\n * Item pushed when a \\\\left opening delimiter has been found.\n */\nexport class LeftItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test ExtraLeftMissingRight\n    'stop': ['ExtraLeftMissingRight',\n             'Extra \\\\left or missing \\\\right']\n  });\n\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'left';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    // @test Missing Right\n    if (item.isKind('right')) {\n      //\n      //  Create the fenced structure as an mrow\n      //\n      return [[this.factory.create('mml', ParseUtil.fenced(\n        this.factory.configuration,\n        this.getProperty('delim') as string, this.toMml(),\n        item.getProperty('delim') as string, '', item.getProperty('color') as string))], true];\n    }\n    if (item.isKind('middle')) {\n      //\n      //  Add the middle delimiter, with empty open and close elements around it for spacing\n      //\n      const def = {stretchy: true} as any;\n      if (item.getProperty('color')) {\n        def.mathcolor = item.getProperty('color');\n      }\n      this.Push(\n        this.create('node', 'TeXAtom', [], {texClass: TEXCLASS.CLOSE}),\n        this.create('token', 'mo', def, item.getProperty('delim')),\n        this.create('node', 'TeXAtom', [], {texClass: TEXCLASS.OPEN})\n      );\n      this.env = {};         // Since \\middle closes the group, clear the environment\n      return [[this], true]; // this will reset the environment to its initial state\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * Item pushed when a \\\\middle delimiter has been found. Stack is\n * collapsed until a corresponding LeftItem is encountered.\n */\nexport class Middle extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string, color: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n    color && this.setProperty('color', color);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'middle';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n/**\n * Item pushed when a \\\\right closing delimiter has been found. Stack is\n * collapsed until a corresponding LeftItem is encountered.\n */\nexport class RightItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string, color: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n    color && this.setProperty('color', color);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'right';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item pushed for opening an environment with \\\\begin{env}.\n */\nexport class BeginItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'begin';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      if (item.getName() !== this.getName()) {\n        // @test EnvBadEnd\n        throw new TexError('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}',\n                           this.getName(), item.getName());\n      }\n      if (!this.getProperty('end')) {\n        // @test Hfill\n        return [[this.factory.create('mml', this.toMml())], true];\n      }\n      return BaseItem.fail;  // TODO: This case could probably go!\n    }\n    if (item.isKind('stop')) {\n      // @test EnvMissingEnd Array\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n\n/**\n * Item pushed for closing an environment with \\\\end{env}. Stack is collapsed\n * until a corresponding BeginItem for 'env' is found. Error is thrown in case\n * other open environments interfere.\n */\nexport class EndItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'end';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item pushed for remembering styling information.\n */\nexport class StyleItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'style';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (!item.isClose) {\n      return super.checkItem(item);\n    }\n    // @test Style\n    const mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));\n    return [[this.factory.create('mml', mml), item], true];\n  }\n\n}\n\n\n/**\n * Item pushed for remembering positioning information.\n */\nexport class PositionItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'position';\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isClose) {\n      // @test MissingBoxFor\n      throw new TexError('MissingBoxFor', 'Missing box for %1', this.getName());\n    }\n    if (item.isFinal) {\n      let mml = item.toMml();\n      switch (this.getProperty('move')) {\n      case 'vertical':\n        // @test Raise, Lower, Raise Negative, Lower Negative\n        mml = this.create('node', 'mpadded', [mml],\n                          {height: this.getProperty('dh'),\n                           depth: this.getProperty('dd'),\n                           voffset: this.getProperty('dh')});\n        return [[this.factory.create('mml', mml)], true];\n      case 'horizontal':\n        // @test Move Left, Move Right, Move Left Negative, Move Right Negative\n        return [[this.factory.create('mml', this.getProperty('left') as MmlNode), item,\n                 this.factory.create('mml', this.getProperty('right') as MmlNode)], true];\n      }\n    }\n    return super.checkItem(item);\n  }\n}\n\n\n/**\n * Item indicating a table cell.\n */\nexport class CellItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'cell';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n}\n\n\n/**\n * Final item for collating Nodes.\n */\nexport class MmlItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get isFinal() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mml';\n  }\n\n}\n\n\n/**\n * Item indicating a named function operator (e.g., \\\\sin) as been encountered.\n */\nexport class FnItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'fn';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    const top = this.First;\n    if (top) {\n      if (item.isOpen) {\n        // @test Fn Stretchy\n        return BaseItem.success;\n      }\n      if (!item.isKind('fn')) {\n        // @test Named Function\n        let mml = item.First;\n        if (!item.isKind('mml') || !mml) {\n          // @test Mathop Super\n          return [[top, item], true];\n        }\n        if ((NodeUtil.isType(mml, 'mstyle') && mml.childNodes.length &&\n             NodeUtil.isType(mml.childNodes[0].childNodes[0] as MmlNode, 'mspace')) ||\n             NodeUtil.isType(mml, 'mspace')) {\n          // @test Fn Pos Space, Fn Neg Space\n          return [[top, item], true];\n        }\n        if (NodeUtil.isEmbellished(mml)) {\n          // @test MultiInt with Limits\n          mml = NodeUtil.getCoreMO(mml);\n        }\n        const form = NodeUtil.getForm(mml);\n        if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {\n          // @test Fn Operator\n          return [[top, item], true];\n        }\n      }\n      // @test Named Function, Named Function Arg\n      const node = this.create('token', 'mo', {texClass: TEXCLASS.NONE},\n                               entities.ApplyFunction);\n      return [[top, node, item], true];\n    }\n    // @test Mathop Super, Mathop Sub\n    return super.checkItem.apply(this, arguments);\n  }\n}\n\n\n/**\n * Item indicating a \\\\not has been encountered and needs to be applied to the\n * next operator.\n */\nexport class NotItem extends BaseItem {\n\n  private remap = MapHandler.getMap('not_remap') as CharacterMap;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'not';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    let mml: TextNode | MmlNode;\n    let c: string;\n    let textNode: TextNode;\n    if (item.isKind('open') || item.isKind('left')) {\n      // @test Negation Left Paren\n      return BaseItem.success;\n    }\n    if (item.isKind('mml') &&\n        (NodeUtil.isType(item.First, 'mo') || NodeUtil.isType(item.First, 'mi') ||\n         NodeUtil.isType(item.First, 'mtext'))) {\n      mml = item.First;\n      c = NodeUtil.getText(mml as TextNode);\n      if (c.length === 1 && !NodeUtil.getProperty(mml, 'movesupsub') &&\n          NodeUtil.getChildren(mml).length === 1) {\n        if (this.remap.contains(c)) {\n          // @test Negation Simple, Negation Complex\n          textNode = this.create('text', this.remap.lookup(c).char) as TextNode;\n          NodeUtil.setChild(mml, 0, textNode);\n        } else {\n          // @test Negation Explicit\n          textNode = this.create('text', '\\u0338') as TextNode;\n          NodeUtil.appendChildren(mml, [textNode]);\n        }\n        return [[item], true];\n      }\n    }\n    // @test Negation Large\n    textNode = this.create('text', '\\u29F8') as TextNode;\n    const mtextNode = this.create('node', 'mtext', [], {}, textNode);\n    const paddedNode = this.create('node', 'mpadded', [mtextNode], {width: 0});\n    mml = this.create('node', 'TeXAtom', [paddedNode], {texClass: TEXCLASS.REL});\n    return [[mml, item], true];\n  }\n}\n\n/**\n * A StackItem that removes an mspace that follows it (for \\nonscript).\n */\nexport class NonscriptItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'nonscript';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    //\n    //  Check if the next item is an mspace (or an mspace in an mstyle) and remove it.\n    //\n    if (item.isKind('mml') && item.Size() === 1) {\n      let mml = item.First;\n      //\n      //  Space macros like \\, are wrapped with an mstyle to set scriptlevel=\"0\"\n      //    (so size is independent of level), we look at the contents of the mstyle for the mspace.\n      //\n      if (mml.isKind('mstyle') && mml.notParent) {\n        mml = NodeUtil.getChildren(NodeUtil.getChildren(mml)[0])[0];\n      }\n      if (mml.isKind('mspace')) {\n        //\n        //  If the space is in an mstyle, wrap it in an mrow so we can test its scriptlevel\n        //    in the post-filter (the mrow will be removed in the filter).  We can't test\n        //    the mstyle's scriptlevel, since it is ecxplicitly setting it to 0.\n        //\n        if (mml !== item.First) {\n          const mrow = this.create('node', 'mrow', [item.Pop()]);\n          item.Push(mrow);\n        }\n        //\n        //  Save the mspace for later post-processing.\n        //\n        this.factory.configuration.addNode('nonscript', item.First);\n      }\n    }\n    return [[item], true];\n  }\n}\n\n/**\n * Item indicating a dots command has been encountered.\n */\nexport class DotsItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'dots';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('open') || item.isKind('left')) {\n      return BaseItem.success;\n    }\n    let dots = this.getProperty('ldots') as MmlNode;\n    let top = item.First;\n    // @test Operator Dots\n    if (item.isKind('mml') && NodeUtil.isEmbellished(top)) {\n      const tclass = NodeUtil.getTexClass(NodeUtil.getCoreMO(top));\n      if (tclass === TEXCLASS.BIN || tclass === TEXCLASS.REL) {\n        dots = this.getProperty('cdots') as MmlNode;\n      }\n    }\n    return [[dots, item], true];\n  }\n}\n\n\n/**\n * Item indicating an array is assembled. It collates cells, rows and\n * information about column/row separator and framing lines.\n */\nexport class ArrayItem extends BaseItem {\n\n  /**\n   * The table as a list of rows.\n   * @type {MmlNode[]}\n   */\n  public table: MmlNode[] = [];\n\n  /**\n   * The current row as a list of cells.\n   * @type {MmlNode[]}\n   */\n  public row: MmlNode[] = [];\n\n  /**\n   * Frame specification as a list of strings.\n   * @type {string[]}\n   */\n  public frame: string[] = [];\n\n  /**\n   * Hfill value.\n   * @type {number[]}\n   */\n  public hfill: number[] = [];\n\n  /**\n   * Properties for special array definitions.\n   * @type {{[key: string]: string|number|boolean}}\n   */\n  public arraydef: {[key: string]: string | number | boolean} = {};\n\n  /**\n   * True if separators are dashed.\n   * @type {boolean}\n   */\n  public dashed: boolean = false;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'array';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  get copyEnv() {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    // @test Array Single\n    if (item.isClose && !item.isKind('over')) {\n      // @test Array Single\n      if (item.getProperty('isEntry')) {\n        // @test Array dashed column, Array solid column\n        this.EndEntry();\n        this.clearEnv();\n        return BaseItem.fail;\n      }\n      if (item.getProperty('isCR')) {\n        // @test Enclosed bottom\n        this.EndEntry();\n        this.EndRow();\n        this.clearEnv();\n        return BaseItem.fail;\n      }\n      this.EndTable();\n      this.clearEnv();\n      let newItem = this.factory.create('mml', this.createMml());\n      if (this.getProperty('requireClose')) {\n        // @test: Label\n        if (item.isKind('close')) {\n          // @test: Label\n          return [[newItem], true];\n        }\n        // @test MissingCloseBrace2\n        throw new TexError('MissingCloseBrace', 'Missing close brace');\n      }\n      return [[newItem, item], true];\n    }\n    return super.checkItem(item);\n  }\n\n  /**\n   * Create the MathML representation of the table.\n   *\n   * @return {MmlNode}\n   */\n  public createMml(): MmlNode {\n    const scriptlevel = this.arraydef['scriptlevel'];\n    delete this.arraydef['scriptlevel'];\n    let mml = this.create('node', 'mtable', this.table, this.arraydef);\n    if (scriptlevel) {\n      mml.setProperty('scriptlevel', scriptlevel);\n    }\n    if (this.frame.length === 4) {\n      // @test Enclosed frame solid, Enclosed frame dashed\n      NodeUtil.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');\n    } else if (this.frame.length) {\n      // @test Enclosed left right\n      if (this.arraydef['rowlines']) {\n        // @test Enclosed dashed row, Enclosed solid row,\n        this.arraydef['rowlines'] =\n          (this.arraydef['rowlines'] as string).replace(/none( none)+$/, 'none');\n      }\n      // @test Enclosed left right\n      NodeUtil.setAttribute(mml, 'frame', '');\n      mml = this.create('node', 'menclose', [mml], {notation: this.frame.join(' ')});\n      if ((this.arraydef['columnlines'] || 'none') !== 'none' ||\n          (this.arraydef['rowlines'] || 'none') !== 'none') {\n        // @test Enclosed dashed row, Enclosed solid row\n        // @test Enclosed dashed column, Enclosed solid column\n        NodeUtil.setAttribute(mml, 'data-padding', 0);\n      }\n    }\n    if (this.getProperty('open') || this.getProperty('close')) {\n      // @test Cross Product Formula\n      mml = ParseUtil.fenced(this.factory.configuration,\n                             this.getProperty('open') as string, mml,\n                             this.getProperty('close') as string);\n    }\n    return mml;\n  }\n\n  /**\n   * Finishes a single cell of the array.\n   */\n  public EndEntry() {\n    // @test Array1, Array2\n    const mtd = this.create('node', 'mtd', this.nodes);\n    if (this.hfill.length) {\n      if (this.hfill[0] === 0) {\n        NodeUtil.setAttribute(mtd, 'columnalign', 'right');\n      }\n      if (this.hfill[this.hfill.length - 1] === this.Size()) {\n        NodeUtil.setAttribute(\n          mtd, 'columnalign',\n          NodeUtil.getAttribute(mtd, 'columnalign') ? 'center' : 'left');\n      }\n    }\n    this.row.push(mtd);\n    this.Clear();\n    this.hfill = [];\n  }\n\n\n  /**\n   * Finishes a single row of the array.\n   */\n  public EndRow() {\n    let node: MmlNode;\n    if (this.getProperty('isNumbered') && this.row.length === 3) {\n      // @test Label, Matrix Numbered\n      this.row.unshift(this.row.pop());  // move equation number to first\n      // position\n      node = this.create('node', 'mlabeledtr', this.row);\n    } else {\n      // @test Array1, Array2\n      node = this.create('node', 'mtr', this.row);\n    }\n    this.table.push(node);\n    this.row = [];\n  }\n\n\n  /**\n   * Finishes the table layout.\n   */\n  public EndTable() {\n    if (this.Size() || this.row.length) {\n      this.EndEntry();\n      this.EndRow();\n    }\n    this.checkLines();\n  }\n\n\n  /**\n   * Finishes line layout if not already given.\n   */\n  public checkLines() {\n    if (this.arraydef['rowlines']) {\n      const lines = (this.arraydef['rowlines'] as string).split(/ /);\n      if (lines.length === this.table.length) {\n        this.frame.push('bottom');\n        lines.pop();\n        this.arraydef['rowlines'] = lines.join(' ');\n      } else if (lines.length < this.table.length - 1) {\n        this.arraydef['rowlines'] += ' none';\n      }\n    }\n    if (this.getProperty('rowspacing')) {\n      const rows = (this.arraydef['rowspacing'] as string).split(/ /);\n      while (rows.length < this.table.length) {\n        rows.push(this.getProperty('rowspacing') + 'em');\n      }\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  }\n\n  /**\n   * Adds a row-spacing to the current row (padding out the rowspacing if needed to get there).\n   *\n   * @param {string} spacing   The rowspacing to use for the current row.\n   */\n  public addRowSpacing(spacing: string) {\n    if (this.arraydef['rowspacing']) {\n      const rows = (this.arraydef['rowspacing'] as string).split(/ /);\n      if (!this.getProperty('rowspacing')) {\n        // @test Array Custom Linebreak\n        let dimem = ParseUtil.dimen2em(rows[0]);\n        this.setProperty('rowspacing', dimem);\n      }\n      const rowspacing = this.getProperty('rowspacing') as number;\n      while (rows.length < this.table.length) {\n        rows.push(ParseUtil.Em(rowspacing));\n      }\n      rows[this.table.length - 1] = ParseUtil.Em(\n        Math.max(0, rowspacing + ParseUtil.dimen2em(spacing)));\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  }\n\n}\n\n\n/**\n * Item dealing with equation arrays as a special case of arrays. Handles\n * tagging information according to the given tagging style.\n */\nexport class EqnArrayItem extends ArrayItem {\n\n  /**\n   * The length of the longest row.\n   */\n  public maxrow: number = 0;\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start(args[0], args[2], args[1]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'eqnarray';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    // @test Cubic Binomial\n    if (this.row.length) {\n      ParseUtil.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    const node = this.create('node', 'mtd', this.nodes);\n    this.row.push(node);\n    this.Clear();\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    // @test Cubic Binomial\n    let mtr = 'mtr';\n    let tag = this.factory.configuration.tags.getTag();\n    if (tag) {\n      this.row = [tag].concat(this.row);\n      mtr = 'mlabeledtr';\n    }\n    this.factory.configuration.tags.clearTag();\n    const node = this.create('node', mtr, this.row);\n    this.table.push(node);\n    this.row = [];\n  }\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    // @test Cubic Binomial\n    super.EndTable();\n    this.factory.configuration.tags.end();\n    //\n    // Repeat the column align and width specifications\n    //   to match the number of columns\n    //\n    this.extendArray('columnalign', this.maxrow);\n    this.extendArray('columnwidth', this.maxrow);\n    this.extendArray('columnspacing', this.maxrow - 1);\n  }\n\n  /**\n   * Extend a column specification to include a repeating set of values\n   *   so that it has enough to match the maximum row length.\n   */\n  protected extendArray(name: string, max: number) {\n    if (!this.arraydef[name]) return;\n    const repeat = (this.arraydef[name] as string).split(/ /);\n    const columns = [...repeat];\n    if (columns.length > 1) {\n      while (columns.length < max) {\n        columns.push(...repeat);\n      }\n      this.arraydef[name] = columns.slice(0, max).join(' ');\n    }\n  }\n}\n\n\n/**\n * Item dealing with simple equation environments.  Handles tagging information\n * according to the given tagging style.\n */\nexport class EquationItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start('equation', true, args[0]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'equation';\n  }\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      let mml = this.toMml();\n      let tag = this.factory.configuration.tags.getTag();\n      this.factory.configuration.tags.end();\n      return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];\n    }\n    if (item.isKind('stop')) {\n      // @test EnvMissingEnd Equation\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return super.checkItem(item);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,8CAA4C;AAE5C,IAAA,qDAAmD;AACnD,IAAA,2DAA6E;AAE7E,IAAA,gBAAA,2CAAsC;AACtC,IAAA,iBAAA,4CAAwC;AACxC,IAAA,gBAAA,2CAAsC;AAGtC,IAAA,4CAAwE;AAMxE,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAKrC,SAAA,UAAY,OAAyB,EAAS,MAAe;QAA7D,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CACf;QAF6C,MAAA,MAAM,GAAN,MAAM,CAAS;;IAE7D,CAAC;IAMD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACxB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;aACjE;YACD,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACnD;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AAvCD,CAA+B,eAAA,QAAQ,GAuCtC;AAvCY,QAAA,SAAA,GAAA,UAAS;AA8CtB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAAtC,SAAA;;IAiBA,CAAC;IAZC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,QAAC;AAAD,CAAC,AAjBD,CAA8B,eAAA,QAAQ,GAiBrC;AAjBY,QAAA,QAAA,GAAA,SAAQ;AAuBrB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAAtC,SAAA;;IAuCA,CAAC;IAxBC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,SAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YAExB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAAC,GAAG;aAAC,CAAC,CAAC;YACnD,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACnD;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAhCgB,SAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAA,QAAQ,CAAC,MAAM,CAAC,EAAE;QAEtE,MAAM,EAAE;YAAC,uBAAuB;YACvB,yCAAyC;SAAC;KACpD,CAAC,CAAC;IA6BL,OAAA,QAAC;CAAA,AAvCD,CAA8B,eAAA,QAAQ,GAuCrC;AAvCY,QAAA,QAAA,GAAA,SAAQ;AA6CrB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;;IAiBA,CAAC;IAZC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,SAAC;AAAD,CAAC,AAjBD,CAA+B,eAAA,QAAQ,GAiBtC;AAjBY,QAAA,SAAA,GAAA,UAAS;AAuBtB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;;IAsBA,CAAC;IAjBC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC1B,IAAA,KAAA,OAAe,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAA,EAAA,EAA1B,IAAI,GAAA,EAAA,CAAA,EAAA,EAAE,IAAI,GAAA,EAAA,CAAA,EAAgB,CAAC;QAChC,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;YAEtE,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;gBAAC,IAAI;gBAAE,IAAI;aAAC,CAAC,CAAC;YACvD,OAAO;gBAAC;oBAAC,IAAI;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAC7B;QACD,cAAA,OAAQ,CAAC,QAAQ,CAAC,IAAI,EAAG,IAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACxD,OAAO;YAAC;gBAAC,IAAI;gBAAE,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IAC9B,CAAC;IACH,OAAA,SAAC;AAAD,CAAC,AAtBD,CAA+B,eAAA,QAAQ,GAsBtC;AAtBY,QAAA,SAAA,GAAA,UAAS;AA6BtB,IAAA,aAAA,SAAA,MAAA;IAAgC,UAAA,YAAA,QAAQ;IAAxC,SAAA;;IA6DA,CAAC;IAzCC,OAAA,cAAA,CAAW,WAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAKM,WAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAC9C,OAAO,eAAA,QAAQ,CAAC,OAAO,CAAC;SACzB;QACD,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAW,CAAC;QACxD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;gBAC9B,IAAI,QAAQ,KAAK,CAAC,EAAE;oBAElB,cAAA,OAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAY,CAAC,CAAC;iBAClE,MAAM;oBAEL,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAY,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;oBACjF,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;wBAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAY;wBAAE,IAAI,CAAC,KAAK;qBAAC,CAAC,CAAC;oBAC9F,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;iBACnB;aACF;YACD,cAAA,OAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBAE1C,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAa,CAAC,CAAC;aACrF;YACD,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC/C,OAAO;gBAAC;oBAAC,MAAM;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACzB;QACD,IAAI,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YAE5B,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;gBAAC,EAAE;gBAAE,KAAK;gBAAE,KAAK;aAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,MAAA,IAAA,CAAU,cAAA,OAAQ,CAAA,IAAA,CAAA,KAAA,CAAR,cAAA,OAAQ,EAAA,cAAA;gBAAA,KAAA;gBAAC,KAAK,CAAC,CAAC,CAAC;gBAAE,KAAK,CAAC,CAAC,CAAC;aAAA,EAAA,OAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAA,OAAA,IAAE;SAC5D;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAtDgB,WAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAA,QAAQ,CAAC,MAAM,CAAC,EAAE;QAEtE,MAAM,EAAE;YAAC,eAAe;YACf,2CAA2C;SAAC;QAErD,KAAK,EAAE;YAAC,mBAAmB;YACnB,oCAAoC;SAAC;QAE7C,KAAK,EAAE;YAAC,mBAAmB;YACnB,kCAAkC;SAAC;KAC5C,CAAC,CAAC;IA8CL,OAAA,UAAC;CAAA,AA7DD,CAAgC,eAAA,QAAQ,GA6DvC;AA7DY,QAAA,UAAA,GAAA,WAAU;AAmEvB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAKpC,SAAA,SAAY,OAAyB;QAArC,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAEf;QADC,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;IACrC,CAAC;IAKD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAMM,SAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAEvB,MAAM,IAAI,cAAA,OAAQ,CAChB,gBAAgB,EAAE,qBAAqB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC5D;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAEhB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EACN,OAAO,EAAE;gBAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAY;gBAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aAAC,CAAC,CAAC;YACxF,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;gBAEzC,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAW,CAAC,CAAC;aAChE;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;gBAEzD,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;gBAC9C,GAAG,GAAG,eAAA,OAAS,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAW,EAAE,GAAG,EACvC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,CAAC,CAAC;aACjE;YACD,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACxD;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAMM,SAAA,SAAA,CAAA,QAAQ,GAAf;QACE,OAAO,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GACtC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;IACxC,CAAC;IAEH,OAAA,QAAC;AAAD,CAAC,AAjED,CAA8B,eAAA,QAAQ,GAiErC;AAjEY,QAAA,QAAA,GAAA,SAAQ;AAuErB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAepC,SAAA,SAAY,OAAyB,EAAE,KAAa;QAApD,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAEf;QADC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;IACnC,CAAC;IAKD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAMM,SAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAE9B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YAIxB,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,eAAA,OAAS,CAAC,MAAM,CAClD,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,EAAE,IAAI,CAAC,KAAK,EAAE,EACjD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,CAAC,CAAC;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAC1F;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAIzB,IAAM,GAAG,GAAG;gBAAC,QAAQ,EAAE,IAAI;YAAA,CAAQ,CAAC;YACpC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;gBAC7B,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,IAAI,CACP,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE;gBAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,KAAK;YAAA,CAAC,CAAC,EAC9D,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAC1D,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE;gBAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,IAAI;YAAA,CAAC,CAAC,CAC9D,CAAC;YACF,IAAI,CAAC,GAAG,GAAG,CAAA,CAAE,CAAC;YACd,OAAO;gBAAC;oBAAC,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACvB;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IA9DgB,SAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAA,QAAQ,CAAC,MAAM,CAAC,EAAE;QAEtE,MAAM,EAAE;YAAC,uBAAuB;YACvB,iCAAiC;SAAC;KAC5C,CAAC,CAAC;IA4DL,OAAA,QAAC;CAAA,AArED,CAA8B,eAAA,QAAQ,GAqErC;AArEY,QAAA,QAAA,GAAA,SAAQ;AA2ErB,IAAA,SAAA,SAAA,MAAA;IAA4B,UAAA,QAAA,QAAQ;IAKlC,SAAA,OAAY,OAAyB,EAAE,KAAa,EAAE,KAAa;QAAnE,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAGf;QAFC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACjC,KAAK,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;IAC5C,CAAC;IAKD,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,OAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,MAAC;AAAD,CAAC,AA1BD,CAA4B,eAAA,QAAQ,GA0BnC;AA1BY,QAAA,MAAA,GAAA,OAAM;AAgCnB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAKrC,SAAA,UAAY,OAAyB,EAAE,KAAa,EAAE,KAAa;QAAnE,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAGf;QAFC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACjC,KAAK,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;IAC5C,CAAC;IAKD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,SAAC;AAAD,CAAC,AA1BD,CAA+B,eAAA,QAAQ,GA0BtC;AA1BY,QAAA,SAAA,GAAA,UAAS;AAgCtB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;;IAwCA,CAAC;IAnCC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,EAAE;gBAErC,MAAM,IAAI,cAAA,OAAQ,CAAC,WAAW,EAAE,kCAAkC,EAC/C,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;gBAE5B,OAAO;oBAAC;wBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;qBAAC;oBAAE,IAAI;iBAAC,CAAC;aAC3D;YACD,OAAO,eAAA,QAAQ,CAAC,IAAI,CAAC;SACtB;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAEvB,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,mBAAmB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC1E;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AAxCD,CAA+B,eAAA,QAAQ,GAwCtC;AAxCY,QAAA,SAAA,GAAA,UAAS;AAgDtB,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAQ;IAArC,SAAA;;IAiBA,CAAC;IAZC,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,QAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,OAAC;AAAD,CAAC,AAjBD,CAA6B,eAAA,QAAQ,GAiBpC;AAjBY,QAAA,OAAA,GAAA,QAAO;AAuBpB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;;IAqBA,CAAC;IAhBC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;SAC9B;QAED,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClF,OAAO;YAAC;gBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;gBAAE,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IACzD,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AArBD,CAA+B,eAAA,QAAQ,GAqBtC;AArBY,QAAA,SAAA,GAAA,UAAS;AA2BtB,IAAA,eAAA,SAAA,MAAA;IAAkC,UAAA,cAAA,QAAQ;IAA1C,SAAA;;IAoCA,CAAC;IA/BC,OAAA,cAAA,CAAW,aAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAMM,aAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;YAEhB,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,oBAAoB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC3E;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,OAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;gBAClC,KAAK,UAAU;oBAEb,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;wBAAC,GAAG;qBAAC,EACxB;wBAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBAC9B,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBAC7B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBAAA,CAAC,CAAC,CAAC;oBACrD,OAAO;wBAAC;4BAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;yBAAC;wBAAE,IAAI;qBAAC,CAAC;gBACnD,KAAK,YAAY;oBAEf,OAAO;wBAAC;4BAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAY,CAAC;4BAAE,IAAI;4BACrE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY,CAAC;yBAAC;wBAAE,IAAI;qBAAC,CAAC;aACnF;SACF;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACH,OAAA,YAAC;AAAD,CAAC,AApCD,CAAkC,eAAA,QAAQ,GAoCzC;AApCY,QAAA,YAAA,GAAA,aAAY;AA0CzB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAAtC,SAAA;;IAgBA,CAAC;IAXC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IACH,OAAA,QAAC;AAAD,CAAC,AAhBD,CAA8B,eAAA,QAAQ,GAgBrC;AAhBY,QAAA,QAAA,GAAA,SAAQ;AAsBrB,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAQ;IAArC,SAAA;;IAgBA,CAAC;IAXC,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,SAAO,EAAA;aAAlB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAEH,OAAA,OAAC;AAAD,CAAC,AAhBD,CAA6B,eAAA,QAAQ,GAgBpC;AAhBY,QAAA,OAAA,GAAA,QAAO;AAsBpB,IAAA,SAAA,SAAA,MAAA;IAA4B,UAAA,QAAA,QAAQ;IAApC,SAAA;;IAkDA,CAAC;IA7CC,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,OAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,GAAG,EAAE;YACP,IAAI,IAAI,CAAC,MAAM,EAAE;gBAEf,OAAO,eAAA,QAAQ,CAAC,OAAO,CAAC;aACzB;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBAEtB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;oBAE/B,OAAO;wBAAC;4BAAC,GAAG;4BAAE,IAAI;yBAAC;wBAAE,IAAI;qBAAC,CAAC;iBAC5B;gBACD,IAAI,AAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,IACvD,cAAA,OAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAY,EAAE,QAAQ,CAAC,CAAC,GACtE,cAAA,OAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE;oBAEnC,OAAO;wBAAC;4BAAC,GAAG;4BAAE,IAAI;yBAAC;wBAAE,IAAI;qBAAC,CAAC;iBAC5B;gBACD,IAAI,cAAA,OAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;oBAE/B,GAAG,GAAG,cAAA,OAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;iBAC/B;gBACD,IAAM,IAAI,GAAG,cAAA,OAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,IAAI,IAAI,IAAI,IAAI;oBAAC,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;iBAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;oBAE3D,OAAO;wBAAC;4BAAC,GAAG;4BAAE,IAAI;yBAAC;wBAAE,IAAI;qBAAC,CAAC;iBAC5B;aACF;YAED,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;gBAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,IAAI;YAAA,CAAC,EACxC,cAAA,QAAQ,CAAC,aAAa,CAAC,CAAC;YACjD,OAAO;gBAAC;oBAAC,GAAG;oBAAE,IAAI;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAClC;QAED,OAAO,OAAA,SAAA,CAAM,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;IACH,OAAA,MAAC;AAAD,CAAC,AAlDD,CAA4B,eAAA,QAAQ,GAkDnC;AAlDY,QAAA,MAAA,GAAA,OAAM;AAyDnB,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAQ;IAArC,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAgDC;QA9CS,MAAA,KAAK,GAAG,gBAAA,UAAU,CAAC,MAAM,CAAC,WAAW,CAAiB,CAAC;;IA8CjE,CAAC;IAzCC,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAKM,QAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,GAAuB,CAAC;QAC5B,IAAI,CAAS,CAAC;QACd,IAAI,QAAkB,CAAC;QACvB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAE9C,OAAO,eAAA,QAAQ,CAAC,OAAO,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAClB,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IACtE,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE;YAC1C,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YACjB,CAAC,GAAG,cAAA,OAAQ,CAAC,OAAO,CAAC,GAAe,CAAC,CAAC;YACtC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,CAAC,IAC1D,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBAE1B,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAa,CAAC;oBACtE,cAAA,OAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;iBACrC,MAAM;oBAEL,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAa,CAAC;oBACrD,cAAA,OAAQ,CAAC,cAAc,CAAC,GAAG,EAAE;wBAAC,QAAQ;qBAAC,CAAC,CAAC;iBAC1C;gBACD,OAAO;oBAAC;wBAAC,IAAI;qBAAC;oBAAE,IAAI;iBAAC,CAAC;aACvB;SACF;QAED,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAa,CAAC;QACrD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,CAAA,CAAE,EAAE,QAAQ,CAAC,CAAC;QACjE,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,SAAS;SAAC,EAAE;YAAC,KAAK,EAAE,CAAC;QAAA,CAAC,CAAC,CAAC;QAC3E,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,UAAU;SAAC,EAAE;YAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,GAAG;QAAA,CAAC,CAAC,CAAC;QAC7E,OAAO;YAAC;gBAAC,GAAG;gBAAE,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IAC7B,CAAC;IACH,OAAA,OAAC;AAAD,CAAC,AAhDD,CAA6B,eAAA,QAAQ,GAgDpC;AAhDY,QAAA,OAAA,GAAA,QAAO;AAqDpB,IAAA,gBAAA,SAAA,MAAA;IAAmC,UAAA,eAAA,QAAQ;IAA3C,SAAA;;IA2CA,CAAC;IAtCC,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,WAAW,CAAC;QACrB,CAAC;;;OAAA;IAKM,cAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAI9B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YAKrB,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,SAAS,EAAE;gBACzC,GAAG,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7D;YACD,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;gBAMxB,IAAI,GAAG,KAAK,IAAI,CAAC,KAAK,EAAE;oBACtB,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;wBAAC,IAAI,CAAC,GAAG,EAAE;qBAAC,CAAC,CAAC;oBACvD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB;gBAID,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7D;SACF;QACD,OAAO;YAAC;gBAAC,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IACxB,CAAC;IACH,OAAA,aAAC;AAAD,CAAC,AA3CD,CAAmC,eAAA,QAAQ,GA2C1C;AA3CY,QAAA,aAAA,GAAA,cAAa;AAgD1B,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAAtC,SAAA;;IA2BA,CAAC;IAtBC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAKM,SAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAC9C,OAAO,eAAA,QAAQ,CAAC,OAAO,CAAC;SACzB;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY,CAAC;QAChD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QAErB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,cAAA,OAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;YACrD,IAAM,MAAM,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,cAAA,OAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7D,IAAI,MAAM,KAAK,aAAA,QAAQ,CAAC,GAAG,IAAI,MAAM,KAAK,aAAA,QAAQ,CAAC,GAAG,EAAE;gBACtD,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY,CAAC;aAC7C;SACF;QACD,OAAO;YAAC;gBAAC,IAAI;gBAAE,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IAC9B,CAAC;IACH,OAAA,QAAC;AAAD,CAAC,AA3BD,CAA8B,eAAA,QAAQ,GA2BrC;AA3BY,QAAA,QAAA,GAAA,SAAQ;AAkCrB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CA6OC;QAvOQ,MAAA,KAAK,GAAc,EAAE,CAAC;QAMtB,MAAA,GAAG,GAAc,EAAE,CAAC;QAMpB,MAAA,KAAK,GAAa,EAAE,CAAC;QAMrB,MAAA,KAAK,GAAa,EAAE,CAAC;QAMrB,MAAA,QAAQ,GAA+C,CAAA,CAAE,CAAC;QAM1D,MAAA,MAAM,GAAY,KAAK,CAAC;;IAyMjC,CAAC;IApMC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAE9B,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAExC,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;gBAE/B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,OAAO,eAAA,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;gBAE5B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,OAAO,eAAA,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YAC3D,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;gBAEpC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;oBAExB,OAAO;wBAAC;4BAAC,OAAO;yBAAC;wBAAE,IAAI;qBAAC,CAAC;iBAC1B;gBAED,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;aAChE;YACD,OAAO;gBAAC;oBAAC,OAAO;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAChC;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAOM,UAAA,SAAA,CAAA,SAAS,GAAhB;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnE,IAAI,WAAW,EAAE;YACf,GAAG,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;SAC7C;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAE3B,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SACvE,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAE5B,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBAE7B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAY,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;aAC1E;YAED,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;YACxC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;gBAAC,GAAG;aAAC,EAAE;gBAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;YAAA,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,KAAK,MAAM,IACnD,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,KAAK,MAAM,EAAE;gBAGpD,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;aAC/C;SACF;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAEzD,GAAG,GAAG,eAAA,OAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAW,EAAE,GAAG,EACvC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,CAAC,CAAC;SAC7D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAKM,UAAA,SAAA,CAAA,QAAQ,GAAf;QAEE,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACrB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBACvB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;aACpD;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;gBACrD,cAAA,OAAQ,CAAC,YAAY,CACnB,GAAG,EAAE,aAAa,EAClB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;aAClE;SACF;QACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAMM,UAAA,SAAA,CAAA,MAAM,GAAb;QACE,IAAI,IAAa,CAAC;QAClB,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YAE3D,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;YAEjC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SACpD,MAAM;YAEL,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAMM,UAAA,SAAA,CAAA,QAAQ,GAAf;QACE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAMM,UAAA,SAAA,CAAA,UAAU,GAAjB;QACE,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC7B,IAAM,KAAK,GAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC/D,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1B,KAAK,CAAC,GAAG,EAAE,CAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC7C,MAAM,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC;aACtC;SACF;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;YAClC,IAAM,IAAI,GAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChE,MAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9C;IACH,CAAC;IAOM,UAAA,SAAA,CAAA,aAAa,GAApB,SAAqB,OAAe;QAClC,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YAC/B,IAAM,IAAI,GAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;gBAEnC,IAAI,KAAK,GAAG,eAAA,OAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;aACvC;YACD,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAW,CAAC;YAC5D,MAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,eAAA,OAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,eAAA,OAAS,CAAC,EAAE,CACxC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,GAAG,eAAA,OAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9C;IACH,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AA7OD,CAA+B,eAAA,QAAQ,GA6OtC;AA7OY,QAAA,SAAA,GAAA,UAAS;AAoPtB,IAAA,eAAA,SAAA,MAAA;IAAkC,UAAA,cAAA,QAAS;IAUzC,SAAA,aAAY,OAAY;QAAE,IAAA,OAAA,EAAA,CAAc;YAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;YAAd,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;QAAxC,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAEf;QARM,MAAA,MAAM,GAAW,CAAC,CAAC;QAOxB,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;IACnE,CAAC;IAMD,OAAA,cAAA,CAAI,aAAA,SAAA,EAAA,MAAI,EAAA;aAAR;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAMM,aAAA,SAAA,CAAA,QAAQ,GAAf;QAEE,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YACnB,eAAA,OAAS,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAChE;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAKM,aAAA,SAAA,CAAA,MAAM,GAAb;QACE,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;YACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;SAC/B;QAED,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACnD,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,GAAG,GAAG;gBAAC,GAAG;aAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,GAAG,GAAG,YAAY,CAAC;SACpB;QACD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAKM,aAAA,SAAA,CAAA,QAAQ,GAAf;QAEE,OAAA,SAAA,CAAM,QAAQ,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAKtC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACrD,CAAC;IAMS,aAAA,SAAA,CAAA,WAAW,GAArB,SAAsB,IAAY,EAAE,GAAW;QAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO;QACjC,IAAM,MAAM,GAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1D,IAAM,OAAO,GAAA,cAAA,EAAA,EAAA,OAAO,MAAM,GAAA,MAAC,CAAC;QAC5B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,MAAO,OAAO,CAAC,MAAM,GAAG,GAAG,CAAE;gBAC3B,OAAO,CAAC,IAAI,CAAA,KAAA,CAAZ,OAAO,EAAA,cAAA,EAAA,EAAA,OAAS,MAAM,GAAA,QAAE;aACzB;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvD;IACH,CAAC;IACH,OAAA,YAAC;AAAD,CAAC,AAxFD,CAAkC,SAAS,GAwF1C;AAxFY,QAAA,YAAA,GAAA,aAAY;AA+FzB,IAAA,eAAA,SAAA,MAAA;IAAkC,UAAA,cAAA,QAAQ;IAKxC,SAAA,aAAY,OAAY;QAAE,IAAA,OAAA,EAAA,CAAc;YAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;YAAd,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;QAAxC,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAEf;QADC,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;IACnE,CAAC;IAMD,OAAA,cAAA,CAAI,aAAA,SAAA,EAAA,MAAI,EAAA;aAAR;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAI,aAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,aAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACtC,OAAO;gBAAC;oBAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACpF;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAEvB,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,mBAAmB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC1E;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEH,OAAA,YAAC;AAAD,CAAC,AA1CD,CAAkC,eAAA,QAAQ,GA0CzC;AA1CY,QAAA,YAAA,GAAA,aAAY","ignoreList":[0]}},
    {"offset": {"line": 5125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5130, "column": 0}, "map": {"version":3,"file":"TexConstants.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/TexConstants.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Constant definitions for the TeX Parser. These should\n *     eventually be combined with the MathML structure.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nexport namespace TexConstant {\n\n  export const Variant = {\n    NORMAL: 'normal',\n    BOLD: 'bold',\n    ITALIC: 'italic',\n    BOLDITALIC: 'bold-italic',\n    DOUBLESTRUCK: 'double-struck',\n    FRAKTUR: 'fraktur',\n    BOLDFRAKTUR: 'bold-fraktur',\n    SCRIPT: 'script',\n    BOLDSCRIPT: 'bold-script',\n    SANSSERIF: 'sans-serif',\n    BOLDSANSSERIF: 'bold-sans-serif',\n    SANSSERIFITALIC: 'sans-serif-italic',\n    SANSSERIFBOLDITALIC: 'sans-serif-bold-italic',\n    MONOSPACE: 'monospace',\n    INITIAL: 'inital',\n    TAILED: 'tailed',\n    LOOPED: 'looped',\n    STRETCHED: 'stretched',\n    CALLIGRAPHIC: '-tex-calligraphic',\n    BOLDCALLIGRAPHIC: '-tex-bold-calligraphic',\n    OLDSTYLE: '-tex-oldstyle',\n    BOLDOLDSTYLE: '-tex-bold-oldstyle',\n    MATHITALIC: '-tex-mathit'\n  };\n\n  export const Form = {\n    PREFIX: 'prefix',\n    INFIX: 'infix',\n    POSTFIX: 'postfix'\n  };\n\n  export const LineBreak = {\n    AUTO: 'auto',\n    NEWLINE: 'newline',\n    NOBREAK: 'nobreak',\n    GOODBREAK: 'goodbreak',\n    BADBREAK: 'badbreak'\n  };\n\n  export const LineBreakStyle = {\n    BEFORE: 'before',\n    AFTER: 'after',\n    DUPLICATE: 'duplicate',\n    INFIXLINBREAKSTYLE: 'infixlinebreakstyle'\n  };\n\n  export const IndentAlign = {\n    LEFT: 'left',\n    CENTER: 'center',\n    RIGHT: 'right',\n    AUTO: 'auto',\n    ID: 'id',\n    INDENTALIGN: 'indentalign'\n  };\n\n  export const IndentShift = {\n    INDENTSHIFT: 'indentshift'\n  };\n\n  export const LineThickness = {\n    THIN: 'thin',\n    MEDIUM: 'medium',\n    THICK: 'thick'\n  };\n\n  export const Notation = {\n    LONGDIV: 'longdiv',\n    ACTUARIAL: 'actuarial',\n    PHASORANGLE: 'phasorangle',\n    RADICAL: 'radical',\n    BOX: 'box',\n    ROUNDEDBOX: 'roundedbox',\n    CIRCLE: 'circle',\n    LEFT: 'left',\n    RIGHT: 'right',\n    TOP: 'top',\n    BOTTOM: 'bottom',\n    UPDIAGONALSTRIKE: 'updiagonalstrike',\n    DOWNDIAGONALSTRIKE: 'downdiagonalstrike',\n    VERTICALSTRIKE: 'verticalstrike',\n    HORIZONTALSTRIKE: 'horizontalstrike',\n    NORTHEASTARROW: 'northeastarrow',\n    MADRUWB: 'madruwb',\n    UPDIAGONALARROW: 'updiagonalarrow'\n  };\n\n  export const Align = {\n    TOP: 'top',\n    BOTTOM: 'bottom',\n    CENTER: 'center',\n    BASELINE: 'baseline',\n    AXIS: 'axis',\n    LEFT: 'left',\n    RIGHT: 'right'\n  };\n\n  export const Lines = {\n    NONE: 'none',\n    SOLID: 'solid',\n    DASHED: 'dashed'\n  };\n\n  export const Side = {\n    LEFT: 'left',\n    RIGHT: 'right',\n    LEFTOVERLAP: 'leftoverlap',\n    RIGHTOVERLAP: 'rightoverlap'\n  };\n\n  export const Width = {\n    AUTO: 'auto',\n    FIT: 'fit'\n  };\n\n  export const Actiontype = {\n    TOGGLE: 'toggle',\n    STATUSLINE: 'statusline',\n    TOOLTIP: 'tooltip',\n    INPUT: 'input'\n  };\n\n  export const Overflow = {\n    LINBREAK: 'linebreak',\n    SCROLL: 'scroll',\n    ELIDE: 'elide',\n    TRUNCATE: 'truncate',\n    SCALE: 'scale'\n  };\n\n  export const Unit = {\n    EM: 'em',\n    EX: 'ex',\n    PX: 'px',\n    IN: 'in',\n    CM: 'cm',\n    MM: 'mm',\n    PT: 'pt',\n    PC: 'pc'\n  };\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5269, "column": 0}, "map": {"version":3,"file":"BaseMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/base/BaseMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The Basic Parse methods.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport * as sitem from './BaseItems.js';\nimport {StackItem, EnvList} from '../StackItem.js';\nimport {Macro} from '../Symbol.js';\nimport {ParseMethod} from '../Types.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport {TexConstant} from '../TexConstants.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {MmlNode, TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMsubsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\nimport {MmlMunderover} from '../../../core/MmlTree/MmlNodes/munderover.js';\nimport {Label} from '../Tags.js';\nimport {em} from '../../../util/lengths.js';\nimport {entities} from '../../../util/Entities.js';\nimport {lookup} from '../../../util/Options.js';\n\n\n// Namespace\nlet BaseMethods: Record<string, ParseMethod> = {};\n\nconst P_HEIGHT = 1.2 / .85;   // cmex10 height plus depth over .85\nconst MmlTokenAllow: {[key: string]: number} = {\n  fontfamily: 1, fontsize: 1, fontweight: 1, fontstyle: 1,\n  color: 1, background: 1,\n  id: 1, 'class': 1, href: 1, style: 1\n};\n\n\n\n/**\n * Handle LaTeX tokens.\n */\n\n/**\n * Handle {\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Open = function(parser: TexParser, _c: string) {\n  // @test Identifier Font, Prime, Prime with subscript\n  parser.Push(parser.itemFactory.create('open'));\n};\n\n/**\n * Handle }\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Close = function(parser: TexParser, _c: string) {\n  // @test Identifier Font, Prime, Prime with subscript\n  parser.Push(parser.itemFactory.create('close'));\n};\n\n\n/**\n * Handle tilde and spaces.\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Tilde = function(parser: TexParser, _c: string) {\n  // @test Tilde, Tilde2\n  parser.Push(parser.create('token', 'mtext', {}, entities.nbsp));\n};\n\n/**\n * Handling space, by doing nothing.\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Space = function(_parser: TexParser, _c: string) {};\n\n/**\n * Handle ^\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Superscript = function(parser: TexParser, _c: string) {\n  if (parser.GetNext().match(/\\d/)) {\n    // don't treat numbers as a unit\n    parser.string = parser.string.substr(0, parser.i + 1) +\n      ' ' + parser.string.substr(parser.i + 1);\n  }\n  let primes: MmlNode;\n  let base: MmlNode | void;\n  const top = parser.stack.Top();\n  if (top.isKind('prime')) {\n    // @test Prime on Prime\n    [base, primes] = top.Peek(2);\n    parser.stack.Pop();\n  } else {\n    // @test Empty base2, Square, Cube\n    base = parser.stack.Prev();\n    if (!base) {\n      // @test Empty base\n      base = parser.create('token', 'mi', {}, '');\n    }\n  }\n  const movesupsub = NodeUtil.getProperty(base, 'movesupsub');\n  let position = NodeUtil.isType(base, 'msubsup') ? (base as MmlMsubsup).sup :\n    (base as MmlMunderover).over;\n  if ((NodeUtil.isType(base, 'msubsup') && !NodeUtil.isType(base, 'msup') &&\n       NodeUtil.getChildAt(base, (base as MmlMsubsup).sup)) ||\n      (NodeUtil.isType(base, 'munderover') && !NodeUtil.isType(base, 'mover') &&\n       NodeUtil.getChildAt(base, (base as MmlMunderover).over) &&\n       !NodeUtil.getProperty(base, 'subsupOK'))) {\n    // @test Double-super-error, Double-over-error\n    throw new TexError('DoubleExponent', 'Double exponent: use braces to clarify');\n  }\n  if (!NodeUtil.isType(base, 'msubsup') || NodeUtil.isType(base, 'msup')) {\n    if (movesupsub) {\n      // @test Move Superscript, Large Operator\n      if (!NodeUtil.isType(base, 'munderover') || NodeUtil.isType(base, 'mover') ||\n          NodeUtil.getChildAt(base, (base as MmlMunderover).over)) {\n        // @test Large Operator\n        base = parser.create('node', 'munderover', [base], {movesupsub: true});\n      }\n      position = (base as MmlMunderover).over;\n    } else {\n      // @test Empty base, Empty base2, Square, Cube\n      base = parser.create('node', 'msubsup', [base]);\n      position = (base as MmlMsubsup).sup;\n    }\n  }\n  parser.Push(\n    parser.itemFactory.create('subsup', base).setProperties({\n      position: position, primes: primes, movesupsub: movesupsub\n    }) );\n};\n\n\n/**\n * Handle _\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Subscript = function(parser: TexParser, _c: string) {\n  if (parser.GetNext().match(/\\d/)) {\n    // don't treat numbers as a unit\n    parser.string =\n      parser.string.substr(0, parser.i + 1) + ' ' +\n      parser.string.substr(parser.i + 1);\n  }\n  let primes, base;\n  const top = parser.stack.Top();\n  if (top.isKind('prime')) {\n    // @test Prime on Sub\n    [base, primes] = top.Peek(2);\n    parser.stack.Pop();\n  } else {\n    base = parser.stack.Prev();\n    if (!base) {\n      // @test Empty Base Index\n      base = parser.create('token', 'mi', {}, '');\n    }\n  }\n  const movesupsub = NodeUtil.getProperty(base, 'movesupsub');\n  let position = NodeUtil.isType(base, 'msubsup') ?\n    (base as MmlMsubsup).sub : (base as MmlMunderover).under;\n  if ((NodeUtil.isType(base, 'msubsup') && !NodeUtil.isType(base, 'msup') &&\n       NodeUtil.getChildAt(base, (base as MmlMsubsup).sub)) ||\n      (NodeUtil.isType(base, 'munderover') && !NodeUtil.isType(base, 'mover') &&\n       NodeUtil.getChildAt(base, (base as MmlMunderover).under) &&\n       !NodeUtil.getProperty(base, 'subsupOK'))) {\n    // @test Double-sub-error, Double-under-error\n    throw new TexError('DoubleSubscripts', 'Double subscripts: use braces to clarify');\n  }\n  if (!NodeUtil.isType(base, 'msubsup') || NodeUtil.isType(base, 'msup')) {\n    if (movesupsub) {\n      // @test Large Operator, Move Superscript\n      if (!NodeUtil.isType(base, 'munderover') || NodeUtil.isType(base, 'mover') ||\n          NodeUtil.getChildAt(base, (base as MmlMunderover).under)) {\n        // @test Move Superscript\n        base = parser.create('node', 'munderover', [base], {movesupsub: true});\n      }\n      position = (base as MmlMunderover).under;\n    } else {\n      // @test Empty Base Index, Empty Base Index2, Index\n      base = parser.create('node', 'msubsup', [base]);\n      position = (base as MmlMsubsup).sub;\n    }\n  }\n  parser.Push(\n    parser.itemFactory.create('subsup', base).setProperties({\n      position: position, primes: primes, movesupsub: movesupsub\n    }) );\n};\n\n\n/**\n * Handle '\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Prime = function(parser: TexParser, c: string) {\n  // @test Prime\n  let base = parser.stack.Prev();\n  if (!base) {\n    // @test PrimeSup, PrePrime, Prime on Sup\n    base = parser.create('node', 'mi');\n  }\n  if (NodeUtil.isType(base, 'msubsup') && !NodeUtil.isType(base, 'msup') &&\n      NodeUtil.getChildAt(base, (base as MmlMsubsup).sup)) {\n    // @test Double Prime Error\n    throw new TexError('DoubleExponentPrime',\n                        'Prime causes double exponent: use braces to clarify');\n  }\n  let sup = '';\n  parser.i--;\n  do {\n    // @test Prime, PrimeSup, Double Prime, PrePrime\n    sup += entities.prime; parser.i++, c = parser.GetNext();\n  } while (c === '\\'' || c === entities.rsquo);\n  sup = ['', '\\u2032', '\\u2033', '\\u2034', '\\u2057'][sup.length] || sup;\n  const node = parser.create('token', 'mo', {variantForm: true}, sup);\n  parser.Push(\n    parser.itemFactory.create('prime', base, node) );\n};\n\n\n/**\n * Handle comments\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Comment = function(parser: TexParser, _c: string) {\n  while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\\n') {\n    parser.i++;\n  }\n};\n\n\n/**\n * Handle hash marks outside of definitions\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Hash = function(_parser: TexParser, _c: string) {\n  // @test Hash Error\n  throw new TexError('CantUseHash1',\n                      'You can\\'t use \\'macro parameter character #\\' in math mode');\n};\n\n\n\n/**\n *\n * Handle LaTeX Macros\n *\n */\n\n\n/**\n * Handle \\mathrm, \\mathbf, etc, allowing for multi-letter runs to be one <mi>.\n */\nBaseMethods.MathFont = function(parser: TexParser, name: string, variant: string) {\n  const text = parser.GetArgument(name);\n  let mml = new TexParser(text, {\n    ...parser.stack.env,\n    font: variant,\n    multiLetterIdentifiers: /^[a-zA-Z]+/ as any,\n    noAutoOP: true\n  }, parser.configuration).mml();\n  parser.Push(parser.create('node', 'TeXAtom', [mml]));\n};\n\n/**\n * Setting font, e.g., via \\\\rm, \\\\bf etc.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} font The font name.\n */\nBaseMethods.SetFont = function(parser: TexParser, _name: string, font: string) {\n  parser.stack.env['font'] = font;\n};\n\n/**\n * Setting style, e.g., via \\\\displaystyle, \\\\textstyle, etc.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} texStyle The tex style name: D, T, S, SS\n * @param {boolean} style True if we are in displaystyle.\n * @param {string} level The nesting level for scripts.\n */\nBaseMethods.SetStyle = function(parser: TexParser, _name: string,\n                                texStyle: string, style: boolean,\n                                level: string) {\n  parser.stack.env['style'] = texStyle;\n  parser.stack.env['level'] = level;\n  parser.Push(\n    parser.itemFactory.create('style').setProperty(\n      'styles', {displaystyle: style, scriptlevel: level}));\n};\n\n\n/**\n * Setting size of an expression, e.g., \\\\small, \\\\huge.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} size The size value.\n */\nBaseMethods.SetSize = function(parser: TexParser, _name: string, size: number) {\n  parser.stack.env['size'] = size;\n  parser.Push(\n    parser.itemFactory.create('style').setProperty('styles', {mathsize: em(size)}));\n};\n\n/**\n * Setting explicit spaces, e.g., via commata or colons.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} space The space value.\n */\nBaseMethods.Spacer = function(parser: TexParser, _name: string, space: number) {\n  // @test Positive Spacing, Negative Spacing\n  const node = parser.create('node', 'mspace', [], {width: em(space)});\n  const style = parser.create('node', 'mstyle', [node], {scriptlevel: 0});\n  parser.Push(style);\n};\n\n\n/**\n * Parses left/right fenced expressions.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.LeftRight = function(parser: TexParser, name: string) {\n  // @test Fenced, Fenced3\n  const first = name.substr(1);\n  parser.Push(parser.itemFactory.create(first, parser.GetDelimiter(name), parser.stack.env.color));\n};\n\n/**\n * Handle a named math function, e.g., \\\\sin, \\\\cos\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} id Alternative string representation of the function.\n */\nBaseMethods.NamedFn = function(parser: TexParser, name: string, id: string) {\n  // @test Named Function\n  if (!id) {\n    id = name.substr(1);\n  }\n  const mml = parser.create('token', 'mi', {texClass: TEXCLASS.OP}, id);\n  parser.Push(parser.itemFactory.create('fn', mml));\n};\n\n\n/**\n * Handle a named math operator, e.g., \\\\min, \\\\lim\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} id Alternative string representation of the operator.\n */\nBaseMethods.NamedOp = function(parser: TexParser, name: string, id: string) {\n  // @test Limit\n  if (!id) {\n    id = name.substr(1);\n  }\n  id = id.replace(/&thinsp;/, '\\u2006');\n  const mml = parser.create('token', 'mo', {\n    movablelimits: true,\n    movesupsub: true,\n    form: TexConstant.Form.PREFIX,\n    texClass: TEXCLASS.OP\n  }, id);\n  parser.Push(mml);\n};\n\n/**\n * Handle a limits command for math operators.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} limits The limits arguments.\n */\nBaseMethods.Limits = function(parser: TexParser, _name: string, limits: string) {\n  // @test Limits\n  let op = parser.stack.Prev(true);\n  // Get the texclass for the core operator.\n  if (!op || (NodeUtil.getTexClass(NodeUtil.getCoreMO(op)) !== TEXCLASS.OP &&\n              NodeUtil.getProperty(op, 'movesupsub') == null)) {\n    // @test Limits Error\n    throw new TexError('MisplacedLimits', '%1 is allowed only on operators', parser.currentCS);\n  }\n  const top = parser.stack.Top();\n  let node;\n  if (NodeUtil.isType(op, 'munderover') && !limits) {\n    // @test Limits UnderOver\n    node = parser.create('node', 'msubsup');\n    NodeUtil.copyChildren(op, node);\n    op = top.Last = node;\n  } else if (NodeUtil.isType(op, 'msubsup') && limits) {\n    // @test Limits SubSup\n    // node = parser.create('node', 'munderover', NodeUtil.getChildren(op), {});\n    // Needs to be copied, otherwise we get an error in MmlNode.appendChild!\n    node = parser.create('node', 'munderover');\n    NodeUtil.copyChildren(op, node);\n    op = top.Last = node;\n  }\n  NodeUtil.setProperty(op, 'movesupsub', limits ? true : false);\n  NodeUtil.setProperties(NodeUtil.getCoreMO(op), {'movablelimits': false});\n  if (NodeUtil.getAttribute(op, 'movablelimits') ||\n      NodeUtil.getProperty(op, 'movablelimits')) {\n    NodeUtil.setProperties(op, {'movablelimits': false});\n  }\n};\n\n\n/**\n * Handle over commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} open The open delimiter in case of a \"withdelim\" version.\n * @param {string} close The close delimiter.\n */\nBaseMethods.Over = function(parser: TexParser, name: string, open: string, close: string) {\n  // @test Over\n  const mml = parser.itemFactory.create('over').setProperty('name', parser.currentCS) ;\n  if (open || close) {\n    // @test Choose\n    mml.setProperty('open', open);\n    mml.setProperty('close', close);\n  } else if (name.match(/withdelims$/)) {\n    // @test Over With Delims, Above With Delims\n    mml.setProperty('open', parser.GetDelimiter(name));\n    mml.setProperty('close', parser.GetDelimiter(name));\n  }\n  if (name.match(/^\\\\above/)) {\n    // @test Above, Above With Delims\n    mml.setProperty('thickness', parser.GetDimen(name));\n  }\n  else if (name.match(/^\\\\atop/) || open || close) {\n    // @test Choose\n    mml.setProperty('thickness', 0);\n  }\n  parser.Push(mml);\n};\n\n/**\n * Parses a fraction.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Frac = function(parser: TexParser, name: string) {\n  // @test Frac\n  const num = parser.ParseArg(name);\n  const den = parser.ParseArg(name);\n  const node = parser.create('node', 'mfrac', [num, den]);\n  parser.Push(node);\n};\n\n/**\n * Parses a square root element.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Sqrt = function(parser: TexParser, name: string) {\n  const n = parser.GetBrackets(name);\n  let arg = parser.GetArgument(name);\n  if (arg === '\\\\frac') {\n    arg  += '{' + parser.GetArgument(arg) + '}{' + parser.GetArgument(arg) + '}';\n  }\n  let mml = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n  if (!n) {\n    // @test Square Root\n    mml = parser.create('node', 'msqrt', [mml]);\n  } else {\n    // @test General Root\n    mml = parser.create('node', 'mroot', [mml, parseRoot(parser, n)]);\n  }\n  parser.Push(mml);\n};\n\n\n// Utility\n/**\n * Parse a general root.\n * @param {TexParser} parser The calling parser.\n * @param {string} n The index of the root.\n */\nfunction parseRoot(parser: TexParser, n: string) {\n  // @test General Root, Explicit Root\n  const env = parser.stack.env;\n  const inRoot = env['inRoot'];\n  env['inRoot'] = true;\n  const newParser = new TexParser(n, env, parser.configuration);\n  let node = newParser.mml();\n  const global = newParser.stack.global;\n  if (global['leftRoot'] || global['upRoot']) {\n    // @test Tweaked Root\n    const def: EnvList = {};\n    if (global['leftRoot']) {\n      def['width'] = global['leftRoot'];\n    }\n    if (global['upRoot']) {\n      def['voffset'] = global['upRoot'];\n      def['height'] = global['upRoot'];\n    }\n    node = parser.create('node', 'mpadded', [node], def);\n  }\n  env['inRoot'] = inRoot;\n  return node;\n}\n\n\n/**\n * Parse a general root.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Root = function(parser: TexParser, name: string) {\n  const n = parser.GetUpTo(name, '\\\\of');\n  const arg = parser.ParseArg(name);\n  const node = parser.create('node', 'mroot', [arg, parseRoot(parser, n)]);\n  parser.Push(node);\n};\n\n\n/**\n * Parses a movable index element in a root, e.g. \\\\uproot, \\\\leftroot\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} id Argument which should be a string representation of an integer.\n */\nBaseMethods.MoveRoot = function(parser: TexParser, name: string, id: string) {\n  // @test Tweaked Root\n  if (!parser.stack.env['inRoot']) {\n    // @test Misplaced Move Root\n    throw new TexError('MisplacedMoveRoot', '%1 can appear only within a root', parser.currentCS);\n  }\n  if (parser.stack.global[id]) {\n    // @test Multiple Move Root\n    throw new TexError('MultipleMoveRoot', 'Multiple use of %1', parser.currentCS);\n  }\n  let n = parser.GetArgument(name);\n  if (!n.match(/-?[0-9]+/)) {\n    // @test Incorrect Move Root\n    throw new TexError('IntegerArg', 'The argument to %1 must be an integer', parser.currentCS);\n  }\n  n = (parseInt(n, 10) / 15) + 'em';\n  if (n.substr(0, 1) !== '-') {\n    n = '+' + n;\n  }\n  parser.stack.global[id] = n;\n};\n\n\n/**\n * Handle accents.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} accent The accent.\n * @param {boolean} stretchy True if accent is stretchy.\n */\nBaseMethods.Accent = function(parser: TexParser, name: string, accent: string, stretchy: boolean) {\n  // @test Vector\n  const c = parser.ParseArg(name);\n  // @test Vector Font\n  const def = {...ParseUtil.getFontDef(parser), accent: true, mathaccent: true};\n  const entity = NodeUtil.createEntity(accent);\n  const moNode = parser.create('token', 'mo', def, entity);\n  const mml = moNode;\n  NodeUtil.setAttribute(mml, 'stretchy', stretchy ? true : false);\n  // @test Vector Op, Vector\n  const mo = (NodeUtil.isEmbellished(c) ? NodeUtil.getCoreMO(c) : c);\n  if (NodeUtil.isType(mo, 'mo') || NodeUtil.getProperty(mo, 'movablelimits')) {\n    // @test Vector Op\n    NodeUtil.setProperties(mo, {'movablelimits': false});\n  }\n  const muoNode = parser.create('node', 'munderover');\n  // This is necessary to get the empty element into the children.\n  NodeUtil.setChild(muoNode, 0, c);\n  NodeUtil.setChild(muoNode, 1, null);\n  NodeUtil.setChild(muoNode, 2, mml);\n  let texAtom = parser.create('node', 'TeXAtom', [muoNode]);\n  parser.Push(texAtom);\n};\n\n\n/**\n * Handles stacked elements.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} c Character to stack.\n * @param {boolean} stack True if stacked operator.\n */\nBaseMethods.UnderOver = function(parser: TexParser, name: string, c: string, stack: boolean) {\n  const entity = NodeUtil.createEntity(c);\n  const mo = parser.create('token', 'mo', {stretchy: true, accent: true}, entity);\n  const pos = (name.charAt(1) === 'o' ? 'over' : 'under');\n  const base = parser.ParseArg(name);\n  parser.Push(ParseUtil.underOver(parser, base, mo, pos, stack));\n};\n\n\n/**\n * Handles overset.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Overset = function(parser: TexParser, name: string) {\n  // @test Overset\n  const top = parser.ParseArg(name);\n  const base = parser.ParseArg(name);\n  ParseUtil.checkMovableLimits(base);\n  if (top.isKind('mo')) {\n    NodeUtil.setAttribute(top, 'accent', false);\n  }\n  const node = parser.create('node', 'mover', [base, top]);\n  parser.Push(node);\n};\n\n\n/**\n * Handles underset.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Underset = function(parser: TexParser, name: string) {\n  // @test Underset\n  const bot = parser.ParseArg(name);\n  const base = parser.ParseArg(name);\n  ParseUtil.checkMovableLimits(base);\n  if (bot.isKind('mo')) {\n    NodeUtil.setAttribute(bot, 'accent', false);\n  }\n  const node = parser.create('node', 'munder', [base, bot], {accentunder: false});\n  parser.Push(node);\n};\n\n\n/**\n * Handles overunderset.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Overunderset = function(parser: TexParser, name: string) {\n  const top = parser.ParseArg(name);\n  const bot = parser.ParseArg(name);\n  const base = parser.ParseArg(name);\n  ParseUtil.checkMovableLimits(base);\n  if (top.isKind('mo')) {\n    NodeUtil.setAttribute(top, 'accent', false);\n  }\n  if (bot.isKind('mo')) {\n    NodeUtil.setAttribute(bot, 'accent', false);\n  }\n  const node = parser.create('node', 'munderover', [base, bot, top], {accent: false, accentunder: false});\n  parser.Push(node);\n};\n\n\n/**\n * Creates TeXAtom, when class of element is changed explicitly.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} mclass The new TeX class.\n */\nBaseMethods.TeXAtom = function(parser: TexParser, name: string, mclass: number) {\n  let def: EnvList = {texClass: mclass};\n  let mml: StackItem | MmlNode;\n  let node: MmlNode;\n  let parsed: MmlNode;\n  if (mclass === TEXCLASS.OP) {\n    def['movesupsub'] = def['movablelimits'] = true;\n    const arg = parser.GetArgument(name);\n    const match = arg.match(/^\\s*\\\\rm\\s+([a-zA-Z0-9 ]+)$/);\n    if (match) {\n      // @test Mathop\n      def['mathvariant'] = TexConstant.Variant.NORMAL;\n      node = parser.create('token', 'mi', def, match[1]);\n    } else {\n      // @test Mathop Cal\n      parsed = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n      node = parser.create('node', 'TeXAtom', [parsed], def);\n    }\n    mml = parser.itemFactory.create('fn', node);\n  } else {\n    // @test Mathrel\n    parsed = parser.ParseArg(name);\n    mml = parser.create('node', 'TeXAtom', [parsed], def);\n  }\n  parser.Push(mml);\n};\n\n\n/**\n * Creates mmltoken elements. Used in Macro substitutions.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.MmlToken = function(parser: TexParser, name: string) {\n  // @test Modulo\n  const kind = parser.GetArgument(name);\n  let attr = parser.GetBrackets(name, '').replace(/^\\s+/, '');\n  const text = parser.GetArgument(name);\n  const def: EnvList = {};\n  const keep: string[] = [];\n  let node: MmlNode;\n  try {\n    node = parser.create('node', kind);\n  } catch (e) {\n    node = null;\n  }\n  if (!node || !node.isToken) {\n    // @test Token Illegal Type, Token Wrong Type\n    throw new TexError('NotMathMLToken', '%1 is not a token element', kind);\n  }\n  while (attr !== '') {\n    const match = attr.match(/^([a-z]+)\\s*=\\s*('[^']*'|\"[^\"]*\"|[^ ,]*)\\s*,?\\s*/i);\n    if (!match) {\n      // @test Token Invalid Attribute\n      throw new TexError('InvalidMathMLAttr', 'Invalid MathML attribute: %1', attr);\n    }\n    if (!node.attributes.hasDefault(match[1]) && !MmlTokenAllow[match[1]]) {\n      // @test Token Unknown Attribute, Token Wrong Attribute\n      throw new TexError('UnknownAttrForElement',\n                          '%1 is not a recognized attribute for %2',\n                          match[1], kind);\n    }\n    let value: string | boolean = ParseUtil.MmlFilterAttribute(\n      parser, match[1], match[2].replace(/^(['\"])(.*)\\1$/, '$2'));\n    if (value) {\n      if (value.toLowerCase() === 'true') {\n        value = true;\n      }\n      else if (value.toLowerCase() === 'false') {\n        value = false;\n      }\n      def[match[1]] = value;\n      keep.push(match[1]);\n    }\n    attr = attr.substr(match[0].length);\n  }\n  if (keep.length) {\n    def['mjx-keep-attrs'] = keep.join(' ');\n  }\n  const textNode = parser.create('text', text);\n  node.appendChild(textNode);\n  NodeUtil.setProperties(node, def);\n  parser.Push(node);\n};\n\n\n/**\n * Handle strut.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Strut = function(parser: TexParser, _name: string) {\n  // @test Strut\n  const row = parser.create('node', 'mrow');\n  const padded = parser.create('node', 'mpadded', [row],\n                                                         {height: '8.6pt', depth: '3pt', width: 0});\n  parser.Push(padded);\n};\n\n/**\n * Handle phantom commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} v Vertical size.\n * @param {string} h Horizontal size.\n */\nBaseMethods.Phantom = function(parser: TexParser, name: string, v: string, h: string) {\n  // @test Phantom\n  let box = parser.create('node', 'mphantom', [parser.ParseArg(name)]);\n  if (v || h) {\n    // TEMP: Changes here\n    box = parser.create('node', 'mpadded', [box]);\n    if (h) {\n      // @test Horizontal Phantom\n      NodeUtil.setAttribute(box, 'height', 0);\n      NodeUtil.setAttribute(box, 'depth', 0);\n    }\n    if (v) {\n      // @test Vertical Phantom\n      NodeUtil.setAttribute(box, 'width', 0);\n    }\n  }\n  const atom = parser.create('node', 'TeXAtom', [box]);\n  parser.Push(atom);\n};\n\n/**\n * Handle smash.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Smash = function(parser: TexParser, name: string) {\n  // @test Smash, Smash Top, Smash Bottom\n  const bt = ParseUtil.trimSpaces(parser.GetBrackets(name, ''));\n  const smash = parser.create('node', 'mpadded', [parser.ParseArg(name)]);\n  // TEMP: Changes here:\n  switch (bt) {\n  case 'b': NodeUtil.setAttribute(smash, 'depth', 0); break;\n  case 't': NodeUtil.setAttribute(smash, 'height', 0); break;\n  default:\n    NodeUtil.setAttribute(smash, 'height', 0);\n    NodeUtil.setAttribute(smash, 'depth', 0);\n  }\n  const atom = parser.create('node', 'TeXAtom', [smash]);\n  parser.Push(atom);\n};\n\n/**\n * Handle rlap and llap commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Lap = function(parser: TexParser, name: string) {\n  // @test Llap, Rlap\n  const mml = parser.create('node', 'mpadded', [parser.ParseArg(name)], {width: 0});\n  if (name === '\\\\llap') {\n    // @test Llap\n    NodeUtil.setAttribute(mml, 'lspace', '-1width');\n  }\n  const atom = parser.create('node', 'TeXAtom', [mml]);\n  parser.Push(atom);\n};\n\n/**\n * Handle raise and lower commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.RaiseLower = function(parser: TexParser, name: string) {\n  // @test Raise, Lower, Raise Negative, Lower Negative\n  let h = parser.GetDimen(name);\n  let item =\n    parser.itemFactory.create('position').setProperties({name: parser.currentCS, move: 'vertical'}) ;\n  // TEMP: Changes here:\n  if (h.charAt(0) === '-') {\n    // @test Raise Negative, Lower Negative\n    h = h.slice(1);\n    name = name.substr(1) === 'raise' ? '\\\\lower' : '\\\\raise';\n  }\n  if (name === '\\\\lower') {\n    // @test Raise, Raise Negative\n    item.setProperty('dh', '-' + h);\n    item.setProperty('dd', '+' + h);\n  } else {\n    // @test Lower, Lower Negative\n    item.setProperty('dh', '+' + h);\n    item.setProperty('dd', '-' + h);\n  }\n  parser.Push(item);\n};\n\n\n/**\n * Handle moveleft, moveright commands\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.MoveLeftRight = function(parser: TexParser, name: string) {\n  // @test Move Left, Move Right, Move Left Negative, Move Right Negative\n  let h = parser.GetDimen(name);\n  let nh = (h.charAt(0) === '-' ? h.slice(1) : '-' + h);\n  if (name === '\\\\moveleft') {\n    let tmp = h;\n    h = nh;\n    nh = tmp;\n  }\n  parser.Push(\n    parser.itemFactory.create('position').setProperties({\n      name: parser.currentCS, move: 'horizontal',\n      left:  parser.create('node', 'mspace', [], {width: h}),\n      right: parser.create('node', 'mspace', [], {width: nh})}) );\n};\n\n\n/**\n * Handle horizontal spacing commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Hskip = function(parser: TexParser, name: string) {\n  // @test Modulo\n  const node = parser.create('node', 'mspace', [],\n                             {width: parser.GetDimen(name)});\n  parser.Push(node);\n};\n\n\n/**\n * Handle removal of spaces in script modes\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Nonscript = function(parser: TexParser, _name: string) {\n  parser.Push(parser.itemFactory.create('nonscript'));\n};\n\n\n/**\n * Handle Rule and Space command\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} style The style of the rule spacer.\n */\nBaseMethods.Rule = function(parser: TexParser, name: string, style: string) {\n  // @test Rule 3D, Space 3D\n  const w = parser.GetDimen(name),\n  h = parser.GetDimen(name),\n  d = parser.GetDimen(name);\n  let def: EnvList = {width: w, height: h, depth: d};\n  if (style !== 'blank') {\n    def['mathbackground'] = (parser.stack.env['color'] || 'black');\n  }\n  const node = parser.create('node', 'mspace', [], def);\n  parser.Push(node);\n};\n\n\n/**\n * Handle rule command.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.rule = function(parser: TexParser, name: string) {\n  // @test Rule 2D\n  const v = parser.GetBrackets(name),\n  w = parser.GetDimen(name),\n  h = parser.GetDimen(name);\n  let mml = parser.create('node', 'mspace', [], {\n    width: w, height: h,\n    mathbackground: (parser.stack.env['color'] || 'black') });\n  if (v) {\n    mml = parser.create('node', 'mpadded', [mml], {voffset: v});\n    if (v.match(/^\\-/)) {\n      NodeUtil.setAttribute(mml, 'height', v);\n      NodeUtil.setAttribute(mml, 'depth', '+' + v.substr(1));\n    } else {\n      NodeUtil.setAttribute(mml, 'height', '+' + v);\n    }\n  }\n  parser.Push(mml);\n};\n\n/**\n * Handle big command sequences, e.g., \\\\big, \\\\Bigg.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} mclass The TeX class of the element.\n * @param {number} size The em size.\n */\nBaseMethods.MakeBig = function(parser: TexParser, name: string, mclass: number, size: number) {\n  // @test Choose, Over With Delims, Above With Delims\n  size *= P_HEIGHT;\n  let sizeStr = String(size).replace(/(\\.\\d\\d\\d).+/, '$1') + 'em';\n  const delim = parser.GetDelimiter(name, true);\n  const mo = parser.create('token', 'mo', {\n    minsize: sizeStr, maxsize: sizeStr,\n    fence: true, stretchy: true, symmetric: true\n  }, delim);\n  const node = parser.create('node', 'TeXAtom', [mo], {texClass: mclass});\n  parser.Push(node);\n};\n\n\n/**\n * Handle buildrel command.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.BuildRel = function(parser: TexParser, name: string) {\n  // @test BuildRel, BuildRel Expression\n  const top = parser.ParseUpTo(name, '\\\\over');\n  const bot = parser.ParseArg(name);\n  const node = parser.create('node', 'munderover');\n  // This is necessary to get the empty element into the children.\n  NodeUtil.setChild(node, 0, bot);\n  NodeUtil.setChild(node, 1, null);\n  NodeUtil.setChild(node, 2, top);\n  const atom = parser.create('node', 'TeXAtom', [node], {texClass: TEXCLASS.REL});\n  parser.Push(atom);\n};\n\n\n/**\n * Handle horizontal boxes.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} style Box style.\n * @param {string} font The mathvariant to use\n */\nBaseMethods.HBox = function(parser: TexParser, name: string, style: string, font?: string) {\n  // @test Hbox\n  parser.PushAll(ParseUtil.internalMath(parser, parser.GetArgument(name), style, font));\n};\n\n/**\n * Handle framed boxes.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.FBox = function(parser: TexParser, name: string) {\n  // @test Fbox\n  const internal = ParseUtil.internalMath(parser, parser.GetArgument(name));\n  const node = parser.create('node', 'menclose', internal, {notation: 'box'});\n  parser.Push(node);\n};\n\n/**\n * Handle framed boxes with options.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.FrameBox = function(parser: TexParser, name: string) {\n  const width = parser.GetBrackets(name);\n  const pos = parser.GetBrackets(name) || 'c';\n  let mml = ParseUtil.internalMath(parser, parser.GetArgument(name));\n  if (width) {\n    mml = [parser.create('node', 'mpadded', mml, {\n      width,\n      'data-align': lookup(pos, {l: 'left', r: 'right'}, 'center')\n    })];\n  }\n  const node = parser.create('node', 'TeXAtom',\n                             [parser.create('node', 'menclose', mml, {notation: 'box'})],\n                             {texClass: TEXCLASS.ORD});\n  parser.Push(node);\n};\n\n\n/**\n * Handle \\\\not.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Not = function(parser: TexParser, _name: string) {\n  // @test Negation Simple, Negation Complex, Negation Explicit,\n  //       Negation Large\n  parser.Push(parser.itemFactory.create('not'));\n};\n\n\n/**\n * Handle dots.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Dots = function(parser: TexParser, _name: string) {\n  // @test Operator Dots\n  const ldotsEntity = NodeUtil.createEntity('2026');\n  const cdotsEntity = NodeUtil.createEntity('22EF');\n  const ldots = parser.create('token', 'mo', {stretchy: false}, ldotsEntity);\n  const cdots = parser.create('token', 'mo', {stretchy: false}, cdotsEntity);\n  parser.Push(\n    parser.itemFactory.create('dots').setProperties({\n      ldots: ldots,\n      cdots: cdots\n    }) );\n};\n\n\n/**\n * Handle small matrix environments.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} open Opening fence.\n * @param {string} close Closing fence.\n * @param {string} align Column alignment.\n * @param {string} spacing Column spacing.\n * @param {string} vspacing Row spacing.\n * @param {string} style Display or text style.\n * @param {boolean} cases Is it a cases environment.\n * @param {boolean} numbered Is it a numbered environment.\n */\nBaseMethods.Matrix = function(parser: TexParser, _name: string,\n                              open: string, close: string, align: string,\n                              spacing: string, vspacing: string, style: string,\n                              cases: boolean, numbered: boolean) {\n  const c = parser.GetNext();\n  if (c === '') {\n    // @test Matrix Error\n    throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n  }\n  if (c === '{') {\n    // @test Matrix Braces, Matrix Columns, Matrix Rows.\n    parser.i++;\n  } else {\n    // @test Matrix Arg\n    parser.string = c + '}' + parser.string.slice(parser.i + 1);\n    parser.i = 0;\n  }\n  // @test Matrix Braces, Matrix Columns, Matrix Rows.\n  const array = parser.itemFactory.create('array').setProperty('requireClose', true) as sitem.ArrayItem;\n  array.arraydef = {\n    rowspacing: (vspacing || '4pt'),\n    columnspacing: (spacing || '1em')\n  };\n  if (cases) {\n    // @test Matrix Cases\n    array.setProperty('isCases', true);\n  }\n  if (numbered) {\n    // @test Matrix Numbered\n    array.setProperty('isNumbered', true);\n    array.arraydef.side = numbered;\n  }\n  if (open || close) {\n    // @test Matrix Parens, Matrix Parens Subscript, Matrix Cases\n    array.setProperty('open', open);\n    array.setProperty('close', close);\n  }\n  if (style === 'D') {\n    // @test Matrix Numbered\n    array.arraydef.displaystyle = true;\n  }\n  if (align != null) {\n    // @test Matrix Cases, Matrix Numbered\n    array.arraydef.columnalign = align;\n  }\n  parser.Push(array);\n};\n\n\n/**\n * Handle array entry.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Entry = function(parser: TexParser, name: string) {\n  // @test Label, Array, Cross Product Formula\n  parser.Push(parser.itemFactory.create('cell').setProperties({isEntry: true, name: name}));\n  const top = parser.stack.Top();\n  const env = top.getProperty('casesEnv') as string;\n  const cases = top.getProperty('isCases');\n  if (!cases && !env) return;\n  //\n  //  Make second column be in \\text{...} (unless it is already\n  //  in a \\text{...}, for backward compatibility).\n  //\n  const str = parser.string;\n  let braces = 0, close = -1, i = parser.i, m = str.length;\n  const end = (env ? new RegExp(`^\\\\\\\\end\\\\s*\\\\{${env.replace(/\\*/, '\\\\*')}\\\\}`) : null);\n  //\n  //  Look through the string character by character...\n  //\n  while (i < m) {\n    const c = str.charAt(i);\n    if (c === '{') {\n      //\n      //  Increase the nested brace count and go on\n      //\n      braces++;\n      i++;\n    } else if (c === '}') {\n      //\n      //  If there are too many close braces, just end (we will get an\n      //    error message later when the rest of the string is parsed)\n      //  Otherwise\n      //    decrease the nested brace count,\n      //    if it is now zero and we haven't already marked the end of the\n      //      first brace group, record the position (use to check for \\text{} later)\n      //    go on to the next character.\n      //\n      if (braces === 0) {\n        m = 0;\n      } else {\n        braces--;\n        if (braces === 0 && close < 0) {\n          close = i - parser.i;\n        }\n        i++;\n      }\n    } else if (c === '&' && braces === 0) {\n      //\n      //  Extra alignment tabs are not allowed in cases\n      //\n      // @test ExtraAlignTab\n      throw new TexError('ExtraAlignTab', 'Extra alignment tab in \\\\cases text');\n    } else if (c === '\\\\') {\n      //\n      //  If the macro is \\cr or \\\\, end the search, otherwise skip the macro\n      //  (multi-letter names don't matter, as we will skip the rest of the\n      //   characters in the main loop)\n      //\n      const rest = str.substr(i);\n      if (rest.match(/^((\\\\cr)[^a-zA-Z]|\\\\\\\\)/) || (end && rest.match(end))) {\n        m = 0;\n      } else {\n        i += 2;\n      }\n    } else {\n      //\n      //  Go on to the next character\n      //\n      i++;\n    }\n  }\n  //\n  //  Check if the second column text is already in \\text{};\n  //  If not, process the second column as text and continue parsing from there,\n  //    (otherwise process the second column as normal, since it is in \\text{}\n  //\n  const text = str.substr(parser.i, i - parser.i);\n  if (!text.match(/^\\s*\\\\text[^a-zA-Z]/) || close !== text.replace(/\\s+$/, '').length - 1) {\n    const internal = ParseUtil.internalMath(parser, ParseUtil.trimSpaces(text), 0);\n    parser.PushAll(internal);\n    parser.i = i;\n  }\n};\n\n/**\n * Handle newline in array.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Cr = function(parser: TexParser, name: string) {\n  // @test Cr Linebreak, Misplaced Cr\n  parser.Push(\n    parser.itemFactory.create('cell').setProperties({isCR: true, name: name}));\n};\n\n\n/**\n * Handle newline outside array.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean} nobrackets Flag indicating if newline is followed by\n *     brackets.\n */\nBaseMethods.CrLaTeX = function(parser: TexParser, name: string, nobrackets: boolean = false) {\n  let n: string;\n  if (!nobrackets) {\n    // TODO: spaces before * and [ are not allowed in AMS environments like align, but\n    //       should be allowed in array and eqnarray.  This distinction should be honored here.\n    if (parser.string.charAt(parser.i) === '*') {  // The * controls page breaking, so ignore it\n      parser.i++;\n    }\n    if (parser.string.charAt(parser.i) === '[') {\n      let dim = parser.GetBrackets(name, '');\n      let [value, unit, ] = ParseUtil.matchDimen(dim);\n      // @test Custom Linebreak\n      if (dim && !value) {\n        // @test Dimension Error\n        throw new TexError('BracketMustBeDimension',\n                           'Bracket argument to %1 must be a dimension', parser.currentCS);\n      }\n      n = value + unit;\n    }\n  }\n  parser.Push(\n    parser.itemFactory.create('cell').setProperties({isCR: true, name: name, linebreak: true})\n  );\n  const top = parser.stack.Top();\n  let node: MmlNode;\n  if (top instanceof sitem.ArrayItem) {\n    // @test Array\n    if (n) {\n      top.addRowSpacing(n);\n    }\n  } else {\n    if (n) {\n      // @test Custom Linebreak\n      node = parser.create('node', 'mspace', [], {depth: n});\n      parser.Push(node);\n    }\n    // @test Linebreak\n    node = parser.create('node', 'mspace', [], {linebreak: TexConstant.LineBreak.NEWLINE});\n    parser.Push(node);\n  }\n};\n\n/**\n * Handle horizontal lines in arrays.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} style Style of the line. E.g., dashed.\n */\nBaseMethods.HLine = function(parser: TexParser, _name: string, style: string) {\n  if (style == null) {\n    style = 'solid';\n  }\n  const top = parser.stack.Top();\n  if (!(top instanceof sitem.ArrayItem) || top.Size()) {\n    // @test Misplaced hline\n    throw new TexError('Misplaced', 'Misplaced %1', parser.currentCS);\n  }\n  if (!top.table.length) {\n    // @test Enclosed top, Enclosed top bottom\n    top.frame.push('top');\n  } else {\n    // @test Enclosed bottom, Enclosed top bottom\n    const lines = (top.arraydef['rowlines'] ? (top.arraydef['rowlines'] as string).split(/ /) : []);\n    while (lines.length < top.table.length) {\n      lines.push('none');\n    }\n    lines[top.table.length - 1] = style;\n    top.arraydef['rowlines'] = lines.join(' ');\n  }\n};\n\n\n/**\n * Handle hfill commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.HFill = function(parser: TexParser, _name: string) {\n  const top = parser.stack.Top();\n  if (top instanceof sitem.ArrayItem) {\n    // @test Hfill\n    top.hfill.push(top.Size());\n  } else {\n    // @test UnsupportedHFill\n    throw new TexError('UnsupportedHFill', 'Unsupported use of %1', parser.currentCS);\n  }\n};\n\n\n/**\n *   LaTeX environments\n */\n\n/**\n * Handle begin and end environments. This is a macro method.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.BeginEnd = function(parser: TexParser, name: string) {\n  // @test Array1, Array2, Array Test\n  let env = parser.GetArgument(name);\n  if (env.match(/\\\\/i)) {\n    // @test InvalidEnv\n    throw new TexError('InvalidEnv', 'Invalid environment name \\'%1\\'', env);\n  }\n  let macro = parser.configuration.handlers.get('environment').lookup(env) as Macro;\n  if (macro && name === '\\\\end') {\n    // If the first argument is true, we have some sort of user defined\n    // environment. Otherwise we have a standard LaTeX environment that is\n    // handled with begin and end items.\n    if (!macro.args[0]) {\n      const mml = parser.itemFactory.create('end').setProperty('name', env);\n      parser.Push(mml);\n      return;\n    }\n    // Remember the user defined environment we are closing.\n    parser.stack.env['closing'] = env;\n  }\n  ParseUtil.checkMaxMacros(parser, false);\n  parser.parse('environment', [parser, env]);\n};\n\n\n/**\n * Handle array environment.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {string} open Opening fence.\n * @param {string} close Closing fence.\n * @param {string} align Column alignment.\n * @param {string} spacing Column spacing.\n * @param {string} vspacing Row spacing.\n * @param {string} style Display or text style.\n * @param {boolean} raggedHeight Does the height need to be adjusted?\n */\nBaseMethods.Array = function(parser: TexParser, begin: StackItem,\n                             open: string, close: string, align: string,\n                             spacing: string, vspacing: string, style: string,\n                             raggedHeight: boolean) {\n  if (!align) {\n    // @test Array Single\n    align = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n  }\n  let lines = ('c' + align).replace(/[^clr|:]/g, '').replace(/[^|:]([|:])+/g, '$1');\n  align = align.replace(/[^clr]/g, '').split('').join(' ');\n  align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');\n  const array = parser.itemFactory.create('array') as sitem.ArrayItem;\n  array.arraydef = {\n    columnalign: align,\n    columnspacing: (spacing || '1em'),\n    rowspacing: (vspacing || '4pt')\n  };\n  if (lines.match(/[|:]/)) {\n    // @test Enclosed left right\n    if (lines.charAt(0).match(/[|:]/)) {\n      // @test Enclosed left right, Enclosed left\n      array.frame.push('left');\n      array.dashed = lines.charAt(0) === ':';\n    }\n    if (lines.charAt(lines.length - 1).match(/[|:]/)) {\n      // @test Enclosed left right, Enclosed right\n      array.frame.push('right');\n    }\n    // @test Enclosed left right\n    lines = lines.substr(1, lines.length - 2);\n    array.arraydef.columnlines =\n      lines.split('').join(' ').replace(/[^|: ]/g, 'none').replace(/\\|/g, 'solid').replace(/:/g, 'dashed');\n  }\n  if (open)  {\n    // @test Cross Product\n    array.setProperty('open', parser.convertDelimiter(open));\n  }\n  if (close) {\n    // @test Cross Product\n    array.setProperty('close', parser.convertDelimiter(close));\n  }\n  if ((style || '').charAt(1) === '\\'') {\n    array.arraydef['data-cramped'] = true;\n    style = style.charAt(0);\n  }\n  if (style === 'D') {\n    // TODO: This case never seems to occur! No test.\n    array.arraydef['displaystyle'] = true;\n  }\n  else if (style) {\n    // @test Subarray, Small Matrix\n    array.arraydef['displaystyle'] = false;\n  }\n  if (style === 'S') {\n    // @test Subarray, Small Matrix\n    array.arraydef['scriptlevel'] = 1;\n  }\n  if (raggedHeight)  {\n    // @test Subarray, Small Matrix\n    array.arraydef['useHeight'] = false;\n  }\n  parser.Push(begin);\n  return array;\n};\n\n\n/**\n * Handle aligned arrays.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n */\nBaseMethods.AlignedArray = function(parser: TexParser, begin: StackItem) {\n  // @test Array1, Array2, Array Test\n  const align = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n  let item = BaseMethods.Array(parser, begin);\n  return ParseUtil.setArrayAlign(item as sitem.ArrayItem, align);\n};\n\n\n/**\n * Handle equation environment.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered True if environment is numbered.\n */\nBaseMethods.Equation = function (parser: TexParser, begin: StackItem, numbered: boolean) {\n  parser.Push(begin);\n  ParseUtil.checkEqnEnv(parser);\n  return parser.itemFactory.create('equation', numbered).\n    setProperty('name', begin.getName());\n};\n\n\n/**\n * Handle eqnarray.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered True if environment is numbered.\n * @param {boolean} taggable True if taggable.\n * @param {string} align Alignment string.\n * @param {string} spacing Spacing between columns.\n */\nBaseMethods.EqnArray = function(parser: TexParser, begin: StackItem,\n                                numbered: boolean, taggable: boolean,\n                                align: string, spacing: string) {\n  // @test The Lorenz Equations, Maxwell's Equations, Cubic Binomial\n  parser.Push(begin);\n  if (taggable) {\n    ParseUtil.checkEqnEnv(parser);\n  }\n  align = align.replace(/[^clr]/g, '').split('').join(' ');\n  align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');\n  let newItem = parser.itemFactory.create('eqnarray', begin.getName(),\n                                          numbered, taggable, parser.stack.global) as sitem.ArrayItem;\n  newItem.arraydef = {\n    displaystyle: true,\n    columnalign: align,\n    columnspacing: (spacing || '1em'),\n    rowspacing: '3pt',\n    side: parser.options['tagSide'],\n    minlabelspacing: parser.options['tagIndent']\n  };\n  return newItem;\n};\n\n\n/**\n * Handles no tag commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.HandleNoTag = function(parser: TexParser, _name: string) {\n  parser.tags.notag();\n};\n\n\n/**\n * Record a label name for a tag\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.HandleLabel = function(parser: TexParser, name: string) {\n  // @test Label, Label Empty\n  let label = parser.GetArgument(name);\n  if (label === '') {\n    // @test Label Empty\n    return;\n  }\n  if (!parser.tags.refUpdate) {\n    // @test Label, Ref, Ref Unknown\n    if (parser.tags.label) {\n      // @test Double Label Error\n      throw new TexError('MultipleCommand', 'Multiple %1', parser.currentCS);\n    }\n    parser.tags.label = label;\n    if ((parser.tags.allLabels[label] || parser.tags.labels[label]) && !parser.options['ignoreDuplicateLabels']) {\n      // @ Duplicate Label Error\n      throw new TexError('MultipleLabel', 'Label \\'%1\\' multiply defined', label);\n    }\n    // TODO: This should be set in the tags structure!\n    parser.tags.labels[label] = new Label(); // will be replaced by tag value later\n  }\n};\n\n\n/**\n * Handle a label reference.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean} eqref True if formatted as eqref.\n */\nBaseMethods.HandleRef = function(parser: TexParser, name: string, eqref: boolean) {\n  // @test Ref, Ref Unknown, Eqref, Ref Default, Ref Named\n  let label = parser.GetArgument(name);\n  let ref = parser.tags.allLabels[label] || parser.tags.labels[label];\n  if (!ref) {\n    // @test Ref Unknown\n    if (!parser.tags.refUpdate) {\n      parser.tags.redo = true;\n    }\n    ref = new Label();\n  }\n  let tag = ref.tag;\n  if (eqref) {\n    // @test Eqref\n    tag = parser.tags.formatTag(tag);\n  }\n  let node = parser.create('node', 'mrow', ParseUtil.internalMath(parser, tag), {\n    href: parser.tags.formatUrl(ref.id, parser.options.baseURL), 'class': 'MathJax_ref'\n  });\n  parser.Push(node);\n};\n\n\n\n/**\n * Macros\n */\nBaseMethods.Macro = function(parser: TexParser, name: string,\n                             macro: string, argcount: number,\n                             def?: string) {\n  if (argcount) {\n    const args: string[] = [];\n    if (def != null) {\n      const optional = parser.GetBrackets(name);\n      args.push(optional == null ? def : optional);\n    }\n    for (let i = args.length; i < argcount; i++) {\n      args.push(parser.GetArgument(name));\n    }\n    macro = ParseUtil.substituteArgs(parser, args, macro);\n  }\n  parser.string = ParseUtil.addArgs(parser, macro, parser.string.slice(parser.i));\n  parser.i = 0;\n  ParseUtil.checkMaxMacros(parser);\n};\n\n\n/**\n * Handle MathChoice for elements whose exact size/style properties can only be\n * determined after the expression has been parsed.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.MathChoice = function(parser: TexParser, name: string) {\n  const D  = parser.ParseArg(name);\n  const T  = parser.ParseArg(name);\n  const S  = parser.ParseArg(name);\n  const SS = parser.ParseArg(name);\n  parser.Push(parser.create('node', 'MathChoice', [D, T, S, SS]));\n};\n\n\nexport default BaseMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6395, "column": 0}, "map": {"version":3,"file":"ParseMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ParseMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Base methods for TeX Parsing.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Symbol} from './Symbol.js';\nimport TexParser from './TexParser.js';\nimport NodeUtil from './NodeUtil.js';\nimport {TexConstant} from './TexConstants.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport ParseUtil from './ParseUtil.js';\n\n\nnamespace ParseMethods {\n\n  /**\n   * Handle a variable (a single letter or multi-letter if allowed).\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} c The letter to transform into an mi.\n   */\n  export function variable(parser: TexParser, c: string) {\n    // @test Identifier Font\n    const def = ParseUtil.getFontDef(parser);\n    const env = parser.stack.env;\n    if (env.multiLetterIdentifiers && env.font !== '') {\n      c = parser.string.substr(parser.i - 1).match(env.multiLetterIdentifiers as any as RegExp)[0];\n      parser.i += c.length - 1;\n      if (def.mathvariant === TexConstant.Variant.NORMAL && env.noAutoOP && c.length > 1) {\n        def.autoOP = false;\n      }\n    }\n    // @test Identifier\n    const node = parser.create('token', 'mi', def, c);\n    parser.Push(node);\n  }\n\n\n  /**\n   * Handle a number (a sequence of digits, with decimal separator, etc.).\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} c The first character of a number than can be parsed with\n   *     the digits pattern.\n   */\n  export function digit(parser: TexParser, c: string) {\n    let mml: MmlNode;\n    const pattern = parser.configuration.options['digits'];\n    const n = parser.string.slice(parser.i - 1).match(pattern);\n    // @test Integer Font\n    const def = ParseUtil.getFontDef(parser);\n    if (n) {\n      // @test Integer, Number, Decimal (European)\n      mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));\n      parser.i += n[0].length - 1;\n    } else {\n      // @test Decimal Point, Decimal Point European\n      mml = parser.create('token', 'mo', def, c);\n    }\n    parser.Push(mml);\n  }\n\n  /**\n   * Lookup a control-sequence and process it.\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} c The string '\\'.\n   */\n  export function controlSequence(parser: TexParser, _c: string) {\n    const name = parser.GetCS();\n    parser.parse('macro', [parser, name]);\n  }\n\n\n  /**\n   * Handle normal mathchar (as an mi).\n   * @param {TexParser} parser The current tex parser.\n   * @param {Symbol} mchar The parsed symbol.\n   */\n  export function mathchar0mi(parser: TexParser, mchar: Symbol) {\n    const def = mchar.attributes || {mathvariant: TexConstant.Variant.ITALIC};\n    // @test Greek\n    const node = parser.create('token', 'mi', def, mchar.char);\n    parser.Push(node);\n  }\n\n  /**\n   * Handle normal mathchar (as an mo).\n   * @param {TexParser} parser The current tex parser.\n   * @param {Symbol} mchar The parsed symbol.\n   */\n  export function mathchar0mo(parser: TexParser, mchar: Symbol) {\n    const def = mchar.attributes || {};\n    def['stretchy'] = false;\n    // @test Large Set\n    const node = parser.create('token', 'mo', def, mchar.char);\n    NodeUtil.setProperty(node, 'fixStretchy', true);\n    parser.configuration.addNode('fixStretchy', node);\n    // PROBLEM: Attributes stop working when Char7 are explicitly set.\n    parser.Push(node);\n  }\n\n  /**\n   * Handle mathchar in current family.\n   * @param {TexParser} parser The current tex parser.\n   * @param {Symbol} mchar The parsed symbol.\n   */\n  export function mathchar7(parser: TexParser, mchar: Symbol) {\n    const def = mchar.attributes || {mathvariant: TexConstant.Variant.NORMAL};\n    if (parser.stack.env['font']) {\n      // @test MathChar7 Single Font\n      def['mathvariant'] = parser.stack.env['font'];\n    }\n    // @test MathChar7 Single, MathChar7 Operator, MathChar7 Multi\n    const node = parser.create('token', 'mi', def, mchar.char);\n    parser.Push(node);\n  }\n\n  /**\n   * Handle delimiter.\n   * @param {TexParser} parser The current tex parser.\n   * @param {Symbol} delim The parsed delimiter symbol.\n   */\n  export function delimiter(parser: TexParser, delim: Symbol) {\n    let def = delim.attributes || {};\n    // @test Fenced2, Delimiter (AMS)\n    def = Object.assign({fence: false, stretchy: false}, def);\n    const node = parser.create('token', 'mo', def, delim.char);\n    parser.Push(node);\n  }\n\n\n  /**\n   * Parse an environment.\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} env The name of the environment.\n   * @param {Function} func The parse method for the environment.\n   * @param {any[]} args A list of additional arguments.\n   */\n  export function environment(parser: TexParser, env: string, func: Function, args: any[]) {\n    const end = args[0];\n    let mml = parser.itemFactory.create('begin').setProperties({name: env, end: end});\n    mml = func(parser, mml, ...args.slice(1));\n    parser.Push(mml);\n  }\n\n}\n\nexport default ParseMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6531, "column": 0}, "map": {"version":3,"file":"BaseMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/base/BaseMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Base mappings for TeX Parsing.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport *  as sm from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport BaseMethods from './BaseMethods.js';\nimport ParseMethods from '../ParseMethods.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MATHSPACE, em} from '../../../util/lengths.js';\n\n\n/**\n * Letter pattern for parsing identifiers and operators.\n */\nnew sm.RegExpMap('letter', ParseMethods.variable, /[a-z]/i);\n\n\n/**\n * Digit pattern for parsing numbers.\n */\nnew sm.RegExpMap('digit', ParseMethods.digit, /[0-9.,]/);\n\n\n/**\n * Pattern for spotting start of commands.\n */\nnew sm.RegExpMap('command', ParseMethods.controlSequence, /^\\\\/ );\n\n\n/**\n * Treatment of special characters in LaTeX.\n */\nnew sm.MacroMap('special', {\n\n  // This is now handled with a RegExp!\n  // '\\\\':  'ControlSequence',\n\n  '{':   'Open',\n  '}':   'Close',\n  '~':   'Tilde',\n  '^':   'Superscript',\n  '_':   'Subscript',\n  ' ':   'Space',\n  '\\t':  'Space',\n  '\\r':  'Space',\n  '\\n':  'Space',\n  '\\'':  'Prime',\n  '%':   'Comment',\n  '&':   'Entry',\n  '#':   'Hash',\n  '\\u00A0': 'Space',\n  '\\u2019': 'Prime'\n}, BaseMethods);\n\n\n/**\n * Macros for identifiers.\n */\nnew sm.CharacterMap('mathchar0mi', ParseMethods.mathchar0mi, {\n  // Lower-case greek\n  alpha:        '\\u03B1',\n  beta:         '\\u03B2',\n  gamma:        '\\u03B3',\n  delta:        '\\u03B4',\n  epsilon:      '\\u03F5',\n  zeta:         '\\u03B6',\n  eta:          '\\u03B7',\n  theta:        '\\u03B8',\n  iota:         '\\u03B9',\n  kappa:        '\\u03BA',\n  lambda:       '\\u03BB',\n  mu:           '\\u03BC',\n  nu:           '\\u03BD',\n  xi:           '\\u03BE',\n  omicron:      '\\u03BF', // added for completeness\n  pi:           '\\u03C0',\n  rho:          '\\u03C1',\n  sigma:        '\\u03C3',\n  tau:          '\\u03C4',\n  upsilon:      '\\u03C5',\n  phi:          '\\u03D5',\n  chi:          '\\u03C7',\n  psi:          '\\u03C8',\n  omega:        '\\u03C9',\n  varepsilon:   '\\u03B5',\n  vartheta:     '\\u03D1',\n  varpi:        '\\u03D6',\n  varrho:       '\\u03F1',\n  varsigma:     '\\u03C2',\n  varphi:       '\\u03C6',\n\n  // Ord symbols\n  S:            ['\\u00A7', {mathvariant: TexConstant.Variant.NORMAL}],\n  aleph:        ['\\u2135', {mathvariant: TexConstant.Variant.NORMAL}],\n  hbar:         ['\\u210F', {variantForm: true}],\n  imath:        '\\u0131',\n  jmath:        '\\u0237',\n  ell:          '\\u2113',\n  wp:           ['\\u2118', {mathvariant: TexConstant.Variant.NORMAL}],\n  Re:           ['\\u211C', {mathvariant: TexConstant.Variant.NORMAL}],\n  Im:           ['\\u2111', {mathvariant: TexConstant.Variant.NORMAL}],\n  partial:      ['\\u2202', {mathvariant: TexConstant.Variant.ITALIC}],\n  infty:        ['\\u221E', {mathvariant: TexConstant.Variant.NORMAL}],\n  prime:        ['\\u2032', {variantForm: true}],\n  emptyset:     ['\\u2205', {mathvariant: TexConstant.Variant.NORMAL}],\n  nabla:        ['\\u2207', {mathvariant: TexConstant.Variant.NORMAL}],\n  top:          ['\\u22A4', {mathvariant: TexConstant.Variant.NORMAL}],\n  bot:          ['\\u22A5', {mathvariant: TexConstant.Variant.NORMAL}],\n  angle:        ['\\u2220', {mathvariant: TexConstant.Variant.NORMAL}],\n  triangle:     ['\\u25B3', {mathvariant: TexConstant.Variant.NORMAL}],\n  backslash:    ['\\u2216', {mathvariant: TexConstant.Variant.NORMAL}],\n  forall:       ['\\u2200', {mathvariant: TexConstant.Variant.NORMAL}],\n  exists:       ['\\u2203', {mathvariant: TexConstant.Variant.NORMAL}],\n  neg:          ['\\u00AC', {mathvariant: TexConstant.Variant.NORMAL}],\n  lnot:         ['\\u00AC', {mathvariant: TexConstant.Variant.NORMAL}],\n  flat:         ['\\u266D', {mathvariant: TexConstant.Variant.NORMAL}],\n  natural:      ['\\u266E', {mathvariant: TexConstant.Variant.NORMAL}],\n  sharp:        ['\\u266F', {mathvariant: TexConstant.Variant.NORMAL}],\n  clubsuit:     ['\\u2663', {mathvariant: TexConstant.Variant.NORMAL}],\n  diamondsuit:  ['\\u2662', {mathvariant: TexConstant.Variant.NORMAL}],\n  heartsuit:    ['\\u2661', {mathvariant: TexConstant.Variant.NORMAL}],\n  spadesuit:    ['\\u2660', {mathvariant: TexConstant.Variant.NORMAL}]\n});\n\n\n/**\n * Macros for operators.\n */\nnew sm.CharacterMap('mathchar0mo', ParseMethods.mathchar0mo, {\n  surd:         '\\u221A',\n\n  // big ops\n  coprod:       ['\\u2210', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigvee:       ['\\u22C1', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigwedge:     ['\\u22C0', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  biguplus:     ['\\u2A04', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigcap:       ['\\u22C2', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigcup:       ['\\u22C3', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  'int':        ['\\u222B', {texClass: TEXCLASS.OP}],\n  intop:        ['\\u222B', {texClass: TEXCLASS.OP,\n                            movesupsub: true, movablelimits: true}],\n  iint:         ['\\u222C', {texClass: TEXCLASS.OP}],\n  iiint:        ['\\u222D', {texClass: TEXCLASS.OP}],\n  prod:         ['\\u220F', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  sum:          ['\\u2211', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigotimes:    ['\\u2A02', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigoplus:     ['\\u2A01', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigodot:      ['\\u2A00', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  oint:         ['\\u222E', {texClass: TEXCLASS.OP}],\n  bigsqcup:     ['\\u2A06', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  smallint:     ['\\u222B', {largeop: false}],\n\n  // binary operations\n  triangleleft:      '\\u25C3',\n  triangleright:     '\\u25B9',\n  bigtriangleup:     '\\u25B3',\n  bigtriangledown:   '\\u25BD',\n  wedge:        '\\u2227',\n  land:         '\\u2227',\n  vee:          '\\u2228',\n  lor:          '\\u2228',\n  cap:          '\\u2229',\n  cup:          '\\u222A',\n  ddagger:      '\\u2021',\n  dagger:       '\\u2020',\n  sqcap:        '\\u2293',\n  sqcup:        '\\u2294',\n  uplus:        '\\u228E',\n  amalg:        '\\u2A3F',\n  diamond:      '\\u22C4',\n  bullet:       '\\u2219',\n  wr:           '\\u2240',\n  div:          '\\u00F7',\n  divsymbol:    '\\u00F7',\n  odot:         ['\\u2299', {largeop: false}],\n  oslash:       ['\\u2298', {largeop: false}],\n  otimes:       ['\\u2297', {largeop: false}],\n  ominus:       ['\\u2296', {largeop: false}],\n  oplus:        ['\\u2295', {largeop: false}],\n  mp:           '\\u2213',\n  pm:           '\\u00B1',\n  circ:         '\\u2218',\n  bigcirc:      '\\u25EF',\n  setminus:     '\\u2216',\n  cdot:         '\\u22C5',\n  ast:          '\\u2217',\n  times:        '\\u00D7',\n  star:         '\\u22C6',\n\n\n  // Relations\n  propto:       '\\u221D',\n  sqsubseteq:   '\\u2291',\n  sqsupseteq:   '\\u2292',\n  parallel:     '\\u2225',\n  mid:          '\\u2223',\n  dashv:        '\\u22A3',\n  vdash:        '\\u22A2',\n  leq:          '\\u2264',\n  le:           '\\u2264',\n  geq:          '\\u2265',\n  ge:           '\\u2265',\n  lt:           '\\u003C',\n  gt:           '\\u003E',\n  succ:         '\\u227B',\n  prec:         '\\u227A',\n  approx:       '\\u2248',\n  succeq:       '\\u2AB0',  // or '227C',\n  preceq:       '\\u2AAF',  // or '227D',\n  supset:       '\\u2283',\n  subset:       '\\u2282',\n  supseteq:     '\\u2287',\n  subseteq:     '\\u2286',\n  'in':         '\\u2208',\n  ni:           '\\u220B',\n  notin:        '\\u2209',\n  owns:         '\\u220B',\n  gg:           '\\u226B',\n  ll:           '\\u226A',\n  sim:          '\\u223C',\n  simeq:        '\\u2243',\n  perp:         '\\u22A5',\n  equiv:        '\\u2261',\n  asymp:        '\\u224D',\n  smile:        '\\u2323',\n  frown:        '\\u2322',\n  ne:           '\\u2260',\n  neq:          '\\u2260',\n  cong:         '\\u2245',\n  doteq:        '\\u2250',\n  bowtie:       '\\u22C8',\n  models:       '\\u22A8',\n\n  notChar:      '\\u29F8',\n\n\n  // Arrows\n  Leftrightarrow:     '\\u21D4',\n  Leftarrow:          '\\u21D0',\n  Rightarrow:         '\\u21D2',\n  leftrightarrow:     '\\u2194',\n  leftarrow:          '\\u2190',\n  gets:               '\\u2190',\n  rightarrow:         '\\u2192',\n  to:                ['\\u2192', {accent: false}],\n  mapsto:             '\\u21A6',\n  leftharpoonup:      '\\u21BC',\n  leftharpoondown:    '\\u21BD',\n  rightharpoonup:     '\\u21C0',\n  rightharpoondown:   '\\u21C1',\n  nearrow:            '\\u2197',\n  searrow:            '\\u2198',\n  nwarrow:            '\\u2196',\n  swarrow:            '\\u2199',\n  rightleftharpoons:  '\\u21CC',\n  hookrightarrow:     '\\u21AA',\n  hookleftarrow:      '\\u21A9',\n  longleftarrow:      '\\u27F5',\n  Longleftarrow:      '\\u27F8',\n  longrightarrow:     '\\u27F6',\n  Longrightarrow:     '\\u27F9',\n  Longleftrightarrow: '\\u27FA',\n  longleftrightarrow: '\\u27F7',\n  longmapsto:         '\\u27FC',\n\n\n  // Misc.\n  ldots:            '\\u2026',\n  cdots:            '\\u22EF',\n  vdots:            '\\u22EE',\n  ddots:            '\\u22F1',\n  dotsc:            '\\u2026',  // dots with commas\n  dotsb:            '\\u22EF',  // dots with binary ops and relations\n  dotsm:            '\\u22EF',  // dots with multiplication\n  dotsi:            '\\u22EF',  // dots with integrals\n  dotso:            '\\u2026',  // other dots\n\n  ldotp:            ['\\u002E', {texClass: TEXCLASS.PUNCT}],\n  cdotp:            ['\\u22C5', {texClass: TEXCLASS.PUNCT}],\n  colon:            ['\\u003A', {texClass: TEXCLASS.PUNCT}]\n});\n\n\n/**\n * Macros for special characters and identifiers.\n */\nnew sm.CharacterMap('mathchar7', ParseMethods.mathchar7, {\n  Gamma:        '\\u0393',\n  Delta:        '\\u0394',\n  Theta:        '\\u0398',\n  Lambda:       '\\u039B',\n  Xi:           '\\u039E',\n  Pi:           '\\u03A0',\n  Sigma:        '\\u03A3',\n  Upsilon:      '\\u03A5',\n  Phi:          '\\u03A6',\n  Psi:          '\\u03A8',\n  Omega:        '\\u03A9',\n\n  '_':          '\\u005F',\n  '#':          '\\u0023',\n  '$':          '\\u0024',\n  '%':          '\\u0025',\n  '&':          '\\u0026',\n  And:          '\\u0026'\n});\n\n\n/**\n * Macros for delimiters.\n */\nnew sm.DelimiterMap('delimiter', ParseMethods.delimiter, {\n  '(':                '(',\n  ')':                ')',\n  '[':                '[',\n  ']':                ']',\n  '<':                '\\u27E8',\n  '>':                '\\u27E9',\n  '\\\\lt':             '\\u27E8',\n  '\\\\gt':             '\\u27E9',\n  '/':                '/',\n  '|':                ['|', {texClass: TEXCLASS.ORD}],\n  '.':                '',\n  '\\\\\\\\':             '\\\\',\n  '\\\\lmoustache':     '\\u23B0',  // non-standard\n  '\\\\rmoustache':     '\\u23B1',  // non-standard\n  '\\\\lgroup':         '\\u27EE',  // non-standard\n  '\\\\rgroup':         '\\u27EF',  // non-standard\n  '\\\\arrowvert':      '\\u23D0',\n  '\\\\Arrowvert':      '\\u2016',\n  '\\\\bracevert':      '\\u23AA',  // non-standard\n  '\\\\Vert':           ['\\u2016', {texClass: TEXCLASS.ORD}],\n  '\\\\|':              ['\\u2016', {texClass: TEXCLASS.ORD}],\n  '\\\\vert':           ['|', {texClass: TEXCLASS.ORD}],\n  '\\\\uparrow':        '\\u2191',\n  '\\\\downarrow':      '\\u2193',\n  '\\\\updownarrow':    '\\u2195',\n  '\\\\Uparrow':        '\\u21D1',\n  '\\\\Downarrow':      '\\u21D3',\n  '\\\\Updownarrow':    '\\u21D5',\n  '\\\\backslash':      '\\\\',\n  '\\\\rangle':         '\\u27E9',\n  '\\\\langle':         '\\u27E8',\n  '\\\\rbrace':         '}',\n  '\\\\lbrace':         '{',\n  '\\\\}':              '}',\n  '\\\\{':              '{',\n  '\\\\rceil':          '\\u2309',\n  '\\\\lceil':          '\\u2308',\n  '\\\\rfloor':         '\\u230B',\n  '\\\\lfloor':         '\\u230A',\n  '\\\\lbrack':         '[',\n  '\\\\rbrack':         ']'\n});\n\n\n/**\n * Macros for LaTeX commands.\n */\nnew sm.CommandMap('macros', {\n  displaystyle:      ['SetStyle', 'D', true, 0],\n  textstyle:         ['SetStyle', 'T', false, 0],\n  scriptstyle:       ['SetStyle', 'S', false, 1],\n  scriptscriptstyle: ['SetStyle', 'SS', false, 2],\n\n  rm:                ['SetFont', TexConstant.Variant.NORMAL],\n  mit:               ['SetFont', TexConstant.Variant.ITALIC],\n  oldstyle:          ['SetFont', TexConstant.Variant.OLDSTYLE],\n  cal:               ['SetFont', TexConstant.Variant.CALLIGRAPHIC],\n  it:                ['SetFont', TexConstant.Variant.MATHITALIC], // needs special handling\n  bf:                ['SetFont', TexConstant.Variant.BOLD],\n  bbFont:            ['SetFont', TexConstant.Variant.DOUBLESTRUCK],\n  scr:               ['SetFont', TexConstant.Variant.SCRIPT],\n  frak:              ['SetFont', TexConstant.Variant.FRAKTUR],\n  sf:                ['SetFont', TexConstant.Variant.SANSSERIF],\n  tt:                ['SetFont', TexConstant.Variant.MONOSPACE],\n\n  mathrm:            ['MathFont', TexConstant.Variant.NORMAL],\n  mathup:            ['MathFont', TexConstant.Variant.NORMAL],\n  mathnormal:        ['MathFont', ''],\n  mathbf:            ['MathFont', TexConstant.Variant.BOLD],\n  mathbfup:          ['MathFont', TexConstant.Variant.BOLD],\n  mathit:            ['MathFont', TexConstant.Variant.MATHITALIC],\n  mathbfit:          ['MathFont', TexConstant.Variant.BOLDITALIC],\n  mathbb:            ['MathFont', TexConstant.Variant.DOUBLESTRUCK],\n  Bbb:               ['MathFont', TexConstant.Variant.DOUBLESTRUCK],\n  mathfrak:          ['MathFont', TexConstant.Variant.FRAKTUR],\n  mathbffrak:        ['MathFont', TexConstant.Variant.BOLDFRAKTUR],\n  mathscr:           ['MathFont', TexConstant.Variant.SCRIPT],\n  mathbfscr:         ['MathFont', TexConstant.Variant.BOLDSCRIPT],\n  mathsf:            ['MathFont', TexConstant.Variant.SANSSERIF],\n  mathsfup:          ['MathFont', TexConstant.Variant.SANSSERIF],\n  mathbfsf:          ['MathFont', TexConstant.Variant.BOLDSANSSERIF],\n  mathbfsfup:        ['MathFont', TexConstant.Variant.BOLDSANSSERIF],\n  mathsfit:          ['MathFont', TexConstant.Variant.SANSSERIFITALIC],\n  mathbfsfit:        ['MathFont', TexConstant.Variant.SANSSERIFBOLDITALIC],\n  mathtt:            ['MathFont', TexConstant.Variant.MONOSPACE],\n  mathcal:           ['MathFont', TexConstant.Variant.CALLIGRAPHIC],\n  mathbfcal:         ['MathFont', TexConstant.Variant.BOLDCALLIGRAPHIC],\n\n  symrm:             ['MathFont', TexConstant.Variant.NORMAL],\n  symup:             ['MathFont', TexConstant.Variant.NORMAL],\n  symnormal:         ['MathFont', ''],\n  symbf:             ['MathFont', TexConstant.Variant.BOLD],\n  symbfup:           ['MathFont', TexConstant.Variant.BOLD],\n  symit:             ['MathFont', TexConstant.Variant.ITALIC],\n  symbfit:           ['MathFont', TexConstant.Variant.BOLDITALIC],\n  symbb:             ['MathFont', TexConstant.Variant.DOUBLESTRUCK],\n  symfrak:           ['MathFont', TexConstant.Variant.FRAKTUR],\n  symbffrak:         ['MathFont', TexConstant.Variant.BOLDFRAKTUR],\n  symscr:            ['MathFont', TexConstant.Variant.SCRIPT],\n  symbfscr:          ['MathFont', TexConstant.Variant.BOLDSCRIPT],\n  symsf:             ['MathFont', TexConstant.Variant.SANSSERIF],\n  symsfup:           ['MathFont', TexConstant.Variant.SANSSERIF],\n  symbfsf:           ['MathFont', TexConstant.Variant.BOLDSANSSERIF],\n  symbfsfup:         ['MathFont', TexConstant.Variant.BOLDSANSSERIF],\n  symsfit:           ['MathFont', TexConstant.Variant.SANSSERIFITALIC],\n  symbfsfit:         ['MathFont', TexConstant.Variant.SANSSERIFBOLDITALIC],\n  symtt:             ['MathFont', TexConstant.Variant.MONOSPACE],\n  symcal:            ['MathFont', TexConstant.Variant.CALLIGRAPHIC],\n  symbfcal:          ['MathFont', TexConstant.Variant.BOLDCALLIGRAPHIC],\n\n  textrm:            ['HBox', null, TexConstant.Variant.NORMAL],\n  textup:            ['HBox', null, TexConstant.Variant.NORMAL],\n  textnormal:        ['HBox'],\n  textit:            ['HBox', null, TexConstant.Variant.ITALIC],\n  textbf:            ['HBox', null, TexConstant.Variant.BOLD],\n  textsf:            ['HBox', null, TexConstant.Variant.SANSSERIF],\n  texttt:            ['HBox', null, TexConstant.Variant.MONOSPACE],\n\n  tiny:              ['SetSize', 0.5],\n  Tiny:              ['SetSize', 0.6],  // non-standard\n  scriptsize:        ['SetSize', 0.7],\n  small:             ['SetSize', 0.85],\n  normalsize:        ['SetSize', 1.0],\n  large:             ['SetSize', 1.2],\n  Large:             ['SetSize', 1.44],\n  LARGE:             ['SetSize', 1.73],\n  huge:              ['SetSize', 2.07],\n  Huge:              ['SetSize', 2.49],\n\n  arcsin:             'NamedFn',\n  arccos:             'NamedFn',\n  arctan:             'NamedFn',\n  arg:                'NamedFn',\n  cos:                'NamedFn',\n  cosh:               'NamedFn',\n  cot:                'NamedFn',\n  coth:               'NamedFn',\n  csc:                'NamedFn',\n  deg:                'NamedFn',\n  det:                'NamedOp',\n  dim:                'NamedFn',\n  exp:                'NamedFn',\n  gcd:                'NamedOp',\n  hom:                'NamedFn',\n  inf:                'NamedOp',\n  ker:                'NamedFn',\n  lg:                 'NamedFn',\n  lim:                'NamedOp',\n  liminf:            ['NamedOp', 'lim&thinsp;inf'],\n  limsup:            ['NamedOp', 'lim&thinsp;sup'],\n  ln:                 'NamedFn',\n  log:                'NamedFn',\n  max:                'NamedOp',\n  min:                'NamedOp',\n  Pr:                 'NamedOp',\n  sec:                'NamedFn',\n  sin:                'NamedFn',\n  sinh:               'NamedFn',\n  sup:                'NamedOp',\n  tan:                'NamedFn',\n  tanh:               'NamedFn',\n\n  limits:            ['Limits', 1],\n  nolimits:          ['Limits', 0],\n\n  overline:            ['UnderOver', '2015'],\n  underline:           ['UnderOver', '2015'],\n  overbrace:           ['UnderOver', '23DE', 1],\n  underbrace:          ['UnderOver', '23DF', 1],\n  overparen:           ['UnderOver', '23DC'],\n  underparen:          ['UnderOver', '23DD'],\n  overrightarrow:      ['UnderOver', '2192'],\n  underrightarrow:     ['UnderOver', '2192'],\n  overleftarrow:       ['UnderOver', '2190'],\n  underleftarrow:      ['UnderOver', '2190'],\n  overleftrightarrow:  ['UnderOver', '2194'],\n  underleftrightarrow: ['UnderOver', '2194'],\n\n  overset:            'Overset',\n  underset:           'Underset',\n  overunderset:       'Overunderset',\n  stackrel:           ['Macro', '\\\\mathrel{\\\\mathop{#2}\\\\limits^{#1}}', 2],\n  stackbin:           ['Macro', '\\\\mathbin{\\\\mathop{#2}\\\\limits^{#1}}', 2],\n\n  over:               'Over',\n  overwithdelims:     'Over',\n  atop:               'Over',\n  atopwithdelims:     'Over',\n  above:              'Over',\n  abovewithdelims:    'Over',\n  brace:             ['Over', '{', '}'],\n  brack:             ['Over', '[', ']'],\n  choose:            ['Over', '(', ')'],\n\n  frac:               'Frac',\n  sqrt:               'Sqrt',\n  root:               'Root',\n  uproot:            ['MoveRoot', 'upRoot'],\n  leftroot:          ['MoveRoot', 'leftRoot'],\n\n  left:               'LeftRight',\n  right:              'LeftRight',\n  middle:             'LeftRight',\n\n  llap:               'Lap',\n  rlap:               'Lap',\n  raise:              'RaiseLower',\n  lower:              'RaiseLower',\n  moveleft:           'MoveLeftRight',\n  moveright:          'MoveLeftRight',\n\n  ',':               ['Spacer', MATHSPACE.thinmathspace],\n  ':':               ['Spacer', MATHSPACE.mediummathspace],\n  '>':               ['Spacer', MATHSPACE.mediummathspace],\n  ';':               ['Spacer', MATHSPACE.thickmathspace],\n  '!':               ['Spacer', MATHSPACE.negativethinmathspace],\n  enspace:           ['Spacer', .5],\n  quad:              ['Spacer', 1],\n  qquad:             ['Spacer', 2],\n  thinspace:         ['Spacer', MATHSPACE.thinmathspace],\n  negthinspace:      ['Spacer', MATHSPACE.negativethinmathspace],\n\n  hskip:              'Hskip',\n  hspace:             'Hskip',\n  kern:               'Hskip',\n  mskip:              'Hskip',\n  mspace:             'Hskip',\n  mkern:              'Hskip',\n  rule:               'rule',\n  Rule:              ['Rule'],\n  Space:             ['Rule', 'blank'],\n  nonscript:          'Nonscript',\n\n  big:               ['MakeBig', TEXCLASS.ORD, 0.85],\n  Big:               ['MakeBig', TEXCLASS.ORD, 1.15],\n  bigg:              ['MakeBig', TEXCLASS.ORD, 1.45],\n  Bigg:              ['MakeBig', TEXCLASS.ORD, 1.75],\n  bigl:              ['MakeBig', TEXCLASS.OPEN, 0.85],\n  Bigl:              ['MakeBig', TEXCLASS.OPEN, 1.15],\n  biggl:             ['MakeBig', TEXCLASS.OPEN, 1.45],\n  Biggl:             ['MakeBig', TEXCLASS.OPEN, 1.75],\n  bigr:              ['MakeBig', TEXCLASS.CLOSE, 0.85],\n  Bigr:              ['MakeBig', TEXCLASS.CLOSE, 1.15],\n  biggr:             ['MakeBig', TEXCLASS.CLOSE, 1.45],\n  Biggr:             ['MakeBig', TEXCLASS.CLOSE, 1.75],\n  bigm:              ['MakeBig', TEXCLASS.REL, 0.85],\n  Bigm:              ['MakeBig', TEXCLASS.REL, 1.15],\n  biggm:             ['MakeBig', TEXCLASS.REL, 1.45],\n  Biggm:             ['MakeBig', TEXCLASS.REL, 1.75],\n\n  mathord:           ['TeXAtom', TEXCLASS.ORD],\n  mathop:            ['TeXAtom', TEXCLASS.OP],\n  mathopen:          ['TeXAtom', TEXCLASS.OPEN],\n  mathclose:         ['TeXAtom', TEXCLASS.CLOSE],\n  mathbin:           ['TeXAtom', TEXCLASS.BIN],\n  mathrel:           ['TeXAtom', TEXCLASS.REL],\n  mathpunct:         ['TeXAtom', TEXCLASS.PUNCT],\n  mathinner:         ['TeXAtom', TEXCLASS.INNER],\n\n  vcenter:           ['TeXAtom', TEXCLASS.VCENTER],\n\n  buildrel:           'BuildRel',\n\n  hbox:               ['HBox', 0],\n  text:               'HBox',\n  mbox:               ['HBox', 0],\n  fbox:               'FBox',\n  boxed:              ['Macro', '\\\\fbox{$\\\\displaystyle{#1}$}', 1],\n  framebox:           'FrameBox',\n\n  strut:              'Strut',\n  mathstrut:         ['Macro', '\\\\vphantom{(}'],\n  phantom:            'Phantom',\n  vphantom:          ['Phantom', 1, 0],\n  hphantom:          ['Phantom', 0, 1],\n  smash:              'Smash',\n\n  acute:             ['Accent', '00B4'],  // or 0301 or 02CA\n  grave:             ['Accent', '0060'],  // or 0300 or 02CB\n  ddot:              ['Accent', '00A8'],  // or 0308\n  tilde:             ['Accent', '007E'],  // or 0303 or 02DC\n  bar:               ['Accent', '00AF'],  // or 0304 or 02C9\n  breve:             ['Accent', '02D8'],  // or 0306\n  check:             ['Accent', '02C7'],  // or 030C\n  hat:               ['Accent', '005E'],  // or 0302 or 02C6\n  vec:               ['Accent', '2192'],  // or 20D7\n  dot:               ['Accent', '02D9'],  // or 0307\n  widetilde:         ['Accent', '007E', 1], // or 0303 or 02DC\n  widehat:           ['Accent', '005E', 1], // or 0302 or 02C6\n\n  matrix:             'Matrix',\n  array:              'Matrix',\n  pmatrix:           ['Matrix', '(', ')'],\n  cases:             ['Matrix', '{', '', 'left left', null, '.1em', null,\n                      true],\n  eqalign:           ['Matrix', null, null, 'right left',\n                      em(MATHSPACE.thickmathspace), '.5em', 'D'],\n  displaylines:      ['Matrix', null, null, 'center', null, '.5em', 'D'],\n  cr:                 'Cr',\n  '\\\\':               'CrLaTeX',\n  newline:           ['CrLaTeX', true],\n  hline:             ['HLine', 'solid'],\n  hdashline:         ['HLine', 'dashed'],\n  //      noalign:            'HandleNoAlign',\n  eqalignno:         ['Matrix', null, null, 'right left',\n                      em(MATHSPACE.thickmathspace), '.5em', 'D', null,\n                      'right'],\n  leqalignno:        ['Matrix', null, null, 'right left',\n                      em(MATHSPACE.thickmathspace), '.5em', 'D', null,\n                      'left'],\n  hfill:              'HFill',\n  hfil:               'HFill',   // \\hfil treated as \\hfill for now\n  hfilll:             'HFill',   // \\hfilll treated as \\hfill for now\n\n  //  TeX substitution macros\n  bmod:              ['Macro', '\\\\mmlToken{mo}[lspace=\"thickmathspace\"' +\n                      ' rspace=\"thickmathspace\"]{mod}'],\n  pmod:              ['Macro', '\\\\pod{\\\\mmlToken{mi}{mod}\\\\kern 6mu #1}', 1],\n  mod:               ['Macro', '\\\\mathchoice{\\\\kern18mu}{\\\\kern12mu}' +\n                      '{\\\\kern12mu}{\\\\kern12mu}\\\\mmlToken{mi}{mod}\\\\,\\\\,#1',\n                      1],\n  pod:               ['Macro', '\\\\mathchoice{\\\\kern18mu}{\\\\kern8mu}' +\n                      '{\\\\kern8mu}{\\\\kern8mu}(#1)', 1],\n  iff:               ['Macro', '\\\\;\\\\Longleftrightarrow\\\\;'],\n  skew:              ['Macro', '{{#2{#3\\\\mkern#1mu}\\\\mkern-#1mu}{}}', 3],\n\n  pmb:               ['Macro', '\\\\rlap{#1}\\\\kern1px{#1}', 1],\n  TeX:               ['Macro', 'T\\\\kern-.14em\\\\lower.5ex{E}\\\\kern-.115em X'],\n  LaTeX:             ['Macro', 'L\\\\kern-.325em\\\\raise.21em' +\n                      '{\\\\scriptstyle{A}}\\\\kern-.17em\\\\TeX'],\n  ' ':               ['Macro', '\\\\text{ }'],\n\n  //  Specially handled\n  not:                'Not',\n  dots:               'Dots',\n  space:              'Tilde',\n  '\\u00A0':           'Tilde',\n\n\n  //  LaTeX\n  begin:              'BeginEnd',\n  end:                'BeginEnd',\n\n  label:              'HandleLabel',\n  ref:                'HandleRef',\n  nonumber:           'HandleNoTag',\n\n  // Internal use:\n  mathchoice:         'MathChoice',\n  mmlToken:           'MmlToken'\n}, BaseMethods);\n\n\n/**\n * Macros for LaTeX environments.\n */\nnew sm.EnvironmentMap('environment', ParseMethods.environment, {\n  array:         ['AlignedArray'],\n  equation:      ['Equation', null, true],\n  eqnarray:      ['EqnArray', null, true, true, 'rcl',\n                  ParseUtil.cols(0, MATHSPACE.thickmathspace), '.5em']\n}, BaseMethods);\n\n\n/**\n * Mapping for negated operators.\n */\nnew sm.CharacterMap('not_remap', null, {\n  '\\u2190': '\\u219A',\n  '\\u2192': '\\u219B',\n  '\\u2194': '\\u21AE',\n  '\\u21D0': '\\u21CD',\n  '\\u21D2': '\\u21CF',\n  '\\u21D4': '\\u21CE',\n  '\\u2208': '\\u2209',\n  '\\u220B': '\\u220C',\n  '\\u2223': '\\u2224',\n  '\\u2225': '\\u2226',\n  '\\u223C': '\\u2241',\n  '\\u007E': '\\u2241',\n  '\\u2243': '\\u2244',\n  '\\u2245': '\\u2247',\n  '\\u2248': '\\u2249',\n  '\\u224D': '\\u226D',\n  '\\u003D': '\\u2260',\n  '\\u2261': '\\u2262',\n  '\\u003C': '\\u226E',\n  '\\u003E': '\\u226F',\n  '\\u2264': '\\u2270',\n  '\\u2265': '\\u2271',\n  '\\u2272': '\\u2274',\n  '\\u2273': '\\u2275',\n  '\\u2276': '\\u2278',\n  '\\u2277': '\\u2279',\n  '\\u227A': '\\u2280',\n  '\\u227B': '\\u2281',\n  '\\u2282': '\\u2284',\n  '\\u2283': '\\u2285',\n  '\\u2286': '\\u2288',\n  '\\u2287': '\\u2289',\n  '\\u22A2': '\\u22AC',\n  '\\u22A8': '\\u22AD',\n  '\\u22A9': '\\u22AE',\n  '\\u22AB': '\\u22AF',\n  '\\u227C': '\\u22E0',\n  '\\u227D': '\\u22E1',\n  '\\u2291': '\\u22E2',\n  '\\u2292': '\\u22E3',\n  '\\u22B2': '\\u22EA',\n  '\\u22B3': '\\u22EB',\n  '\\u22B4': '\\u22EC',\n  '\\u22B5': '\\u22ED',\n  '\\u2203': '\\u2204'\n});\n"],"names":[],"mappings":"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Q;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;CACnB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8081, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8086, "column": 0}, "map": {"version":3,"file":"BaseConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/base/BaseConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration for the Base LaTeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {MapHandler} from '../MapHandler.js';\nimport TexError from '../TexError.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexParser from '../TexParser.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport * as bitem from './BaseItems.js';\nimport {AbstractTags} from '../Tags.js';\nimport './BaseMappings.js';\nimport {getRange} from '../../../core/MmlTree/OperatorDictionary.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport ParseOptions from '../ParseOptions.js';\n\n/**\n * Remapping some ASCII characters to their Unicode operator equivalent.\n */\nnew CharacterMap('remap', null, {\n  '-':   '\\u2212',\n  '*':   '\\u2217',\n  '`':   '\\u2018'   // map ` to back quote\n});\n\n\n/**\n * Default handling of characters (as <mo> elements).\n * @param {TexParser} parser The calling parser.\n * @param {string} char The character to parse.\n */\nexport function Other(parser: TexParser, char: string) {\n  const font = parser.stack.env['font'];\n  let def = font ?\n    // @test Other Font\n    {mathvariant: parser.stack.env['font']} : {};\n  const remap = (MapHandler.getMap('remap') as CharacterMap).lookup(char);\n  const range = getRange(char);\n  const type = (range ? range[3] : 'mo');\n  // @test Other\n  // @test Other Remap\n  let mo = parser.create('token', type, def, (remap ? remap.char : char));\n  range[4] && mo.attributes.set('mathvariant', range[4]);\n  if (type === 'mo') {\n    NodeUtil.setProperty(mo, 'fixStretchy', true);\n    parser.configuration.addNode('fixStretchy', mo);\n  }\n  parser.Push(mo);\n}\n\n\n/**\n * Handle undefined control sequence.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nfunction csUndefined(_parser: TexParser, name: string) {\n  // @test Undefined-CS\n  throw new TexError('UndefinedControlSequence',\n                      'Undefined control sequence %1', '\\\\' + name);\n}\n\n\n/**\n * Handle undefined environments.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nfunction envUndefined(_parser: TexParser, env: string) {\n  // @test Undefined-Env\n  throw new TexError('UnknownEnv', 'Unknown environment \\'%1\\'', env);\n}\n\n/**\n * Filter for removing spacing following \\nonscript\n * @param{ParseOptions} data The active tex parser.\n */\nfunction filterNonscript({data}: {data: ParseOptions}) {\n  for (const mml of data.getList('nonscript')) {\n    //\n    //  This is the list of mspace elements or mrow > mstyle > mspace\n    //    that followed \\nonscript macros to be tested for removal.\n    //\n    if (mml.attributes.get('scriptlevel') > 0) {\n      //\n      //  The mspace needs to be removed, since we are in a script style.\n      //  Remove it from the DOM and from the list of mspace elements.\n      //\n      const parent = mml.parent;\n      parent.childNodes.splice(parent.childIndex(mml), 1);\n      data.removeFromList(mml.kind, [mml]);\n      //\n      //  If it is an mrow > mstyle > mspace, then we have just\n      //    removed the mrow from its list, and must remove\n      //    the mstyle and mspace from their lists as well.\n      //\n      if (mml.isKind('mrow')) {\n        const mstyle = mml.childNodes[0] as MmlNode;\n        data.removeFromList('mstyle', [mstyle]);\n        data.removeFromList('mspace', mstyle.childNodes[0].childNodes as MmlNode[]);\n      }\n    } else if (mml.isKind('mrow')) {\n      //\n      // This is an mrow > mstyle > mspace  but we're not in a script\n      //   style, so remove the mrow that we had added in the NonscriptItem.\n      //\n      mml.parent.replaceChild(mml.childNodes[0], mml);\n      data.removeFromList('mrow', [mml]);\n    }\n  }\n}\n\n\n/**\n * @constructor\n * @extends {AbstractTags}\n */\nexport class BaseTags extends AbstractTags { }\n\n\n/**\n * The base configuration.\n * @type {Configuration}\n */\nexport const BaseConfiguration: Configuration = Configuration.create(\n  'base',  {\n    handler: {\n      character: ['command', 'special', 'letter', 'digit'],\n      delimiter: ['delimiter'],\n      // Note, that the position of the delimiters here is important!\n      macro: ['delimiter', 'macros', 'mathchar0mi', 'mathchar0mo', 'mathchar7'],\n      environment: ['environment']\n    },\n    fallback: {\n      character: Other,\n      macro: csUndefined,\n      environment: envUndefined\n    },\n    items: {\n      // BaseItems\n      [bitem.StartItem.prototype.kind]: bitem.StartItem,\n      [bitem.StopItem.prototype.kind]: bitem.StopItem,\n      [bitem.OpenItem.prototype.kind]: bitem.OpenItem,\n      [bitem.CloseItem.prototype.kind]: bitem.CloseItem,\n      [bitem.PrimeItem.prototype.kind]: bitem.PrimeItem,\n      [bitem.SubsupItem.prototype.kind]: bitem.SubsupItem,\n      [bitem.OverItem.prototype.kind]: bitem.OverItem,\n      [bitem.LeftItem.prototype.kind]: bitem.LeftItem,\n      [bitem.Middle.prototype.kind]: bitem.Middle,\n      [bitem.RightItem.prototype.kind]: bitem.RightItem,\n      [bitem.BeginItem.prototype.kind]: bitem.BeginItem,\n      [bitem.EndItem.prototype.kind]: bitem.EndItem,\n      [bitem.StyleItem.prototype.kind]: bitem.StyleItem,\n      [bitem.PositionItem.prototype.kind]: bitem.PositionItem,\n      [bitem.CellItem.prototype.kind]: bitem.CellItem,\n      [bitem.MmlItem.prototype.kind]: bitem.MmlItem,\n      [bitem.FnItem.prototype.kind]: bitem.FnItem,\n      [bitem.NotItem.prototype.kind]: bitem.NotItem,\n      [bitem.NonscriptItem.prototype.kind]: bitem.NonscriptItem,\n      [bitem.DotsItem.prototype.kind]: bitem.DotsItem,\n      [bitem.ArrayItem.prototype.kind]: bitem.ArrayItem,\n      [bitem.EqnArrayItem.prototype.kind]: bitem.EqnArrayItem,\n      [bitem.EquationItem.prototype.kind]: bitem.EquationItem\n    },\n    options: {\n      maxMacros: 1000,\n      baseURL: (typeof(document) === 'undefined' ||\n                document.getElementsByTagName('base').length === 0) ?\n                '' : String(document.location).replace(/#.*$/, '')\n    },\n    tags: {\n      base: BaseTags\n    },\n    postprocessors: [[filterNonscript, -4]]\n  }\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8294, "column": 0}, "map": {"version":3,"file":"tex.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the TeX InputJax object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractInputJax} from '../core/InputJax.js';\nimport {userOptions, separateOptions, OptionList} from '../util/Options.js';\nimport {MathDocument} from '../core/MathDocument.js';\nimport {MathItem} from '../core/MathItem.js';\nimport {MmlNode} from '../core/MmlTree/MmlNode.js';\nimport {MmlFactory} from '../core/MmlTree/MmlFactory.js';\n\nimport {FindTeX} from './tex/FindTeX.js';\n\nimport FilterUtil from './tex/FilterUtil.js';\nimport NodeUtil from './tex/NodeUtil.js';\nimport TexParser from './tex/TexParser.js';\nimport TexError from './tex/TexError.js';\nimport ParseOptions from './tex/ParseOptions.js';\nimport {TagsFactory} from './tex/Tags.js';\nimport {ParserConfiguration} from './tex/Configuration.js';\n// Import base as it is the default package loaded.\nimport './tex/base/BaseConfiguration.js';\n\n\n/*****************************************************************/\n/*\n *  Implements the TeX class (extends AbstractInputJax)\n */\n\n/**\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class TeX<N, T, D> extends AbstractInputJax<N, T, D> {\n\n  /**\n   * Name of input jax.\n   * @type {string}\n   */\n  public static NAME: string = 'TeX';\n\n  /**\n   * Default options for the jax.\n   * @type {OptionList}\n   */\n  public static OPTIONS: OptionList = {\n    ...AbstractInputJax.OPTIONS,\n    FindTeX: null,\n    packages: ['base'],\n    // Digit pattern to match numbers.\n    digits: /^(?:[0-9]+(?:\\{,\\}[0-9]{3})*(?:\\.[0-9]*)?|\\.[0-9]+)/,\n    // Maximum size of TeX string to process.\n    maxBuffer: 5 * 1024,\n    formatError: (jax: TeX<any, any, any>, err: TexError) => jax.formatError(err)\n  };\n\n  /**\n   * The FindTeX instance used for locating TeX in strings\n   */\n  protected findTeX: FindTeX<N, T, D>;\n\n  /**\n   * The configuration of the TeX jax.\n   * @type {ParserConfiguration}\n   */\n  protected configuration: ParserConfiguration;\n\n  /**\n   * The LaTeX code that is parsed.\n   * @type {string}\n   */\n  protected latex: string;\n\n  /**\n   * The Math node that results from parsing.\n   * @type {MmlNode}\n   */\n  protected mathNode: MmlNode;\n\n  private _parseOptions: ParseOptions;\n\n  /**\n   * Initialises the configurations.\n   * @param {string[]} packages Names of packages.\n   * @return {Configuration} The configuration object.\n   */\n  protected static configure(packages: (string | [string, number])[]): ParserConfiguration {\n    let configuration = new ParserConfiguration(packages, ['tex']);\n    configuration.init();\n    return configuration;\n  }\n\n\n  /**\n   * Initialises the Tags factory. Add tagging structures from packages and set\n   * tagging to given default.\n   * @param {ParseOptions} options The parse options.\n   * @param {Configuration} configuration The configuration.\n   */\n  protected static tags(options: ParseOptions, configuration: ParserConfiguration) {\n    TagsFactory.addTags(configuration.tags);\n    TagsFactory.setDefault(options.options.tags);\n    options.tags = TagsFactory.getDefault();\n    options.tags.configuration = options;\n  }\n\n\n  /**\n   * @override\n   */\n  constructor(options: OptionList = {}) {\n    const [rest, tex, find] = separateOptions(options, TeX.OPTIONS, FindTeX.OPTIONS);\n    super(tex);\n    this.findTeX = this.options['FindTeX'] || new FindTeX(find);\n    const packages = this.options.packages;\n    const configuration = this.configuration = TeX.configure(packages);\n    const parseOptions = this._parseOptions =\n      new ParseOptions(configuration, [this.options, TagsFactory.OPTIONS]);\n    userOptions(parseOptions.options, rest);\n    configuration.config(this);\n    TeX.tags(parseOptions, configuration);\n    this.postFilters.add(FilterUtil.cleanSubSup, -6);\n    this.postFilters.add(FilterUtil.setInherited, -5);\n    this.postFilters.add(FilterUtil.moveLimits, -4);\n    this.postFilters.add(FilterUtil.cleanStretchy, -3);\n    this.postFilters.add(FilterUtil.cleanAttributes, -2);\n    this.postFilters.add(FilterUtil.combineRelations, -1);\n  }\n\n  /**\n   * @override\n   */\n  public setMmlFactory(mmlFactory: MmlFactory) {\n    super.setMmlFactory(mmlFactory);\n    this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);\n  }\n\n\n  /**\n   * @return {ParseOptions} The parse options that configure this JaX instance.\n   */\n  public get parseOptions(): ParseOptions {\n    return this._parseOptions;\n  }\n\n  /**\n   * @override\n   */\n  public reset(tag: number = 0) {\n    this.parseOptions.tags.reset(tag);\n  }\n\n\n  /**\n   * @override\n   */\n  public compile(math: MathItem<N, T, D>, document: MathDocument<N, T, D>): MmlNode {\n    this.parseOptions.clear();\n    this.executeFilters(this.preFilters, math, document, this.parseOptions);\n    let display = math.display;\n    this.latex = math.math;\n    let node: MmlNode;\n    this.parseOptions.tags.startEquation(math);\n    let globalEnv;\n    try {\n      let parser = new TexParser(this.latex,\n                                 {display: display, isInner: false},\n                                 this.parseOptions);\n      node = parser.mml();\n      globalEnv = parser.stack.global;\n    } catch (err) {\n      if (!(err instanceof TexError)) {\n        throw err;\n      }\n      this.parseOptions.error = true;\n      node = this.options.formatError(this, err);\n    }\n    node = this.parseOptions.nodeFactory.create('node', 'math', [node]);\n    if (globalEnv?.indentalign) {\n      NodeUtil.setAttribute(node, 'indentalign', globalEnv.indentalign);\n    }\n    if (display) {\n      NodeUtil.setAttribute(node, 'display', 'block');\n    }\n    this.parseOptions.tags.finishEquation(math);\n    this.parseOptions.root = node;\n    this.executeFilters(this.postFilters, math, document, this.parseOptions);\n    this.mathNode = this.parseOptions.root;\n    return this.mathNode;\n  }\n\n\n  /**\n   * @override\n   */\n  public findMath(strings: string[]) {\n    return this.findTeX.findMath(strings);\n  }\n\n  /**\n   * Default formatter for error messages:\n   *   wrap an error into a node for output.\n   * @param {TeXError} err The TexError.\n   * @return {Node} The merror node.\n   */\n  public formatError(err: TexError): MmlNode {\n    let message = err.message.replace(/\\n.*/, '');\n    return this.parseOptions.nodeFactory.create(\n      'error', message, err.id, this.latex);\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8480, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}