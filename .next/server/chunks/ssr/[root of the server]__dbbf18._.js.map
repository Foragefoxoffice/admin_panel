{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/utils/config.js"],"sourcesContent":["export const API_BASE_URL = \"https://mitoslearning.in/api\";\r\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/contexts/useAuth.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { API_BASE_URL } from \"@/utils/config\";\r\n\r\nconst useAuth = () => {\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n    if (!token) {\r\n      router.push(\"/login\");\r\n      return;\r\n    }\r\n\r\n    const refreshAccessToken = async () => {\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/auth/refresh`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ refreshToken }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          localStorage.setItem(\"token\", data.accessToken);\r\n          console.log(\"Token refreshed successfully.\");\r\n        } else {\r\n          console.warn(\"Refresh token expired, logging out...\");\r\n          localStorage.removeItem(\"token\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          router.push(\"/login\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error refreshing token:\", error);\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        router.push(\"/login\");\r\n      }\r\n    };\r\n\r\n    // Refresh token every 5 hours\r\n    const interval = setInterval(refreshAccessToken, 5 * 60 * 60 * 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [router]);\r\n\r\n};\r\n\r\nexport default useAuth;\r\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;AAJA;;;;AAMA,MAAM,UAAU;IACd,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,MAAM,eAAe,aAAa,OAAO,CAAC;QAE1C,IAAI,CAAC,OAAO;YACV,OAAO,IAAI,CAAC;YACZ;QACF;QAEA,MAAM,qBAAqB;YACzB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,GAAG,sHAAA,CAAA,eAAY,CAAC,aAAa,CAAC,EAAE;oBAC3D,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;wBAAE;oBAAa;gBACtC;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAEhC,IAAI,SAAS,EAAE,EAAE;oBACf,aAAa,OAAO,CAAC,SAAS,KAAK,WAAW;oBAC9C,QAAQ,GAAG,CAAC;gBACd,OAAO;oBACL,QAAQ,IAAI,CAAC;oBACb,aAAa,UAAU,CAAC;oBACxB,aAAa,UAAU,CAAC;oBACxB,OAAO,IAAI,CAAC;gBACd;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2BAA2B;gBACzC,aAAa,UAAU,CAAC;gBACxB,aAAa,UAAU,CAAC;gBACxB,OAAO,IAAI,CAAC;YACd;QACF;QAEA,8BAA8B;QAC9B,MAAM,WAAW,YAAY,oBAAoB,IAAI,KAAK,KAAK;QAE/D,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAO;AAEb;uCAEe"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/contexts/FormulaFormatter.js"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\nconst subscriptMap = {\r\n  \"0\": \"₀\", \"1\": \"₁\", \"2\": \"₂\", \"3\": \"₃\", \"4\": \"₄\",\r\n  \"5\": \"₅\", \"6\": \"₆\", \"7\": \"₇\", \"8\": \"₈\", \"9\": \"₉\",\r\n  \"a\": \"ₐ\", \"e\": \"ₑ\", \"h\": \"ₕ\", \"i\": \"ᵢ\", \"j\": \"ⱼ\",\r\n  \"k\": \"ₖ\", \"l\": \"ₗ\", \"m\": \"ₘ\", \"n\": \"ₙ\", \"o\": \"ₒ\",\r\n  \"p\": \"ₚ\", \"r\": \"ᵣ\", \"s\": \"ₛ\", \"t\": \"ₜ\", \"u\": \"ᵤ\",\r\n  \"v\": \"ᵥ\", \"x\": \"ₓ\"\r\n};\r\n\r\nconst superscriptMap = {\r\n  \"0\": \"⁰\", \"1\": \"¹\", \"2\": \"²\", \"3\": \"³\", \"4\": \"⁴\",\r\n  \"5\": \"⁵\", \"6\": \"⁶\", \"7\": \"⁷\", \"8\": \"⁸\", \"9\": \"⁹\",\r\n  \"+\": \"⁺\", \"-\": \"⁻\", \"=\": \"⁼\", \"(\": \"⁽\", \")\": \"⁾\",\r\n  \"n\": \"ⁿ\", \"⊕\": \"⊕\", \"⊖\": \"⊖\",\r\n};\r\n\r\nconst greekMap = {\r\n  \"alpha\": \"α\", \"beta\": \"β\", \"gamma\": \"γ\", \"delta\": \"δ\", \"epsilon\": \"ε\",\r\n  \"zeta\": \"ζ\", \"eta\": \"η\", \"theta\": \"θ\", \"iota\": \"ι\", \"kappa\": \"κ\",\r\n  \"lambda\": \"λ\", \"mu\": \"μ\", \"nu\": \"ν\", \"xi\": \"ξ\", \"omicron\": \"ο\",\r\n  \"pi\": \"π\", \"rho\": \"ρ\", \"sigma\": \"σ\", \"tau\": \"τ\", \"upsilon\": \"υ\",\r\n  \"phi\": \"φ\", \"chi\": \"χ\", \"psi\": \"ψ\", \"omega\": \"ω\"\r\n};\r\n\r\nconst formatChemicalFormula = (text) => {\r\n  if (!text) return \"\";\r\n\r\n  // Replace Greek letters\r\n  text = text.replace(/\\b(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\b/gi,\r\n    (match) => greekMap[match.toLowerCase()] || match\r\n  );\r\n\r\n  // Handle subscripts\r\n  text = text.replace(/_\\{([^}]+)}/g, (_, match) =>\r\n    match.split(\"\").map(char => subscriptMap[char] || char).join(\"\")\r\n  );\r\n  text = text.replace(/_([a-z0-9]+)/gi, (_, match) =>\r\n    match.split(\"\").map(char => subscriptMap[char] || char).join(\"\")\r\n  );\r\n\r\n  // Handle superscripts\r\n  text = text.replace(/\\^\\{([^}]+)}/g, (_, match) =>\r\n    match.split(\"\").map(char => superscriptMap[char] || char).join(\"\")\r\n  );\r\n  text = text.replace(/\\^([0-9+\\-()=n⊕⊖]+)/gi, (_, match) =>\r\n    match.split(\"\").map(char => superscriptMap[char] || char).join(\"\")\r\n  );\r\n\r\n  // Improve spacing around arrows and other symbols\r\n  text = text\r\n    .replace(/([A-Za-z0-9])([→+])/g, \"$1 $2 \")\r\n    .replace(/([→+])([A-Za-z0-9])/g, \" $1 $2\")\r\n    .replace(/→┴/g, \" →┴ \");\r\n\r\n  return text;\r\n};\r\n\r\nconst FormulaFormatter = ({ text, className = \"\" }) => {\r\n  return (\r\n    <span\r\n      className={className}\r\n      dangerouslySetInnerHTML={{ __html: formatChemicalFormula(text) }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormulaFormatter;"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,eAAe;IACnB,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAC7C,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAC7C,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAC7C,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAC7C,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAC7C,KAAK;IAAK,KAAK;AACjB;AAEA,MAAM,iBAAiB;IACrB,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAC7C,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAC7C,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAAK,KAAK;IAC7C,KAAK;IAAK,KAAK;IAAK,KAAK;AAC3B;AAEA,MAAM,WAAW;IACf,SAAS;IAAK,QAAQ;IAAK,SAAS;IAAK,SAAS;IAAK,WAAW;IAClE,QAAQ;IAAK,OAAO;IAAK,SAAS;IAAK,QAAQ;IAAK,SAAS;IAC7D,UAAU;IAAK,MAAM;IAAK,MAAM;IAAK,MAAM;IAAK,WAAW;IAC3D,MAAM;IAAK,OAAO;IAAK,SAAS;IAAK,OAAO;IAAK,WAAW;IAC5D,OAAO;IAAK,OAAO;IAAK,OAAO;IAAK,SAAS;AAC/C;AAEA,MAAM,wBAAwB,CAAC;IAC7B,IAAI,CAAC,MAAM,OAAO;IAElB,wBAAwB;IACxB,OAAO,KAAK,OAAO,CAAC,uIAClB,CAAC,QAAU,QAAQ,CAAC,MAAM,WAAW,GAAG,IAAI;IAG9C,oBAAoB;IACpB,OAAO,KAAK,OAAO,CAAC,gBAAgB,CAAC,GAAG,QACtC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAA,OAAQ,YAAY,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC;IAE/D,OAAO,KAAK,OAAO,CAAC,kBAAkB,CAAC,GAAG,QACxC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAA,OAAQ,YAAY,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC;IAG/D,sBAAsB;IACtB,OAAO,KAAK,OAAO,CAAC,iBAAiB,CAAC,GAAG,QACvC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAA,OAAQ,cAAc,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC;IAEjE,OAAO,KAAK,OAAO,CAAC,yBAAyB,CAAC,GAAG,QAC/C,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAA,OAAQ,cAAc,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC;IAGjE,kDAAkD;IAClD,OAAO,KACJ,OAAO,CAAC,wBAAwB,UAChC,OAAO,CAAC,wBAAwB,UAChC,OAAO,CAAC,OAAO;IAElB,OAAO;AACT;AAEA,MAAM,mBAAmB,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE;IAChD,qBACE,8OAAC;QACC,WAAW;QACX,yBAAyB;YAAE,QAAQ,sBAAsB;QAAM;;;;;;AAGrE;uCAEe"}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}