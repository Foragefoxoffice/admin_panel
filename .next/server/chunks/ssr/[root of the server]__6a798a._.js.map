{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Axios instance with base URL\r\nconst API = axios.create({\r\n  baseURL: \"https://mitoslearning.in/api\",\r\n});\r\n\r\n// Interceptor to attach the token with every request\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// ==========================\r\n// General Data Fetching APIs\r\n// ==========================\r\n\r\nexport const fetchSubjects = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/subjects\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchPortions = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/portions\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSubjectsByPortions = async (portionId) => {\r\n  try {\r\n    const { data } = await API.get(`/subjects/subject/${portionId}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching subjects by portion:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchChaptersBySubject = async (subjectId) => {\r\n  try {\r\n    const { data } = await API.get(`/chapters/chapter/${subjectId}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chapters by subject:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchChapter = async (subjectId) => {\r\n  try {\r\n    const { data } = await API.get(`/chapters/chapter/${subjectId}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chapter:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchChapterTopics = async (chapterId) => {\r\n  try {\r\n    const { data } = await API.get(`/topics/chapter/${chapterId}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching topics by chapter:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchTopics = (chapterId) => API.get(`/topics/topic/${chapterId}`);\r\nexport const fetchQuestionType = () => API.get(\"/question-types\");\r\n\r\nexport const fetchQuestion = (topicId) =>\r\n  API.get(`/questions?topicId=${topicId}`);\r\n\r\nexport const fetchQuestions = (topics) => {\r\n  const topicIds = topics.join(\",\");\r\n  return API.get(`/questions/topics?topicIds=${topicIds}`);\r\n};\r\n\r\nexport const fetchQuestionsByTypes = (selectedQuestionTypes, chapterId) => {\r\n  const questionTypeIds = selectedQuestionTypes.join(\",\");\r\n  return API.get(`/questions/questiontype?questionTypeIds=${questionTypeIds}&chapterId=${chapterId}`);\r\n};\r\n\r\nexport const fetchFullTestQuestion = () => API.get(\"/questions/fulltest\");\r\n\r\nexport const fetchFullTestByPortion = (portionId) =>\r\n  API.get(`/questions/portion/${portionId}`);\r\n\r\nexport const fetchFullTestBySubject = (portionId, subjectId) =>\r\n  API.get(`/questions/portion/${portionId}/subject/${subjectId}`);\r\n\r\nexport const fetchFullTestByChapter = (portionId, subjectId, chapterId) =>\r\n  API.get(`/questions/portion/${portionId}/subject/${subjectId}/chapter/${chapterId}`);\r\n\r\nexport const fetchCustomTestQuestions = async (\r\n  portionId,\r\n  subjectId,\r\n  chapterId,\r\n  topicIds,\r\n  questionCount\r\n) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"No token found. Please log in.\");\r\n  }\r\n\r\n  const response = await fetch(\"https://mitoslearning.in/api/questions/custom\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      portionId,\r\n      subjectId,\r\n      chapterId,\r\n      topicIds,\r\n      questionCount,\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || \"Failed to fetch custom test questions\");\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const fetchResultByUser = (userId) =>\r\n  API.get(`/tests/${userId}`);\r\n\r\nexport const fetchLeaderBoard = async () => {\r\n  try {\r\n    const { data } = await API.get(`/tests/a`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching leaderboard:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBlockStatus = async (type, id, isPremium) => {\r\n  try {\r\n    const { data } = await API.post(\r\n      \"/block\",\r\n      { type, id, isPremium },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error updating block status:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ==========================\r\n// Wrong Question Report APIs\r\n// ==========================\r\n\r\nexport const getAllWrongQuestionReports = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/wrong-reports\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching wrong question reports:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateWrongQuestionReportStatus = async (id, status) => {\r\n  try {\r\n    const { data } = await API.patch(`/wrong-reports/${id}`, { status });\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error updating report status:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Optional: Submit new report\r\nexport const submitWrongQuestionReport = async (questionId, reason) => {\r\n  try {\r\n    const { data } = await API.post(\"/wrong-reports\", {\r\n      questionId,\r\n      reason,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error submitting wrong question report:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default API;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/components/Notification.jsx"],"sourcesContent":["\"use client\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { FiCheck, FiX, FiXCircle, FiInfo, FiAlertTriangle } from \"react-icons/fi\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Notification = ({ message, type = \"success\", onClose, duration = 3000 }) => {\r\n  const config = {\r\n    success: {\r\n      icon: <FiCheck className=\"mr-2 \"  />,\r\n      bgColor: \"bg-green-500\",\r\n    },\r\n    error: {\r\n      icon: <FiXCircle className=\"mr-2\" />,\r\n      bgColor: \"bg-red-500\",\r\n    },\r\n    info: {\r\n      icon: <FiInfo className=\"mr-2\" />,\r\n      bgColor: \"bg-blue-500\",\r\n    },\r\n    warning: {\r\n      icon: <FiAlertTriangle className=\"mr-2\" />,\r\n      bgColor: \"bg-yellow-500 text-black\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (onClose) onClose();\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [onClose, duration]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0, y: -30, scale: 0.9 }}\r\n        animate={{ opacity: 1, y: 0, scale: 1 }}\r\n        exit={{ opacity: 0, y: -20, scale: 0.9 }}\r\n        transition={{ duration: 0.5, type: \"spring\", stiffness: 300 }}\r\n        className={`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-xl ${config[type].bgColor} text-white flex items-center space-x-2 min-w-[280px]`}\r\n      >\r\n        {config[type].icon}\r\n        <span className=\"flex-1 text-white\">{message}</span>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"ml-2 bg-white text-[#35095E] hover:bg-white/20 rounded-full p-1 transition\"\r\n        >\r\n          <FiX className=\"text-lg\" />\r\n        </button>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n"],"names":[],"mappings":";;;;AAGA;AADA;AADA;AAAA;AADA;;;;;AAKA,MAAM,eAAe,CAAC,EAAE,OAAO,EAAE,OAAO,SAAS,EAAE,OAAO,EAAE,WAAW,IAAI,EAAE;IAC3E,MAAM,SAAS;QACb,SAAS;YACP,oBAAM,8OAAC,8IAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;YACzB,SAAS;QACX;QACA,OAAO;YACL,oBAAM,8OAAC,8IAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YAC3B,SAAS;QACX;QACA,MAAM;YACJ,oBAAM,8OAAC,8IAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;YACxB,SAAS;QACX;QACA,SAAS;YACP,oBAAM,8OAAC,8IAAA,CAAA,kBAAe;gBAAC,WAAU;;;;;;YACjC,SAAS;QACX;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,WAAW;YACvB,IAAI,SAAS;QACf,GAAG;QAEH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;QAAS;KAAS;IAEtB,qBACE,8OAAC,yLAAA,CAAA,kBAAe;kBACd,cAAA,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;YACT,SAAS;gBAAE,SAAS;gBAAG,GAAG,CAAC;gBAAI,OAAO;YAAI;YAC1C,SAAS;gBAAE,SAAS;gBAAG,GAAG;gBAAG,OAAO;YAAE;YACtC,MAAM;gBAAE,SAAS;gBAAG,GAAG,CAAC;gBAAI,OAAO;YAAI;YACvC,YAAY;gBAAE,UAAU;gBAAK,MAAM;gBAAU,WAAW;YAAI;YAC5D,WAAW,CAAC,kDAAkD,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,qDAAqD,CAAC;;gBAE1I,MAAM,CAAC,KAAK,CAAC,IAAI;8BAClB,8OAAC;oBAAK,WAAU;8BAAqB;;;;;;8BACrC,8OAAC;oBACC,SAAS;oBACT,WAAU;8BAEV,cAAA,8OAAC,8IAAA,CAAA,MAAG;wBAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;AAKzB;uCAEe"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/app/admin/reports/page.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport {\r\n  getAllWrongQuestionReports,\r\n  updateWrongQuestionReportStatus,\r\n} from \"@/utils/api\";\r\nimport { TestContext } from \"@/contexts/TestContext\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Notification from \"@/components/Notification\";\r\nimport { FiEdit2 } from \"react-icons/fi\";\r\n\r\nexport default function WrongQuestionReportsPage() {\r\n  const [reports, setReports] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [notification, setNotification] = useState({\r\n    show: false,\r\n    message: \"\",\r\n    type: \"success\",\r\n  });\r\n\r\n  const router = useRouter();\r\n  const { setTestData } = useContext(TestContext);\r\n\r\n  useEffect(() => {\r\n    const fetchReports = async () => {\r\n      try {\r\n        const data = await getAllWrongQuestionReports();\r\n        setReports(data);\r\n      } catch (err) {\r\n        setError(\"Failed to load reports. Please try again.\");\r\n        console.error(\"Error fetching reports:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchReports();\r\n  }, []);\r\n\r\n  const handleStatusUpdate = async (reportId, newStatus) => {\r\n    try {\r\n      await updateWrongQuestionReportStatus(reportId, newStatus);\r\n      setReports((prev) =>\r\n        prev.map((report) =>\r\n          report.id === reportId ? { ...report, status: newStatus } : report\r\n        )\r\n      );\r\n      setNotification({\r\n        show: true,\r\n        message: \"Report status updated successfully\",\r\n        type: \"success\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error updating report status:\", error);\r\n      setNotification({\r\n        show: true,\r\n        message: \"Failed to update report status\",\r\n        type: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdate = useCallback(\r\n    (questionId) => {\r\n      setTestData({ QuestionId: questionId });\r\n      router.push(`/admin/edit/`);\r\n    },\r\n    [setTestData, router]\r\n  );\r\n\r\n  if (loading) {\r\n    return <div className=\"p-6 text-center text-gray-600\">Loading reports...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"p-6 text-center text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-3xl font-semibold mb-6 text-gray-800\">\r\n        ⚠️ Wrong Question Reports\r\n      </h1>\r\n\r\n      {reports.length === 0 ? (\r\n        <p className=\"text-gray-600\">No reports found.</p>\r\n      ) : (\r\n        <div className=\"overflow-x-auto bg-white shadow-md rounded-xl border\">\r\n          <table className=\"min-w-full text-sm text-left border-collapse\">\r\n            <thead className=\"bg-gray-100 text-gray-700 uppercase tracking-wider\">\r\n              <tr>\r\n                <th className=\"px-4 py-3 border\">#</th>\r\n                <th className=\"px-4 py-3 border\">Question ID</th>\r\n                <th className=\"px-4 py-3 border\">Reason</th>\r\n                <th className=\"px-4 py-3 border\">Status</th>\r\n                <th className=\"px-4 py-3 border\">Created</th>\r\n                <th className=\"px-4 py-3 border\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"text-gray-700\">\r\n              {reports.map((report, index) => (\r\n                <tr\r\n                  key={report.id}\r\n                  className=\"hover:bg-gray-50 transition duration-200\"\r\n                >\r\n                  <td className=\"px-4 py-2 border\">{index + 1}</td>\r\n                  <td className=\"px-4 py-2 border font-mono text-blue-600\">\r\n                    {report.questionId}\r\n                  </td>\r\n                  <td className=\"px-4 py-2 border\">{report.reason}</td>\r\n                  <td className=\"px-4 py-2 border\">\r\n                    <span\r\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                        report.status === \"pending\"\r\n                          ? \"bg-yellow-100 text-yellow-800\"\r\n                          : report.status === \"resolved\"\r\n                          ? \"bg-green-100 text-green-700\"\r\n                          : \"bg-red-100 text-red-700\"\r\n                      }`}\r\n                    >\r\n                      {report.status}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-4 py-2 border\">\r\n                    {new Date(report.createdAt).toLocaleString()}\r\n                  </td>\r\n                  <td className=\"px-4 py-2 border\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <select\r\n                        value={report.status}\r\n                        onChange={(e) =>\r\n                          handleStatusUpdate(report.id, e.target.value)\r\n                        }\r\n                        className=\"border border-gray-300 rounded px-2 py-1 text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                      >\r\n                        <option value=\"pending\">Pending</option>\r\n                        <option value=\"resolved\">Resolved</option>\r\n                        <option value=\"rejected\">Rejected</option>\r\n                      </select>\r\n\r\n                      <button\r\n                        onClick={() => handleUpdate(report.questionId)}\r\n                        className=\"text-white p-1 px-2 rounded-sm flex gap-2 hover:text-white transition\"\r\n                        title=\"Edit Question\"\r\n                      >\r\n                        <FiEdit2 className=\"text-lg\" /> Edit\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {notification.show && (\r\n        <Notification\r\n          message={notification.message}\r\n          type={notification.type}\r\n          onClose={() => setNotification((prev) => ({ ...prev, show: false }))}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 784, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}