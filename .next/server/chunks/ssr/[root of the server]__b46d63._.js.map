{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Axios instance with base URL\r\nconst API = axios.create({\r\n  baseURL: \"https://mitoslearning.in/api\",\r\n});\r\n\r\n// Interceptor to attach the token with every request\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// ==========================\r\n// General Data Fetching APIs\r\n// ==========================\r\n\r\nexport const fetchSubjects = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/subjects\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchPortions = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/portions\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSubjectsByPortions = async (portionId) => {\r\n  try {\r\n    const { data } = await API.get(`/subjects/subject/${portionId}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching subjects by portion:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchChaptersBySubject = async (subjectId) => {\r\n  try {\r\n    const { data } = await API.get(`/chapters/chapter/${subjectId}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chapters by subject:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchChapter = async (subjectId) => {\r\n  try {\r\n    const { data } = await API.get(`/chapters/chapter/${subjectId}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chapter:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchChapterTopics = async (chapterId) => {\r\n  try {\r\n    const { data } = await API.get(`/topics/chapter/${chapterId}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching topics by chapter:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchTopics = (chapterId) => API.get(`/topics/topic/${chapterId}`);\r\nexport const fetchQuestionType = () => API.get(\"/question-types\");\r\n\r\nexport const fetchQuestion = (topicId) =>\r\n  API.get(`/questions?topicId=${topicId}`);\r\n\r\nexport const fetchQuestions = (topics) => {\r\n  const topicIds = topics.join(\",\");\r\n  return API.get(`/questions/topics?topicIds=${topicIds}`);\r\n};\r\n\r\nexport const fetchQuestionsByTypes = (selectedQuestionTypes, chapterId) => {\r\n  const questionTypeIds = selectedQuestionTypes.join(\",\");\r\n  return API.get(`/questions/questiontype?questionTypeIds=${questionTypeIds}&chapterId=${chapterId}`);\r\n};\r\n\r\nexport const fetchFullTestQuestion = () => API.get(\"/questions/fulltest\");\r\n\r\nexport const fetchFullTestByPortion = (portionId) =>\r\n  API.get(`/questions/portion/${portionId}`);\r\n\r\nexport const fetchFullTestBySubject = (portionId, subjectId) =>\r\n  API.get(`/questions/portion/${portionId}/subject/${subjectId}`);\r\n\r\nexport const fetchFullTestByChapter = (portionId, subjectId, chapterId) =>\r\n  API.get(`/questions/portion/${portionId}/subject/${subjectId}/chapter/${chapterId}`);\r\n\r\nexport const fetchCustomTestQuestions = async (\r\n  portionId,\r\n  subjectId,\r\n  chapterId,\r\n  topicIds,\r\n  questionCount\r\n) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    throw new Error(\"No token found. Please log in.\");\r\n  }\r\n\r\n  const response = await fetch(\"https://mitoslearning.in/api/questions/custom\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      portionId,\r\n      subjectId,\r\n      chapterId,\r\n      topicIds,\r\n      questionCount,\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || \"Failed to fetch custom test questions\");\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const fetchResultByUser = (userId) =>\r\n  API.get(`/tests/${userId}`);\r\n\r\nexport const fetchLeaderBoard = async () => {\r\n  try {\r\n    const { data } = await API.get(`/tests/a`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching leaderboard:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBlockStatus = async (type, id, isPremium) => {\r\n  try {\r\n    const { data } = await API.post(\r\n      \"/block\",\r\n      { type, id, isPremium },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error updating block status:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ==========================\r\n// Wrong Question Report APIs\r\n// ==========================\r\n\r\nexport const getAllWrongQuestionReports = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/wrong-reports\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching wrong question reports:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateWrongQuestionReportStatus = async (id, status) => {\r\n  try {\r\n    const { data } = await API.patch(`/wrong-reports/${id}`, { status });\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error updating report status:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Optional: Submit new report\r\nexport const submitWrongQuestionReport = async (questionId, reason) => {\r\n  try {\r\n    const { data } = await API.post(\"/wrong-reports\", {\r\n      questionId,\r\n      reason,\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error submitting wrong question report:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// ==========================\r\n// User APIs\r\n// ==========================\r\n\r\n// âœ… Get current logged-in user profile\r\nexport const fetchCurrentUser = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/users/me\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching current user:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// âœ… Update current user profile (with file upload)\r\nexport const updateUserProfile = async (id, formData) => {\r\n  try {\r\n    const { data } = await API.put(`/users/update-profile/${id}`, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    });\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error updating user profile:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ðŸ”’ Admin only: Get all users\r\nexport const fetchAllUsers = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/users\");\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching all users:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ðŸ”’ Admin only: Get single user by ID\r\nexport const fetchUserById = async (id) => {\r\n  try {\r\n    const { data } = await API.get(`/users/${id}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching user by ID:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ðŸ”’ Admin only: Create a new user\r\nexport const createUser = async (userData) => {\r\n  try {\r\n    const { data } = await API.post(\"/users\", userData);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error creating user:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ðŸ”’ Admin only: Delete a user by ID\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    const { data } = await API.delete(`/users/${id}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting user:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// âœ… Flip a PDF's premium flag (true / false)\r\nexport const updatePdfPremium = async (pdfId, isPremium) => {\r\n  try {\r\n    const { data } = await API.patch(`/pdf/${pdfId}/premium`, { isPremium });\r\n    return data; // { message, pdf }\r\n  } catch (error) {\r\n    console.error(\"Error updating PDF premium flag:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// âœ… Get topics that have topic-level PDFs for a chapter\r\n// (matches GET /chapters/:chapterId/topics-with-topic-pdfs)\r\nexport const fetchTopicsWithPDF = async (chapterId) => {\r\n  try {\r\n    const { data } = await API.get(`/pdf/chapters/${chapterId}/topics-with-topic-pdfs`);\r\n    return data; // { chapterId, topics: [...] }\r\n  } catch (error) {\r\n    console.error(\"Error fetching topics with PDFs:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default API;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/app/admin/pdf-premium/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  fetchPortions,\r\n  fetchSubjectsByPortions,\r\n  fetchChaptersBySubject,\r\n  // this returns only topics that HAVE topic-level PDFs (with their PDFs)\r\n  fetchTopicsWithPDF,\r\n  updatePdfPremium,\r\n} from \"@/utils/api\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport {\r\n  FiChevronDown,\r\n  FiChevronRight,\r\n  FiRefreshCw,\r\n  FiCheck,\r\n  FiX,\r\n  FiSearch,\r\n  FiExternalLink,\r\n} from \"react-icons/fi\";\r\n\r\n/**\r\n * Admin / PDF Premium Manager\r\n * Portion -> Subject -> Chapter -> Topics (with PDFs) -> PDFs (toggle isPremium)\r\n */\r\nexport default function PdfPremiumManagerPage() {\r\n  // Hierarchy state\r\n  const [portions, setPortions] = useState([]);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [chapters, setChapters] = useState([]);\r\n  const [topics, setTopics] = useState([]); // topics that have pdf[] included\r\n\r\n  const [selectedPortion, setSelectedPortion] = useState(null);\r\n  const [selectedSubject, setSelectedSubject] = useState(null);\r\n  const [selectedChapter, setSelectedChapter] = useState(null);\r\n  const [selectedTopic, setSelectedTopic] = useState(null); // topic id\r\n\r\n  // Derived PDFs for the selected topic\r\n  const pdfs = useMemo(() => {\r\n    if (!selectedTopic) return [];\r\n    const t = topics.find((x) => x.id === selectedTopic);\r\n    return Array.isArray(t?.pdf) ? t.pdf : [];\r\n  }, [topics, selectedTopic]);\r\n\r\n  // UI state\r\n  const [activePanel, setActivePanel] = useState(\"portions\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  // Initial load: portions\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await fetchPortions();\r\n        setPortions(data || []);\r\n      } catch (e) {\r\n        toast.error(\"Failed to load portions\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // Helpers\r\n  const filterItems = (items, key = \"name\") => {\r\n    const term = searchTerm.trim().toLowerCase();\r\n    if (!term) return items;\r\n    return (items || []).filter((i) =>\r\n      String(i?.[key] || \"\").toLowerCase().includes(term)\r\n    );\r\n  };\r\n\r\n  const filteredPortions = filterItems(portions);\r\n  const filteredSubjects = filterItems(subjects);\r\n  const filteredChapters = filterItems(chapters);\r\n  const filteredTopics = filterItems(topics);\r\n  const filteredPdfs = filterItems(pdfs); // by pdf.name\r\n\r\n  // Navigation label/breadcrumb\r\n  const getCurrentPath = () => {\r\n    const path = [];\r\n    if (selectedPortion)\r\n      path.push(portions.find((p) => p.id === selectedPortion)?.name);\r\n    if (selectedSubject)\r\n      path.push(subjects.find((s) => s.id === selectedSubject)?.name);\r\n    if (selectedChapter)\r\n      path.push(chapters.find((c) => c.id === selectedChapter)?.name);\r\n    if (selectedTopic)\r\n      path.push(topics.find((t) => t.id === selectedTopic)?.name);\r\n    return path.filter(Boolean);\r\n  };\r\n\r\n  // Handlers: drilldown\r\n  const handlePortionSelect = async (portionId) => {\r\n    try {\r\n      setLoading(true);\r\n      setSelectedPortion(portionId);\r\n      setSelectedSubject(null);\r\n      setSelectedChapter(null);\r\n      setSelectedTopic(null);\r\n      setTopics([]);\r\n      const subs = await fetchSubjectsByPortions(portionId);\r\n      setSubjects(subs || []);\r\n      setChapters([]);\r\n      setActivePanel(\"subjects\");\r\n      toast.success(`Loaded ${subs?.length ?? 0} subjects`);\r\n    } catch {\r\n      toast.error(\"Failed to load subjects\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubjectSelect = async (subjectId) => {\r\n    try {\r\n      setLoading(true);\r\n      setSelectedSubject(subjectId);\r\n      setSelectedChapter(null);\r\n      setSelectedTopic(null);\r\n      setTopics([]);\r\n      const chaps = await fetchChaptersBySubject(subjectId);\r\n      setChapters(chaps || []);\r\n      setActivePanel(\"chapters\");\r\n      toast.success(`Loaded ${chaps?.length ?? 0} chapters`);\r\n    } catch {\r\n      toast.error(\"Failed to load chapters\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChapterSelect = async (chapterId) => {\r\n    try {\r\n      setLoading(true);\r\n      setSelectedChapter(chapterId);\r\n      setSelectedTopic(null);\r\n      // returns only topics that have at least one topic-level PDF, and includes those PDFs\r\n      const payload = await fetchTopicsWithPDF(chapterId);\r\n      const list = Array.isArray(payload?.topics) ? payload.topics : [];\r\n      setTopics(list);\r\n      setActivePanel(\"topics\");\r\n      toast.success(`Loaded ${list.length} topics with PDFs`);\r\n    } catch {\r\n      toast.error(\"Failed to load topics with PDFs\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTopicSelect = (topicId) => {\r\n    setSelectedTopic(topicId);\r\n    setActivePanel(\"pdfs\");\r\n  };\r\n\r\n  // Toggle PDF premium flag\r\n  const handleTogglePdfPremium = async (pdfId, current) => {\r\n    try {\r\n      setLoading(true);\r\n      await updatePdfPremium(pdfId, !current);\r\n      // update local state in-place (no refetch needed)\r\n      setTopics((prev) =>\r\n        prev.map((t) => {\r\n          if (t.id !== selectedTopic) return t;\r\n          const nextPdfs = (t.pdf || []).map((p) =>\r\n            p.id === pdfId ? { ...p, isPremium: !current } : p\r\n          );\r\n          return { ...t, pdf: nextPdfs };\r\n        })\r\n      );\r\n      toast.success(`PDF ${!current ? \"marked Premium\" : \"set to Free\"}`);\r\n    } catch (e) {\r\n      toast.error(\"Failed to update PDF premium flag\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const refreshAll = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setPortions(await fetchPortions());\r\n\r\n      if (selectedPortion) {\r\n        setSubjects(await fetchSubjectsByPortions(selectedPortion));\r\n      }\r\n      if (selectedSubject) {\r\n        setChapters(await fetchChaptersBySubject(selectedSubject));\r\n      }\r\n      if (selectedChapter) {\r\n        const payload = await fetchTopicsWithPDF(selectedChapter);\r\n        setTopics(Array.isArray(payload?.topics) ? payload.topics : []);\r\n      }\r\n      toast.success(\"Data refreshed\");\r\n    } catch {\r\n      toast.error(\"Failed to refresh data\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const navigateBack = () => {\r\n    if (activePanel === \"pdfs\") setActivePanel(\"topics\");\r\n    else if (activePanel === \"topics\") setActivePanel(\"chapters\");\r\n    else if (activePanel === \"chapters\") setActivePanel(\"subjects\");\r\n    else if (activePanel === \"subjects\") setActivePanel(\"portions\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-6xl mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold\">PDF Premium Manager</h1>\r\n          <p className=\"text-gray-600\">Toggle isPremium for topic PDFs</p>\r\n        </div>\r\n        <button\r\n          onClick={refreshAll}\r\n          disabled={loading}\r\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\"\r\n        >\r\n          <FiRefreshCw className={loading ? \"animate-spin\" : \"\"} />\r\n          Refresh\r\n        </button>\r\n      </div>\r\n\r\n      {/* Search + Back */}\r\n      <div className=\"mb-6 bg-white p-4 rounded shadow\">\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"relative flex-1\">\r\n            <FiSearch className=\"absolute left-3 top-3 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder={\r\n                activePanel === \"portions\"\r\n                  ? \"Search portions...\"\r\n                  : activePanel === \"subjects\"\r\n                  ? \"Search subjects...\"\r\n                  : activePanel === \"chapters\"\r\n                  ? \"Search chapters...\"\r\n                  : activePanel === \"topics\"\r\n                  ? \"Search topics...\"\r\n                  : \"Search PDFs...\"\r\n              }\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n          {activePanel !== \"portions\" && (\r\n            <button\r\n              onClick={navigateBack}\r\n              className=\"px-4 py-2 bg-gray-100 rounded hover:bg-gray-200\"\r\n            >\r\n              Back\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Breadcrumbs */}\r\n      {getCurrentPath().length > 0 && (\r\n        <div className=\"flex gap-2 mb-4 text-sm text-gray-600\">\r\n          {getCurrentPath().map((item, i) => (\r\n            <div key={i} className=\"flex items-center\">\r\n              {i > 0 && <span className=\"mx-1\">/</span>}\r\n              <span>{item}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Layout */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n        {/* Sidebar */}\r\n        <div className=\"bg-white rounded shadow p-4\">\r\n          <h3 className=\"font-medium mb-3 text-[#35095E]\">Navigation</h3>\r\n          <nav className=\"space-y-2\">\r\n            <SidebarButton\r\n              active={activePanel === \"portions\"}\r\n              onClick={() => setActivePanel(\"portions\")}\r\n              label={`Portions (${portions.length})`}\r\n              enabled\r\n            />\r\n            <SidebarButton\r\n              active={activePanel === \"subjects\"}\r\n              onClick={() => selectedPortion && setActivePanel(\"subjects\")}\r\n              label={`Subjects (${subjects.length})`}\r\n              enabled={!!selectedPortion}\r\n            />\r\n            <SidebarButton\r\n              active={activePanel === \"chapters\"}\r\n              onClick={() => selectedSubject && setActivePanel(\"chapters\")}\r\n              label={`Chapters (${chapters.length})`}\r\n              enabled={!!selectedSubject}\r\n            />\r\n            <SidebarButton\r\n              active={activePanel === \"topics\"}\r\n              onClick={() => selectedChapter && setActivePanel(\"topics\")}\r\n              label={`Topics (${topics.length})`}\r\n              enabled={!!selectedChapter}\r\n            />\r\n            <SidebarButton\r\n              active={activePanel === \"pdfs\"}\r\n              onClick={() => selectedTopic && setActivePanel(\"pdfs\")}\r\n              label={`PDFs (${pdfs.length})`}\r\n              enabled={!!selectedTopic}\r\n            />\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Main content */}\r\n        <div className=\"lg:col-span-3\">\r\n          {activePanel === \"portions\" && (\r\n            <ListPanel\r\n              title=\"Portions\"\r\n              items={filteredPortions}\r\n              onView={(id) => handlePortionSelect(id)}\r\n              viewLabel=\"View Subjects\"\r\n            />\r\n          )}\r\n\r\n          {activePanel === \"subjects\" && (\r\n            <ListPanel\r\n              title=\"Subjects\"\r\n              items={filteredSubjects}\r\n              onView={(id) => handleSubjectSelect(id)}\r\n              viewLabel=\"View Chapters\"\r\n            />\r\n          )}\r\n\r\n          {activePanel === \"chapters\" && (\r\n            <ListPanel\r\n              title=\"Chapters\"\r\n              items={filteredChapters}\r\n              onView={(id) => handleChapterSelect(id)}\r\n              viewLabel=\"View Topics (with PDFs)\"\r\n            />\r\n          )}\r\n\r\n          {activePanel === \"topics\" && (\r\n            <ListPanel\r\n              title=\"Topics (with PDFs)\"\r\n              items={filteredTopics}\r\n              onView={(id) => handleTopicSelect(id)}\r\n              viewLabel=\"View PDFs\"\r\n              // show a small badge for how many PDFs per topic\r\n              rightSlot={(item) => (\r\n                <span className=\"text-xs text-gray-600\">\r\n                  {(item?.pdf?.length ?? 0)} PDF{(item?.pdf?.length ?? 0) === 1 ? \"\" : \"s\"}\r\n                </span>\r\n              )}\r\n            />\r\n          )}\r\n\r\n          {activePanel === \"pdfs\" && (\r\n            <PdfPanel\r\n              title=\"PDFs\"\r\n              pdfs={filteredPdfs}\r\n              onToggle={(pdf) => handleTogglePdfPremium(pdf.id, !!pdf.isPremium)}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading overlay */}\r\n      {loading && (\r\n        <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded shadow-lg flex items-center gap-2\">\r\n            <FiRefreshCw className=\"animate-spin\" />\r\n            <span>Loading...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n/* ---------------------------- UI Subcomponents --------------------------- */\r\n\r\nconst SidebarButton = ({ active, onClick, label, enabled = true }) => (\r\n  <button\r\n    onClick={enabled ? onClick : undefined}\r\n    disabled={!enabled}\r\n    className={`w-full text-left p-2 rounded ${\r\n      active\r\n        ? \"bg-blue-500 text-white\"\r\n        : \"text-[#fff]  hover:bg-gray-50 hover:text-black\"\r\n    } ${!enabled ? \"opacity-50 cursor-not-allowed\" : \"\"}`}\r\n  >\r\n    {label}\r\n  </button>\r\n);\r\n\r\nconst ListPanel = ({ title, items, onView, viewLabel = \"View\", rightSlot }) => {\r\n  return (\r\n    <div className=\"bg-white rounded shadow overflow-hidden\">\r\n      <div className=\"p-4 border-b\">\r\n        <h3 className=\"font-medium text-[#35095E]\">\r\n          {title} ({items?.length ?? 0})\r\n        </h3>\r\n      </div>\r\n      <div className=\"p-4\">\r\n        {Array.isArray(items) && items.length > 0 ? (\r\n          <div className=\"space-y-2\">\r\n            {items.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                className=\"flex justify-between items-center gap-4 p-3 rounded hover:bg-gray-50\"\r\n              >\r\n                <div className=\"flex items-center gap-3 min-w-0\">\r\n                  <FiChevronRight className=\"text-gray-400 shrink-0\" />\r\n                  <span className=\"truncate\">{item.name}</span>\r\n                  {rightSlot ? (\r\n                    <span className=\"shrink-0\">{rightSlot(item)}</span>\r\n                  ) : null}\r\n                </div>\r\n                <button\r\n                  onClick={() => onView(item.id)}\r\n                  className=\"px-3 py-1 text-sm bg-blue-50 text-blue-600 rounded hover:bg-blue-100\"\r\n                >\r\n                  {viewLabel}\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-8 text-gray-500\">No items found</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PdfPanel = ({ title, pdfs, onToggle }) => {\r\n  return (\r\n    <div className=\"bg-white rounded shadow overflow-hidden\">\r\n      <div className=\"p-4 border-b\">\r\n        <h3 className=\"font-medium text-[#35095E]\">\r\n          {title} ({pdfs?.length ?? 0})\r\n        </h3>\r\n      </div>\r\n      <div className=\"p-4\">\r\n        {Array.isArray(pdfs) && pdfs.length > 0 ? (\r\n          <div className=\"space-y-2\">\r\n            {pdfs.map((pdf) => (\r\n              <div\r\n                key={pdf.id}\r\n                className=\"flex justify-between items-center gap-4 p-3 rounded hover:bg-gray-50\"\r\n              >\r\n                <div className=\"min-w-0\">\r\n                  <div className=\"font-medium truncate\">{pdf.name}</div>\r\n                  <a\r\n                    href={pdf.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"text-xs text-blue-600 inline-flex items-center gap-1 mt-0.5\"\r\n                    title={pdf.url}\r\n                  >\r\n                    Open PDF <FiExternalLink />\r\n                  </a>\r\n                  {pdf.isOnlyTopic ? (\r\n                    <div className=\"text-[10px] text-gray-500 mt-1\">\r\n                      topic-only\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <button\r\n                  onClick={() => onToggle(pdf)}\r\n                  className={`px-3 py-1 text-sm rounded ${\r\n                    pdf.isPremium\r\n                      ? \"bg-red-100 text-red-800\"\r\n                      : \"bg-green-100 text-green-800\"\r\n                  } hover:opacity-80`}\r\n                >\r\n                  {pdf.isPremium ? (\r\n                    <>\r\n                      <FiX className=\"inline mr-1\" /> Premium\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FiCheck className=\"inline mr-1\" /> Free\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-8 text-gray-500\">No PDFs found</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}