{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"svg.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/output/svg.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVG OutputJax object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CommonOutputJax, UnknownBBox} from './common/OutputJax.js';\nimport {OptionList} from '../util/Options.js';\nimport {MathDocument} from '../core/MathDocument.js';\nimport {MathItem} from '../core/MathItem.js';\nimport {MmlNode} from '../core/MmlTree/MmlNode.js';\nimport {SVGWrapper} from './svg/Wrapper.js';\nimport {SVGWrapperFactory} from './svg/WrapperFactory.js';\nimport {SVGFontData} from './svg/FontData.js';\nimport {TeXFont} from './svg/fonts/tex.js';\nimport {StyleList as CssStyleList} from '../util/StyleList.js';\nimport {FontCache} from './svg/FontCache.js';\nimport {unicodeChars} from '../util/string.js';\nimport {percent} from '../util/lengths.js';\n\nexport const SVGNS = 'http://www.w3.org/2000/svg';\nexport const XLINKNS = 'http://www.w3.org/1999/xlink';\n\n/*****************************************************************/\n/**\n *  Implements the CHTML class (extends AbstractOutputJax)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVG<N, T, D> extends\nCommonOutputJax<N, T, D, SVGWrapper<N, T, D>, SVGWrapperFactory<N, T, D>, SVGFontData, typeof SVGFontData> {\n\n  /**\n   * The name of the output jax\n   */\n  public static NAME: string = 'SVG';\n\n  /**\n   * @override\n   */\n  public static OPTIONS: OptionList = {\n    ...CommonOutputJax.OPTIONS,\n    internalSpeechTitles: true,     // insert <title> tags with speech content\n    titleID: 0,                     // initial id number to use for aria-labeledby titles\n    fontCache: 'local',             // or 'global' or 'none'\n    localID: null,                  // ID to use for local font cache (for single equation processing)\n  };\n\n  /**\n   *  The default styles for SVG\n   */\n  public static commonStyles: CssStyleList = {\n    'mjx-container[jax=\"SVG\"]': {\n      direction: 'ltr'\n    },\n    'mjx-container[jax=\"SVG\"] > svg': {\n      overflow: 'visible',\n      'min-height': '1px',\n      'min-width': '1px'\n    },\n    'mjx-container[jax=\"SVG\"] > svg a': {\n      fill: 'blue', stroke: 'blue'\n    }\n  };\n\n  /**\n   * The ID for the SVG element that stores the cached font paths\n   */\n  public static FONTCACHEID = 'MJX-SVG-global-cache';\n\n  /**\n   * The ID for the stylesheet element for the styles for the SVG output\n   */\n  public static STYLESHEETID = 'MJX-SVG-styles';\n\n  /**\n   * Stores the CHTMLWrapper factory\n   */\n  public factory: SVGWrapperFactory<N, T, D>;\n\n  /**\n   * Stores the information about the cached character glyphs\n   */\n  public fontCache: FontCache<N, T, D>;\n\n  /**\n   * Minimum width for tables with labels,\n   */\n  public minwidth: number = 0;\n  /**\n   * The shift for the main equation\n   */\n  public shift: number = 0;\n\n  /**\n   * The container element for the math\n   */\n  public container: N = null;\n\n  /**\n   * The SVG stylesheet, once it is constructed\n   */\n  public svgStyles: N = null;\n\n  /**\n   * @override\n   * @constructor\n   */\n  constructor(options: OptionList = null) {\n    super(options, SVGWrapperFactory as any, TeXFont);\n    this.fontCache = new FontCache(this);\n  }\n\n  /**\n   * @override\n   */\n  public initialize() {\n    if (this.options.fontCache === 'global') {\n      this.fontCache.clearCache();\n    }\n  }\n\n  /**\n   * Clear the font cache (use for resetting the global font cache)\n   */\n  public clearFontCache() {\n    this.fontCache.clearCache();\n  }\n\n  /**\n   * @override\n   */\n  public reset() {\n    this.clearFontCache();\n  }\n\n  /**\n   * @override\n   */\n  protected setScale(node: N) {\n    if (this.options.scale !== 1) {\n      this.adaptor.setStyle(node, 'fontSize', percent(this.options.scale));\n    }\n  }\n\n  /**\n   * @override\n   */\n  public escaped(math: MathItem<N, T, D>, html: MathDocument<N, T, D>) {\n    this.setDocument(html);\n    return this.html('span', {}, [this.text(math.math)]);\n  }\n\n  /**\n   * @override\n   */\n  public styleSheet(html: MathDocument<N, T, D>) {\n    if (this.svgStyles) {\n      return this.svgStyles;  // stylesheet is already added to the document\n    }\n    const sheet = this.svgStyles = super.styleSheet(html);\n    this.adaptor.setAttribute(sheet, 'id', SVG.STYLESHEETID);\n    return sheet;\n  }\n\n  /**\n   * @override\n   */\n  public pageElements(html: MathDocument<N, T, D>) {\n    if (this.options.fontCache === 'global' && !this.findCache(html)) {\n      return this.svg('svg', {id: SVG.FONTCACHEID, style: {display: 'none'}}, [this.fontCache.getCache()]);\n    }\n    return null as N;\n  }\n\n  /**\n   * Checks if there is already a font-cache element in the page\n   *\n   * @param {MathDocument} html   The document to search\n   * @return {boolean}            True if a font cache already exists in the page\n   */\n  protected findCache(html: MathDocument<N, T, D>): boolean {\n    const adaptor = this.adaptor;\n    const svgs = adaptor.tags(adaptor.body(html.document), 'svg');\n    for (let i = svgs.length - 1; i >= 0; i--) {\n      if (this.adaptor.getAttribute(svgs[i], 'id') === SVG.FONTCACHEID) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {MmlNode} math  The MML node whose SVG is to be produced\n   * @param {N} parent      The HTML node to contain the SVG\n   */\n  protected processMath(math: MmlNode, parent: N) {\n    //\n    // Cache the container (tooltips process into separate containers)\n    //\n    const container = this.container;\n    this.container = parent;\n    //\n    //  Get the wrapped math element and the SVG container\n    //  Then typeset the math into the SVG\n    //\n    const wrapper = this.factory.wrap(math);\n    const [svg, g] = this.createRoot(wrapper);\n    this.typesetSVG(wrapper, svg, g);\n    //\n    //  Put back the original container\n    //\n    this.container = container;\n  }\n\n  /**\n   * @param {SVGWrapper} wrapper   The wrapped math to process\n   * @return {[N, N]}              The svg and g nodes for the math\n   */\n  protected createRoot(wrapper: SVGWrapper<N, T, D>): [N, N] {\n    const {w, h, d, pwidth} = wrapper.getOuterBBox();\n    const px = wrapper.metrics.em / 1000;\n    const W = Math.max(w, px); // make sure we are at least one px wide (needed for e.g. \\llap)\n    const H = Math.max(h + d, px); // make sure we are at least one px tall (needed for e.g., \\smash)\n    //\n    //  The container that flips the y-axis and sets the colors to inherit from the surroundings\n    //\n    const g = this.svg('g', {\n      stroke: 'currentColor', fill: 'currentColor',\n      'stroke-width': 0, transform: 'scale(1,-1)'\n    }) as N;\n    //\n    //  The svg element with its viewBox, size and alignment\n    //\n    const adaptor = this.adaptor;\n    const svg = adaptor.append(this.container, this.svg('svg', {\n      xmlns: SVGNS,\n      width: this.ex(W), height: this.ex(H),\n      role: 'img', focusable: false,\n      style: {'vertical-align': this.ex(-d)},\n      viewBox: [0, this.fixed(-h * 1000, 1), this.fixed(W * 1000, 1), this.fixed(H * 1000, 1)].join(' ')\n    }, [g])) as N;\n    if (W === .001) {\n      adaptor.setAttribute(svg, 'preserveAspectRatio', 'xMidYMid slice');\n      if (w < 0) {\n        adaptor.setStyle(this.container, 'margin-right', this.ex(w));\n      }\n    }\n    if (pwidth) {\n      //\n      // Use width 100% with no viewbox, and instead scale and translate to achieve the same result\n      //\n      adaptor.setStyle(svg, 'min-width', this.ex(W));\n      adaptor.setAttribute(svg, 'width', pwidth);\n      adaptor.removeAttribute(svg, 'viewBox');\n      const scale = this.fixed(wrapper.metrics.ex / (this.font.params.x_height * 1000), 6);\n      adaptor.setAttribute(g, 'transform', `scale(${scale},-${scale}) translate(0, ${this.fixed(-h * 1000, 1)})`);\n    }\n    if (this.options.fontCache !== 'none') {\n      adaptor.setAttribute(svg, 'xmlns:xlink', XLINKNS);\n    }\n    return [svg, g];\n  }\n\n  /**\n   * Typeset the math and add minwidth (from mtables), or set the alignment and indentation\n   * of the finalized expression.\n   *\n   * @param {SVGWrapper} wrapper   The wrapped math to typeset\n   * @param {N} svg                The main svg element for the typeet math\n   * @param {N} g                  The group in which the math is typeset\n   */\n  protected typesetSVG(wrapper: SVGWrapper<N, T, D>, svg: N, g: N) {\n    const adaptor = this.adaptor;\n    //\n    //  Typeset the math and add minWidth (from mtables), or set the alignment and indentation\n    //    of the finalized expression\n    //\n    this.minwidth = this.shift = 0;\n    if (this.options.fontCache === 'local') {\n      this.fontCache.clearCache();\n      this.fontCache.useLocalID(this.options.localID);\n      adaptor.insert(this.fontCache.getCache(), g);\n    }\n    wrapper.toSVG(g);\n    this.fontCache.clearLocalID();\n    if (this.minwidth) {\n      adaptor.setStyle(svg, 'minWidth', this.ex(this.minwidth));\n      adaptor.setStyle(this.container, 'minWidth', this.ex(this.minwidth));\n    } else if (this.shift) {\n      const align = adaptor.getAttribute(this.container, 'justify') || 'center';\n      this.setIndent(svg, align, this.shift);\n    }\n  }\n\n  /**\n   * @param {N} svg         The svg node whose indentation is to be adjusted\n   * @param {string} align  The alignment for the node\n   * @param {number} shift  The indent (positive or negative) for the node\n   */\n  protected setIndent(svg: N, align: string, shift: number) {\n    if (align === 'center' || align === 'left') {\n      this.adaptor.setStyle(svg, 'margin-left', this.ex(shift));\n    }\n    if (align === 'center' || align === 'right') {\n      this.adaptor.setStyle(svg, 'margin-right', this.ex(-shift));\n    }\n  }\n\n  /**\n   * @param {number} m  A number to be shown in ex\n   * @return {string}   The number with units of ex\n   */\n  public ex(m: number): string {\n    m /= this.font.params.x_height;\n    return (Math.abs(m) < .001 ? '0' : m.toFixed(3).replace(/\\.?0+$/, '') + 'ex');\n  }\n\n  /**\n   * @param {string} kind             The kind of node to create\n   * @param {OptionList} properties   The properties to set for the element\n   * @param {(N|T)[]} children            The child nodes for this node\n   * @return {N}                      The newly created node in the SVG namespace\n   */\n  public svg(kind: string, properties: OptionList = {}, children: (N | T)[] = []): N {\n    return this.html(kind, properties, children, SVGNS);\n  }\n\n  /**\n   * @param {string} text      The text to be displayed\n   * @param {string} variant   The name of the variant for the text\n   * @return {N}               The text element containing the text\n   */\n  public unknownText(text: string, variant: string): N {\n    const metrics = this.math.metrics;\n    const scale = this.font.params.x_height / metrics.ex * metrics.em * 1000;\n    const svg = this.svg('text', {\n      'data-variant': variant,\n      transform: 'scale(1,-1)', 'font-size': this.fixed(scale, 1) + 'px'\n    }, [this.text(text)]);\n    const adaptor = this.adaptor;\n    if (variant !== '-explicitFont') {\n      const c = unicodeChars(text);\n      if (c.length !== 1 || c[0] < 0x1D400 || c[0] > 0x1D7FF) {\n        const [family, italic, bold] = this.font.getCssFont(variant);\n        adaptor.setAttribute(svg, 'font-family', family);\n        if (italic) {\n          adaptor.setAttribute(svg, 'font-style', 'italic');\n        }\n        if (bold) {\n          adaptor.setAttribute(svg, 'font-weight', 'bold');\n        }\n      }\n    }\n    return svg;\n  }\n\n  /**\n   * Measure the width of a text element by placing it in the page\n   *  and looking up its size (fake the height and depth, since we can't measure that)\n   *\n   * @param {N} text         The text element to measure\n   * @return {Object}        The width, height and depth for the text\n   */\n  public measureTextNode(text: N): UnknownBBox {\n    const adaptor = this.adaptor;\n    text = adaptor.clone(text);\n    adaptor.removeAttribute(text, 'transform');\n    const ex = this.fixed(this.font.params.x_height * 1000, 1);\n    const svg = this.svg('svg', {\n      position: 'absolute', visibility: 'hidden',\n      width: '1ex', height: '1ex',\n      viewBox: [0, 0, ex, ex].join(' ')\n    }, [text]);\n    adaptor.append(adaptor.body(adaptor.document), svg);\n    let w = adaptor.nodeSize(text, 1000, true)[0];\n    adaptor.remove(svg);\n    return {w: w, h: .75, d: .2};\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}