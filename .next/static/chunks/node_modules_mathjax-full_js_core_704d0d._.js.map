{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"HandlerList.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/HandlerList.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for HandlerList objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PrioritizedList} from '../util/PrioritizedList.js';\nimport {OptionList} from '../util/Options.js';\nimport {Handler} from './Handler.js';\nimport {MathDocument} from './MathDocument.js';\n\n/*****************************************************************/\n/**\n *  The HandlerList class (extends PrioritizedList of Handlers)\n *\n *  This list is used to find the handler for a given document\n *  by asking each handler to test if it can handle the document,\n *  and when one can, it is asked to create its associated MathDocument.\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class HandlerList<N, T, D> extends PrioritizedList<Handler<N, T, D>>  {\n\n  /**\n   * @param {Handler} handler  The handler to register\n   * @return {Handler}  The list item created for the handler\n   */\n  public register(handler: Handler<N, T, D>): Handler<N, T, D> {\n    return this.add(handler, handler.priority);\n  }\n\n  /**\n   * @param {Handler} Handler  The handler to remove from the list\n   */\n  public unregister(handler: Handler<N, T, D>) {\n    this.remove(handler);\n  }\n\n  /**\n   * @param {any} document  The document (string, window, DOM element, etc) to be handled\n   * @return {Handler}      The handler from the list that can process the given document\n   */\n  public handlesDocument(document: any): Handler<N, T, D> {\n    for (const item of this) {\n      let handler = item.item;\n      if (handler.handlesDocument(document)) {\n        return handler;\n      }\n    }\n    throw new Error(`Can't find handler for document`);\n  }\n\n  /**\n   * @param {any} document        The document to be processed\n   * @param {OptionList} options  The options for the handler\n   * @return {MathDocument}       The MathDocument created by the handler for this document\n   */\n  public document(document: any, options: OptionList = null): MathDocument<N, T, D> {\n    return this.handlesDocument(document).create(document, options);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,6DAA2D;AAiB3D,IAAA,cAAA,SAAA,MAAA;IAA0C,UAAA,aAAA,QAAiC;IAA3E,SAAA;;IAwCA,CAAC;IAlCQ,YAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,OAAyB;QACvC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAKM,YAAA,SAAA,CAAA,UAAU,GAAjB,SAAkB,OAAyB;QACzC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAMM,YAAA,SAAA,CAAA,eAAe,GAAtB,SAAuB,QAAa;;;YAClC,IAAmB,IAAA,KAAA,SAAA,IAAI,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAApB,IAAM,IAAI,GAAA,GAAA,KAAA;gBACb,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;gBACxB,IAAI,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;oBACrC,OAAO,OAAO,CAAC;iBAChB;aACF;;;;;;;;;;;;QACD,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;IACrD,CAAC;IAOM,YAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,QAAa,EAAE,OAA0B;QAA1B,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA,IAA0B;QAAA;QACvD,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAClE,CAAC;IAEH,OAAA,WAAC;AAAD,CAAC,AAxCD,CAA0C,qBAAA,eAAe,GAwCxD;AAxCY,QAAA,WAAA,GAAA,YAAW","ignoreList":[0]}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"file":"InputJax.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/InputJax.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for the InputJax\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MathDocument} from './MathDocument.js';\nimport {MathItem, ProtoItem} from './MathItem.js';\nimport {MmlNode} from './MmlTree/MmlNode.js';\nimport {MmlFactory} from './MmlTree/MmlFactory.js';\nimport {userOptions, defaultOptions, OptionList} from '../util/Options.js';\nimport {FunctionList} from '../util/FunctionList.js';\nimport {DOMAdaptor} from '../core/DOMAdaptor.js';\n\n/*****************************************************************/\n/**\n *  The InputJax interface\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface InputJax<N, T, D> {\n  /**\n   * The name of the input jax subclass (e.g,. 'TeX')\n   */\n  name: string;\n\n  /**\n   * Whether this input jax processes string arrays or DOM nodes\n   * (TeX and AsciiMath process strings, MathML processes DOM nodes)\n   */\n  processStrings: boolean;\n\n  /**\n   * The options for this input jax instance\n   */\n  options: OptionList;\n\n  /**\n   * Lists of pre- and post-filters to call before and after processing the input\n   */\n  preFilters: FunctionList;\n  postFilters: FunctionList;\n\n  /**\n   * The DOM adaptor for managing HTML elements\n   */\n  adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * The MmlFactory for this input jax\n   */\n  mmlFactory: MmlFactory;\n\n  /**\n   * @param {DOMAdaptor} adaptor The adaptor to use in this jax\n   */\n  setAdaptor(adaptor: DOMAdaptor<N, T, D>): void;\n\n  /**\n   * @param {MmlFactory} mmlFactory The MmlFactory to use in this jax\n   */\n  setMmlFactory(mmlFactory: MmlFactory): void;\n\n  /**\n   * Do any initialization that depends on the document being set up\n   */\n  initialize(): void;\n\n  /**\n   * Reset any needed features of the input jax\n   *\n   * @param {any[]} args   The arguments needed by the reset operation\n   */\n  reset(...args: any[]): void;\n\n  /**\n   * Finds the math within the DOM or the list of strings\n   *\n   * @param {N | string[]} which   The element or array of strings to be searched for math\n   * @param {OptionList} options   The options for the search, if any\n   * @return {ProtoItem[]}         Array of proto math items found (further processed by the\n   *                                handler to produce actual MathItem objects)\n   */\n  findMath(which: N | string[], options?: OptionList): ProtoItem<N, T>[];\n\n  /**\n   * Convert the math in a math item into the internal format\n   *\n   * @param {MathItem} math  The MathItem whose math content is to processed\n   * @param {MathDocument} document The MathDocument for this input jax.\n   * @return {MmlNode}       The resulting internal node tree for the math\n   */\n  compile(math: MathItem<N, T, D>, document: MathDocument<N, T, D>): MmlNode;\n}\n\n/*****************************************************************/\n/**\n *  The abstract InputJax class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractInputJax<N, T, D> implements InputJax<N, T, D> {\n\n  /**\n   * The name of the input jax\n   */\n  public static NAME: string = 'generic';\n\n  /**\n   * The default options for the input jax\n   */\n  public static OPTIONS: OptionList = {};\n\n  /**\n   * The actual options supplied to the input jax\n   */\n  public options: OptionList;\n\n  /**\n   * Filters to run on the TeX string before it is processed\n   */\n  public preFilters: FunctionList;\n\n  /**\n   * Filters to run on the generated MathML after the TeX string is processed\n   */\n  public postFilters: FunctionList;\n\n  /**\n   * The DOMAdaptor for the MathDocument for this input jax\n   */\n  public adaptor: DOMAdaptor<N, T, D> = null;  // set by the handler\n  /**\n   * The MathML node factory\n   */\n  public mmlFactory: MmlFactory = null;        // set by the handler\n\n  /**\n   * @param {OptionList} options  The options to apply to this input jax\n   *\n   * @constructor\n   */\n  constructor(options: OptionList = {}) {\n    let CLASS = this.constructor as typeof AbstractInputJax;\n    this.options = userOptions(defaultOptions({}, CLASS.OPTIONS), options);\n    this.preFilters = new FunctionList();\n    this.postFilters = new FunctionList();\n  }\n\n  /**\n   * @return {string}  The name of this input jax class\n   */\n  public get name(): string {\n    return (this.constructor as typeof AbstractInputJax).NAME;\n  }\n\n  /**\n   * @override\n   */\n  public setAdaptor(adaptor: DOMAdaptor<N, T, D>) {\n    this.adaptor = adaptor;\n  }\n\n  /**\n   * @override\n   */\n  public setMmlFactory(mmlFactory: MmlFactory) {\n    this.mmlFactory = mmlFactory;\n  }\n\n  /**\n   * @override\n   */\n  public initialize() {\n  }\n\n  /**\n   * @override\n   */\n  public reset(..._args: any[]) {\n  }\n\n  /**\n   * @return {boolean}  True means find math in string array, false means in DOM element\n   */\n  public get processStrings(): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public findMath(_node: N | string[], _options?: OptionList) {\n    return [] as ProtoItem<N, T>[];\n  }\n\n  /**\n   * @override\n   */\n  public abstract compile(math: MathItem<N, T, D>, document: MathDocument<N, T, D>): MmlNode;\n\n  /**\n   * Execute a set of filters, passing them the MathItem and any needed data,\n   *  and return the (possibly modified) data\n   *\n   * @param {FunctionList} filters   The list of functions to be performed\n   * @param {MathItem} math          The math item that is being processed\n   * @param {MathDocument} document  The math document containg the math item\n   * @param {any} data               Whatever other data is needed\n   * @return {any}                   The (possibly modified) data\n   */\n  protected executeFilters(\n    filters: FunctionList, math: MathItem<N, T, D>,\n    document: MathDocument<N, T, D>, data: any\n  ): any {\n    let args = {math: math, document: document, data: data};\n    filters.execute(args);\n    return args.data;\n  }\n\n}\n"],"names":[],"mappings":";;;;;AA2BA,IAAA,6CAA2E;AAC3E,IAAA,uDAAqD;AA8FrD,IAAA,mBAAA;IAyCE,SAAA,iBAAY,OAAwB;QAAxB,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA,CAAA,CAAwB;QAAA;QAX7B,IAAA,CAAA,OAAO,GAAwB,IAAI,CAAC;QAIpC,IAAA,CAAA,UAAU,GAAe,IAAI,CAAC;QAQnC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAsC,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,aAAA,WAAW,EAAC,CAAA,GAAA,aAAA,cAAc,EAAC,CAAA,CAAE,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;QACvE,IAAI,CAAC,UAAU,GAAG,IAAI,kBAAA,YAAY,EAAE,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,kBAAA,YAAY,EAAE,CAAC;IACxC,CAAC;IAKD,OAAA,cAAA,CAAW,iBAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAQ,IAAI,CAAC,WAAuC,CAAC,IAAI,CAAC;QAC5D,CAAC;;;OAAA;IAKM,iBAAA,SAAA,CAAA,UAAU,GAAjB,SAAkB,OAA4B;QAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAKM,iBAAA,SAAA,CAAA,aAAa,GAApB,SAAqB,UAAsB;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAKM,iBAAA,SAAA,CAAA,UAAU,GAAjB,YACA,CAAC;IAKM,iBAAA,SAAA,CAAA,KAAK,GAAZ;QAAa,IAAA,QAAA,EAAA,CAAe;YAAf,IAAA,KAAA,CAAe,EAAf,KAAA,UAAA,MAAe,EAAf,IAAe,CAAA;YAAf,KAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAe;;IAC5B,CAAC;IAKD,OAAA,cAAA,CAAW,iBAAA,SAAA,EAAA,gBAAc,EAAA;aAAzB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,iBAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,KAAmB,EAAE,QAAqB;QACxD,OAAO,EAAuB,CAAC;IACjC,CAAC;IAiBS,iBAAA,SAAA,CAAA,cAAc,GAAxB,SACE,OAAqB,EAAE,IAAuB,EAC9C,QAA+B,EAAE,IAAS;QAE1C,IAAI,IAAI,GAAG;YAAC,IAAI,EAAE,IAAI;YAAE,QAAQ,EAAE,QAAQ;YAAE,IAAI,EAAE,IAAI;QAAA,CAAC,CAAC;QACxD,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAhHa,iBAAA,IAAI,GAAW,SAAS,CAAC;IAKzB,iBAAA,OAAO,GAAe,CAAA,CAAE,CAAC;IA6GzC,OAAA,gBAAC;CAAA,AAvHD,IAuHC;AAvHqB,QAAA,gBAAA,GAAA,iBAAgB","ignoreList":[0]}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"file":"FindMath.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/FindMath.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Interfaces and abstract classes for FindMath objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {userOptions, defaultOptions, OptionList} from '../util/Options.js';\nimport {ProtoItem} from './MathItem.js';\n\n/*****************************************************************/\n/**\n *  The FindMath interface\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template _D  The Document class\n */\nexport interface FindMath<N, T, _D> {\n  /**\n   * One of two possibilities:  Look through a DOM element,\n   *   or look through an array of strings for delimited math.\n   *\n   * @param {N} node   The node to search for math\n   * @return {ProtoItem<N, T>[]}\n   */\n  findMath(node: N): ProtoItem<N, T>[];\n  /**\n   *\n   * @param {string[]} strings    The strings to search for math\n   * @return {ProtoItem<N, T>[]}\n   */\n  findMath(strings: string[]): ProtoItem<N, T>[];\n}\n\n/*****************************************************************/\n/**\n *  The FindMath abstract class\n */\n\n/**\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractFindMath<N, T, D> implements FindMath<N, T, D> {\n\n  /**\n   * The default options for FindMath\n   */\n  public static OPTIONS: OptionList = {};\n\n  /**\n   * The actual options for this instance\n   */\n  protected options: OptionList;\n\n  /**\n   * @param {OptionList} options  The user options for this instance\n   */\n  constructor(options: OptionList) {\n    let CLASS = this.constructor as typeof AbstractFindMath;\n    this.options = userOptions(defaultOptions({}, CLASS.OPTIONS), options);\n  }\n\n  /**\n   * Locate math in an Element or a string array;\n   *\n   * @param {Element | string[]} where  The node or string array to search for math\n   * @return {ProtoItem[]}              The array of proto math items found\n   */\n  public abstract findMath(where: N | string[]): ProtoItem<N, T>[];\n\n}\n"],"names":[],"mappings":";;;;;AAuBA,IAAA,6CAA2E;AAsC3E,IAAA,mBAAA;IAeE,SAAA,iBAAY,OAAmB;QAC7B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAsC,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,aAAA,WAAW,EAAC,CAAA,GAAA,aAAA,cAAc,EAAC,CAAA,CAAE,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;IACzE,CAAC;IAba,iBAAA,OAAO,GAAe,CAAA,CAAE,CAAC;IAuBzC,OAAA,gBAAC;CAAA,AA5BD,IA4BC;AA5BqB,QAAA,gBAAA,GAAA,iBAAgB","ignoreList":[0]}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"file":"MathItem.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MathItem.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for MathItem objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MathDocument} from './MathDocument.js';\nimport {InputJax} from './InputJax.js';\nimport {OptionList} from '../util/Options.js';\nimport {MmlNode} from './MmlTree/MmlNode.js';\n\n/*****************************************************************/\n/**\n *  The Location gives a location of a position in a document\n *  (either a node and character position within it, or\n *  an index into a string array, the character position within\n *  the string, and the delimiter at that location).\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n */\nexport type Location<N, T> = {\n  i?: number;\n  n?: number;\n  delim?: string;\n  node?: N | T;\n};\n\n/*****************************************************************/\n/**\n *  The Metrics object includes the data needed to typeset\n *  a MathItem.\n */\nexport type Metrics = {\n  em: number;\n  ex: number;\n  containerWidth: number;\n  lineWidth: number;\n  scale: number;\n};\n\n/*****************************************************************/\n/**\n *  The MathItem interface\n *\n *  The MathItem is the object that holds the information about a\n *  particular expression on the page, including pointers to\n *  where it is in the document, its compiled version (in the\n *  internal format), its typeset version, its bounding box,\n *  and so on.\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface MathItem<N, T, D> {\n  /**\n   * The string representing the expression to be processed\n   */\n  math: string;\n\n  /**\n   * The input jax used to process the math\n   */\n  inputJax: InputJax<N, T, D>;\n\n  /**\n   * Whether the math is in display mode or inline mode\n   */\n  display: boolean;\n\n  /**\n   * Whether this item is an escaped character or not\n   */\n  isEscaped: boolean;\n\n  /**\n   * The start and ending locations in the document of\n   *   this expression\n   */\n  start: Location<N, T>;\n  end: Location<N, T>;\n\n  /**\n   * The internal format for this expression (once compiled)\n   */\n  root: MmlNode;\n\n  /**\n   * The typeset version of the expression (once typeset)\n   */\n  typesetRoot: N;\n\n  /**\n   * The metric information at the location of the math\n   * (the em-size, scaling factor, etc.)\n   */\n  metrics: Metrics;\n\n  /**\n   * Extra data needed by the input or output jax, as needed\n   */\n  inputData: OptionList;\n  outputData: OptionList;\n\n  /**\n   * Perform the renderActions on the document\n   *\n   * @param {MathDocument} document  The MathDocument in which the math resides\n   */\n  render(document: MathDocument<N, T, D>): void;\n\n  /**\n   * Rerenders an already rendered item and inserts it into the document\n   *\n   * @param {MathDocument} document  The MathDocument in which the math resides\n   * @param {number=} start          The state to start rerendering at (default = RERENDER)\n   */\n  rerender(document: MathDocument<N, T, D>, start?: number): void;\n\n  /**\n   * Converts the expression by calling the render actions until the state matches the end state\n   *\n   * @param {MathDocument} document  The MathDocument in which the math resides\n   * @param {number=} end            The state to end rerendering at (default = LAST)\n   */\n  convert(document: MathDocument<N, T, D>, end?: number): void;\n\n  /**\n   * Converts the expression into the internal format by calling the input jax\n   *\n   * @param {MathDocument} document  The MathDocument in which the math resides\n   */\n  compile(document: MathDocument<N, T, D>): void;\n\n  /**\n   * Converts the internal format to the typeset version by calling the output jax\n   *\n   * @param {MathDocument} document  The MathDocument in which the math resides\n   */\n  typeset(document: MathDocument<N, T, D>): void;\n\n  /**\n   * Inserts the typeset version in place of the original form in the document\n   *\n   * @param {MathDocument} document  The MathDocument in which the math resides\n   */\n  updateDocument(document: MathDocument<N, T, D>): void;\n\n  /**\n   * Removes the typeset version from the document, optionally replacing the original\n   * form of the expression and its delimiters.\n   *\n   * @param {boolean} restore  True if the original version is to be restored\n   */\n  removeFromDocument(restore: boolean): void;\n\n  /**\n   * Sets the metric information for this expression\n   *\n   * @param {number} em      The size of 1 em in pixels\n   * @param {number} ex      The size of 1 ex in pixels\n   * @param {number} cwidth  The container width in pixels\n   * @param {number} lwidth  The line breaking width in pixels\n   * @param {number} scale   The scaling factor (unitless)\n   */\n  setMetrics(em: number, ex: number, cwidth: number, lwidth: number, scale: number): void;\n\n  /**\n   * Set or return the current processing state of this expression,\n   * optionally restoring the document if rolling back an expression\n   * that has been added to the document.\n   *\n   * @param {number} state    The state to set for the expression\n   * @param {number} restore  True if the original form should be restored\n   *                           to the document when rolling back a typeset version\n   * @returns {number}        The current state\n   */\n  state(state?: number, restore?: boolean): number;\n\n  /**\n   * Reset the item to its unprocessed state\n   *\n   * @param {number} restore  True if the original form should be restored\n   *                           to the document when rolling back a typeset version\n   */\n  reset(restore?: boolean): void;\n}\n\n/*****************************************************************/\n/**\n *  The ProtoItem interface\n *\n *  This is what is returned by the FindMath class, giving the location\n *  of math within the document, and is used to produce the full\n *  MathItem later (e.g., when the position within a string array\n *  is translated back into the actual node location in the DOM).\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n */\nexport type ProtoItem<N, T> = {\n  math: string;            // The math expression itself\n  start: Location<N, T>;   // The starting location of the math\n  end: Location<N, T>;     // The ending location of the math\n  open?: string;           // The opening delimiter\n  close?: string;          // The closing delimiter\n  n?: number;              // The index of the string in which this math is found\n  display: boolean;        // True means display mode, false is inline mode\n};\n\n/**\n *  Produce a proto math item that can be turned into a MathItem\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n */\nexport function protoItem<N, T>(open: string, math: string, close: string, n: number,\n                                start: number, end: number, display: boolean = null) {\n  let item: ProtoItem<N, T> = {open: open, math: math, close: close,\n                               n: n, start: {n: start}, end: {n: end}, display: display};\n  return item;\n}\n\n/*****************************************************************/\n/**\n *  Implements the MathItem class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractMathItem<N, T, D> implements MathItem<N, T, D> {\n\n  /**\n   * The source text for the math (e.g., TeX string)\n   */\n  public math: string;\n\n  /**\n   * The input jax associated with this item\n   */\n\n  public inputJax: InputJax<N, T, D>;\n\n  /**\n   * True when this math is in display mode\n   */\n  public display: boolean;\n\n  /**\n   * Reference to the beginning of the math in the document\n   */\n  public start: Location<N, T>;\n  /**\n   * Reference to the end of the math in the document\n   */\n  public end: Location<N, T>;\n\n  /**\n   * The compiled internal MathML (result of InputJax)\n   */\n  public root: MmlNode = null;\n  /**\n   * The typeset result (result of OutputJax)\n   */\n  public typesetRoot: N = null;\n\n  /**\n   * The metric information about the surrounding environment\n   */\n  public metrics: Metrics = {} as Metrics;\n\n  /**\n   * Data private to the input jax\n   */\n  public inputData: OptionList = {};\n\n  /**\n   * Data private to the output jax\n   */\n  public outputData: OptionList = {};\n\n  /**\n   * The current state of the item (how far in the render actions it has been processed)\n   */\n  protected _state: number = STATE.UNPROCESSED;\n\n  /**\n   * @return {boolean}   True when this item is an escaped delimiter\n   */\n  public get isEscaped(): boolean {\n    return this.display === null;\n  }\n\n  /**\n   * @param {string} math      The math expression for this item\n   * @param {Inputjax} jax     The input jax to use for this item\n   * @param {boolean} display  True if display mode, false if inline\n   * @param {Location} start   The starting position of the math in the document\n   * @param {Location} end     The ending position of the math in the document\n   * @constructor\n   */\n  constructor (math: string, jax: InputJax<N, T, D>, display: boolean = true,\n               start: Location<N, T> = {i: 0, n: 0, delim: ''},\n               end: Location<N, T> = {i: 0, n: 0, delim: ''}) {\n    this.math = math;\n    this.inputJax = jax;\n    this.display = display;\n    this.start = start;\n    this.end = end;\n    this.root = null;\n    this.typesetRoot = null;\n    this.metrics = {} as Metrics;\n    this.inputData = {};\n    this.outputData = {};\n  }\n\n  /**\n   * @override\n   */\n  public render(document: MathDocument<N, T, D>) {\n    document.renderActions.renderMath(this, document);\n  }\n\n  /**\n   * @override\n   */\n  public rerender(document: MathDocument<N, T, D>, start: number = STATE.RERENDER) {\n    if (this.state() >= start) {\n      this.state(start - 1);\n    }\n    document.renderActions.renderMath(this, document, start);\n  }\n\n  /**\n   * @override\n   */\n  public convert(document: MathDocument<N, T, D>, end: number = STATE.LAST) {\n    document.renderActions.renderConvert(this, document, end);\n  }\n\n  /**\n   * @override\n   */\n  public compile(document: MathDocument<N, T, D>) {\n    if (this.state() < STATE.COMPILED) {\n      this.root = this.inputJax.compile(this, document);\n      this.state(STATE.COMPILED);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public typeset(document: MathDocument<N, T, D>) {\n    if (this.state() < STATE.TYPESET) {\n      this.typesetRoot = document.outputJax[this.isEscaped ? 'escaped' : 'typeset'](this, document);\n      this.state(STATE.TYPESET);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public updateDocument(_document: MathDocument<N, T, D>) {}\n\n  /**\n   * @override\n   */\n  public removeFromDocument(_restore: boolean = false) {}\n\n  /**\n   * @override\n   */\n  public setMetrics(em: number, ex: number, cwidth: number, lwidth: number, scale: number) {\n    this.metrics = {\n      em: em, ex: ex,\n      containerWidth: cwidth,\n      lineWidth: lwidth,\n      scale: scale\n    };\n  }\n\n  /**\n   * @override\n   */\n  public state(state: number = null, restore: boolean = false) {\n    if (state != null) {\n      if (state < STATE.INSERTED && this._state >= STATE.INSERTED) {\n        this.removeFromDocument(restore);\n      }\n      if (state < STATE.TYPESET && this._state >= STATE.TYPESET) {\n        this.outputData = {};\n      }\n      if (state < STATE.COMPILED && this._state >= STATE.COMPILED) {\n        this.inputData = {};\n      }\n      this._state = state;\n    }\n    return this._state;\n  }\n\n  /**\n   * @override\n   */\n  public reset(restore: boolean = false) {\n    this.state(STATE.UNPROCESSED, restore);\n  }\n\n}\n\n/*****************************************************************/\n/**\n * The various states that a MathItem (or MathDocument) can be in\n *   (open-ended so that extensions can add to it)\n */\nexport const STATE: {[state: string]: number} = {\n  UNPROCESSED: 0,\n  FINDMATH: 10,\n  COMPILED: 20,\n  CONVERT: 100,\n  METRICS: 110,\n  RERENDER: 125,\n  TYPESET: 150,\n  INSERTED: 200,\n  LAST: 10000\n};\n\n/**\n * Allocate a new named state\n *\n * @param {string} name    The name of the new state\n * @param {number} state   The value for the new state\n */\nexport function newState(name: string, state: number) {\n  if (name in STATE) {\n    throw Error('State ' + name + ' already exists');\n  }\n  STATE[name] = state;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"file":"Attributes.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/Attributes.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Implements Attribute class for MmlNodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList, Property} from '../Tree/Node.js';\n\n/**\n * A constant for when a property should be inherited from the global defaults lists\n */\nexport const INHERIT = '_inherit_';\n\n/******************************************************************/\n/**\n * Implements the Attributes class for MmlNodes\n *  (These can be set explicitly, inherited from parent nodes,\n *   taken from a default list of values, or taken from global\n *   defaults.)\n */\n\nexport class Attributes {\n  /**\n   * The attributes explicitly set on a node\n   */\n  protected attributes: PropertyList;\n  /**\n   * The attributes inherited from parent nodes\n   */\n  protected inherited: PropertyList;\n  /**\n   * The default attributes for the node type\n   */\n  protected defaults: PropertyList;\n  /**\n   * Global attributes from the math node itself\n   */\n  protected global: PropertyList;\n\n  /**\n   * @param {PropertyList} defaults  The defaults for this node type\n   * @param {PropertyList} global    The global properties (from the math node)\n   *\n   * @constructor\n   */\n  constructor(defaults: PropertyList, global: PropertyList) {\n    this.global = global;\n    this.defaults = Object.create(global);\n    this.inherited = Object.create(this.defaults);\n    this.attributes = Object.create(this.inherited);\n    Object.assign(this.defaults, defaults);\n  }\n\n  /**\n   * @param {string} name     The name of the attribute to set\n   * @param {Property} value  The value to give the named attribute\n   */\n  public set(name: string, value: Property) {\n    this.attributes[name] = value;\n  }\n\n  /**\n   * @param {PropertyList} list  An object containing the properties to set\n   */\n  public setList(list: PropertyList) {\n    Object.assign(this.attributes, list);\n  }\n\n  /**\n   * @param {string} name  The name of the attribute whose value is to be returned\n   * @return {Property}    The value of the named attribute (including inheritance and defaults)\n   */\n  public get(name: string): Property {\n    let value = this.attributes[name];\n    if (value === INHERIT) {\n      value = this.global[name];\n    }\n    return value;\n  }\n\n  /**\n   * @param {string} name  The value of the attribute whose value is to be returned\n   * @return {Property}    The attribute whose name was given if it is explicit on the\n   *                       node (not inherited or defaulted), null otherwise\n   */\n  public getExplicit(name: string): Property {\n    if (!this.attributes.hasOwnProperty(name)) {\n      return undefined;\n    }\n    return this.attributes[name];\n  }\n\n  /**\n   * @param {string[]} names  The names of attributes whose values are to be returned\n   * @return {PropertyList}   An object containing the attributes and their values\n   */\n  public getList(...names: string[]): PropertyList {\n    let values: PropertyList = {};\n    for (const name of names) {\n      values[name] = this.get(name);\n    }\n    return values;\n  }\n\n  /**\n   * @param {string} name  The name of an inherited attribute to be set\n   * @param {Property} value  The value to assign to the named attribute\n   */\n  public setInherited(name: string, value: Property) {\n    this.inherited[name] = value;\n  }\n\n  /**\n   * @param {string} name  The name of an inherited attribute whose value is to be returned\n   * @return {Property}    The value of the named attribute if it is inherited, null otherwise\n   */\n  public getInherited(name: string): Property {\n    return this.inherited[name];\n  }\n\n  /**\n   * @param {string} name  The name of a default attribute whose value is to be returned\n   * @return {Property}    The value of the named attribute if a default exists for it, null otherwise\n   */\n  public getDefault(name: string): Property {\n    return this.defaults[name];\n  }\n\n  /**\n   * @param {string} name  The name of a attribute to check\n   * @return {boolean}     True if attribute is set explicitly or inherited\n   *                         from an explicit mstyle or math attribute\n   */\n  public isSet(name: string): boolean {\n    return this.attributes.hasOwnProperty(name) || this.inherited.hasOwnProperty(name);\n  }\n\n  /**\n   * @param {string} name  The name of an attribute to test for the existence of a default\n   * @return {boolean}     True of there is a default for the named attribute, false otherwise\n   */\n  public hasDefault(name: string): boolean {\n    return (name in this.defaults);\n  }\n\n  /**\n   * @return {string[]}  The names of all the attributes explicitly set on the node\n   */\n  public getExplicitNames(): string[] {\n    return Object.keys(this.attributes);\n  }\n\n  /**\n   * @return {string[]}  The names of all the inherited attributes for the node\n   */\n  public getInheritedNames(): string[] {\n    return Object.keys(this.inherited);\n  }\n\n  /**\n   * @return {string[]}  The names of all the default attributes for the node\n   */\n  public getDefaultNames(): string[] {\n    return Object.keys(this.defaults);\n  }\n\n  /**\n   * @return {string[]}  The names of all the global attributes\n   */\n  public getGlobalNames(): string[] {\n    return Object.keys(this.global);\n  }\n\n  /**\n   * @return {PropertyList}  The attribute object\n   */\n  public getAllAttributes(): PropertyList {\n    return this.attributes;\n  }\n\n  /**\n   * @return {PropertyList}  The inherited object\n   */\n  public getAllInherited(): PropertyList {\n    return this.inherited;\n  }\n\n  /**\n   * @return {PropertyList}  The defaults object\n   */\n  public getAllDefaults(): PropertyList {\n    return this.defaults;\n  }\n\n  /**\n   * @return {PropertyList}  The global object\n   */\n  public getAllGlobals(): PropertyList {\n    return this.global;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"file":"Node.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/Tree/Node.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Generic Node classes for node trees\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {NodeFactory} from './NodeFactory.js';\n\n/**\n *  PropertyList and Property are for string data like\n *  attributes and other properties\n */\nexport type Property = string | number | boolean;\nexport type PropertyList = {[key: string]: Property};\n\n/*********************************************************/\n/**\n *  The generic Node interface\n */\n\nexport interface Node {\n  readonly kind: string;\n  /**\n   * The NodeFactory to use to create additional nodes, as needed\n   */\n  readonly factory: NodeFactory<Node, NodeClass>;\n  parent: Node;\n  childNodes: Node[];\n\n  /**\n   * @param {string} name     The name of the property to set\n   * @param {Property} value  The value to which the property will be set\n   */\n  setProperty(name: string, value: Property): void;\n\n  /**\n   * @param {string} name  The name of the property to get\n   * @return {Property}   The value of the named property\n   */\n  getProperty(name: string): Property;\n\n  /**\n   * @return {string[]}  An array of the names of every property currently defined\n   */\n  getPropertyNames(): string[];\n\n  /**\n   * @return {PropertyList}  The propery list containing all the properties of the node\n   */\n  getAllProperties(): PropertyList;\n\n  /**\n   * @param {string[]} names  The names of the properties to be removed\n   */\n  removeProperty(...names: string[]): void;\n\n\n  /**\n   * @param {string} kind  The type of node to test for\n   * @return {boolean}     True when the node is of the given type\n   */\n  isKind(kind: string): boolean;\n\n  /**\n   * @param {Node[]} children  The child nodes to add to this node\n   */\n  setChildren(children: Node[]): void;\n\n  /**\n   * @param {Node} child  A node to add to this node's children\n   * @return {Node}       The child node that was added\n   */\n  appendChild(child: Node): Node;\n\n  /**\n   * @param {Node} newChild  A child node to be inserted\n   * @param {Node} oldChild  A child node to be replaced\n   * @return {Node}          The old child node that was removed\n   */\n  replaceChild(newChild: Node, oldChild: Node): Node;\n\n  /**\n   * @param {Node} child   Child node to be removed\n   * @return {Node}        The old child node that was removed\n   */\n  removeChild(child: Node): Node;\n\n  /**\n   * @param {Node} child  A child node whose index in childNodes is desired\n   * @return {number}     The index of the child in childNodes, or null if not found\n   */\n  childIndex(child: Node): number;\n\n  /**\n   * Make a deep copy of the node (but with no parent).\n   */\n  copy(): Node;\n\n  /**\n   * @param {string} kind  The kind of nodes to be located in the tree\n   * @return {Node[]}      An array of nodes that are children (at any depth) of the given kind\n   */\n  findNodes(kind: string): Node[];\n\n  /**\n   * @param {Function} func  A function to apply to each node in the tree rooted at this node\n   * @param {any} data       Data to pass to the function (as state information)\n   */\n  walkTree(func: (node: Node, data?: any) => void, data?: any): void;\n}\n\n/*********************************************************/\n/**\n *  The generic Node class interface\n */\n\nexport interface NodeClass {\n  /**\n   * @param {NodeFactory} factory  The NodeFactory to use to create new nodes when needed\n   * @param {PropertyList} properties  Any properties to be added to the node, if any\n   * @param {Node[]} children  The initial child nodes, if any\n   * @return {Node}  The newly created node\n   */\n  new (factory: NodeFactory<Node, NodeClass>, properties?: PropertyList, children?: Node[]): Node;\n}\n\n/*********************************************************/\n/**\n *  The abstract Node class\n */\n\nexport abstract class AbstractNode implements Node {\n\n  /**\n   * The parent node for this one\n   */\n  public parent: Node = null;\n\n  /**\n   * The properties for this node\n   */\n  protected properties: PropertyList = {};\n\n  /**\n   * The children for this node\n   */\n  public childNodes: Node[] = [];\n\n  /**\n   * @param {NodeFactory} factory  The NodeFactory to use to create new nodes when needed\n   * @param {PropertyList} properties  Any properties to be added to the node, if any\n   * @param {Node[]} children  The initial child nodes, if any\n   *\n   * @constructor\n   * @implements {Node}\n   */\n  constructor(readonly factory: NodeFactory<Node, NodeClass>, properties: PropertyList = {}, children: Node[] = []) {\n    for (const name of Object.keys(properties)) {\n      this.setProperty(name, properties[name]);\n    }\n    if (children.length) {\n      this.setChildren(children);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'unknown';\n  }\n\n  /**\n   * @override\n   */\n  public setProperty(name: string, value: Property) {\n    this.properties[name] = value;\n  }\n\n  /**\n   * @override\n   */\n  public getProperty(name: string) {\n    return this.properties[name];\n  }\n\n  /**\n   * @override\n   */\n  public getPropertyNames() {\n    return Object.keys(this.properties);\n  }\n\n  /**\n   * @override\n   */\n  public getAllProperties() {\n    return this.properties;\n  }\n\n  /**\n   * @override\n   */\n  public removeProperty(...names: string[]) {\n    for (const name of names) {\n      delete this.properties[name];\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public isKind(kind: string): boolean {\n    return this.factory.nodeIsKind(this, kind);\n  }\n\n\n  /**\n   * @override\n   */\n  public setChildren(children: Node[]) {\n    this.childNodes = [];\n    for (let child of children) {\n      this.appendChild(child);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public appendChild(child: Node) {\n    this.childNodes.push(child);\n    child.parent = this;\n    return child;\n  }\n\n  /**\n   * @override\n   */\n  public replaceChild(newChild: Node, oldChild: Node) {\n    let i = this.childIndex(oldChild);\n    // If i === null should we error?  return null?  silently fail?\n    if (i !== null) {\n      this.childNodes[i] = newChild;\n      newChild.parent = this;\n      oldChild.parent = null;\n    }\n    return newChild;\n  }\n\n  /**\n   * @override\n   */\n  public removeChild(child: Node) {\n    const i = this.childIndex(child);\n    if (i !== null) {\n      this.childNodes.splice(i, 1);\n      child.parent = null;\n    }\n    return child;\n  }\n\n\n  /**\n   * @override\n   */\n  public childIndex(node: Node) {\n    let i = this.childNodes.indexOf(node);\n    return (i === -1 ? null : i);\n  }\n\n\n  /**\n   * @override\n   */\n  public copy() {\n    const node = (this as AbstractNode).factory.create(this.kind) as AbstractNode;\n    node.properties = {...this.properties};\n    for (const child of this.childNodes || []) {\n      if (child) {\n        node.appendChild(child.copy());\n      }\n    }\n    return node;\n  }\n\n  /**\n   * @override\n   */\n  public findNodes(kind: string) {\n    let nodes: Node[] = [];\n    this.walkTree((node: Node) => {\n      if (node.isKind(kind)) {\n        nodes.push(node);\n      }\n    });\n    return nodes;\n  }\n\n\n  /**\n   * @override\n   */\n  public walkTree(func: (node: Node, data?: any) => void, data?: any) {\n    func(this, data);\n    for (const child of this.childNodes) {\n      if (child) {\n        child.walkTree(func, data);\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Simple string version for debugging, just to get the structure.\n   */\n  public toString() {\n    return this.kind + '(' + this.childNodes.join(',') + ')';\n  }\n\n}\n\n/*********************************************************/\n/**\n *  The abstract EmptyNode class\n */\n\nexport abstract class AbstractEmptyNode extends AbstractNode {\n  /**\n   *  We don't have children, so ignore these methods\n   */\n\n  /**\n   * @override\n   */\n  public setChildren(_children: Node[]) {\n  }\n\n  /**\n   * @override\n   */\n  public appendChild(child: Node) {\n    return child;\n  }\n\n  /**\n   * @override\n   */\n  public replaceChild(_newChild: Node, oldChild: Node) {\n    return oldChild;\n  }\n\n  /**\n   * @override\n   */\n  public childIndex(_node: Node) {\n    return null as number;\n  }\n\n  /**\n   * Don't step into children (there aren't any)\n   *\n   * @override\n   */\n  public walkTree(func: (node: Node, data?: any) => void, data?: any) {\n    func(this, data);\n    return data;\n  }\n\n  /**\n   * Simple string version for debugging, just to get the structure.\n   */\n  public toString() {\n    return this.kind;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 727, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"file":"MmlNode.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNode.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Interfaces and abstract classes for MmlNode objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Attributes, INHERIT} from './Attributes.js';\nimport {Property, PropertyList, Node, AbstractNode, AbstractEmptyNode, NodeClass} from '../Tree/Node.js';\nimport {MmlFactory} from './MmlFactory.js';\nimport {DOMAdaptor} from '../DOMAdaptor.js';\n\n/**\n *  Used in setInheritedAttributes() to pass originating node kind as well as property value\n */\nexport type AttributeList = {[attribute: string]: [string, Property]};\n\n/**\n *  These are the TeX classes for spacing computations\n */\nexport const TEXCLASS = {\n  ORD:   0,\n  OP:    1,\n  BIN:   2,\n  REL:   3,\n  OPEN:  4,\n  CLOSE: 5,\n  PUNCT: 6,\n  INNER: 7,\n  VCENTER: 8,  // Used in TeXAtom, but not for spacing\n  NONE:   -1\n};\n\nexport const TEXCLASSNAMES = ['ORD', 'OP', 'BIN', 'REL', 'OPEN', 'CLOSE', 'PUNCT', 'INNER', 'VCENTER'];\n\n/**\n *  The spacing sizes used by the TeX spacing table below.\n */\nconst TEXSPACELENGTH = ['', 'thinmathspace', 'mediummathspace', 'thickmathspace'];\n\n/**\n * See TeXBook Chapter 18 (p. 170)\n */\nconst TEXSPACE = [\n  [ 0, -1,  2,  3,  0,  0,  0,  1], // ORD\n  [-1, -1,  0,  3,  0,  0,  0,  1], // OP\n  [ 2,  2,  0,  0,  2,  0,  0,  2], // BIN\n  [ 3,  3,  0,  0,  3,  0,  0,  3], // REL\n  [ 0,  0,  0,  0,  0,  0,  0,  0], // OPEN\n  [ 0, -1,  2,  3,  0,  0,  0,  1], // CLOSE\n  [ 1,  1,  0,  1,  1,  1,  1,  1], // PUNCT\n  [ 1, -1,  2,  3,  1,  0,  1,  1]  // INNER\n];\n\n/**\n * Attributes used to determine indentation and shifting\n */\nexport const indentAttributes = [\n  'indentalign', 'indentalignfirst',\n  'indentshift', 'indentshiftfirst'\n];\n\n/**\n * The nodes that can be in the internal MathML tree\n */\nexport type MMLNODE = MmlNode | TextNode | XMLNode;\n\n/*****************************************************************/\n/**\n *  The MmlNode interface (extends Node interface)\n */\n\nexport interface MmlNode extends Node {\n\n  /**\n   * Test various properties of MathML nodes\n   */\n  readonly isToken: boolean;\n  readonly isEmbellished: boolean;\n  readonly isSpacelike: boolean;\n  readonly linebreakContainer: boolean;\n  readonly hasNewLine: boolean;\n\n  /**\n   *  The expected number of children (-1 means use inferred mrow)\n   */\n  readonly arity: number;\n  readonly isInferred: boolean;\n\n  /**\n   *  Get the parent node (skipping inferred mrows and\n   *    other nodes marked as notParent)\n   */\n  readonly Parent: MmlNode;\n  readonly notParent: boolean;\n\n  /**\n   * The actual parent in the tree\n   */\n  parent: MmlNode;\n\n  /**\n   *  values needed for TeX spacing computations\n   */\n  texClass: number;\n  prevClass: number;\n  prevLevel: number;\n\n  /**\n   *  The attributes (explicit and inherited) for this node\n   */\n  attributes: Attributes;\n\n  /**\n   * @return {MmlNode}  For embellished operators, the child node that contains the\n   *                    core <mo> node.  For non-embellished nodes, the original node.\n   */\n  core(): MmlNode;\n\n  /**\n   * @return {MmlNode}  For embellished operators, the core <mo> element (at whatever\n   *                    depth).  For non-embellished nodes, the original node itself.\n   */\n  coreMO(): MmlNode;\n\n  /**\n   * @return {number}   For embellished operators, the index of the child node containing\n   *                    the core <mo>.  For non-embellished nodes, 0.\n   */\n  coreIndex(): number;\n\n  /**\n   * @return {number}  The index of this node in its parent's childNodes array.\n   */\n  childPosition(): number;\n\n  /**\n   * @param {MmlNode} prev  The node that is before this one for TeX spacing purposes\n   *                        (not all nodes count in TeX measurements)\n   * @return {MmlNode}  The node that should be the previous node for the next one\n   *                    in the tree (usually, either the last child, or the node itself)\n   */\n  setTeXclass(prev: MmlNode): MmlNode;\n\n  /**\n   * @return {string}  The spacing to use before this element (one of TEXSPACELENGTH array above)\n   */\n  texSpacing(): string;\n\n  /**\n   * @return {boolean}  The core mo element has an explicit 'form', 'lspace', or 'rspace' attribute\n   */\n  hasSpacingAttributes(): boolean;\n\n  /**\n   * Sets the nodes inherited attributes, and pushes them to the nodes children.\n   *\n   * @param {AttributeList} attributes  The list of inheritable attributes (with the node kinds\n   *                                    from which they came)\n   * @param {boolean} display           The displaystyle to inherit\n   * @param {number} level              The scriptlevel to inherit\n   * @param {boolean} prime             The TeX prime style to inherit (T vs. T', etc).\n   */\n  setInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean): void;\n\n  /**\n   * Set the nodes inherited attributes based on the attributes of the given node\n   *   (used for creating extra nodes in the tree after setInheritedAttributes has already run)\n   *\n   * @param {MmlNode} node   The node whose attributes are to be used as a template\n   */\n  inheritAttributesFrom(node: MmlNode): void;\n\n  /**\n   * Replace the current node with an error message (or the name of the node)\n   *\n   * @param {string} message         The error message to use\n   * @param {PropertyList} options   The options telling how much to verify\n   * @param {boolean} short          True means use just the kind if not using full errors\n   * @return {MmlNode}               The construted merror\n   */\n  mError(message: string, options: PropertyList, short?: boolean): MmlNode;\n\n  /**\n   * Check integrity of MathML structure\n   *\n   * @param {PropertyList} options  The options controlling the check\n   */\n  verifyTree(options?: PropertyList): void;\n}\n\n\n/*****************************************************************/\n/**\n *  The MmlNode class interface (extends the NodeClass)\n */\n\nexport interface MmlNodeClass extends NodeClass {\n\n  /**\n   *  The list of default attribute values for nodes of this class\n   */\n  defaults?: PropertyList;\n\n  /**\n   * An MmlNode takes a NodeFactory (so it can create additional nodes as needed), a list\n   *   of attributes, and an array of children and returns the desired MmlNode with\n   *   those attributes and children\n   *\n   * @constructor\n   * @param {MmlFactory} factory       The MathML node factory to use to create additional nodes\n   * @param {PropertyList} attributes  The list of initial attributes for the node\n   * @param {MmlNode[]} children       The initial child nodes (more can be added later)\n   */\n  new (factory: MmlFactory, attributes?: PropertyList, children?: MmlNode[]): MmlNode;\n\n}\n\n\n/*****************************************************************/\n/**\n *  The abstract MmlNode class (extends the AbstractNode class and implements\n *  the IMmlNode interface)\n */\n\nexport abstract class AbstractMmlNode extends AbstractNode implements MmlNode {\n\n  /**\n   * The properties common to all MathML nodes\n   */\n  public static defaults: PropertyList = {\n    mathbackground: INHERIT,\n    mathcolor: INHERIT,\n    mathsize: INHERIT,  // technically only for token elements, but <mstyle mathsize=\"...\"> should\n    //    scale all spaces, fractions, etc.\n    dir: INHERIT\n  };\n\n  /**\n   *  This lists properties that do NOT get inherited between specific kinds\n   *  of nodes.  The outer keys are the node kinds that are being inherited FROM,\n   *  while the second level of keys are the nodes that INHERIT the values.  Any\n   *  property appearing in the innermost list is NOT inherited by the pair.\n   *\n   *  For example, an mpadded element will not inherit a width attribute from an mstyle node.\n   */\n  public static noInherit: {[node1: string]: {[node2: string]: {[attribute: string]: boolean}}} = {\n    mstyle: {\n      mpadded: {width: true, height: true, depth: true, lspace: true, voffset: true},\n      mtable:  {width: true, height: true, depth: true, align: true}\n    },\n    maligngroup: {\n      mrow: {groupalign: true},\n      mtable: {groupalign: true}\n    }\n  };\n\n  /**\n   * This lists the attributes that should always be inherited,\n   *   even when there is no default value for the attribute.\n   */\n  public static alwaysInherit: {[name: string]: boolean} = {\n    scriptminsize: true,\n    scriptsizemultiplier: true\n  };\n\n  /**\n   * This is the list of options for the verifyTree() method\n   */\n  public static verifyDefaults: PropertyList = {\n    checkArity: true,\n    checkAttributes: false,\n    fullErrors: false,\n    fixMmultiscripts: true,\n    fixMtables: true\n  };\n\n  /*\n   * These default to being unset (the node doesn't participate in spacing calculations).\n   * The correct values are produced when the setTeXclass() method is called on the tree.\n   */\n\n  /**\n   * The TeX class for the preceding node\n   */\n  public prevClass: number = null;\n\n  /**\n   * The scriptlevel of the preceding node\n   */\n  public prevLevel: number = null;\n\n  /**\n   * This node's attributes\n   */\n  public attributes: Attributes;\n\n  /**\n   *  Child nodes are MmlNodes (special case of Nodes).\n   */\n  public childNodes: MmlNode[];\n\n  /**\n   * The parent is an MmlNode\n   */\n  public parent: MmlNode;\n\n  /**\n   * The node factory is an MmlFactory\n   */\n  public readonly factory: MmlFactory;\n\n  /**\n   * The TeX class of this node (obtained via texClass below)\n   */\n  protected texclass: number = null;\n\n  /**\n   *  Create an MmlNode:\n   *    If the arity is -1, add the inferred row (created by the factory)\n   *    Add the children, if any\n   *    Create the Attribute object from the class defaults and the global defaults (the math node defaults)\n   *\n   *  @override\n   */\n  constructor(factory: MmlFactory, attributes: PropertyList = {}, children: MmlNode[] = []) {\n    super(factory);\n    if (this.arity < 0) {\n      this.childNodes = [factory.create('inferredMrow')];\n      this.childNodes[0].parent = this;\n    }\n    this.setChildren(children);\n    this.attributes = new Attributes(\n      factory.getNodeClass(this.kind).defaults,\n      factory.getNodeClass('math').defaults\n    );\n    this.attributes.setList(attributes);\n  }\n\n  /**\n   * @override\n   *\n   * @param {boolean} keepIds   True to copy id attributes, false to skip them.\n   *                              (May cause error in the future, since not part of the interface.)\n   * @return {AbstractMmlNode}  The copied node tree.\n   */\n  public copy(keepIds: boolean = false): AbstractMmlNode {\n    const node = this.factory.create(this.kind) as AbstractMmlNode;\n    node.properties = {...this.properties};\n    if (this.attributes) {\n      const attributes = this.attributes.getAllAttributes();\n      for (const name of Object.keys(attributes)) {\n        if (name !== 'id' || keepIds) {\n          node.attributes.set(name, attributes[name]);\n        }\n      }\n    }\n    if (this.childNodes && this.childNodes.length) {\n      let children = this.childNodes as MmlNode[];\n      if (children.length === 1 && children[0].isInferred) {\n        children = children[0].childNodes as MmlNode[];\n      }\n      for (const child of children) {\n        if (child) {\n          node.appendChild(child.copy() as MmlNode);\n        } else {\n          node.childNodes.push(null);\n        }\n      }\n    }\n    return node;\n  }\n\n  /**\n   * The TeX class for this node\n   */\n  public get texClass(): number {\n    return this.texclass;\n  }\n\n  /**\n   * The TeX class for this node\n   */\n  public set texClass(texClass: number) {\n    this.texclass = texClass;\n  }\n\n  /**\n   * @return {boolean}  true if this is a token node\n   */\n  public get isToken(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  true if this is an embellished operator\n   */\n  public get isEmbellished(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  true if this is a space-like node\n   */\n  public get isSpacelike(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  true if this is a node that supports linebreaks in its children\n   */\n  public get linebreakContainer(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  true if this node contains a line break\n   */\n  public get hasNewLine(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {number}  The number of children allowed, or Infinity for any number,\n   *                   or -1 for when an inferred row is needed for the children.\n   *                   Special case is 1, meaning at least one (other numbers\n   *                   mean exactly that many).\n   */\n  public get arity(): number {\n    return Infinity;\n  }\n\n  /**\n   * @return {boolean}  true if this is an inferred mrow\n   */\n  public get isInferred(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {MmlNode}  The logical parent of this node (skipping over inferred rows\n   *                      some other node types)\n   */\n  public get Parent(): MmlNode {\n    let parent = this.parent;\n    while (parent && parent.notParent) {\n      parent = parent.Parent;\n    }\n    return parent;\n  }\n\n  /**\n   * @return {boolean}  true if this is a node that doesn't count as a parent node in Parent()\n   */\n  public get notParent(): boolean {\n    return false;\n  }\n\n  /**\n   * If there is an inferred row, the the children of that instead\n   *\n   * @override\n   */\n  public setChildren(children: MmlNode[]) {\n    if (this.arity < 0) {\n      return this.childNodes[0].setChildren(children);\n    }\n    return super.setChildren(children);\n  }\n  /**\n   * If there is an inferred row, append to that instead.\n   * If a child is inferred, append its children instead.\n   *\n   * @override\n   */\n  public appendChild(child: MmlNode) {\n    if (this.arity < 0) {\n      this.childNodes[0].appendChild(child);\n      return child;\n    }\n    if (child.isInferred) {\n      //\n      //  If we can have arbitrary children, remove the inferred mrow\n      //  (just add its children).\n      //\n      if (this.arity === Infinity) {\n        child.childNodes.forEach((node) => super.appendChild(node));\n        return child;\n      }\n      //\n      //  Otherwise, convert the inferred mrow to an explicit mrow\n      //\n      const original = child;\n      child = this.factory.create('mrow');\n      child.setChildren(original.childNodes);\n      child.attributes = original.attributes;\n      for (const name of original.getPropertyNames()) {\n        child.setProperty(name, original.getProperty(name));\n      }\n    }\n    return super.appendChild(child);\n  }\n  /**\n   * If there is an inferred row, remove the child from there\n   *\n   * @override\n   */\n  public replaceChild(newChild: MmlNode, oldChild: MmlNode) {\n    if (this.arity < 0) {\n      this.childNodes[0].replaceChild(newChild, oldChild);\n      return newChild;\n    }\n    return super.replaceChild(newChild, oldChild);\n  }\n\n  /**\n   * @override\n   */\n  public core(): MmlNode {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public coreMO(): MmlNode {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public coreIndex() {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  public childPosition() {\n    let child: MmlNode = this;\n    let parent = child.parent;\n    while (parent && parent.notParent) {\n      child = parent;\n      parent = parent.parent;\n    }\n    if (parent) {\n      let i = 0;\n      for (const node of parent.childNodes) {\n        if (node === child) {\n          return i;\n        }\n        i++;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode): MmlNode {\n    this.getPrevClass(prev);\n    return (this.texClass != null ? this : prev);\n  }\n  /**\n   * For embellished operators, get the data from the core and clear the core\n   *\n   * @param {MmlNode} core  The core <mo> for this node\n   */\n  protected updateTeXclass(core: MmlNode) {\n    if (core) {\n      this.prevClass = core.prevClass;\n      this.prevLevel = core.prevLevel;\n      core.prevClass = core.prevLevel = null;\n      this.texClass = core.texClass;\n    }\n  }\n  /**\n   * Get the previous element's texClass and scriptlevel\n   *\n   * @param {MmlNode} prev  The previous node to this one\n   */\n  protected getPrevClass(prev: MmlNode) {\n    if (prev) {\n      this.prevClass = prev.texClass;\n      this.prevLevel = prev.attributes.get('scriptlevel') as number;\n    }\n  }\n\n  /**\n   * @return {string}  returns the spacing to use before this node\n   */\n  public texSpacing(): string {\n    let prevClass = (this.prevClass != null ? this.prevClass : TEXCLASS.NONE);\n    let texClass = this.texClass || TEXCLASS.ORD;\n    if (prevClass === TEXCLASS.NONE || texClass === TEXCLASS.NONE) {\n      return '';\n    }\n    if (prevClass === TEXCLASS.VCENTER) {\n      prevClass = TEXCLASS.ORD;\n    }\n    if (texClass === TEXCLASS.VCENTER) {\n      texClass = TEXCLASS.ORD;\n    }\n    let space = TEXSPACE[prevClass][texClass];\n    if ((this.prevLevel > 0 || this.attributes.get('scriptlevel') > 0) && space >= 0) {\n      return '';\n    }\n    return TEXSPACELENGTH[Math.abs(space)];\n  }\n\n  /**\n   * @return {boolean}  The core mo element has an explicit 'form' attribute\n   */\n  public hasSpacingAttributes(): boolean {\n    return this.isEmbellished && this.coreMO().hasSpacingAttributes();\n  }\n\n  /**\n   * Sets the inherited propertis for this node, and pushes inherited properties to the children\n   *\n   *   For each inheritable attribute:\n   *     If the node has a default for this attribute, try to inherit it\n   *       but check if the noInherit object prevents that.\n   *   If the node doesn't have an explicit displaystyle, inherit it\n   *   If the node doesn't have an explicit scriptstyle, inherit it\n   *   If the prime style is true, set it as a property (it is not a MathML attribute)\n   *   Check that the number of children is correct\n   *   Finally, push any inherited attributes to teh children.\n   *\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList = {},\n                                display: boolean = false, level: number = 0, prime: boolean = false) {\n    let defaults = this.attributes.getAllDefaults();\n    for (const key of Object.keys(attributes)) {\n      if (defaults.hasOwnProperty(key) || AbstractMmlNode.alwaysInherit.hasOwnProperty(key)) {\n        let [node, value] = attributes[key];\n        let noinherit = (AbstractMmlNode.noInherit[node] || {})[this.kind] || {};\n        if (!noinherit[key]) {\n          this.attributes.setInherited(key, value);\n        }\n      }\n    }\n    let displaystyle = this.attributes.getExplicit('displaystyle');\n    if (displaystyle === undefined) {\n      this.attributes.setInherited('displaystyle', display);\n    }\n    let scriptlevel = this.attributes.getExplicit('scriptlevel');\n    if (scriptlevel === undefined) {\n      this.attributes.setInherited('scriptlevel', level);\n    }\n    if (prime) {\n      this.setProperty('texprimestyle', prime);\n    }\n    let arity = this.arity;\n    if (arity >= 0 && arity !== Infinity && ((arity === 1 && this.childNodes.length === 0) ||\n                                             (arity !== 1 && this.childNodes.length !== arity))) {\n      //\n      //  Make sure there are the right number of child nodes\n      //  (trim them or add empty mrows)\n      //\n      if (arity < this.childNodes.length) {\n        this.childNodes = this.childNodes.slice(0, arity);\n      } else {\n        while (this.childNodes.length < arity) {\n          this.appendChild(this.factory.create('mrow'));\n        }\n      }\n    }\n    this.setChildInheritedAttributes(attributes, display, level, prime);\n  }\n  /**\n   * Apply inherited attributes to all children\n   * (Some classes override this to handle changes in displaystyle and scriptlevel)\n   *\n   * @param {AttributeList} attributes  The list of inheritable attributes (with the node kinds\n   *                                    from which they came)\n   * @param {boolean} display           The displaystyle to inherit\n   * @param {number} level              The scriptlevel to inherit\n   * @param {boolean} prime             The TeX prime style to inherit (T vs. T', etc).\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    for (const child of this.childNodes) {\n      child.setInheritedAttributes(attributes, display, level, prime);\n    }\n  }\n  /**\n   * Used by subclasses to add their own attributes to the inherited list\n   * (e.g., mstyle uses this to augment the inherited attibutes)\n   *\n   * @param {AttributeList} current    The current list of inherited attributes\n   * @param {PropertyList} attributes  The new attributes to add into the list\n   */\n  protected addInheritedAttributes(current: AttributeList, attributes: PropertyList) {\n    let updated: AttributeList = {...current};\n    for (const name of Object.keys(attributes)) {\n      if (name !== 'displaystyle' && name !== 'scriptlevel' && name !== 'style') {\n        updated[name] = [this.kind, attributes[name]];\n      }\n    }\n    return updated;\n  }\n\n  /**\n   * Set the nodes inherited attributes based on the attributes of the given node\n   *   (used for creating extra nodes in the tree after setInheritedAttributes has already run)\n   *\n   * @param {MmlNode} node   The node whose attributes are to be used as a template\n   */\n  public inheritAttributesFrom(node: MmlNode) {\n    const attributes = node.attributes;\n    const display = attributes.get('displaystyle') as boolean;\n    const scriptlevel = attributes.get('scriptlevel') as number;\n    const defaults: AttributeList = (!attributes.isSet('mathsize') ? {} : {\n      mathsize: ['math', attributes.get('mathsize')]\n    });\n    const prime = node.getProperty('texprimestyle') as boolean || false;\n    this.setInheritedAttributes(defaults, display, scriptlevel, prime);\n  }\n\n  /**\n   * Verify the attributes, and that there are the right number of children.\n   * Then verify the children.\n   *\n   * @param {PropertyList} options   The options telling how much to verify\n   */\n  public verifyTree(options: PropertyList = null) {\n    if (options === null) {\n      return;\n    }\n    this.verifyAttributes(options);\n    let arity = this.arity;\n    if (options['checkArity']) {\n      if (arity >= 0 && arity !== Infinity &&\n          ((arity === 1 && this.childNodes.length === 0) ||\n           (arity !== 1 && this.childNodes.length !== arity))) {\n        this.mError('Wrong number of children for \"' + this.kind + '\" node', options, true);\n      }\n    }\n    this.verifyChildren(options);\n  }\n\n  /**\n   * Verify that all the attributes are valid (i.e., have defaults)\n   *\n   * @param {PropertyList} options   The options telling how much to verify\n   */\n  protected verifyAttributes(options: PropertyList) {\n    if (options['checkAttributes']) {\n      const attributes = this.attributes;\n      const bad = [];\n      for (const name of attributes.getExplicitNames()) {\n        if (name.substr(0, 5) !== 'data-' && attributes.getDefault(name) === undefined &&\n            !name.match(/^(?:class|style|id|(?:xlink:)?href)$/)) {\n          // FIXME: provide a configurable checker for names that are OK\n          bad.push(name);\n        }\n        // FIXME: add ability to check attribute values?\n      }\n      if (bad.length) {\n        this.mError('Unknown attributes for ' + this.kind + ' node: ' + bad.join(', '), options);\n      }\n    }\n  }\n\n  /**\n   * Verify the children.\n   *\n   * @param {PropertyList} options   The options telling how much to verify\n   */\n  protected verifyChildren(options: PropertyList) {\n    for (const child of this.childNodes) {\n      child.verifyTree(options);\n    }\n  }\n\n  /**\n   * Replace the current node with an error message (or the name of the node)\n   *\n   * @param {string} message         The error message to use\n   * @param {PropertyList} options   The options telling how much to verify\n   * @param {boolean} short          True means use just the kind if not using full errors\n   * @return {MmlNode}               The constructed merror\n   */\n  public mError(message: string, options: PropertyList, short: boolean = false): MmlNode {\n    if (this.parent && this.parent.isKind('merror')) {\n      return null;\n    }\n    let merror = this.factory.create('merror');\n    merror.attributes.set('data-mjx-message', message);\n    if (options['fullErrors'] || short) {\n      let mtext = this.factory.create('mtext');\n      let text = this.factory.create('text') as TextNode;\n      text.setText(options['fullErrors'] ? message : this.kind);\n      mtext.appendChild(text);\n      merror.appendChild(mtext);\n      this.parent.replaceChild(merror, this);\n    } else {\n      this.parent.replaceChild(merror, this);\n      merror.appendChild(this);\n    }\n    return merror;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  The abstract MmlNode Token node class (extends the AbstractMmlNode)\n */\n\nexport abstract class AbstractMmlTokenNode extends AbstractMmlNode {\n\n  /**\n   * Add the attributes common to all token nodes\n   */\n  public static defaults: PropertyList = {\n      ...AbstractMmlNode.defaults,\n    mathvariant: 'normal',\n    mathsize: INHERIT\n  };\n\n  /**\n   * @override\n   */\n  public get isToken() {\n    return true;\n  }\n\n  /**\n   * Get the text of the token node (skipping mglyphs, and combining\n   *   multiple text nodes)\n   */\n  public getText() {\n    let text = '';\n    for (const child of this.childNodes) {\n      if (child instanceof TextNode) {\n        text += child.getText();\n      }\n    }\n    return text;\n  }\n\n  /**\n   * Only inherit to child nodes that are AbstractMmlNodes (not TextNodes)\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    for (const child of this.childNodes) {\n      if (child instanceof AbstractMmlNode) {\n        child.setInheritedAttributes(attributes, display, level, prime);\n      }\n    }\n  }\n\n  /**\n   * Only step into children that are AbstractMmlNodes (not TextNodes)\n   * @override\n   */\n  public walkTree(func: (node: Node, data?: any) => void, data?: any) {\n    func(this, data);\n    for (const child of this.childNodes) {\n      if (child instanceof AbstractMmlNode) {\n        child.walkTree(func, data);\n      }\n    }\n    return data;\n  }\n\n}\n\n\n/*****************************************************************/\n/**\n *  The abstract MmlNode Layout class (extends the AbstractMmlNode)\n *\n *  These have inferred mrows (so only one child) and can be\n *  spacelike or embellished based on their contents.\n */\n\nexport abstract class AbstractMmlLayoutNode extends AbstractMmlNode {\n\n  /**\n   * Use the same defaults as AbstractMmlNodes\n   */\n  public static defaults: PropertyList = AbstractMmlNode.defaults;\n\n  /**\n   * @override\n   */\n  public get isSpacelike() {\n    return this.childNodes[0].isSpacelike;\n  }\n\n  /**\n   * @override\n   */\n  public get isEmbellished() {\n    return this.childNodes[0].isEmbellished;\n  }\n\n  /**\n   * @override\n   */\n  public get arity() {\n    return -1;\n  }\n\n  /**\n   * @override\n   */\n  public core() {\n    return this.childNodes[0];\n  }\n\n  /**\n   * @override\n   */\n  public coreMO() {\n    return this.childNodes[0].coreMO();\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    prev = this.childNodes[0].setTeXclass(prev);\n    this.updateTeXclass(this.childNodes[0]);\n    return prev;\n  }\n}\n\n/*****************************************************************/\n/**\n *  The abstract MmlNode-with-base-node Class (extends the AbstractMmlNode)\n *\n *  These have a base element and other elemetns, (e.g., script elements for msubsup).\n *  They can be embellished (if their base is), and get their TeX classes\n *    from their base with their scripts being handled as separate math lists.\n */\n\nexport abstract class AbstractMmlBaseNode extends AbstractMmlNode {\n\n  /**\n   * Use the same defaults as AbstractMmlNodes\n   */\n  public static defaults: PropertyList = AbstractMmlNode.defaults;\n\n  /**\n   * @override\n   */\n  public get isEmbellished() {\n    return this.childNodes[0].isEmbellished;\n  }\n\n  /**\n   * @override\n   */\n  public core() {\n    return this.childNodes[0];\n  }\n\n  /**\n   * @override\n   */\n  public coreMO() {\n    return this.childNodes[0].coreMO();\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    this.texClass = TEXCLASS.ORD;\n    let base = this.childNodes[0];\n    if (base) {\n      if (this.isEmbellished || base.isKind('mi')) {\n        prev = base.setTeXclass(prev);\n        this.updateTeXclass(this.core());\n      } else {\n        base.setTeXclass(null);\n        prev = this;\n      }\n    } else {\n      prev = this;\n    }\n    for (const child of this.childNodes.slice(1)) {\n      if (child) {\n        child.setTeXclass(null);\n      }\n    }\n    return prev;\n  }\n}\n\n/*****************************************************************/\n/**\n *  The abstract MmlNode Empty Class (extends AbstractEmptyNode, implements MmlNode)\n *\n *  These have no children and no attributes (TextNode and XMLNode), so we\n *  override all the methods dealing with them, and with the data that usually\n *  goes with an MmlNode.\n */\n\nexport abstract class AbstractMmlEmptyNode extends AbstractEmptyNode implements MmlNode {\n\n  /**\n   *  Parent is an MmlNode\n   */\n  public parent: MmlNode;\n\n  /**\n   * @return {boolean}  Not a token element\n   */\n  public get isToken(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  Not embellished\n   */\n  public get isEmbellished(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  Not space-like\n   */\n  public get isSpacelike(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  Not a container of any kind\n   */\n  public get linebreakContainer(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  Does not contain new lines\n   */\n  public get hasNewLine(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {number}  No children\n   */\n  public get arity(): number {\n    return 0;\n  }\n\n  /**\n   * @return {boolean}  Is not an inferred row\n   */\n  public get isInferred(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean}  Is not a container element\n   */\n  public get notParent(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {MmlNode}  Parent is the actual parent\n   */\n  public get Parent(): MmlNode {\n    return this.parent;\n  }\n\n  /**\n   * @return {number}  No TeX class\n   */\n  public get texClass(): number {\n    return TEXCLASS.NONE;\n  }\n\n  /**\n   * @return {number}  No previous element\n   */\n  public get prevClass(): number {\n    return TEXCLASS.NONE;\n  }\n\n  /**\n   * @return {number}  No previous element\n   */\n  public get prevLevel(): number {\n    return 0;\n  }\n\n  /**\n   * @return {boolean}  The core mo element has an explicit 'form' attribute\n   */\n  public hasSpacingAttributes(): boolean {\n    return false;\n  }\n\n  /**\n   * return {Attributes}  No attributes, so don't store one\n   */\n  public get attributes(): Attributes {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  public core(): MmlNode {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public coreMO(): MmlNode {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public coreIndex() {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  public childPosition() {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    return prev;\n  }\n  /**\n   * @override\n   */\n  public texSpacing() {\n    return '';\n  }\n\n  /**\n   * No children or attributes, so ignore this call.\n   *\n   * @override\n   */\n  public setInheritedAttributes(_attributes: AttributeList, _display: boolean, _level: number, _prime: boolean) {}\n\n  /**\n   * No children or attributes, so ignore this call.\n   *\n   * @override\n   */\n  public inheritAttributesFrom(_node: MmlNode) {}\n\n  /**\n   * No children or attributes, so ignore this call.\n   *\n   * @param {PropertyList} options  The options for the check\n   */\n  public verifyTree(_options: PropertyList) {}\n\n  /**\n   *  @override\n   */\n  public mError(_message: string, _options: PropertyList, _short: boolean = false) {\n    return null as MmlNode;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  The TextNode Class (extends AbstractMmlEmptyNode)\n */\n\nexport class TextNode extends AbstractMmlEmptyNode {\n  /**\n   * The text for this node\n   */\n  protected text: string = '';\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'text';\n  }\n\n  /**\n   * @return {string}  Return the node's text\n   */\n  public getText(): string {\n    return this.text;\n  }\n\n  /**\n   * @param {string} text  The text to use for the node\n   * @return {TextNode}  The text node (for chaining of method calls)\n   */\n  public setText(text: string): TextNode {\n    this.text = text;\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public copy() {\n    return (this.factory.create(this.kind) as TextNode).setText(this.getText());\n  }\n\n  /**\n   * Just use the text\n   */\n  public toString() {\n    return this.text;\n  }\n\n}\n\n\n/*****************************************************************/\n/**\n *  The XMLNode Class (extends AbstractMmlEmptyNode)\n */\n\nexport class XMLNode extends AbstractMmlEmptyNode {\n  /**\n   * The XML content for this node\n   */\n  protected xml: Object = null;\n\n  /**\n   * DOM adaptor for the content\n   */\n  protected adaptor: DOMAdaptor<any, any, any> = null;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'XML';\n  }\n\n  /**\n   * @return {Object}  Return the node's XML content\n   */\n  public getXML(): Object {\n    return this.xml;\n  }\n\n  /**\n   * @param {object} xml  The XML content to be saved\n   * @param {DOMAdaptor} adaptor DOM adaptor for the content\n   * @return {XMLNode}  The XML node (for chaining of method calls)\n   */\n  public setXML(xml: Object, adaptor: DOMAdaptor<any, any, any> = null): XMLNode {\n    this.xml = xml;\n    this.adaptor = adaptor;\n    return this;\n  }\n\n  /**\n   * @return {string}  The serialized XML content\n   */\n  public getSerializedXML(): string {\n    return this.adaptor.serializeXML(this.xml);\n  }\n\n  /**\n   * @override\n   */\n  public copy(): XMLNode {\n    return (this.factory.create(this.kind) as XMLNode).setXML(this.adaptor.clone(this.xml));\n  }\n\n  /**\n   * Just indicate that this is XML data\n   */\n  public toString() {\n    return 'XML data';\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1841, "column": 0}, "map": {"version":3,"file":"OperatorDictionary.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/OperatorDictionary.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Defines the operator dictionary structure\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../Tree/Node.js';\nimport {TEXCLASS} from './MmlNode.js';\n\n/**\n * Types needed for the operator dictionary\n */\nexport type OperatorDef = [number, number, number, PropertyList];\nexport type OperatorList = {[name: string]: OperatorDef};\nexport type RangeDef = [number, number, number, string, string?];\n\n/**\n * @param {number} lspace            The operator's MathML left-hand spacing\n * @param {number} rspace            The operator's MathML right-hand spacing\n * @param {number} texClass          The default TeX class for the operator\n * @param {PropertyList} properties  Any default properties from the operator dictionary\n * @return {OperatorDef}             The operator definition array\n */\nexport function OPDEF(lspace: number, rspace: number, texClass: number = TEXCLASS.BIN,\n                      properties: PropertyList = null): OperatorDef {\n                        return [lspace, rspace, texClass, properties] as OperatorDef;\n                      }\n\n/**\n *  The various kinds of operators in the dictionary\n */\nexport const MO = {\n  ORD:        OPDEF(0, 0, TEXCLASS.ORD),\n  ORD11:      OPDEF(1, 1, TEXCLASS.ORD),\n  ORD21:      OPDEF(2, 1, TEXCLASS.ORD),\n  ORD02:      OPDEF(0, 2, TEXCLASS.ORD),\n  ORD55:      OPDEF(5, 5, TEXCLASS.ORD),\n  NONE:       OPDEF(0, 0, TEXCLASS.NONE),\n  OP:         OPDEF(1, 2, TEXCLASS.OP, {largeop: true, movablelimits: true, symmetric: true}),\n  OPFIXED:    OPDEF(1, 2, TEXCLASS.OP, {largeop: true, movablelimits: true}),\n  INTEGRAL:   OPDEF(0, 1, TEXCLASS.OP, {largeop: true, symmetric: true}),\n  INTEGRAL2:  OPDEF(1, 2, TEXCLASS.OP, {largeop: true, symmetric: true}),\n  BIN3:       OPDEF(3, 3, TEXCLASS.BIN),\n  BIN4:       OPDEF(4, 4, TEXCLASS.BIN),\n  BIN01:      OPDEF(0, 1, TEXCLASS.BIN),\n  BIN5:       OPDEF(5, 5, TEXCLASS.BIN),\n  TALLBIN:    OPDEF(4, 4, TEXCLASS.BIN, {stretchy: true}),\n  BINOP:      OPDEF(4, 4, TEXCLASS.BIN, {largeop: true, movablelimits: true}),\n  REL:        OPDEF(5, 5, TEXCLASS.REL),\n  REL1:       OPDEF(1, 1, TEXCLASS.REL, {stretchy: true}),\n  REL4:       OPDEF(4, 4, TEXCLASS.REL),\n  RELSTRETCH: OPDEF(5, 5, TEXCLASS.REL, {stretchy: true}),\n  RELACCENT:  OPDEF(5, 5, TEXCLASS.REL, {accent: true}),\n  WIDEREL:    OPDEF(5, 5, TEXCLASS.REL, {accent: true, stretchy: true}),\n  OPEN:       OPDEF(0, 0, TEXCLASS.OPEN, {fence: true, stretchy: true, symmetric: true}),\n  CLOSE:      OPDEF(0, 0, TEXCLASS.CLOSE, {fence: true, stretchy: true, symmetric: true}),\n  INNER:      OPDEF(0, 0, TEXCLASS.INNER),\n  PUNCT:      OPDEF(0, 3, TEXCLASS.PUNCT),\n  ACCENT:     OPDEF(0, 0, TEXCLASS.ORD, {accent: true}),\n  WIDEACCENT: OPDEF(0, 0, TEXCLASS.ORD, {accent: true, stretchy: true})\n};\n\n/**\n *  The default TeX classes for the various unicode blocks, and their names\n */\nexport const RANGES: RangeDef[] = [\n  [0x0020, 0x007F, TEXCLASS.REL, 'mo'], // Basic Latin\n  [0x00A0, 0x00BF, TEXCLASS.ORD, 'mo'], // Latin-1 Supplement symbols\n  [0x00C0, 0x024F, TEXCLASS.ORD, 'mi'], // Latin-1 Supplement, Latin Extended-A, Latin Extended-B\n  [0x02B0, 0x036F, TEXCLASS.ORD, 'mo'], // Spacing modifier letters, Combining Diacritical Marks\n  [0x0370, 0x1A20, TEXCLASS.ORD, 'mi'], // Greek and Coptic (through) Tai Tham\n  [0x1AB0, 0x1AFF, TEXCLASS.ORD, 'mo'], // Combining Diacritical Marks Extended\n  [0x1B00, 0x1DBF, TEXCLASS.ORD, 'mi'], // Balinese (through) Phonetic Extensions Supplement\n  [0x1DC0, 0x1DFF, TEXCLASS.ORD, 'mo'], // Combining Diacritical Marks Supplement\n  [0x1E00, 0x1FFF, TEXCLASS.ORD, 'mi'], // Latin Extended Additional, Greek Extended\n  [0x2000, 0x206F, TEXCLASS.ORD, 'mo'], // General Punctuation\n  [0x2070, 0x209F, TEXCLASS.ORD, 'mo'], // Superscript and Subscripts (through) Combining Diacritical Marks for Symbols\n  [0x2100, 0x214F, TEXCLASS.ORD, 'mi'], // Letterlike Symbols\n  [0x2150, 0x218F, TEXCLASS.ORD, 'mn'], // Number Forms\n  [0x2190, 0x21FF, TEXCLASS.REL, 'mo'], // Arrows\n  [0x2200, 0x22FF, TEXCLASS.BIN, 'mo'], // Mathematical Operators\n  [0x2300, 0x23FF, TEXCLASS.ORD, 'mo'], // Miscellaneous Technical\n  [0x2460, 0x24FF, TEXCLASS.ORD, 'mn'], // Enclosed Alphanumerics\n  [0x2500, 0x27EF, TEXCLASS.ORD, 'mo'], // Box Drawing (though) Miscellaneous Math Symbols-A\n  [0x27F0, 0x27FF, TEXCLASS.REL, 'mo'], // Supplemental Arrows-A\n  [0x2800, 0x28FF, TEXCLASS.ORD, 'mtext'], // Braille Patterns\n  [0x2900, 0x297F, TEXCLASS.REL, 'mo'], // Supplemental Arrows-B\n  [0x2980, 0x29FF, TEXCLASS.ORD, 'mo'], // Miscellaneous Math Symbols-B\n  [0x2A00, 0x2AFF, TEXCLASS.BIN, 'mo'], // Supplemental Math Operators\n  [0x2B00, 0x2B2F, TEXCLASS.ORD, 'mo'], // Miscellaneous Symbols and Arrows\n  [0x2B30, 0x2B4F, TEXCLASS.REL, 'mo'], //   Arrows from above\n  [0x2B50, 0x2BFF, TEXCLASS.ORD, 'mo'], //   Rest of above\n  [0x2C00, 0x2DE0, TEXCLASS.ORD, 'mi'], // Glagolitic (through) Ethipoc Extended\n  [0x2E00, 0x2E7F, TEXCLASS.ORD, 'mo'], // Supplemental Punctuation\n  [0x2E80, 0x2FDF, TEXCLASS.ORD, 'mi', 'normal'], // CJK Radicals Supplement (through) Kangxi Radicals\n  [0x2FF0, 0x303F, TEXCLASS.ORD, 'mo'], // Ideographic Desc. Characters, CJK Symbols and Punctuation\n  [0x3040, 0xA49F, TEXCLASS.ORD, 'mi', 'normal'], // Hiragana (through) Yi Radicals\n  [0xA4D0, 0xA82F, TEXCLASS.ORD, 'mi'], // Lisu (through) Syloti Nagri\n  [0xA830, 0xA83F, TEXCLASS.ORD, 'mn'], // Common Indic Number FormsArabic Presentation Forms-A\n  [0xA840, 0xD7FF, TEXCLASS.ORD, 'mi'], // Phags-pa (though) Hangul Jamo Extended-B\n  [0xF900, 0xFAFF, TEXCLASS.ORD, 'mi', 'normal'], // CJK Compatibility Ideographs\n  [0xFB00, 0xFDFF, TEXCLASS.ORD, 'mi'], // Alphabetic Presentation Forms (though) Arabic Presentation Forms-A\n  [0xFE00, 0xFE6F, TEXCLASS.ORD, 'mo'], // Variation Selector (through) Small Form Variants\n  [0xFE70, 0x100FF, TEXCLASS.ORD, 'mi'], // Arabic Presentation Forms-B (through) Linear B Ideograms\n  [0x10100, 0x1018F, TEXCLASS.ORD, 'mn'], // Aegean Numbers, Ancient Greek Numbers\n  [0x10190, 0x123FF, TEXCLASS.ORD, 'mi', 'normal'], // Ancient Symbols (through) Cuneiform\n  [0x12400, 0x1247F, TEXCLASS.ORD, 'mn'], // Cuneiform Numbers and Punctuation\n  [0x12480, 0x1BC9F, TEXCLASS.ORD, 'mi', 'normal'], // Early Dynastic Cuneiform (through) Duployan\n  [0x1BCA0, 0x1D25F, TEXCLASS.ORD, 'mo'], // Shorthand Format Controls (through) TaiXuan Jing Symbols\n  [0x1D360, 0x1D37F, TEXCLASS.ORD, 'mn'], // Counting Rod Numerals\n  [0x1D400, 0x1D7CD, TEXCLASS.ORD, 'mi'], // Math Alphanumeric Symbols\n  [0x1D7CE, 0x1D7FF, TEXCLASS.ORD, 'mn'], //   Numerals from above\n  [0x1DF00, 0x1F7FF, TEXCLASS.ORD, 'mo'], // Mahjong Tiles (through) Geometric Shapes Extended\n  [0x1F800, 0x1F8FF, TEXCLASS.REL, 'mo'], // Supplemental Arrows-C\n  [0x1F900, 0x1F9FF, TEXCLASS.ORD, 'mo'], // Supplemental Symbols and Pictographs\n  [0x20000, 0x2FA1F, TEXCLASS.ORD, 'mi', 'normnal'], // CJK Unified Ideographs Ext. B (through) CJK Sompatibility Ideographs Supp.\n];\n\n/**\n * Get the Unicode range for the first character of a string\n *\n * @param {string} text      The character to check\n * @return {RangeDef|null}   The range containing that character, or null\n */\nexport function getRange(text: string): RangeDef | null {\n  const n = text.codePointAt(0);\n  for (const range of RANGES) {\n    if (n <= range[1]) {\n      if (n >= range[0]) {\n        return range;\n      }\n      break;\n    }\n  }\n  return null;\n}\n\n/**\n * The default MathML spacing for the various TeX classes.\n */\nexport const MMLSPACING = [\n  [0, 0],  // ORD\n  [1, 2],  // OP\n  [3, 3],  // BIN\n  [4, 4],  // REL\n  [0, 0],  // OPEN\n  [0, 0],  // CLOSE\n  [0, 3]   // PUNCT\n];\n\n/**\n *  The operator dictionary, with sections for the three forms:  prefix, postfix, and infix\n */\nexport const OPTABLE: {[form: string]: OperatorList} = {\n  prefix: {\n    '(': MO.OPEN,            // left parenthesis\n    '+': MO.BIN01,           // plus sign\n    '-': MO.BIN01,           // hyphen-minus\n    '[': MO.OPEN,            // left square bracket\n    '{': MO.OPEN,            // left curly bracket\n    '|': MO.OPEN,            // vertical line\n    '||': [0, 0, TEXCLASS.BIN, {fence: true, stretchy: true, symmetric: true}], // multiple character operator: ||\n    '|||': [0, 0, TEXCLASS.ORD, {fence: true, stretchy: true, symmetric: true}], // multiple character operator: |||\n    '\\u00AC': MO.ORD21,      // not sign\n    '\\u00B1': MO.BIN01,      // plus-minus sign\n    '\\u2016': [0, 0, TEXCLASS.ORD, {fence: true, stretchy: true}], // double vertical line\n    '\\u2018': [0, 0, TEXCLASS.OPEN, {fence: true}], // left single quotation mark\n    '\\u201C': [0, 0, TEXCLASS.OPEN, {fence: true}], // left double quotation mark\n    '\\u2145': MO.ORD21,      // double-struck italic capital d\n    '\\u2146': OPDEF(2, 0, TEXCLASS.ORD),  // double-struck italic small d\n    '\\u2200': MO.ORD21,      // for all\n    '\\u2202': MO.ORD21,      // partial differential\n    '\\u2203': MO.ORD21,      // there exists\n    '\\u2204': MO.ORD21,      // there does not exist\n    '\\u2207': MO.ORD21,      // nabla\n    '\\u220F': MO.OP,         // n-ary product\n    '\\u2210': MO.OP,         // n-ary coproduct\n    '\\u2211': MO.OP,         // n-ary summation\n    '\\u2212': MO.BIN01,      // minus sign\n    '\\u2213': MO.BIN01,      // minus-or-plus sign\n    '\\u221A': [1, 1, TEXCLASS.ORD, {stretchy: true}], // square root\n    '\\u221B': MO.ORD11,      // cube root\n    '\\u221C': MO.ORD11,      // fourth root\n    '\\u2220': MO.ORD,        // angle\n    '\\u2221': MO.ORD,        // measured angle\n    '\\u2222': MO.ORD,        // spherical angle\n    '\\u222B': MO.INTEGRAL,   // integral\n    '\\u222C': MO.INTEGRAL,   // double integral\n    '\\u222D': MO.INTEGRAL,   // triple integral\n    '\\u222E': MO.INTEGRAL,   // contour integral\n    '\\u222F': MO.INTEGRAL,   // surface integral\n    '\\u2230': MO.INTEGRAL,   // volume integral\n    '\\u2231': MO.INTEGRAL,   // clockwise integral\n    '\\u2232': MO.INTEGRAL,   // clockwise contour integral\n    '\\u2233': MO.INTEGRAL,   // anticlockwise contour integral\n    '\\u22C0': MO.OP,         // n-ary logical and\n    '\\u22C1': MO.OP,         // n-ary logical or\n    '\\u22C2': MO.OP,         // n-ary intersection\n    '\\u22C3': MO.OP,         // n-ary union\n    '\\u2308': MO.OPEN,       // left ceiling\n    '\\u230A': MO.OPEN,       // left floor\n    '\\u2329': MO.OPEN,       // left-pointing angle bracket\n    '\\u2772': MO.OPEN,       // light left tortoise shell bracket ornament\n    '\\u27E6': MO.OPEN,       // mathematical left white square bracket\n    '\\u27E8': MO.OPEN,       // mathematical left angle bracket\n    '\\u27EA': MO.OPEN,       // mathematical left double angle bracket\n    '\\u27EC': MO.OPEN,       // mathematical left white tortoise shell bracket\n    '\\u27EE': MO.OPEN,       // mathematical left flattened parenthesis\n    '\\u2980': [0, 0, TEXCLASS.ORD, {fence: true, stretchy: true}], // triple vertical bar delimiter\n    '\\u2983': MO.OPEN,       // left white curly bracket\n    '\\u2985': MO.OPEN,       // left white parenthesis\n    '\\u2987': MO.OPEN,       // z notation left image bracket\n    '\\u2989': MO.OPEN,       // z notation left binding bracket\n    '\\u298B': MO.OPEN,       // left square bracket with underbar\n    '\\u298D': MO.OPEN,       // left square bracket with tick in top corner\n    '\\u298F': MO.OPEN,       // left square bracket with tick in bottom corner\n    '\\u2991': MO.OPEN,       // left angle bracket with dot\n    '\\u2993': MO.OPEN,       // left arc less-than bracket\n    '\\u2995': MO.OPEN,       // double left arc greater-than bracket\n    '\\u2997': MO.OPEN,       // left black tortoise shell bracket\n    '\\u29FC': MO.OPEN,       // left-pointing curved angle bracket\n    '\\u2A00': MO.OP,         // n-ary circled dot operator\n    '\\u2A01': MO.OP,         // n-ary circled plus operator\n    '\\u2A02': MO.OP,         // n-ary circled times operator\n    '\\u2A03': MO.OP,         // n-ary union operator with dot\n    '\\u2A04': MO.OP,         // n-ary union operator with plus\n    '\\u2A05': MO.OP,         // n-ary square intersection operator\n    '\\u2A06': MO.OP,         // n-ary square union operator\n    '\\u2A07': MO.OP,         // two logical and operator\n    '\\u2A08': MO.OP,         // two logical or operator\n    '\\u2A09': MO.OP,         // n-ary times operator\n    '\\u2A0A': MO.OP,         // modulo two sum\n    '\\u2A0B': MO.INTEGRAL2,  // summation with integral\n    '\\u2A0C': MO.INTEGRAL,   // quadruple integral operator\n    '\\u2A0D': MO.INTEGRAL2,  // finite part integral\n    '\\u2A0E': MO.INTEGRAL2,  // integral with double stroke\n    '\\u2A0F': MO.INTEGRAL2,  // integral average with slash\n    '\\u2A10': MO.OP,         // circulation function\n    '\\u2A11': MO.OP,         // anticlockwise integration\n    '\\u2A12': MO.OP,         // line integration with rectangular path around pole\n    '\\u2A13': MO.OP,         // line integration with semicircular path around pole\n    '\\u2A14': MO.OP,         // line integration not including the pole\n    '\\u2A15': MO.INTEGRAL2,  // integral around a point operator\n    '\\u2A16': MO.INTEGRAL2,  // quaternion integral operator\n    '\\u2A17': MO.INTEGRAL2,  // integral with leftwards arrow with hook\n    '\\u2A18': MO.INTEGRAL2,  // integral with times sign\n    '\\u2A19': MO.INTEGRAL2,  // integral with intersection\n    '\\u2A1A': MO.INTEGRAL2,  // integral with union\n    '\\u2A1B': MO.INTEGRAL2,  // integral with overbar\n    '\\u2A1C': MO.INTEGRAL2,  // integral with underbar\n    '\\u2AFC': MO.OP,         // large triple vertical bar operator\n    '\\u2AFF': MO.OP,         // n-ary white vertical bar\n  },\n  postfix: {\n    '!!': OPDEF(1, 0),       // multiple character operator: !!\n    '!': [1, 0, TEXCLASS.CLOSE, null], // exclamation mark\n    '\"': MO.ACCENT,          // quotation mark\n    '&': MO.ORD,             // ampersand\n    ')': MO.CLOSE,           // right parenthesis\n    '++': OPDEF(0, 0),       // multiple character operator: ++\n    '--': OPDEF(0, 0),       // multiple character operator: --\n    '..': OPDEF(0, 0),       // multiple character operator: ..\n    '...': MO.ORD,           // multiple character operator: ...\n    '\\'': MO.ACCENT,         // apostrophe\n    ']': MO.CLOSE,           // right square bracket\n    '^': MO.WIDEACCENT,      // circumflex accent\n    '_': MO.WIDEACCENT,      // low line\n    '`': MO.ACCENT,          // grave accent\n    '|': MO.CLOSE,           // vertical line\n    '}': MO.CLOSE,           // right curly bracket\n    '~': MO.WIDEACCENT,      // tilde\n    '||': [0, 0, TEXCLASS.BIN, {fence: true, stretchy: true, symmetric: true}], // multiple character operator: ||\n    '|||': [0, 0, TEXCLASS.ORD, {fence: true, stretchy: true, symmetric: true}], // multiple character operator: |||\n    '\\u00A8': MO.ACCENT,     // diaeresis\n    '\\u00AA': MO.ACCENT,     // feminie ordinal indicator\n    '\\u00AF': MO.WIDEACCENT, // macron\n    '\\u00B0': MO.ORD,        // degree sign\n    '\\u00B2': MO.ACCENT,     // superscript 2\n    '\\u00B3': MO.ACCENT,     // superscript 3\n    '\\u00B4': MO.ACCENT,     // acute accent\n    '\\u00B8': MO.ACCENT,     // cedilla\n    '\\u00B9': MO.ACCENT,     // superscript 1\n    '\\u00BA': MO.ACCENT,     // masculine ordinal indicator\n    '\\u02C6': MO.WIDEACCENT, // modifier letter circumflex accent\n    '\\u02C7': MO.WIDEACCENT, // caron\n    '\\u02C9': MO.WIDEACCENT, // modifier letter macron\n    '\\u02CA': MO.ACCENT,     // modifier letter acute accent\n    '\\u02CB': MO.ACCENT,     // modifier letter grave accent\n    '\\u02CD': MO.WIDEACCENT, // modifier letter low macron\n    '\\u02D8': MO.ACCENT,     // breve\n    '\\u02D9': MO.ACCENT,     // dot above\n    '\\u02DA': MO.ACCENT,     // ring above\n    '\\u02DC': MO.WIDEACCENT, // small tilde\n    '\\u02DD': MO.ACCENT,     // double acute accent\n    '\\u02F7': MO.WIDEACCENT, // modifier letter low tilde\n    '\\u0302': MO.WIDEACCENT, // combining circumflex accent\n    '\\u0311': MO.ACCENT,     // combining inverted breve\n    '\\u03F6': MO.REL,        // greek reversed lunate epsilon symbol\n    '\\u2016': [0, 0, TEXCLASS.ORD, {fence: true, stretchy: true}], // double vertical line\n    '\\u2019': [0, 0, TEXCLASS.CLOSE, {fence: true}], // right single quotation mark\n    '\\u201A': MO.ACCENT,     // single low-9 quotation mark\n    '\\u201B': MO.ACCENT,     // single high-reversed-9 quotation mark\n    '\\u201D': [0, 0, TEXCLASS.CLOSE, {fence: true}],  // right double quotation mark\n    '\\u201E': MO.ACCENT,     // double low-9 quotation mark\n    '\\u201F': MO.ACCENT,     // double high-reversed-9 quotation mark\n    '\\u2032': MO.ORD,        // prime\n    '\\u2033': MO.ACCENT,     // double prime\n    '\\u2034': MO.ACCENT,     // triple prime\n    '\\u2035': MO.ACCENT,     // reversed prime\n    '\\u2036': MO.ACCENT,     // reversed double prime\n    '\\u2037': MO.ACCENT,     // reversed triple prime\n    '\\u203E': MO.WIDEACCENT, // overline\n    '\\u2057': MO.ACCENT,     // quadruple prime\n    '\\u20DB': MO.ACCENT,     // combining three dots above\n    '\\u20DC': MO.ACCENT,     // combining four dots above\n    '\\u2309': MO.CLOSE,      // right ceiling\n    '\\u230B': MO.CLOSE,      // right floor\n    '\\u232A': MO.CLOSE,      // right-pointing angle bracket\n    '\\u23B4': MO.WIDEACCENT, // top square bracket\n    '\\u23B5': MO.WIDEACCENT, // bottom square bracket\n    '\\u23DC': MO.WIDEACCENT, // top parenthesis\n    '\\u23DD': MO.WIDEACCENT, // bottom parenthesis\n    '\\u23DE': MO.WIDEACCENT, // top curly bracket\n    '\\u23DF': MO.WIDEACCENT, // bottom curly bracket\n    '\\u23E0': MO.WIDEACCENT, // top tortoise shell bracket\n    '\\u23E1': MO.WIDEACCENT, // bottom tortoise shell bracket\n    '\\u25A0': MO.BIN3,       // black square\n    '\\u25A1': MO.BIN3,       // white square\n    '\\u25AA': MO.BIN3,       // black small square\n    '\\u25AB': MO.BIN3,       // white small square\n    '\\u25AD': MO.BIN3,       // white rectangle\n    '\\u25AE': MO.BIN3,       // black vertical rectangle\n    '\\u25AF': MO.BIN3,       // white vertical rectangle\n    '\\u25B0': MO.BIN3,       // black parallelogram\n    '\\u25B1': MO.BIN3,       // white parallelogram\n    '\\u25B2': MO.BIN4,       // black up-pointing triangle\n    '\\u25B4': MO.BIN4,       // black up-pointing small triangle\n    '\\u25B6': MO.BIN4,       // black right-pointing triangle\n    '\\u25B7': MO.BIN4,       // white right-pointing triangle\n    '\\u25B8': MO.BIN4,       // black right-pointing small triangle\n    '\\u25BC': MO.BIN4,       // black down-pointing triangle\n    '\\u25BE': MO.BIN4,       // black down-pointing small triangle\n    '\\u25C0': MO.BIN4,       // black left-pointing triangle\n    '\\u25C1': MO.BIN4,       // white left-pointing triangle\n    '\\u25C2': MO.BIN4,       // black left-pointing small triangle\n    '\\u25C4': MO.BIN4,       // black left-pointing pointer\n    '\\u25C5': MO.BIN4,       // white left-pointing pointer\n    '\\u25C6': MO.BIN4,       // black diamond\n    '\\u25C7': MO.BIN4,       // white diamond\n    '\\u25C8': MO.BIN4,       // white diamond containing black small diamond\n    '\\u25C9': MO.BIN4,       // fisheye\n    '\\u25CC': MO.BIN4,       // dotted circle\n    '\\u25CD': MO.BIN4,       // circle with vertical fill\n    '\\u25CE': MO.BIN4,       // bullseye\n    '\\u25CF': MO.BIN4,       // black circle\n    '\\u25D6': MO.BIN4,       // left half black circle\n    '\\u25D7': MO.BIN4,       // right half black circle\n    '\\u25E6': MO.BIN4,       // white bullet\n    '\\u266D': MO.ORD02,      // music flat sign\n    '\\u266E': MO.ORD02,      // music natural sign\n    '\\u266F': MO.ORD02,      // music sharp sign\n    '\\u2773': MO.CLOSE,      // light right tortoise shell bracket ornament\n    '\\u27E7': MO.CLOSE,      // mathematical right white square bracket\n    '\\u27E9': MO.CLOSE,      // mathematical right angle bracket\n    '\\u27EB': MO.CLOSE,      // mathematical right double angle bracket\n    '\\u27ED': MO.CLOSE,      // mathematical right white tortoise shell bracket\n    '\\u27EF': MO.CLOSE,      // mathematical right flattened parenthesis\n    '\\u2980': [0, 0, TEXCLASS.ORD, {fence: true, stretchy: true}], // triple vertical bar delimiter\n    '\\u2984': MO.CLOSE,      // right white curly bracket\n    '\\u2986': MO.CLOSE,      // right white parenthesis\n    '\\u2988': MO.CLOSE,      // z notation right image bracket\n    '\\u298A': MO.CLOSE,      // z notation right binding bracket\n    '\\u298C': MO.CLOSE,      // right square bracket with underbar\n    '\\u298E': MO.CLOSE,      // right square bracket with tick in bottom corner\n    '\\u2990': MO.CLOSE,      // right square bracket with tick in top corner\n    '\\u2992': MO.CLOSE,      // right angle bracket with dot\n    '\\u2994': MO.CLOSE,      // right arc greater-than bracket\n    '\\u2996': MO.CLOSE,      // double right arc less-than bracket\n    '\\u2998': MO.CLOSE,      // right black tortoise shell bracket\n    '\\u29FD': MO.CLOSE,      // right-pointing curved angle bracket\n  },\n  infix: {\n    '!=': MO.BIN4,           // multiple character operator: !=\n    '#': MO.ORD,             // #\n    '$': MO.ORD,             // $\n    '%': [3, 3, TEXCLASS.ORD, null], // percent sign\n    '&&': MO.BIN4,           // multiple character operator: &&\n    '': MO.ORD,              // empty <mo>\n    '*': MO.BIN3,            // asterisk\n    '**': OPDEF(1, 1),       // multiple character operator: **\n    '*=': MO.BIN4,           // multiple character operator: *=\n    '+': MO.BIN4,            // plus sign\n    '+=': MO.BIN4,           // multiple character operator: +=\n    ',': [0, 3, TEXCLASS.PUNCT, {linebreakstyle: 'after', separator: true}], // comma\n    '-': MO.BIN4,            // hyphen-minus\n    '-=': MO.BIN4,           // multiple character operator: -=\n    '->': MO.BIN5,           // multiple character operator: ->\n    '.': [0, 3, TEXCLASS.PUNCT, {separator: true}], // \\ldotp\n    '/': MO.ORD11,           // solidus\n    '//': OPDEF(1, 1),       // multiple character operator: //\n    '/=': MO.BIN4,           // multiple character operator: /=\n    ':': [1, 2, TEXCLASS.REL, null], // colon\n    ':=': MO.BIN4,           // multiple character operator: :=\n    ';': [0, 3, TEXCLASS.PUNCT, {linebreakstyle: 'after', separator: true}], // semicolon\n    '<': MO.REL,             // less-than sign\n    '<=': MO.BIN5,           // multiple character operator: <=\n    '<>': OPDEF(1, 1),       // multiple character operator: <>\n    '=': MO.REL,             // equals sign\n    '==': MO.BIN4,           // multiple character operator: ==\n    '>': MO.REL,             // greater-than sign\n    '>=': MO.BIN5,           // multiple character operator: >=\n    '?': [1, 1, TEXCLASS.CLOSE, null], // question mark\n    '@': MO.ORD11,           // commercial at\n    '\\\\': MO.ORD,            // reverse solidus\n    '^': MO.ORD11,           // circumflex accent\n    '_': MO.ORD11,           // low line\n    '|': [2, 2, TEXCLASS.ORD, {fence: true, stretchy: true, symmetric: true}], // vertical line\n    '||': [2, 2, TEXCLASS.BIN, {fence: true, stretchy: true, symmetric: true}], // multiple character operator: ||\n    '|||': [2, 2, TEXCLASS.ORD, {fence: true, stretchy: true, symmetric: true}], // multiple character operator: |||\n    '\\u00B1': MO.BIN4,       // plus-minus sign\n    '\\u00B7': MO.BIN4,       // middle dot\n    '\\u00D7': MO.BIN4,       // multiplication sign\n    '\\u00F7': MO.BIN4,       // division sign\n    '\\u02B9': MO.ORD,        // prime\n    '\\u0300': MO.ACCENT,     // \\grave\n    '\\u0301': MO.ACCENT,     // \\acute\n    '\\u0303': MO.WIDEACCENT, // \\tilde\n    '\\u0304': MO.ACCENT,     // \\bar\n    '\\u0306': MO.ACCENT,     // \\breve\n    '\\u0307': MO.ACCENT,     // \\dot\n    '\\u0308': MO.ACCENT,     // \\ddot\n    '\\u030C': MO.ACCENT,     // \\check\n    '\\u0332': MO.WIDEACCENT, // horizontal line\n    '\\u0338': MO.REL4,       // \\not\n    '\\u2015': [0, 0, TEXCLASS.ORD, {stretchy: true}], // horizontal line\n    '\\u2017': [0, 0, TEXCLASS.ORD, {stretchy: true}], // horizontal line\n    '\\u2020': MO.BIN3,       // \\dagger\n    '\\u2021': MO.BIN3,       // \\ddagger\n    '\\u2022': MO.BIN4,       // bullet\n    '\\u2026': MO.INNER,      // horizontal ellipsis\n    '\\u2043': MO.BIN4,       // hyphen bullet\n    '\\u2044': MO.TALLBIN,    // fraction slash\n    '\\u2061': MO.NONE,       // function application\n    '\\u2062': MO.NONE,       // invisible times\n    '\\u2063': [0, 0, TEXCLASS.NONE, {linebreakstyle: 'after', separator: true}], // invisible separator\n    '\\u2064': MO.NONE,       // invisible plus\n    '\\u20D7': MO.ACCENT,     // \\vec\n    '\\u2111': MO.ORD,        // \\Im\n    '\\u2113': MO.ORD,        // \\ell\n    '\\u2118': MO.ORD,        // \\wp\n    '\\u211C': MO.ORD,        // \\Re\n    '\\u2190': MO.WIDEREL,    // leftwards arrow\n    '\\u2191': MO.RELSTRETCH, // upwards arrow\n    '\\u2192': MO.WIDEREL,    // rightwards arrow\n    '\\u2193': MO.RELSTRETCH, // downwards arrow\n    '\\u2194': MO.WIDEREL,    // left right arrow\n    '\\u2195': MO.RELSTRETCH, // up down arrow\n    '\\u2196': MO.RELSTRETCH, // north west arrow\n    '\\u2197': MO.RELSTRETCH, // north east arrow\n    '\\u2198': MO.RELSTRETCH, // south east arrow\n    '\\u2199': MO.RELSTRETCH, // south west arrow\n    '\\u219A': MO.RELACCENT,  // leftwards arrow with stroke\n    '\\u219B': MO.RELACCENT,  // rightwards arrow with stroke\n    '\\u219C': MO.WIDEREL,    // leftwards wave arrow\n    '\\u219D': MO.WIDEREL,    // rightwards wave arrow\n    '\\u219E': MO.WIDEREL,    // leftwards two headed arrow\n    '\\u219F': MO.WIDEREL,    // upwards two headed arrow\n    '\\u21A0': MO.WIDEREL,    // rightwards two headed arrow\n    '\\u21A1': MO.RELSTRETCH, // downwards two headed arrow\n    '\\u21A2': MO.WIDEREL,    // leftwards arrow with tail\n    '\\u21A3': MO.WIDEREL,    // rightwards arrow with tail\n    '\\u21A4': MO.WIDEREL,    // leftwards arrow from bar\n    '\\u21A5': MO.RELSTRETCH, // upwards arrow from bar\n    '\\u21A6': MO.WIDEREL,    // rightwards arrow from bar\n    '\\u21A7': MO.RELSTRETCH, // downwards arrow from bar\n    '\\u21A8': MO.RELSTRETCH, // up down arrow with base\n    '\\u21A9': MO.WIDEREL,    // leftwards arrow with hook\n    '\\u21AA': MO.WIDEREL,    // rightwards arrow with hook\n    '\\u21AB': MO.WIDEREL,    // leftwards arrow with loop\n    '\\u21AC': MO.WIDEREL,    // rightwards arrow with loop\n    '\\u21AD': MO.WIDEREL,    // left right wave arrow\n    '\\u21AE': MO.RELACCENT,  // left right arrow with stroke\n    '\\u21AF': MO.RELSTRETCH, // downwards zigzag arrow\n    '\\u21B0': MO.RELSTRETCH, // upwards arrow with tip leftwards\n    '\\u21B1': MO.RELSTRETCH, // upwards arrow with tip rightwards\n    '\\u21B2': MO.RELSTRETCH, // downwards arrow with tip leftwards\n    '\\u21B3': MO.RELSTRETCH, // downwards arrow with tip rightwards\n    '\\u21B4': MO.RELSTRETCH, // rightwards arrow with corner downwards\n    '\\u21B5': MO.RELSTRETCH, // downwards arrow with corner leftwards\n    '\\u21B6': MO.RELACCENT,  // anticlockwise top semicircle arrow\n    '\\u21B7': MO.RELACCENT,  // clockwise top semicircle arrow\n    '\\u21B8': MO.REL,        // north west arrow to long bar\n    '\\u21B9': MO.WIDEREL,    // leftwards arrow to bar over rightwards arrow to bar\n    '\\u21BA': MO.REL,        // anticlockwise open circle arrow\n    '\\u21BB': MO.REL,        // clockwise open circle arrow\n    '\\u21BC': MO.WIDEREL,    // leftwards harpoon with barb upwards\n    '\\u21BD': MO.WIDEREL,    // leftwards harpoon with barb downwards\n    '\\u21BE': MO.RELSTRETCH, // upwards harpoon with barb rightwards\n    '\\u21BF': MO.RELSTRETCH, // upwards harpoon with barb leftwards\n    '\\u21C0': MO.WIDEREL,    // rightwards harpoon with barb upwards\n    '\\u21C1': MO.WIDEREL,    // rightwards harpoon with barb downwards\n    '\\u21C2': MO.RELSTRETCH, // downwards harpoon with barb rightwards\n    '\\u21C3': MO.RELSTRETCH, // downwards harpoon with barb leftwards\n    '\\u21C4': MO.WIDEREL,    // rightwards arrow over leftwards arrow\n    '\\u21C5': MO.RELSTRETCH, // upwards arrow leftwards of downwards arrow\n    '\\u21C6': MO.WIDEREL,    // leftwards arrow over rightwards arrow\n    '\\u21C7': MO.WIDEREL,    // leftwards paired arrows\n    '\\u21C8': MO.RELSTRETCH, // upwards paired arrows\n    '\\u21C9': MO.WIDEREL,    // rightwards paired arrows\n    '\\u21CA': MO.RELSTRETCH, // downwards paired arrows\n    '\\u21CB': MO.WIDEREL,    // leftwards harpoon over rightwards harpoon\n    '\\u21CC': MO.WIDEREL,    // rightwards harpoon over leftwards harpoon\n    '\\u21CD': MO.RELACCENT,  // leftwards double arrow with stroke\n    '\\u21CE': MO.RELACCENT,  // left right double arrow with stroke\n    '\\u21CF': MO.RELACCENT,  // rightwards double arrow with stroke\n    '\\u21D0': MO.WIDEREL,    // leftwards double arrow\n    '\\u21D1': MO.RELSTRETCH, // upwards double arrow\n    '\\u21D2': MO.WIDEREL,    // rightwards double arrow\n    '\\u21D3': MO.RELSTRETCH, // downwards double arrow\n    '\\u21D4': MO.WIDEREL,    // left right double arrow\n    '\\u21D5': MO.RELSTRETCH, // up down double arrow\n    '\\u21D6': MO.RELSTRETCH, // north west double arrow\n    '\\u21D7': MO.RELSTRETCH, // north east double arrow\n    '\\u21D8': MO.RELSTRETCH, // south east double arrow\n    '\\u21D9': MO.RELSTRETCH, // south west double arrow\n    '\\u21DA': MO.WIDEREL,    // leftwards triple arrow\n    '\\u21DB': MO.WIDEREL,    // rightwards triple arrow\n    '\\u21DC': MO.WIDEREL,    // leftwards squiggle arrow\n    '\\u21DD': MO.WIDEREL,    // rightwards squiggle arrow\n    '\\u21DE': MO.REL,        // upwards arrow with double stroke\n    '\\u21DF': MO.REL,        // downwards arrow with double stroke\n    '\\u21E0': MO.WIDEREL,    // leftwards dashed arrow\n    '\\u21E1': MO.RELSTRETCH, // upwards dashed arrow\n    '\\u21E2': MO.WIDEREL,    // rightwards dashed arrow\n    '\\u21E3': MO.RELSTRETCH, // downwards dashed arrow\n    '\\u21E4': MO.WIDEREL,    // leftwards arrow to bar\n    '\\u21E5': MO.WIDEREL,    // rightwards arrow to bar\n    '\\u21E6': MO.WIDEREL,    // leftwards white arrow\n    '\\u21E7': MO.RELSTRETCH, // upwards white arrow\n    '\\u21E8': MO.WIDEREL,    // rightwards white arrow\n    '\\u21E9': MO.RELSTRETCH, // downwards white arrow\n    '\\u21EA': MO.RELSTRETCH, // upwards white arrow from bar\n    '\\u21EB': MO.RELSTRETCH, // upwards white arrow on pedestal\n    '\\u21EC': MO.RELSTRETCH, // upwards white arrow on pedestal with horizontal bar\n    '\\u21ED': MO.RELSTRETCH, // upwards white arrow on pedestal with vertical bar\n    '\\u21EE': MO.RELSTRETCH, // upwards white double arrow\n    '\\u21EF': MO.RELSTRETCH, // upwards white double arrow on pedestal\n    '\\u21F0': MO.WIDEREL,    // rightwards white arrow from wall\n    '\\u21F1': MO.REL,        // north west arrow to corner\n    '\\u21F2': MO.REL,        // south east arrow to corner\n    '\\u21F3': MO.RELSTRETCH, // up down white arrow\n    '\\u21F4': MO.RELACCENT,  // right arrow with small circle\n    '\\u21F5': MO.RELSTRETCH, // downwards arrow leftwards of upwards arrow\n    '\\u21F6': MO.WIDEREL,    // three rightwards arrows\n    '\\u21F7': MO.RELACCENT,  // leftwards arrow with vertical stroke\n    '\\u21F8': MO.RELACCENT,  // rightwards arrow with vertical stroke\n    '\\u21F9': MO.RELACCENT,  // left right arrow with vertical stroke\n    '\\u21FA': MO.RELACCENT,  // leftwards arrow with double vertical stroke\n    '\\u21FB': MO.RELACCENT,  // rightwards arrow with double vertical stroke\n    '\\u21FC': MO.RELACCENT,  // left right arrow with double vertical stroke\n    '\\u21FD': MO.WIDEREL,    // leftwards open-headed arrow\n    '\\u21FE': MO.WIDEREL,    // rightwards open-headed arrow\n    '\\u21FF': MO.WIDEREL,    // left right open-headed arrow\n    '\\u2201': OPDEF(1, 2, TEXCLASS.ORD), // complement\n    '\\u2205': MO.ORD,        // \\emptyset\n    '\\u2206': MO.BIN3,       // increment\n    '\\u2208': MO.REL,        // element of\n    '\\u2209': MO.REL,        // not an element of\n    '\\u220A': MO.REL,        // small element of\n    '\\u220B': MO.REL,        // contains as member\n    '\\u220C': MO.REL,        // does not contain as member\n    '\\u220D': MO.REL,        // small contains as member\n    '\\u220E': MO.BIN3,       // end of proof\n    '\\u2212': MO.BIN4,       // minus sign\n    '\\u2213': MO.BIN4,       // minus-or-plus sign\n    '\\u2214': MO.BIN4,       // dot plus\n    '\\u2215': MO.TALLBIN,    // division slash\n    '\\u2216': MO.BIN4,       // set minus\n    '\\u2217': MO.BIN4,       // asterisk operator\n    '\\u2218': MO.BIN4,       // ring operator\n    '\\u2219': MO.BIN4,       // bullet operator\n    '\\u221D': MO.REL,        // proportional to\n    '\\u221E': MO.ORD,        // \\infty\n    '\\u221F': MO.REL,        // right angle\n    '\\u2223': MO.REL,        // divides\n    '\\u2224': MO.REL,        // does not divide\n    '\\u2225': MO.REL,        // parallel to\n    '\\u2226': MO.REL,        // not parallel to\n    '\\u2227': MO.BIN4,       // logical and\n    '\\u2228': MO.BIN4,       // logical or\n    '\\u2229': MO.BIN4,       // intersection\n    '\\u222A': MO.BIN4,       // union\n    '\\u2234': MO.REL,        // therefore\n    '\\u2235': MO.REL,        // because\n    '\\u2236': MO.REL,        // ratio\n    '\\u2237': MO.REL,        // proportion\n    '\\u2238': MO.BIN4,       // dot minus\n    '\\u2239': MO.REL,        // excess\n    '\\u223A': MO.BIN4,       // geometric proportion\n    '\\u223B': MO.REL,        // homothetic\n    '\\u223C': MO.REL,        // tilde operator\n    '\\u223D': MO.REL,        // reversed tilde\n    '\\u223D\\u0331': MO.BIN3, // reversed tilde with underline\n    '\\u223E': MO.REL,        // inverted lazy s\n    '\\u223F': MO.BIN3,       // sine wave\n    '\\u2240': MO.BIN4,       // wreath product\n    '\\u2241': MO.REL,        // not tilde\n    '\\u2242': MO.REL,        // minus tilde\n    '\\u2242\\u0338': MO.REL,  // minus tilde with slash\n    '\\u2243': MO.REL,        // asymptotically equal to\n    '\\u2244': MO.REL,        // not asymptotically equal to\n    '\\u2245': MO.REL,        // approximately equal to\n    '\\u2246': MO.REL,        // approximately but not actually equal to\n    '\\u2247': MO.REL,        // neither approximately nor actually equal to\n    '\\u2248': MO.REL,        // almost equal to\n    '\\u2249': MO.REL,        // not almost equal to\n    '\\u224A': MO.REL,        // almost equal or equal to\n    '\\u224B': MO.REL,        // triple tilde\n    '\\u224C': MO.REL,        // all equal to\n    '\\u224D': MO.REL,        // equivalent to\n    '\\u224E': MO.REL,        // geometrically equivalent to\n    '\\u224E\\u0338': MO.REL,  // geometrically equivalent to with slash\n    '\\u224F': MO.REL,        // difference between\n    '\\u224F\\u0338': MO.REL,  // difference between with slash\n    '\\u2250': MO.REL,        // approaches the limit\n    '\\u2251': MO.REL,        // geometrically equal to\n    '\\u2252': MO.REL,        // approximately equal to or the image of\n    '\\u2253': MO.REL,        // image of or approximately equal to\n    '\\u2254': MO.REL,        // colon equals\n    '\\u2255': MO.REL,        // equals colon\n    '\\u2256': MO.REL,        // ring in equal to\n    '\\u2257': MO.REL,        // ring equal to\n    '\\u2258': MO.REL,        // corresponds to\n    '\\u2259': MO.REL,        // estimates\n    '\\u225A': MO.REL,        // equiangular to\n    '\\u225B': MO.REL,        // star equals\n    '\\u225C': MO.REL,        // delta equal to\n    '\\u225D': MO.REL,        // equal to by definition\n    '\\u225E': MO.REL,        // measured by\n    '\\u225F': MO.REL,        // questioned equal to\n    '\\u2260': MO.REL,        // not equal to\n    '\\u2261': MO.REL,        // identical to\n    '\\u2262': MO.REL,        // not identical to\n    '\\u2263': MO.REL,        // strictly equivalent to\n    '\\u2264': MO.REL,        // less-than or equal to\n    '\\u2265': MO.REL,        // greater-than or equal to\n    '\\u2266': MO.REL,        // less-than over equal to\n    '\\u2266\\u0338': MO.REL,  // less-than over equal to with slash\n    '\\u2267': MO.REL,        // greater-than over equal to\n    '\\u2268': MO.REL,        // less-than but not equal to\n    '\\u2269': MO.REL,        // greater-than but not equal to\n    '\\u226A': MO.REL,        // much less-than\n    '\\u226A\\u0338': MO.REL,  // much less than with slash\n    '\\u226B': MO.REL,        // much greater-than\n    '\\u226B\\u0338': MO.REL,  // much greater than with slash\n    '\\u226C': MO.REL,        // between\n    '\\u226D': MO.REL,        // not equivalent to\n    '\\u226E': MO.REL,        // not less-than\n    '\\u226F': MO.REL,        // not greater-than\n    '\\u2270': MO.REL,        // neither less-than nor equal to\n    '\\u2271': MO.REL,        // neither greater-than nor equal to\n    '\\u2272': MO.REL,        // less-than or equivalent to\n    '\\u2273': MO.REL,        // greater-than or equivalent to\n    '\\u2274': MO.REL,        // neither less-than nor equivalent to\n    '\\u2275': MO.REL,        // neither greater-than nor equivalent to\n    '\\u2276': MO.REL,        // less-than or greater-than\n    '\\u2277': MO.REL,        // greater-than or less-than\n    '\\u2278': MO.REL,        // neither less-than nor greater-than\n    '\\u2279': MO.REL,        // neither greater-than nor less-than\n    '\\u227A': MO.REL,        // precedes\n    '\\u227B': MO.REL,        // succeeds\n    '\\u227C': MO.REL,        // precedes or equal to\n    '\\u227D': MO.REL,        // succeeds or equal to\n    '\\u227E': MO.REL,        // precedes or equivalent to\n    '\\u227F': MO.REL,        // succeeds or equivalent to\n    '\\u227F\\u0338': MO.REL,  // succeeds or equivalent to with slash\n    '\\u2280': MO.REL,        // does not precede\n    '\\u2281': MO.REL,        // does not succeed\n    '\\u2282': MO.REL,        // subset of\n    '\\u2282\\u20D2': MO.REL,  // subset of with vertical line\n    '\\u2283': MO.REL,        // superset of\n    '\\u2283\\u20D2': MO.REL,  // superset of with vertical line\n    '\\u2284': MO.REL,        // not a subset of\n    '\\u2285': MO.REL,        // not a superset of\n    '\\u2286': MO.REL,        // subset of or equal to\n    '\\u2287': MO.REL,        // superset of or equal to\n    '\\u2288': MO.REL,        // neither a subset of nor equal to\n    '\\u2289': MO.REL,        // neither a superset of nor equal to\n    '\\u228A': MO.REL,        // subset of with not equal to\n    '\\u228B': MO.REL,        // superset of with not equal to\n    '\\u228C': MO.BIN4,       // multiset\n    '\\u228D': MO.BIN4,       // multiset multiplication\n    '\\u228E': MO.BIN4,       // multiset union\n    '\\u228F': MO.REL,        // square image of\n    '\\u228F\\u0338': MO.REL,  // square image of with slash\n    '\\u2290': MO.REL,        // square original of\n    '\\u2290\\u0338': MO.REL,  // square original of with slash\n    '\\u2291': MO.REL,        // square image of or equal to\n    '\\u2292': MO.REL,        // square original of or equal to\n    '\\u2293': MO.BIN4,       // square cap\n    '\\u2294': MO.BIN4,       // square cup\n    '\\u2295': MO.BIN4,       // circled plus\n    '\\u2296': MO.BIN4,       // circled minus\n    '\\u2297': MO.BIN4,       // circled times\n    '\\u2298': MO.BIN4,       // circled division slash\n    '\\u2299': MO.BIN4,       // circled dot operator\n    '\\u229A': MO.BIN4,       // circled ring operator\n    '\\u229B': MO.BIN4,       // circled asterisk operator\n    '\\u229C': MO.BIN4,       // circled equals\n    '\\u229D': MO.BIN4,       // circled dash\n    '\\u229E': MO.BIN4,       // squared plus\n    '\\u229F': MO.BIN4,       // squared minus\n    '\\u22A0': MO.BIN4,       // squared times\n    '\\u22A1': MO.BIN4,       // squared dot operator\n    '\\u22A2': MO.REL,        // right tack\n    '\\u22A3': MO.REL,        // left tack\n    '\\u22A4': MO.ORD55,      // down tack\n    '\\u22A5': MO.REL,        // up tack\n    '\\u22A6': MO.REL,        // assertion\n    '\\u22A7': MO.REL,        // models\n    '\\u22A8': MO.REL,        // true\n    '\\u22A9': MO.REL,        // forces\n    '\\u22AA': MO.REL,        // triple vertical bar right turnstile\n    '\\u22AB': MO.REL,        // double vertical bar double right turnstile\n    '\\u22AC': MO.REL,        // does not prove\n    '\\u22AD': MO.REL,        // not true\n    '\\u22AE': MO.REL,        // does not force\n    '\\u22AF': MO.REL,        // negated double vertical bar double right turnstile\n    '\\u22B0': MO.REL,        // precedes under relation\n    '\\u22B1': MO.REL,        // succeeds under relation\n    '\\u22B2': MO.REL,        // normal subgroup of\n    '\\u22B3': MO.REL,        // contains as normal subgroup\n    '\\u22B4': MO.REL,        // normal subgroup of or equal to\n    '\\u22B5': MO.REL,        // contains as normal subgroup or equal to\n    '\\u22B6': MO.REL,        // original of\n    '\\u22B7': MO.REL,        // image of\n    '\\u22B8': MO.REL,        // multimap\n    '\\u22B9': MO.REL,        // hermitian conjugate matrix\n    '\\u22BA': MO.BIN4,       // intercalate\n    '\\u22BB': MO.BIN4,       // xor\n    '\\u22BC': MO.BIN4,       // nand\n    '\\u22BD': MO.BIN4,       // nor\n    '\\u22BE': MO.BIN3,       // right angle with arc\n    '\\u22BF': MO.BIN3,       // right triangle\n    '\\u22C4': MO.BIN4,       // diamond operator\n    '\\u22C5': MO.BIN4,       // dot operator\n    '\\u22C6': MO.BIN4,       // star operator\n    '\\u22C7': MO.BIN4,       // division times\n    '\\u22C8': MO.REL,        // bowtie\n    '\\u22C9': MO.BIN4,       // left normal factor semidirect product\n    '\\u22CA': MO.BIN4,       // right normal factor semidirect product\n    '\\u22CB': MO.BIN4,       // left semidirect product\n    '\\u22CC': MO.BIN4,       // right semidirect product\n    '\\u22CD': MO.REL,        // reversed tilde equals\n    '\\u22CE': MO.BIN4,       // curly logical or\n    '\\u22CF': MO.BIN4,       // curly logical and\n    '\\u22D0': MO.REL,        // double subset\n    '\\u22D1': MO.REL,        // double superset\n    '\\u22D2': MO.BIN4,       // double intersection\n    '\\u22D3': MO.BIN4,       // double union\n    '\\u22D4': MO.REL,        // pitchfork\n    '\\u22D5': MO.REL,        // equal and parallel to\n    '\\u22D6': MO.REL,        // less-than with dot\n    '\\u22D7': MO.REL,        // greater-than with dot\n    '\\u22D8': MO.REL,        // very much less-than\n    '\\u22D9': MO.REL,        // very much greater-than\n    '\\u22DA': MO.REL,        // less-than equal to or greater-than\n    '\\u22DB': MO.REL,        // greater-than equal to or less-than\n    '\\u22DC': MO.REL,        // equal to or less-than\n    '\\u22DD': MO.REL,        // equal to or greater-than\n    '\\u22DE': MO.REL,        // equal to or precedes\n    '\\u22DF': MO.REL,        // equal to or succeeds\n    '\\u22E0': MO.REL,        // does not precede or equal\n    '\\u22E1': MO.REL,        // does not succeed or equal\n    '\\u22E2': MO.REL,        // not square image of or equal to\n    '\\u22E3': MO.REL,        // not square original of or equal to\n    '\\u22E4': MO.REL,        // square image of or not equal to\n    '\\u22E5': MO.REL,        // square original of or not equal to\n    '\\u22E6': MO.REL,        // less-than but not equivalent to\n    '\\u22E7': MO.REL,        // greater-than but not equivalent to\n    '\\u22E8': MO.REL,        // precedes but not equivalent to\n    '\\u22E9': MO.REL,        // succeeds but not equivalent to\n    '\\u22EA': MO.REL,        // not normal subgroup of\n    '\\u22EB': MO.REL,        // does not contain as normal subgroup\n    '\\u22EC': MO.REL,        // not normal subgroup of or equal to\n    '\\u22ED': MO.REL,        // does not contain as normal subgroup or equal\n    '\\u22EE': MO.ORD55,      // vertical ellipsis\n    '\\u22EF': MO.INNER,      // midline horizontal ellipsis\n    '\\u22F0': MO.REL,        // up right diagonal ellipsis\n    '\\u22F1': [5, 5, TEXCLASS.INNER, null], // down right diagonal ellipsis\n    '\\u22F2': MO.REL,        // element of with long horizontal stroke\n    '\\u22F3': MO.REL,        // element of with vertical bar at end of horizontal stroke\n    '\\u22F4': MO.REL,        // small element of with vertical bar at end of horizontal stroke\n    '\\u22F5': MO.REL,        // element of with dot above\n    '\\u22F6': MO.REL,        // element of with overbar\n    '\\u22F7': MO.REL,        // small element of with overbar\n    '\\u22F8': MO.REL,        // element of with underbar\n    '\\u22F9': MO.REL,        // element of with two horizontal strokes\n    '\\u22FA': MO.REL,        // contains with long horizontal stroke\n    '\\u22FB': MO.REL,        // contains with vertical bar at end of horizontal stroke\n    '\\u22FC': MO.REL,        // small contains with vertical bar at end of horizontal stroke\n    '\\u22FD': MO.REL,        // contains with overbar\n    '\\u22FE': MO.REL,        // small contains with overbar\n    '\\u22FF': MO.REL,        // z notation bag membership\n    '\\u2305': MO.BIN3,       // barwedge\n    '\\u2306': MO.BIN3,       // doublebarwedge\n    '\\u2322': MO.REL4,       // \\frown\n    '\\u2323': MO.REL4,       // \\smile\n    '\\u2329': MO.OPEN,       // langle\n    '\\u232A': MO.CLOSE,      // rangle\n    '\\u23AA': MO.ORD,        // \\bracevert\n    '\\u23AF': [0, 0, TEXCLASS.ORD, {stretchy: true}], // \\underline\n    '\\u23B0': MO.OPEN,       // \\lmoustache\n    '\\u23B1': MO.CLOSE,      // \\rmoustache\n    '\\u2500': MO.ORD,        // horizontal line\n    '\\u25B3': MO.BIN4,       // white up-pointing triangle\n    '\\u25B5': MO.BIN4,       // white up-pointing small triangle\n    '\\u25B9': MO.BIN4,       // white right-pointing small triangle\n    '\\u25BD': MO.BIN4,       // white down-pointing triangle\n    '\\u25BF': MO.BIN4,       // white down-pointing small triangle\n    '\\u25C3': MO.BIN4,       // white left-pointing small triangle\n    '\\u25EF': MO.BIN3,       // \\bigcirc\n    '\\u2660': MO.ORD,        // \\spadesuit\n    '\\u2661': MO.ORD,        // \\heartsuit\n    '\\u2662': MO.ORD,        // \\diamondsuit\n    '\\u2663': MO.ORD,        // \\clubsuit\n    '\\u2758': MO.REL,        // light vertical bar\n    '\\u27F0': MO.RELSTRETCH, // upwards quadruple arrow\n    '\\u27F1': MO.RELSTRETCH, // downwards quadruple arrow\n    '\\u27F5': MO.WIDEREL,    // long leftwards arrow\n    '\\u27F6': MO.WIDEREL,    // long rightwards arrow\n    '\\u27F7': MO.WIDEREL,    // long left right arrow\n    '\\u27F8': MO.WIDEREL,    // long leftwards double arrow\n    '\\u27F9': MO.WIDEREL,    // long rightwards double arrow\n    '\\u27FA': MO.WIDEREL,    // long left right double arrow\n    '\\u27FB': MO.WIDEREL,    // long leftwards arrow from bar\n    '\\u27FC': MO.WIDEREL,    // long rightwards arrow from bar\n    '\\u27FD': MO.WIDEREL,    // long leftwards double arrow from bar\n    '\\u27FE': MO.WIDEREL,    // long rightwards double arrow from bar\n    '\\u27FF': MO.WIDEREL,    // long rightwards squiggle arrow\n    '\\u2900': MO.RELACCENT,  // rightwards two-headed arrow with vertical stroke\n    '\\u2901': MO.RELACCENT,  // rightwards two-headed arrow with double vertical stroke\n    '\\u2902': MO.RELACCENT,  // leftwards double arrow with vertical stroke\n    '\\u2903': MO.RELACCENT,  // rightwards double arrow with vertical stroke\n    '\\u2904': MO.RELACCENT,  // left right double arrow with vertical stroke\n    '\\u2905': MO.RELACCENT,  // rightwards two-headed arrow from bar\n    '\\u2906': MO.RELACCENT,  // leftwards double arrow from bar\n    '\\u2907': MO.RELACCENT,  // rightwards double arrow from bar\n    '\\u2908': MO.REL,        // downwards arrow with horizontal stroke\n    '\\u2909': MO.REL,        // upwards arrow with horizontal stroke\n    '\\u290A': MO.RELSTRETCH, // upwards triple arrow\n    '\\u290B': MO.RELSTRETCH, // downwards triple arrow\n    '\\u290C': MO.WIDEREL,    // leftwards double dash arrow\n    '\\u290D': MO.WIDEREL,    // rightwards double dash arrow\n    '\\u290E': MO.WIDEREL,    // leftwards triple dash arrow\n    '\\u290F': MO.WIDEREL,    // rightwards triple dash arrow\n    '\\u2910': MO.WIDEREL,    // rightwards two-headed triple dash arrow\n    '\\u2911': MO.RELACCENT,  // rightwards arrow with dotted stem\n    '\\u2912': MO.RELSTRETCH, // upwards arrow to bar\n    '\\u2913': MO.RELSTRETCH, // downwards arrow to bar\n    '\\u2914': MO.RELACCENT,  // rightwards arrow with tail with vertical stroke\n    '\\u2915': MO.RELACCENT,  // rightwards arrow with tail with double vertical stroke\n    '\\u2916': MO.RELACCENT,  // rightwards two-headed arrow with tail\n    '\\u2917': MO.RELACCENT,  // rightwards two-headed arrow with tail with vertical stroke\n    '\\u2918': MO.RELACCENT,  // rightwards two-headed arrow with tail with double vertical stroke\n    '\\u2919': MO.RELACCENT,  // leftwards arrow-tail\n    '\\u291A': MO.RELACCENT,  // rightwards arrow-tail\n    '\\u291B': MO.RELACCENT,  // leftwards double arrow-tail\n    '\\u291C': MO.RELACCENT,  // rightwards double arrow-tail\n    '\\u291D': MO.RELACCENT,  // leftwards arrow to black diamond\n    '\\u291E': MO.RELACCENT,  // rightwards arrow to black diamond\n    '\\u291F': MO.RELACCENT,  // leftwards arrow from bar to black diamond\n    '\\u2920': MO.RELACCENT,  // rightwards arrow from bar to black diamond\n    '\\u2921': MO.RELSTRETCH, // north west and south east arrow\n    '\\u2922': MO.RELSTRETCH, // north east and south west arrow\n    '\\u2923': MO.REL,        // north west arrow with hook\n    '\\u2924': MO.REL,        // north east arrow with hook\n    '\\u2925': MO.REL,        // south east arrow with hook\n    '\\u2926': MO.REL,        // south west arrow with hook\n    '\\u2927': MO.REL,        // north west arrow and north east arrow\n    '\\u2928': MO.REL,        // north east arrow and south east arrow\n    '\\u2929': MO.REL,        // south east arrow and south west arrow\n    '\\u292A': MO.REL,        // south west arrow and north west arrow\n    '\\u292B': MO.REL,        // rising diagonal crossing falling diagonal\n    '\\u292C': MO.REL,        // falling diagonal crossing rising diagonal\n    '\\u292D': MO.REL,        // south east arrow crossing north east arrow\n    '\\u292E': MO.REL,        // north east arrow crossing south east arrow\n    '\\u292F': MO.REL,        // falling diagonal crossing north east arrow\n    '\\u2930': MO.REL,        // rising diagonal crossing south east arrow\n    '\\u2931': MO.REL,        // north east arrow crossing north west arrow\n    '\\u2932': MO.REL,        // north west arrow crossing north east arrow\n    '\\u2933': MO.RELACCENT,  // wave arrow pointing directly right\n    '\\u2934': MO.REL,        // arrow pointing rightwards then curving upwards\n    '\\u2935': MO.REL,        // arrow pointing rightwards then curving downwards\n    '\\u2936': MO.REL,        // arrow pointing downwards then curving leftwards\n    '\\u2937': MO.REL,        // arrow pointing downwards then curving rightwards\n    '\\u2938': MO.REL,        // right-side arc clockwise arrow\n    '\\u2939': MO.REL,        // left-side arc anticlockwise arrow\n    '\\u293A': MO.RELACCENT,  // top arc anticlockwise arrow\n    '\\u293B': MO.RELACCENT,  // bottom arc anticlockwise arrow\n    '\\u293C': MO.RELACCENT,  // top arc clockwise arrow with minus\n    '\\u293D': MO.RELACCENT,  // top arc anticlockwise arrow with plus\n    '\\u293E': MO.REL,        // lower right semicircular clockwise arrow\n    '\\u293F': MO.REL,        // lower left semicircular anticlockwise arrow\n    '\\u2940': MO.REL,        // anticlockwise closed circle arrow\n    '\\u2941': MO.REL,        // clockwise closed circle arrow\n    '\\u2942': MO.RELACCENT,  // rightwards arrow above short leftwards arrow\n    '\\u2943': MO.RELACCENT,  // leftwards arrow above short rightwards arrow\n    '\\u2944': MO.RELACCENT,  // short rightwards arrow above leftwards arrow\n    '\\u2945': MO.RELACCENT,  // rightwards arrow with plus below\n    '\\u2946': MO.RELACCENT,  // leftwards arrow with plus below\n    '\\u2947': MO.RELACCENT,  // rightwards arrow through x\n    '\\u2948': MO.RELACCENT,  // left right arrow through small circle\n    '\\u2949': MO.REL,        // upwards two-headed arrow from small circle\n    '\\u294A': MO.RELACCENT,  // left barb up right barb down harpoon\n    '\\u294B': MO.RELACCENT,  // left barb down right barb up harpoon\n    '\\u294C': MO.REL,        // up barb right down barb left harpoon\n    '\\u294D': MO.REL,        // up barb left down barb right harpoon\n    '\\u294E': MO.WIDEREL,    // left barb up right barb up harpoon\n    '\\u294F': MO.RELSTRETCH, // up barb right down barb right harpoon\n    '\\u2950': MO.WIDEREL,    // left barb down right barb down harpoon\n    '\\u2951': MO.RELSTRETCH, // up barb left down barb left harpoon\n    '\\u2952': MO.WIDEREL,    // leftwards harpoon with barb up to bar\n    '\\u2953': MO.WIDEREL,    // rightwards harpoon with barb up to bar\n    '\\u2954': MO.RELSTRETCH, // upwards harpoon with barb right to bar\n    '\\u2955': MO.RELSTRETCH, // downwards harpoon with barb right to bar\n    '\\u2956': MO.RELSTRETCH, // leftwards harpoon with barb down to bar\n    '\\u2957': MO.RELSTRETCH, // rightwards harpoon with barb down to bar\n    '\\u2958': MO.RELSTRETCH, // upwards harpoon with barb left to bar\n    '\\u2959': MO.RELSTRETCH, // downwards harpoon with barb left to bar\n    '\\u295A': MO.WIDEREL,    // leftwards harpoon with barb up from bar\n    '\\u295B': MO.WIDEREL,    // rightwards harpoon with barb up from bar\n    '\\u295C': MO.RELSTRETCH, // upwards harpoon with barb right from bar\n    '\\u295D': MO.RELSTRETCH, // downwards harpoon with barb right from bar\n    '\\u295E': MO.WIDEREL,    // leftwards harpoon with barb down from bar\n    '\\u295F': MO.WIDEREL,    // rightwards harpoon with barb down from bar\n    '\\u2960': MO.RELSTRETCH, // upwards harpoon with barb left from bar\n    '\\u2961': MO.RELSTRETCH, // downwards harpoon with barb left from bar\n    '\\u2962': MO.RELACCENT,  // leftwards harpoon with barb up above leftwards harpoon with barb down\n    '\\u2963': MO.REL,        // upwards harpoon with barb left beside upwards harpoon with barb right\n    '\\u2964': MO.RELACCENT,  // rightwards harpoon with barb up above rightwards harpoon with barb down\n    '\\u2965': MO.REL,        // downwards harpoon with barb left beside downwards harpoon with barb right\n    '\\u2966': MO.RELACCENT,  // leftwards harpoon with barb up above rightwards harpoon with barb up\n    '\\u2967': MO.RELACCENT,  // leftwards harpoon with barb down above rightwards harpoon with barb down\n    '\\u2968': MO.RELACCENT,  // rightwards harpoon with barb up above leftwards harpoon with barb up\n    '\\u2969': MO.RELACCENT,  // rightwards harpoon with barb down above leftwards harpoon with barb down\n    '\\u296A': MO.RELACCENT,  // leftwards harpoon with barb up above long dash\n    '\\u296B': MO.RELACCENT,  // leftwards harpoon with barb down below long dash\n    '\\u296C': MO.RELACCENT,  // rightwards harpoon with barb up above long dash\n    '\\u296D': MO.RELACCENT,  // rightwards harpoon with barb down below long dash\n    '\\u296E': MO.RELSTRETCH, // upwards harpoon with barb left beside downwards harpoon with barb right\n    '\\u296F': MO.RELSTRETCH, // downwards harpoon with barb left beside upwards harpoon with barb right\n    '\\u2970': MO.RELACCENT,  // right double arrow with rounded head\n    '\\u2971': MO.RELACCENT,  // equals sign above rightwards arrow\n    '\\u2972': MO.RELACCENT,  // tilde operator above rightwards arrow\n    '\\u2973': MO.RELACCENT,  // leftwards arrow above tilde operator\n    '\\u2974': MO.RELACCENT,  // rightwards arrow above tilde operator\n    '\\u2975': MO.RELACCENT,  // rightwards arrow above almost equal to\n    '\\u2976': MO.RELACCENT,  // less-than above leftwards arrow\n    '\\u2977': MO.RELACCENT,  // leftwards arrow through less-than\n    '\\u2978': MO.RELACCENT,  // greater-than above rightwards arrow\n    '\\u2979': MO.RELACCENT,  // subset above rightwards arrow\n    '\\u297A': MO.RELACCENT,  // leftwards arrow through subset\n    '\\u297B': MO.RELACCENT,  // superset above leftwards arrow\n    '\\u297C': MO.RELACCENT,  // left fish tail\n    '\\u297D': MO.RELACCENT,  // right fish tail\n    '\\u297E': MO.REL,        // up fish tail\n    '\\u297F': MO.REL,        // down fish tail\n    '\\u2981': MO.BIN3,       // z notation spot\n    '\\u2982': MO.BIN3,       // z notation type colon\n    '\\u2999': MO.BIN3,       // dotted fence\n    '\\u299A': MO.BIN3,       // vertical zigzag line\n    '\\u299B': MO.BIN3,       // measured angle opening left\n    '\\u299C': MO.BIN3,       // right angle variant with square\n    '\\u299D': MO.BIN3,       // measured right angle with dot\n    '\\u299E': MO.BIN3,       // angle with s inside\n    '\\u299F': MO.BIN3,       // acute angle\n    '\\u29A0': MO.BIN3,       // spherical angle opening left\n    '\\u29A1': MO.BIN3,       // spherical angle opening up\n    '\\u29A2': MO.BIN3,       // turned angle\n    '\\u29A3': MO.BIN3,       // reversed angle\n    '\\u29A4': MO.BIN3,       // angle with underbar\n    '\\u29A5': MO.BIN3,       // reversed angle with underbar\n    '\\u29A6': MO.BIN3,       // oblique angle opening up\n    '\\u29A7': MO.BIN3,       // oblique angle opening down\n    '\\u29A8': MO.BIN3,       // measured angle with open arm ending in arrow pointing up and right\n    '\\u29A9': MO.BIN3,       // measured angle with open arm ending in arrow pointing up and left\n    '\\u29AA': MO.BIN3,       // measured angle with open arm ending in arrow pointing down and right\n    '\\u29AB': MO.BIN3,       // measured angle with open arm ending in arrow pointing down and left\n    '\\u29AC': MO.BIN3,       // measured angle with open arm ending in arrow pointing right and up\n    '\\u29AD': MO.BIN3,       // measured angle with open arm ending in arrow pointing left and up\n    '\\u29AE': MO.BIN3,       // measured angle with open arm ending in arrow pointing right and down\n    '\\u29AF': MO.BIN3,       // measured angle with open arm ending in arrow pointing left and down\n    '\\u29B0': MO.BIN3,       // reversed empty set\n    '\\u29B1': MO.BIN3,       // empty set with overbar\n    '\\u29B2': MO.BIN3,       // empty set with small circle above\n    '\\u29B3': MO.BIN3,       // empty set with right arrow above\n    '\\u29B4': MO.BIN3,       // empty set with left arrow above\n    '\\u29B5': MO.BIN3,       // circle with horizontal bar\n    '\\u29B6': MO.BIN4,       // circled vertical bar\n    '\\u29B7': MO.BIN4,       // circled parallel\n    '\\u29B8': MO.BIN4,       // circled reverse solidus\n    '\\u29B9': MO.BIN4,       // circled perpendicular\n    '\\u29BA': MO.BIN4,       // circle divided by horizontal bar and top half divided by vertical bar\n    '\\u29BB': MO.BIN4,       // circle with superimposed x\n    '\\u29BC': MO.BIN4,       // circled anticlockwise-rotated division sign\n    '\\u29BD': MO.BIN4,       // up arrow through circle\n    '\\u29BE': MO.BIN4,       // circled white bullet\n    '\\u29BF': MO.BIN4,       // circled bullet\n    '\\u29C0': MO.REL,        // circled less-than\n    '\\u29C1': MO.REL,        // circled greater-than\n    '\\u29C2': MO.BIN3,       // circle with small circle to the right\n    '\\u29C3': MO.BIN3,       // circle with two horizontal strokes to the right\n    '\\u29C4': MO.BIN4,       // squared rising diagonal slash\n    '\\u29C5': MO.BIN4,       // squared falling diagonal slash\n    '\\u29C6': MO.BIN4,       // squared asterisk\n    '\\u29C7': MO.BIN4,       // squared small circle\n    '\\u29C8': MO.BIN4,       // squared square\n    '\\u29C9': MO.BIN3,       // two joined squares\n    '\\u29CA': MO.BIN3,       // triangle with dot above\n    '\\u29CB': MO.BIN3,       // triangle with underbar\n    '\\u29CC': MO.BIN3,       // s in triangle\n    '\\u29CD': MO.BIN3,       // triangle with serifs at bottom\n    '\\u29CE': MO.REL,        // right triangle above left triangle\n    '\\u29CF': MO.REL,        // left triangle beside vertical bar\n    '\\u29CF\\u0338': MO.REL,  // left triangle beside vertical bar with slash\n    '\\u29D0': MO.REL,        // vertical bar beside right triangle\n    '\\u29D0\\u0338': MO.REL,  // vertical bar beside right triangle with slash\n    '\\u29D1': MO.REL,        // bowtie with left half black\n    '\\u29D2': MO.REL,        // bowtie with right half black\n    '\\u29D3': MO.REL,        // black bowtie\n    '\\u29D4': MO.REL,        // times with left half black\n    '\\u29D5': MO.REL,        // times with right half black\n    '\\u29D6': MO.BIN4,       // white hourglass\n    '\\u29D7': MO.BIN4,       // black hourglass\n    '\\u29D8': MO.BIN3,       // left wiggly fence\n    '\\u29D9': MO.BIN3,       // right wiggly fence\n    '\\u29DB': MO.BIN3,       // right double wiggly fence\n    '\\u29DC': MO.BIN3,       // incomplete infinity\n    '\\u29DD': MO.BIN3,       // tie over infinity\n    '\\u29DE': MO.REL,        // infinity negated with vertical bar\n    '\\u29DF': MO.BIN3,       // double-ended multimap\n    '\\u29E0': MO.BIN3,       // square with contoured outline\n    '\\u29E1': MO.REL,        // increases as\n    '\\u29E2': MO.BIN4,       // shuffle product\n    '\\u29E3': MO.REL,        // equals sign and slanted parallel\n    '\\u29E4': MO.REL,        // equals sign and slanted parallel with tilde above\n    '\\u29E5': MO.REL,        // identical to and slanted parallel\n    '\\u29E6': MO.REL,        // gleich stark\n    '\\u29E7': MO.BIN3,       // thermodynamic\n    '\\u29E8': MO.BIN3,       // down-pointing triangle with left half black\n    '\\u29E9': MO.BIN3,       // down-pointing triangle with right half black\n    '\\u29EA': MO.BIN3,       // black diamond with down arrow\n    '\\u29EB': MO.BIN3,       // black lozenge\n    '\\u29EC': MO.BIN3,       // white circle with down arrow\n    '\\u29ED': MO.BIN3,       // black circle with down arrow\n    '\\u29EE': MO.BIN3,       // error-barred white square\n    '\\u29EF': MO.BIN3,       // error-barred black square\n    '\\u29F0': MO.BIN3,       // error-barred white diamond\n    '\\u29F1': MO.BIN3,       // error-barred black diamond\n    '\\u29F2': MO.BIN3,       // error-barred white circle\n    '\\u29F3': MO.BIN3,       // error-barred black circle\n    '\\u29F4': MO.REL,        // rule-delayed\n    '\\u29F5': MO.BIN4,       // reverse solidus operator\n    '\\u29F6': MO.BIN4,       // solidus with overbar\n    '\\u29F7': MO.BIN4,       // reverse solidus with horizontal stroke\n    '\\u29F8': MO.BIN3,       // big solidus\n    '\\u29F9': MO.BIN3,       // big reverse solidus\n    '\\u29FA': MO.BIN3,       // double plus\n    '\\u29FB': MO.BIN3,       // triple plus\n    '\\u29FE': MO.BIN4,       // tiny\n    '\\u29FF': MO.BIN4,       // miny\n    '\\u2A1D': MO.BIN3,       // join\n    '\\u2A1E': MO.BIN3,       // large left triangle operator\n    '\\u2A1F': MO.BIN3,       // z notation schema composition\n    '\\u2A20': MO.BIN3,       // z notation schema piping\n    '\\u2A21': MO.BIN3,       // z notation schema projection\n    '\\u2A22': MO.BIN4,       // plus sign with small circle above\n    '\\u2A23': MO.BIN4,       // plus sign with circumflex accent above\n    '\\u2A24': MO.BIN4,       // plus sign with tilde above\n    '\\u2A25': MO.BIN4,       // plus sign with dot below\n    '\\u2A26': MO.BIN4,       // plus sign with tilde below\n    '\\u2A27': MO.BIN4,       // plus sign with subscript two\n    '\\u2A28': MO.BIN4,       // plus sign with black triangle\n    '\\u2A29': MO.BIN4,       // minus sign with comma above\n    '\\u2A2A': MO.BIN4,       // minus sign with dot below\n    '\\u2A2B': MO.BIN4,       // minus sign with falling dots\n    '\\u2A2C': MO.BIN4,       // minus sign with rising dots\n    '\\u2A2D': MO.BIN4,       // plus sign in left half circle\n    '\\u2A2E': MO.BIN4,       // plus sign in right half circle\n    '\\u2A2F': MO.BIN4,       // vector or cross product\n    '\\u2A30': MO.BIN4,       // multiplication sign with dot above\n    '\\u2A31': MO.BIN4,       // multiplication sign with underbar\n    '\\u2A32': MO.BIN4,       // semidirect product with bottom closed\n    '\\u2A33': MO.BIN4,       // smash product\n    '\\u2A34': MO.BIN4,       // multiplication sign in left half circle\n    '\\u2A35': MO.BIN4,       // multiplication sign in right half circle\n    '\\u2A36': MO.BIN4,       // circled multiplication sign with circumflex accent\n    '\\u2A37': MO.BIN4,       // multiplication sign in double circle\n    '\\u2A38': MO.BIN4,       // circled division sign\n    '\\u2A39': MO.BIN4,       // plus sign in triangle\n    '\\u2A3A': MO.BIN4,       // minus sign in triangle\n    '\\u2A3B': MO.BIN4,       // multiplication sign in triangle\n    '\\u2A3C': MO.BIN4,       // interior product\n    '\\u2A3D': MO.BIN4,       // righthand interior product\n    '\\u2A3E': MO.BIN4,       // z notation relational composition\n    '\\u2A3F': MO.BIN4,       // amalgamation or coproduct\n    '\\u2A40': MO.BIN4,       // intersection with dot\n    '\\u2A41': MO.BIN4,       // union with minus sign\n    '\\u2A42': MO.BIN4,       // union with overbar\n    '\\u2A43': MO.BIN4,       // intersection with overbar\n    '\\u2A44': MO.BIN4,       // intersection with logical and\n    '\\u2A45': MO.BIN4,       // union with logical or\n    '\\u2A46': MO.BIN4,       // union above intersection\n    '\\u2A47': MO.BIN4,       // intersection above union\n    '\\u2A48': MO.BIN4,       // union above bar above intersection\n    '\\u2A49': MO.BIN4,       // intersection above bar above union\n    '\\u2A4A': MO.BIN4,       // union beside and joined with union\n    '\\u2A4B': MO.BIN4,       // intersection beside and joined with intersection\n    '\\u2A4C': MO.BIN4,       // closed union with serifs\n    '\\u2A4D': MO.BIN4,       // closed intersection with serifs\n    '\\u2A4E': MO.BIN4,       // double square intersection\n    '\\u2A4F': MO.BIN4,       // double square union\n    '\\u2A50': MO.BIN4,       // closed union with serifs and smash product\n    '\\u2A51': MO.BIN4,       // logical and with dot above\n    '\\u2A52': MO.BIN4,       // logical or with dot above\n    '\\u2A53': MO.BIN4,       // double logical and\n    '\\u2A54': MO.BIN4,       // double logical or\n    '\\u2A55': MO.BIN4,       // two intersecting logical and\n    '\\u2A56': MO.BIN4,       // two intersecting logical or\n    '\\u2A57': MO.BIN4,       // sloping large or\n    '\\u2A58': MO.BIN4,       // sloping large and\n    '\\u2A59': MO.REL,        // logical or overlapping logical and\n    '\\u2A5A': MO.BIN4,       // logical and with middle stem\n    '\\u2A5B': MO.BIN4,       // logical or with middle stem\n    '\\u2A5C': MO.BIN4,       // logical and with horizontal dash\n    '\\u2A5D': MO.BIN4,       // logical or with horizontal dash\n    '\\u2A5E': MO.BIN4,       // logical and with double overbar\n    '\\u2A5F': MO.BIN4,       // logical and with underbar\n    '\\u2A60': MO.BIN4,       // logical and with double underbar\n    '\\u2A61': MO.BIN4,       // small vee with underbar\n    '\\u2A62': MO.BIN4,       // logical or with double overbar\n    '\\u2A63': MO.BIN4,       // logical or with double underbar\n    '\\u2A64': MO.BIN4,       // z notation domain antirestriction\n    '\\u2A65': MO.BIN4,       // z notation range antirestriction\n    '\\u2A66': MO.REL,        // equals sign with dot below\n    '\\u2A67': MO.REL,        // identical with dot above\n    '\\u2A68': MO.REL,        // triple horizontal bar with double vertical stroke\n    '\\u2A69': MO.REL,        // triple horizontal bar with triple vertical stroke\n    '\\u2A6A': MO.REL,        // tilde operator with dot above\n    '\\u2A6B': MO.REL,        // tilde operator with rising dots\n    '\\u2A6C': MO.REL,        // similar minus similar\n    '\\u2A6D': MO.REL,        // congruent with dot above\n    '\\u2A6E': MO.REL,        // equals with asterisk\n    '\\u2A6F': MO.REL,        // almost equal to with circumflex accent\n    '\\u2A70': MO.REL,        // approximately equal or equal to\n    '\\u2A71': MO.BIN4,       // equals sign above plus sign\n    '\\u2A72': MO.BIN4,       // plus sign above equals sign\n    '\\u2A73': MO.REL,        // equals sign above tilde operator\n    '\\u2A74': MO.REL,        // double colon equal\n    '\\u2A75': MO.REL,        // two consecutive equals signs\n    '\\u2A76': MO.REL,        // three consecutive equals signs\n    '\\u2A77': MO.REL,        // equals sign with two dots above and two dots below\n    '\\u2A78': MO.REL,        // equivalent with four dots above\n    '\\u2A79': MO.REL,        // less-than with circle inside\n    '\\u2A7A': MO.REL,        // greater-than with circle inside\n    '\\u2A7B': MO.REL,        // less-than with question mark above\n    '\\u2A7C': MO.REL,        // greater-than with question mark above\n    '\\u2A7D': MO.REL,        // less-than or slanted equal to\n    '\\u2A7D\\u0338': MO.REL,  // less-than or slanted equal to with slash\n    '\\u2A7E': MO.REL,        // greater-than or slanted equal to\n    '\\u2A7E\\u0338': MO.REL,  // greater-than or slanted equal to with slash\n    '\\u2A7F': MO.REL,        // less-than or slanted equal to with dot inside\n    '\\u2A80': MO.REL,        // greater-than or slanted equal to with dot inside\n    '\\u2A81': MO.REL,        // less-than or slanted equal to with dot above\n    '\\u2A82': MO.REL,        // greater-than or slanted equal to with dot above\n    '\\u2A83': MO.REL,        // less-than or slanted equal to with dot above right\n    '\\u2A84': MO.REL,        // greater-than or slanted equal to with dot above left\n    '\\u2A85': MO.REL,        // less-than or approximate\n    '\\u2A86': MO.REL,        // greater-than or approximate\n    '\\u2A87': MO.REL,        // less-than and single-line not equal to\n    '\\u2A88': MO.REL,        // greater-than and single-line not equal to\n    '\\u2A89': MO.REL,        // less-than and not approximate\n    '\\u2A8A': MO.REL,        // greater-than and not approximate\n    '\\u2A8B': MO.REL,        // less-than above double-line equal above greater-than\n    '\\u2A8C': MO.REL,        // greater-than above double-line equal above less-than\n    '\\u2A8D': MO.REL,        // less-than above similar or equal\n    '\\u2A8E': MO.REL,        // greater-than above similar or equal\n    '\\u2A8F': MO.REL,        // less-than above similar above greater-than\n    '\\u2A90': MO.REL,        // greater-than above similar above less-than\n    '\\u2A91': MO.REL,        // less-than above greater-than above double-line equal\n    '\\u2A92': MO.REL,        // greater-than above less-than above double-line equal\n    '\\u2A93': MO.REL,        // less-than above slanted equal above greater-than above slanted equal\n    '\\u2A94': MO.REL,        // greater-than above slanted equal above less-than above slanted equal\n    '\\u2A95': MO.REL,        // slanted equal to or less-than\n    '\\u2A96': MO.REL,        // slanted equal to or greater-than\n    '\\u2A97': MO.REL,        // slanted equal to or less-than with dot inside\n    '\\u2A98': MO.REL,        // slanted equal to or greater-than with dot inside\n    '\\u2A99': MO.REL,        // double-line equal to or less-than\n    '\\u2A9A': MO.REL,        // double-line equal to or greater-than\n    '\\u2A9B': MO.REL,        // double-line slanted equal to or less-than\n    '\\u2A9C': MO.REL,        // double-line slanted equal to or greater-than\n    '\\u2A9D': MO.REL,        // similar or less-than\n    '\\u2A9E': MO.REL,        // similar or greater-than\n    '\\u2A9F': MO.REL,        // similar above less-than above equals sign\n    '\\u2AA0': MO.REL,        // similar above greater-than above equals sign\n    '\\u2AA1': MO.REL,        // double nested less-than\n    '\\u2AA1\\u0338': MO.REL,  // double nested less-than with slash\n    '\\u2AA2': MO.REL,        // double nested greater-than\n    '\\u2AA2\\u0338': MO.REL,  // double nested greater-than with slash\n    '\\u2AA3': MO.REL,        // double nested less-than with underbar\n    '\\u2AA4': MO.REL,        // greater-than overlapping less-than\n    '\\u2AA5': MO.REL,        // greater-than beside less-than\n    '\\u2AA6': MO.REL,        // less-than closed by curve\n    '\\u2AA7': MO.REL,        // greater-than closed by curve\n    '\\u2AA8': MO.REL,        // less-than closed by curve above slanted equal\n    '\\u2AA9': MO.REL,        // greater-than closed by curve above slanted equal\n    '\\u2AAA': MO.REL,        // smaller than\n    '\\u2AAB': MO.REL,        // larger than\n    '\\u2AAC': MO.REL,        // smaller than or equal to\n    '\\u2AAD': MO.REL,        // larger than or equal to\n    '\\u2AAE': MO.REL,        // equals sign with bumpy above\n    '\\u2AAF': MO.REL,        // precedes above single-line equals sign\n    '\\u2AAF\\u0338': MO.REL,  // precedes above single-line equals sign with slash\n    '\\u2AB0': MO.REL,        // succeeds above single-line equals sign\n    '\\u2AB0\\u0338': MO.REL,  // succeeds above single-line equals sign with slash\n    '\\u2AB1': MO.REL,        // precedes above single-line not equal to\n    '\\u2AB2': MO.REL,        // succeeds above single-line not equal to\n    '\\u2AB3': MO.REL,        // precedes above equals sign\n    '\\u2AB4': MO.REL,        // succeeds above equals sign\n    '\\u2AB5': MO.REL,        // precedes above not equal to\n    '\\u2AB6': MO.REL,        // succeeds above not equal to\n    '\\u2AB7': MO.REL,        // precedes above almost equal to\n    '\\u2AB8': MO.REL,        // succeeds above almost equal to\n    '\\u2AB9': MO.REL,        // precedes above not almost equal to\n    '\\u2ABA': MO.REL,        // succeeds above not almost equal to\n    '\\u2ABB': MO.REL,        // double precedes\n    '\\u2ABC': MO.REL,        // double succeeds\n    '\\u2ABD': MO.REL,        // subset with dot\n    '\\u2ABE': MO.REL,        // superset with dot\n    '\\u2ABF': MO.REL,        // subset with plus sign below\n    '\\u2AC0': MO.REL,        // superset with plus sign below\n    '\\u2AC1': MO.REL,        // subset with multiplication sign below\n    '\\u2AC2': MO.REL,        // superset with multiplication sign below\n    '\\u2AC3': MO.REL,        // subset of or equal to with dot above\n    '\\u2AC4': MO.REL,        // superset of or equal to with dot above\n    '\\u2AC5': MO.REL,        // subset of above equals sign\n    '\\u2AC6': MO.REL,        // superset of above equals sign\n    '\\u2AC7': MO.REL,        // subset of above tilde operator\n    '\\u2AC8': MO.REL,        // superset of above tilde operator\n    '\\u2AC9': MO.REL,        // subset of above almost equal to\n    '\\u2ACA': MO.REL,        // superset of above almost equal to\n    '\\u2ACB': MO.REL,        // subset of above not equal to\n    '\\u2ACC': MO.REL,        // superset of above not equal to\n    '\\u2ACD': MO.REL,        // square left open box operator\n    '\\u2ACE': MO.REL,        // square right open box operator\n    '\\u2ACF': MO.REL,        // closed subset\n    '\\u2AD0': MO.REL,        // closed superset\n    '\\u2AD1': MO.REL,        // closed subset or equal to\n    '\\u2AD2': MO.REL,        // closed superset or equal to\n    '\\u2AD3': MO.REL,        // subset above superset\n    '\\u2AD4': MO.REL,        // superset above subset\n    '\\u2AD5': MO.REL,        // subset above subset\n    '\\u2AD6': MO.REL,        // superset above superset\n    '\\u2AD7': MO.REL,        // superset beside subset\n    '\\u2AD8': MO.REL,        // superset beside and joined by dash with subset\n    '\\u2AD9': MO.REL,        // element of opening downwards\n    '\\u2ADA': MO.REL,        // pitchfork with tee top\n    '\\u2ADB': MO.REL,        // transversal intersection\n    '\\u2ADD': MO.REL,        // nonforking\n    '\\u2ADD\\u0338': MO.REL,  // nonforking with slash\n    '\\u2ADE': MO.REL,        // short left tack\n    '\\u2ADF': MO.REL,        // short down tack\n    '\\u2AE0': MO.REL,        // short up tack\n    '\\u2AE1': MO.REL,        // perpendicular with s\n    '\\u2AE2': MO.REL,        // vertical bar triple right turnstile\n    '\\u2AE3': MO.REL,        // double vertical bar left turnstile\n    '\\u2AE4': MO.REL,        // vertical bar double left turnstile\n    '\\u2AE5': MO.REL,        // double vertical bar double left turnstile\n    '\\u2AE6': MO.REL,        // long dash from left member of double vertical\n    '\\u2AE7': MO.REL,        // short down tack with overbar\n    '\\u2AE8': MO.REL,        // short up tack with underbar\n    '\\u2AE9': MO.REL,        // short up tack above short down tack\n    '\\u2AEA': MO.REL,        // double down tack\n    '\\u2AEB': MO.REL,        // double up tack\n    '\\u2AEC': MO.REL,        // double stroke not sign\n    '\\u2AED': MO.REL,        // reversed double stroke not sign\n    '\\u2AEE': MO.REL,        // does not divide with reversed negation slash\n    '\\u2AEF': MO.REL,        // vertical line with circle above\n    '\\u2AF0': MO.REL,        // vertical line with circle below\n    '\\u2AF1': MO.REL,        // down tack with circle below\n    '\\u2AF2': MO.REL,        // parallel with horizontal stroke\n    '\\u2AF3': MO.REL,        // parallel with tilde operator\n    '\\u2AF4': MO.BIN4,       // triple vertical bar binary relation\n    '\\u2AF5': MO.BIN4,       // triple vertical bar with horizontal stroke\n    '\\u2AF6': MO.BIN4,       // triple colon operator\n    '\\u2AF7': MO.REL,        // triple nested less-than\n    '\\u2AF8': MO.REL,        // triple nested greater-than\n    '\\u2AF9': MO.REL,        // double-line slanted less-than or equal to\n    '\\u2AFA': MO.REL,        // double-line slanted greater-than or equal to\n    '\\u2AFB': MO.BIN4,       // triple solidus binary relation\n    '\\u2AFD': MO.BIN4,       // double solidus operator\n    '\\u2AFE': MO.BIN3,       // white vertical bar\n    '\\u2B45': MO.RELSTRETCH, // leftwards quadruple arrow\n    '\\u2B46': MO.RELSTRETCH, // rightwards quadruple arrow\n    '\\u3008': MO.OPEN,       // langle\n    '\\u3009': MO.CLOSE,      // rangle\n    '\\uFE37': MO.WIDEACCENT, // horizontal brace down\n    '\\uFE38': MO.WIDEACCENT, // horizontal brace up\n  }\n};\n\n//\n//  These are not in the W3C table, but we need them for \\widehat and \\underline\n//\nOPTABLE.infix['^'] = MO.WIDEREL;\nOPTABLE.infix['_'] = MO.WIDEREL;\n\n//\n//  Remove from Appendix C, but perhaps that was a mistake?\n//\nOPTABLE.infix['\\u2ADC'] = MO.REL;\n"],"names":[],"mappings":"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B,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,KAAK;QAClB,QAAQ,EAAE,QAAA,EAAE,CAAC,KAAK;QAClB,QAAQ,EAAE,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,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,KAAK;QAClB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,E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AAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,cAAc,EAAE,QAAA,EAAE,CAAC,GAAG;QACtB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,GAAG;QAChB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,UAAU;QACvB,QAAQ,EAAE,QAAA,EAAE,CAAC,UAAU;QACvB,QAAQ,EAAE,QAAA,EAAE,CAAC,IAAI;QACjB,QAAQ,EAAE,QAAA,EAAE,CAAC,KAAK;QAClB,QAAQ,EAAE,QAAA,EAAE,CAAC,UAAU;QACvB,QAAQ,EAAE,QAAA,EAAE,CAAC,UAAU;KACxB;CACF,CAAC;AAKF,QAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,QAAA,EAAE,CAAC,OAAO,CAAC;AAChC,QAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,QAAA,EAAE,CAAC,OAAO,CAAC;AAKhC,QAAA,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,QAAA,EAAE,CAAC,GAAG,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3679, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3684, "column": 0}, "map": {"version":3,"file":"mo.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mo.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMo node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlTokenNode, MmlNode, AttributeList, TEXCLASS} from '../MmlNode.js';\nimport {MmlMrow} from './mrow.js';\nimport {MmlMover, MmlMunder, MmlMunderover} from './munderover.js';\nimport {OperatorList, OPTABLE, getRange, MMLSPACING} from '../OperatorDictionary.js';\nimport {unicodeChars, unicodeString} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMo node class (subclass of AbstractMmlTokenNode)\n */\n\nexport class MmlMo extends AbstractMmlTokenNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlTokenNode.defaults,\n    form: 'infix',\n    fence: false,\n    separator: false,\n    lspace: 'thickmathspace',\n    rspace: 'thickmathspace',\n    stretchy: false,\n    symmetric: false,\n    maxsize: 'infinity',\n    minsize: '0em', // MathML says '1em', but that is larger than some natural sizes\n    largeop: false,\n    movablelimits: false,\n    accent: false,\n    linebreak: 'auto',\n    lineleading: '1ex',\n    linebreakstyle: 'before',\n    indentalign: 'auto',\n    indentshift: '0',\n    indenttarget: '',\n    indentalignfirst: 'indentalign',\n    indentshiftfirst: 'indentshift',\n    indentalignlast: 'indentalign',\n    indentshiftlast: 'indentshift'\n  };\n\n  /**\n   * The MathML spacing values for the TeX classes\n   */\n  public static MMLSPACING = MMLSPACING;\n\n  /**\n   * The Operator Dictionary\n   */\n  public static OPTABLE: {[form: string]: OperatorList} = OPTABLE;\n\n  /**\n   * Pattern for matching when the contents is one ore more pseudoscripts\n   */\n  public static pseudoScripts = new RegExp([\n    '^[\"\\'*`',\n    '\\u00AA',               // FEMININE ORDINAL INDICATOR\n    '\\u00B0',               // DEGREE SIGN\n    '\\u00B2-\\u00B4',        // SUPERSCRIPT 2 and 3, ACUTE ACCENT\n    '\\u00B9',               // SUPERSCRIPT ONE\n    '\\u00BA',               // MASCULINE ORDINAL INDICATOR\n    '\\u2018-\\u201F',        // Various double and single quotation marks (up and down)\n    '\\u2032-\\u2037\\u2057',  // Primes and reversed primes (forward and reversed)\n    '\\u2070\\u2071',         // SUPERSCRIPT 0 and i\n    '\\u2074-\\u207F',        // SUPERCRIPT 4 through 9, -, =, (, ), and n\n    '\\u2080-\\u208E',        // SUBSCRIPT 0 through 9, -, =, (, ).\n    ']+$'\n  ].join(''));\n\n  /**\n   * Pattern for when contents is a collection of primes\n   */\n   protected static primes = new RegExp([\n     '^[\"\\'`',\n     '\\u2018-\\u201F',        // Various double and single quotation marks (up and down)\n     ']+$'\n   ].join(''));\n\n   /**\n    * Default map for remapping prime characters\n    */\n  protected static remapPrimes: {[n: number]: number} = {\n     0x0022: 0x2033,   // double quotes\n     0x0027: 0x2032,   // single quote\n     0x0060: 0x2035,   // back quote\n     0x2018: 0x2035,   // open single quote\n     0x2019: 0x2032,   // close single quote\n     0x201A: 0x2032,   // low open single quote\n     0x201B: 0x2035,   // reversed open single quote\n     0x201C: 0x2036,   // open double quote\n     0x201D: 0x2033,   // close double quote\n     0x201E: 0x2033,   // low open double quote\n     0x201F: 0x2036,   // reversed open double quote\n  };\n\n  /**\n   * Regular expression matching characters that are marked as math accents\n   */\n  protected static mathaccents = new RegExp([\n    '^[',\n    '\\u00B4\\u0301\\u02CA',  // acute\n    '\\u0060\\u0300\\u02CB',  // grave\n    '\\u00A8\\u0308',        // ddot\n    '\\u007E\\u0303\\u02DC',  // tilde\n    '\\u00AF\\u0304\\u02C9',  // bar\n    '\\u02D8\\u0306',        // breve\n    '\\u02C7\\u030C',        // check\n    '\\u005E\\u0302\\u02C6',  // hat\n    '\\u2192\\u20D7',        // vec\n    '\\u02D9\\u0307',        // dot\n    '\\u02DA\\u030A',        // mathring\n    '\\u20DB',              // dddot\n    '\\u20DC',              // ddddot\n    ']$'\n  ].join(''));\n\n  /**\n   * The internal TeX class of the node (for use with getter/setter below)\n   */\n  public _texClass: number = null;\n\n  /**\n   * Use a getter to look up the TeX class from the operator table if it hasn't\n   * been set yet (but don't save it in case the form changes when it is in its\n   * location).\n   */\n  public get texClass() {\n    if (this._texClass === null) {\n      let mo = this.getText();\n      let [form1, form2, form3] = this.handleExplicitForm(this.getForms());\n      let OPTABLE = (this.constructor as typeof MmlMo).OPTABLE;\n      let def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];\n      return def ? def[2] : TEXCLASS.REL;\n    }\n    return this._texClass;\n  }\n\n  /**\n   * Use a setter to store the actual value in _texClass;\n   */\n  public set texClass(value: number) {\n    this._texClass = value;\n  }\n\n  /**\n   * The default MathML spacing on the left\n   */\n  /* tslint:disable-next-line:whitespace */\n  public lspace = 5/18;\n\n  /**\n   * The default MathML spacing on the right\n   */\n  /* tslint:disable-next-line:whitespace */\n  public rspace = 5/18;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mo';\n  }\n\n  /**\n   * All <mo> are considered embellished\n   * @override\n   */\n  public get isEmbellished() {\n    return true;\n  }\n\n  /**\n   * @return {boolean}  Is <mo> marked as an explicit linebreak?\n   */\n  public get hasNewLine(): boolean {\n    return this.attributes.get('linebreak') === 'newline';\n  }\n\n  /**\n   * @return {MmlNode}  The node that is the outermost embellished operator\n   *                    with this node as its core\n   */\n  public coreParent(): MmlNode {\n    let embellished = this as MmlNode;\n    let parent = this as MmlNode;\n    let math = this.factory.getNodeClass('math');\n    while (parent && parent.isEmbellished && parent.coreMO() === this && !(parent instanceof math)) {\n      embellished = parent;\n      parent = (parent as MmlNode).parent;\n    }\n    return embellished;\n  }\n\n  /**\n   * @param {MmlNode} parent  The node whose core text is to be obtained\n   * @return {string}         The text of the core MO of the given parent element\n   */\n  public coreText(parent: MmlNode): string {\n    if (!parent) {\n      return '';\n    }\n    if (parent.isEmbellished) {\n      return (parent.coreMO() as MmlMo).getText();\n    }\n    while ((((parent.isKind('mrow') ||\n              (parent.isKind('TeXAtom') && parent.texClass !== TEXCLASS.VCENTER) ||\n              parent.isKind('mstyle') ||\n              parent.isKind('mphantom')) && parent.childNodes.length === 1) ||\n            parent.isKind('munderover')) && parent.childNodes[0]) {\n      parent = parent.childNodes[0] as MmlNode;\n    }\n    return (parent.isToken ? (parent as AbstractMmlTokenNode).getText() : '');\n  }\n\n  /**\n   * @override\n   */\n  public hasSpacingAttributes() {\n    return this.attributes.isSet('lspace') ||\n      this.attributes.isSet('rspace');\n  }\n\n  /**\n   * @return {boolean}  True is this mo is an accent in an munderover construction\n   */\n  get isAccent(): boolean {\n    let accent = false;\n    const node = this.coreParent().parent;\n    if (node) {\n      const key = (node.isKind('mover') ?\n                   ((node.childNodes[(node as MmlMover).over] as MmlNode).coreMO() ?\n                    'accent' : '') :\n                   node.isKind('munder') ?\n                   ((node.childNodes[(node as MmlMunder).under] as MmlNode).coreMO() ?\n                    'accentunder' : '') :\n                   node.isKind('munderover') ?\n                   (this === (node.childNodes[(node as MmlMunderover).over] as MmlNode).coreMO() ?\n                    'accent' :\n                    this === (node.childNodes[(node as MmlMunderover).under] as MmlNode).coreMO() ?\n                    'accentunder' : '') :\n                   '');\n      if (key) {\n        const value = node.attributes.getExplicit(key);\n        accent = (value !== undefined ? accent : this.attributes.get('accent')) as boolean;\n      }\n    }\n    return accent;\n  }\n\n  /**\n   * Produce the texClass based on the operator dictionary values\n   *\n   * @override\n   */\n  public setTeXclass(prev: MmlNode): MmlNode {\n    let {form, fence} = this.attributes.getList('form', 'fence') as {form: string, fence: string};\n    if (this.getProperty('texClass') === undefined &&\n        (this.attributes.isSet('lspace') || this.attributes.isSet('rspace'))) {\n      return null;\n    }\n    if (fence && this.texClass === TEXCLASS.REL) {\n      if (form === 'prefix') {\n        this.texClass = TEXCLASS.OPEN;\n      }\n      if (form === 'postfix') {\n        this.texClass = TEXCLASS.CLOSE;\n      }\n    }\n    return this.adjustTeXclass(prev);\n  }\n  /**\n   * Follow the TeXBook rules for adjusting the TeX class once its neighbors are known\n   *\n   * @param {MmlNode} prev  The node appearing before this one in the output\n   * @return {MmlNode}      The last node displayed (this node)\n   */\n  public adjustTeXclass(prev: MmlNode): MmlNode {\n    let texClass = this.texClass;\n    let prevClass = this.prevClass;\n    if (texClass === TEXCLASS.NONE) {\n      return prev;\n    }\n    if (prev) {\n      if (prev.getProperty('autoOP') && (texClass === TEXCLASS.BIN || texClass === TEXCLASS.REL)) {\n        prevClass = prev.texClass = TEXCLASS.ORD;\n      }\n      prevClass = this.prevClass = (prev.texClass || TEXCLASS.ORD);\n      this.prevLevel = this.attributes.getInherited('scriptlevel') as number;\n    } else {\n      prevClass = this.prevClass = TEXCLASS.NONE;\n    }\n    if (texClass === TEXCLASS.BIN &&\n        (prevClass === TEXCLASS.NONE || prevClass === TEXCLASS.BIN || prevClass === TEXCLASS.OP ||\n         prevClass === TEXCLASS.REL || prevClass === TEXCLASS.OPEN || prevClass === TEXCLASS.PUNCT)) {\n      this.texClass = TEXCLASS.ORD;\n    } else if (prevClass === TEXCLASS.BIN &&\n               (texClass === TEXCLASS.REL || texClass === TEXCLASS.CLOSE || texClass === TEXCLASS.PUNCT)) {\n      prev.texClass = this.prevClass = TEXCLASS.ORD;\n    } else if (texClass === TEXCLASS.BIN) {\n      //\n      // Check if node is the last one in its container since the rule\n      // above only takes effect if there is a node that follows.\n      //\n      let child: MmlNode = this;\n      let parent = this.parent;\n      while (parent && parent.parent && parent.isEmbellished &&\n             (parent.childNodes.length === 1 ||\n              (!parent.isKind('mrow') && parent.core() === child))) {\n        child = parent;\n        parent = parent.parent;\n      }\n      if (parent.childNodes[parent.childNodes.length - 1] === child) {\n        this.texClass = TEXCLASS.ORD;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Do the normal inheritance, then look up the attributes from the operator dictionary.\n   * If there is no dictionary entry, get the TeX class from the Unicode range list.\n   *\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList = {},\n                                display: boolean = false, level: number = 0, prime: boolean = false) {\n    super.setInheritedAttributes(attributes, display, level, prime);\n    let mo = this.getText();\n    this.checkOperatorTable(mo);\n    this.checkPseudoScripts(mo);\n    this.checkPrimes(mo);\n    this.checkMathAccent(mo);\n  }\n\n  /**\n   * Set the attributes from the operator table\n   *\n   * @param {string} mo   The test of the mo element\n   */\n  protected checkOperatorTable(mo: string) {\n    let [form1, form2, form3] = this.handleExplicitForm(this.getForms());\n    this.attributes.setInherited('form', form1);\n    let OPTABLE = (this.constructor as typeof MmlMo).OPTABLE;\n    let def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];\n    if (def) {\n      if (this.getProperty('texClass') === undefined) {\n        this.texClass = def[2];\n      }\n      for (const name of Object.keys(def[3] || {})) {\n        this.attributes.setInherited(name, def[3][name]);\n      }\n      this.lspace = (def[0] + 1) / 18;\n      this.rspace = (def[1] + 1) / 18;\n    } else {\n      let range = getRange(mo);\n      if (range) {\n        if (this.getProperty('texClass') === undefined) {\n          this.texClass = range[2];\n        }\n        const spacing = (this.constructor as typeof MmlMo).MMLSPACING[range[2]];\n        this.lspace = (spacing[0] + 1) / 18;\n        this.rspace = (spacing[1] + 1) / 18;\n      }\n    }\n  }\n\n  /**\n   * @return {[string, string, string]}  The list of form attribute values in the\n   *                                     order they should be tested, based on the\n   *                                     position of the element in its parent.\n   */\n  public getForms(): [string, string, string] {\n    let core: MmlNode = this;\n    let parent = this.parent;\n    let Parent = this.Parent;\n    while (Parent && Parent.isEmbellished) {\n      core = parent;\n      parent = Parent.parent;\n      Parent = Parent.Parent;\n    }\n    if (parent && parent.isKind('mrow') && (parent as MmlMrow).nonSpaceLength() !== 1) {\n      if ((parent as MmlMrow).firstNonSpace() === core) {\n        return ['prefix', 'infix', 'postfix'];\n      }\n      if ((parent as MmlMrow).lastNonSpace() === core) {\n        return ['postfix', 'infix', 'prefix'];\n      }\n    }\n    return ['infix', 'prefix', 'postfix'];\n  }\n\n  /**\n   * @param {string[]} forms     The three forms in the default order they are to be tested\n   * @return {string[]}          The forms in the new order, if there is an explicit form attribute\n   */\n  protected handleExplicitForm(forms: string[]): string[] {\n    if (this.attributes.isSet('form')) {\n      const form = this.attributes.get('form') as string;\n      forms = [form].concat(forms.filter(name => (name !== form)));\n    }\n    return forms;\n  }\n\n  /**\n   * Mark the mo as a pseudoscript if it is one.  True means it is,\n   *   false means it is a pseudo-script character, but in an msup (so needs a variant form)\n   *\n   * @param {string} mo   The test of the mo element\n   */\n  protected checkPseudoScripts(mo: string) {\n    const PSEUDOSCRIPTS = (this.constructor as typeof MmlMo).pseudoScripts;\n    if (!mo.match(PSEUDOSCRIPTS)) return;\n    const parent = this.coreParent().Parent;\n    const isPseudo = !parent || !(parent.isKind('msubsup') && !parent.isKind('msub'));\n    this.setProperty('pseudoscript', isPseudo);\n    if (isPseudo) {\n      this.attributes.setInherited('lspace', 0);\n      this.attributes.setInherited('rspace', 0);\n    }\n  }\n\n  /**\n   * Determine whether the mo consists of primes, and remap them if so.\n   *\n   * @param {string} mo   The test of the mo element\n   */\n  protected checkPrimes(mo: string) {\n    const PRIMES = (this.constructor as typeof MmlMo).primes;\n    if (!mo.match(PRIMES)) return;\n    const REMAP = (this.constructor as typeof MmlMo).remapPrimes;\n    const primes = unicodeString(unicodeChars(mo).map(c => REMAP[c]));\n    this.setProperty('primes', primes);\n  }\n\n  /**\n   * Determine whether the mo is a mathaccent character\n   *\n   * @param {string} mo   The test of the mo element\n   */\n  protected checkMathAccent(mo: string) {\n    const parent = this.Parent;\n    if (this.getProperty('mathaccent') !== undefined || !parent || !parent.isKind('munderover')) return;\n    const base = parent.childNodes[0] as MmlNode;\n    if (base.isEmbellished && base.coreMO() === this) return;\n    const MATHACCENT = (this.constructor as typeof MmlMo).mathaccents;\n    if (mo.match(MATHACCENT)) {\n      this.setProperty('mathaccent', true);\n    }\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4105, "column": 0}, "map": {"version":3,"file":"Factory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/Tree/Factory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The generic Factory class for creating arbitrary objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\n/*****************************************************************/\n/**\n * The Factory node interfaces (one for the node instance, one for the node class)\n */\n\nexport interface FactoryNode {\n  readonly kind: string;\n}\n\n/**\n * @template N  The Node type being created by the factory\n */\nexport interface FactoryNodeClass<N extends FactoryNode> {\n  /**\n   * @param {Factory<N, FactoryNodeClass<N>>} factory  The factory for creating more nodes\n   * @param {any[]} args  Any additional arguments needed by the node\n   * @return {N}  The newly created node\n   */\n  new(factory: Factory<N, FactoryNodeClass<N>>, ...args: any[]): N;\n}\n\n/*****************************************************************/\n/**\n * The Factory interface\n *\n * Factory<N, C> takes a node type N and a node class C, which give\n * the interfaces for the node instance and the node constructors. We\n * need both for two reasons: first, you can't use typeof N to get C,\n * since N is a type not an object, and if N has static members, we\n * may want to access them from the results of getNodeClass(kind)\n * (this is done in MmlNodes, for example).\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\nexport interface Factory<N extends FactoryNode, C extends FactoryNodeClass<N>> {\n  /**\n   * @param {string} kind  The kind of node to create\n   * @return {N}  The newly created node of the given kind\n   */\n  create(kind: string): N;\n\n  /**\n   * Defines a class for a given node kind\n   *\n   * @param {string} kind  The kind whose class is being defined\n   * @param {C} nodeClass  The class for the given kind\n   */\n  setNodeClass(kind: string, nodeClass: C): void;\n\n  /**\n   * @param {string} kind  The kind of node whose class is to be returned\n   * @return {C}  The class object for the given kind\n   */\n  getNodeClass(kind: string): C;\n\n  /**\n   * @param {string} kind  The kind whose definition is to be deleted\n   */\n  deleteNodeClass(kind: string): void;\n\n  /**\n   * @param {N} node  The node to test if it is of a given kind\n   * @param {string} kind  The kind to test for\n   * @return {boolean}  True if the node is of the given kind, false otherwise\n   */\n  nodeIsKind(node: N, kind: string): boolean;\n\n  /**\n   * @return {string[]}  The names of all the available kinds of nodes\n   */\n  getKinds(): string[];\n}\n\n\n/*****************************************************************/\n/**\n * The generic AbstractFactoryClass interface\n *   (needed for access to defaultNodes via the constructor)\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\ninterface AbstractFactoryClass<N extends FactoryNode, C extends FactoryNodeClass<N>> extends Function {\n  defaultNodes: {[kind: string]: C};\n}\n\n\n/*****************************************************************/\n/**\n * The generic AbstractFactory class\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\nexport abstract class AbstractFactory<N extends FactoryNode, C extends FactoryNodeClass<N>> implements Factory<N, C> {\n\n  /**\n   * The default collection of objects to use for the node map\n   */\n  public static defaultNodes = {};\n\n  /**\n   * The default kind\n   */\n  public defaultKind = 'unknown';\n\n  /**\n   * The map of node kinds to node classes\n   */\n  protected nodeMap: Map<string, C> = new Map();\n\n  /**\n   * An object containing functions for creating the various node kinds\n   */\n  protected node: {[kind: string]: (...args: any[]) => N} = {};\n\n  /**\n   * @override\n   */\n  constructor(nodes: {[kind: string]: C} = null) {\n    if (nodes === null) {\n      nodes = (this.constructor as AbstractFactoryClass<N, C>).defaultNodes;\n    }\n    for (const kind of Object.keys(nodes)) {\n      this.setNodeClass(kind, nodes[kind]);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public create(kind: string, ...args: any[]) {\n    return (this.node[kind] || this.node[this.defaultKind])(...args);\n  }\n\n  /**\n   * @override\n   */\n  public setNodeClass(kind: string, nodeClass: C) {\n    this.nodeMap.set(kind, nodeClass);\n    let THIS = this;\n    let KIND = this.nodeMap.get(kind);\n    this.node[kind] = (...args: any[]) => {\n      return new KIND(THIS, ...args);\n    };\n  }\n  /**\n   * @override\n   */\n  public getNodeClass(kind: string): C {\n    return this.nodeMap.get(kind);\n  }\n\n  /**\n   * @override\n   */\n  public deleteNodeClass(kind: string) {\n    this.nodeMap.delete(kind);\n    delete this.node[kind];\n  }\n\n  /**\n   * @override\n   */\n  public nodeIsKind(node: N, kind: string) {\n    return (node instanceof this.getNodeClass(kind));\n  }\n\n  /**\n   * @override\n   */\n  public getKinds() {\n    return Array.from(this.nodeMap.keys());\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4225, "column": 0}, "map": {"version":3,"file":"OutputJax.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/OutputJax.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for the OutputJax\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {userOptions, defaultOptions, OptionList} from '../util/Options.js';\nimport {MathDocument} from './MathDocument.js';\nimport {MathItem} from './MathItem.js';\nimport {DOMAdaptor} from '../core/DOMAdaptor.js';\nimport {FunctionList} from '../util/FunctionList.js';\n\n/*****************************************************************/\n/**\n *  The OutputJax interface\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface OutputJax<N, T, D> {\n  /**\n   * The name of this output jax class\n   */\n  name: string;\n\n  /**\n   * The options for the instance\n   */\n  options: OptionList;\n\n  /**\n   * Lists of post-filters to call after typesetting the math\n   */\n  postFilters: FunctionList;\n\n  /**\n   * The DOM adaptor for managing HTML elements\n   */\n  adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * @param {DOMAdaptor} adaptor The adaptor to use in this jax\n   */\n  setAdaptor(adaptor: DOMAdaptor<N, T, D>): void;\n\n  /**\n   * Do any initialization that depends on the document being set up\n   */\n  initialize(): void;\n\n  /**\n   * Reset any needed features of the output jax\n   *\n   * @param {any[]} args   The arguments needed by the reset operation\n   */\n  reset(...args: any[]): void;\n\n  /**\n   * Typset a given MathItem\n   *\n   * @param {MathItem} math          The MathItem to be typeset\n   * @param {MathDocument} document  The MathDocument in which the typesetting should occur\n   * @return {N}                     The DOM tree for the typeset math\n   */\n  typeset(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * Handle an escaped character (e.g., \\$ from the TeX input jax preventing it from being a delimiter)\n   *\n   * @param {MathItem} math          The MathItem to be escaped\n   * @param {MathDocument} document  The MathDocument in which the math occurs\n   * @return {N}                     The DOM tree for the escaped item\n   */\n  escaped(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * Get the metric information for all math in the given document\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  getMetrics(document: MathDocument<N, T, D>): void;\n\n  /**\n   * Produce the stylesheet needed for this output jax\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  styleSheet(document: MathDocument<N, T, D>): N;\n\n  /**\n   * Produce any page-specific elements needed for this output jax\n   *\n   * @param {MathDocument} document  The MathDocument being processed\n   */\n  pageElements(document: MathDocument<N, T, D>): N;\n}\n\n\n/*****************************************************************/\n/**\n *  The OutputJax abstract class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractOutputJax<N, T, D> implements OutputJax<N, T, D> {\n\n  /**\n   * The name for the output jax\n   */\n  public static NAME: string = 'generic';\n\n  /**\n   * The default options for the output jax\n   */\n  public static OPTIONS: OptionList = {};\n\n  /**\n   * The actual options supplied to the output jax\n   */\n  public options: OptionList;\n\n  /**\n   * Filters to run after the output is processed\n   */\n  public postFilters: FunctionList;\n\n  /**\n   * The MathDocument's DOMAdaptor\n   */\n  public adaptor: DOMAdaptor<N, T, D> = null;  // set by the handler\n\n  /**\n   * @param {OptionList} options  The options for this instance\n   */\n  constructor(options: OptionList = {}) {\n    let CLASS = this.constructor as typeof AbstractOutputJax;\n    this.options = userOptions(defaultOptions({}, CLASS.OPTIONS), options);\n    this.postFilters = new FunctionList();\n  }\n\n  /**\n   * @return {string}  The name for this output jax class\n   */\n  public get name(): string {\n    return (this.constructor as typeof AbstractOutputJax).NAME;\n  }\n\n  /**\n   * @override\n   */\n  public setAdaptor(adaptor: DOMAdaptor<N, T, D>) {\n    this.adaptor = adaptor;\n  }\n\n  /**\n   * @override\n   */\n  public initialize() {\n  }\n\n  /**\n   * @override\n   */\n  public reset(..._args: any[]) {\n  }\n\n  /**\n   * @override\n   */\n  public abstract typeset(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * @override\n   */\n  public abstract escaped(math: MathItem<N, T, D>, document?: MathDocument<N, T, D>): N;\n\n  /**\n   * @override\n   */\n  public getMetrics(_document: MathDocument<N, T, D>) {\n  }\n\n  /**\n   * @override\n   */\n  public styleSheet(_document: MathDocument<N, T, D>) {\n    return null as N;\n  }\n\n  /**\n   * @override\n   */\n  public pageElements(_document: MathDocument<N, T, D>) {\n    return null as N;\n  }\n\n  /**\n   * Execute a set of filters, passing them the MathItem and any needed data,\n   *  and return the (possibly modified) data\n   *\n   * @param {FunctionList} filters   The list of functions to be performed\n   * @param {MathItem} math          The math item that is being processed\n   * @param {MathDocument} document  The math document contaiing the math item\n   * @param {any} data               Whatever other data is needed\n   * @return {any}                   The (possibly modified) data\n   */\n  protected executeFilters(\n    filters: FunctionList, math: MathItem<N, T, D>,\n    document: MathDocument<N, T, D>, data: any\n  ): any {\n    let args = {math, document, data};\n    filters.execute(args);\n    return args.data;\n  }\n\n}\n"],"names":[],"mappings":";;;;;AAuBA,IAAA,6CAA2E;AAI3E,IAAA,uDAAqD;AAiGrD,IAAA,oBAAA;IA8BE,SAAA,kBAAY,OAAwB;QAAxB,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA,CAAA,CAAwB;QAAA;QAL7B,IAAA,CAAA,OAAO,GAAwB,IAAI,CAAC;QAMzC,IAAI,KAAK,GAAG,IAAI,CAAC,WAAuC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,aAAA,WAAW,EAAC,CAAA,GAAA,aAAA,cAAc,EAAC,CAAA,CAAE,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;QACvE,IAAI,CAAC,WAAW,GAAG,IAAI,kBAAA,YAAY,EAAE,CAAC;IACxC,CAAC;IAKD,OAAA,cAAA,CAAW,kBAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAQ,IAAI,CAAC,WAAwC,CAAC,IAAI,CAAC;QAC7D,CAAC;;;OAAA;IAKM,kBAAA,SAAA,CAAA,UAAU,GAAjB,SAAkB,OAA4B;QAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAKM,kBAAA,SAAA,CAAA,UAAU,GAAjB,YACA,CAAC;IAKM,kBAAA,SAAA,CAAA,KAAK,GAAZ;QAAa,IAAA,QAAA,EAAA,CAAe;YAAf,IAAA,KAAA,CAAe,EAAf,KAAA,UAAA,MAAe,EAAf,IAAe,CAAA;YAAf,KAAA,CAAA,GAAA,GAAA,SAAA,CAAA,GAAA,CAAe;;IAC5B,CAAC;IAeM,kBAAA,SAAA,CAAA,UAAU,GAAjB,SAAkB,SAAgC,GAClD,CAAC;IAKM,kBAAA,SAAA,CAAA,UAAU,GAAjB,SAAkB,SAAgC;QAChD,OAAO,IAAS,CAAC;IACnB,CAAC;IAKM,kBAAA,SAAA,CAAA,YAAY,GAAnB,SAAoB,SAAgC;QAClD,OAAO,IAAS,CAAC;IACnB,CAAC;IAYS,kBAAA,SAAA,CAAA,cAAc,GAAxB,SACE,OAAqB,EAAE,IAAuB,EAC9C,QAA+B,EAAE,IAAS;QAE1C,IAAI,IAAI,GAAG;YAAC,IAAI,EAAA,IAAA;YAAE,QAAQ,EAAA,QAAA;YAAE,IAAI,EAAA,IAAA;QAAA,CAAC,CAAC;QAClC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAxGa,kBAAA,IAAI,GAAW,SAAS,CAAC;IAKzB,kBAAA,OAAO,GAAe,CAAA,CAAE,CAAC;IAqGzC,OAAA,iBAAC;CAAA,AA/GD,IA+GC;AA/GqB,QAAA,iBAAA,GAAA,kBAAiB","ignoreList":[0]}},
    {"offset": {"line": 4280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4285, "column": 0}, "map": {"version":3,"file":"WrapperFactory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/Tree/WrapperFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Generic WrapperFactory class for creating Wrapper objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Node} from './Node.js';\nimport {Wrapper, WrapperClass} from './Wrapper.js';\nimport {Factory, AbstractFactory} from './Factory.js';\n\n/*****************************************************************/\n/**\n * The generic WrapperFactory class\n *\n * @template N  The Node type being created by the factory\n * @template W  The Wrapper type being produced (instance type)\n * @template C  The Wrapper class (for static values)\n */\nexport interface WrapperFactory<N extends Node, W extends Wrapper<N, W>, C extends WrapperClass<N, W>>\nextends Factory<W, C> {\n  /**\n   * @param {N} node  The node to be wrapped\n   * @param {any[]} args  Any additional arguments needed when wrapping the node\n   * @return {W}  The newly wrapped node\n   */\n  wrap(node: N, ...args: any[]): W;\n}\n\n/*****************************************************************/\n/**\n * The generic WrapperFactory class\n *\n * @template N  The Node type being created by the factory\n * @template W  The Wrapper type being produced (instance type)\n * @template C  The Wrapper class (for static values)\n */\nexport abstract class AbstractWrapperFactory<N extends Node, W extends Wrapper<N, W>, C extends WrapperClass<N, W>>\nextends AbstractFactory<W, C> implements WrapperFactory<N, W, C> {\n  /**\n   * @param {N} node  The node to be wrapped\n   * @param {any[]} args  Any additional arguments needed when wrapping the node\n   * @return {W}  The newly wrapped node\n   */\n  public wrap(node: N, ...args: any[]): W {\n    return this.create(node.kind, node, ...args);\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,uCAAsD;AA4BtD,IAAA,yBAAA,SAAA,MAAA;IACQ,UAAA,wBAAA,QAAqB;IAD7B,SAAA;;IAUA,CAAC;IAHQ,uBAAA,SAAA,CAAA,IAAI,GAAX,SAAY,IAAO;QAAE,IAAA,OAAA,EAAA,CAAc;YAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;YAAd,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;QACjC,OAAO,IAAI,CAAC,MAAM,CAAA,KAAA,CAAX,IAAI,EAAA,cAAA;YAAQ,IAAI,CAAC,IAAI;YAAE,IAAI;SAAA,EAAA,OAAK,IAAI,GAAA,QAAE;IAC/C,CAAC;IACH,OAAA,sBAAC;AAAD,CAAC,AAVD,CACQ,aAAA,eAAe,GAStB;AAVqB,QAAA,sBAAA,GAAA,uBAAsB","ignoreList":[0]}},
    {"offset": {"line": 4357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4362, "column": 0}, "map": {"version":3,"file":"Wrapper.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/Tree/Wrapper.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Generic Wrapper class for adding methods to a Node class for visitors\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Node} from './Node.js';\nimport {WrapperFactory} from './WrapperFactory.js';\n\n/*********************************************************/\n/**\n *  The Wrapper interface\n *\n *  It points to a Node object.  Subclasses add methods for the visitor to call.\n *\n * @template N  The Node type being wrapped\n * @template W  The Wrapper type being produced\n */\nexport interface Wrapper<N extends Node, W extends Wrapper<N, W>> {\n  node: N;\n  readonly kind: string;\n\n  /**\n   * @param {Node} node  A node to be wrapped\n   * @param {any[]} args  Any additional arguments needed when creating the wrapper\n   * @return {Wrapper}   The wrapped node\n   */\n  wrap(node: N, ...args: any[]): W;\n}\n\n/*********************************************************/\n/**\n *  The Wrapper class interface\n *\n * @template N  The Node type being wrapped\n * @template W  The Wrapper type being produced\n */\nexport interface WrapperClass<N extends Node, W extends Wrapper<N, W>> {\n  /**\n   * @param {WrapperFactory} factory  The factory used to create more wrappers\n   * @param {N} node  The node to be wrapped\n   * @param {any[]} args  Any additional arguments needed when creating the wrapper\n   * @return {W}  The wrapped node\n   */\n  new(factory: WrapperFactory<N, W, WrapperClass<N, W>>, node: N, ...args: any[]): W;\n}\n\n/*********************************************************/\n/**\n *  The abstract Wrapper class\n *\n * @template N  The Node type being created by the factory\n * @template W  The Wrapper type being produced\n */\nexport class AbstractWrapper<N extends Node, W extends Wrapper<N, W>> implements Wrapper<N, W> {\n  /**\n   * The Node object associated with this instance\n   */\n  public node: N;\n\n  /**\n   * The WrapperFactory to use to wrap child nodes, as needed\n   */\n  protected factory: WrapperFactory<N, W, WrapperClass<N, W>>;\n\n  /**\n   * The kind of this wrapper\n   */\n  get kind() {\n    return this.node.kind;\n  }\n\n  /**\n   * @param {WrapperFactory} factory  The WrapperFactory to use to wrap child nodes when needed\n   * @param {Node} node               The node to wrap\n   *\n   * @constructor\n   * @implements {Wrapper}\n   */\n  constructor(factory: WrapperFactory<N, W, WrapperClass<N, W>>, node: N) {\n    this.factory = factory;\n    this.node = node;\n  }\n\n  /**\n   * @override\n   */\n  public wrap(node: N) {\n    return this.factory.wrap(node);\n  }\n\n}\n"],"names":[],"mappings":";;;;;AAuEA,IAAA,kBAAA;IAyBE,SAAA,gBAAY,OAAiD,EAAE,IAAO;QACpE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAdD,OAAA,cAAA,CAAI,gBAAA,SAAA,EAAA,MAAI,EAAA;aAAR;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC;;;OAAA;IAiBM,gBAAA,SAAA,CAAA,IAAI,GAAX,SAAY,IAAO;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEH,OAAA,eAAC;AAAD,CAAC,AArCD,IAqCC;AArCY,QAAA,eAAA,GAAA,gBAAe","ignoreList":[0]}},
    {"offset": {"line": 4385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4390, "column": 0}, "map": {"version":3,"file":"math.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/math.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMath node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMath node class (subclass of AbstractMmlLayoutNode)\n */\n\nexport class MmlMath extends AbstractMmlLayoutNode {\n\n  /**\n   *  These are used as the defaults for any attributes marked INHERIT in other classes\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults,\n    mathvariant: 'normal',\n    mathsize: 'normal',\n    mathcolor: '', // Should be 'black', but allow it to inherit from surrounding text\n    mathbackground: 'transparent',\n    dir: 'ltr',\n    scriptlevel: 0,\n    displaystyle: false,\n    display: 'inline',\n    maxwidth: '',\n    overflow: 'linebreak',\n    altimg: '',\n    'altimg-width': '',\n    'altimg-height': '',\n    'altimg-valign': '',\n    alttext: '',\n    cdgroup: '',\n    scriptsizemultiplier: 1 / Math.sqrt(2),\n    scriptminsize: '8px',        // Should be 8pt, but that's too big\n    infixlinebreakstyle: 'before',\n    lineleading: '1ex',\n    linebreakmultchar: '\\u2062', // Invisible times\n    indentshift: 'auto',         // Use user configuration\n    indentalign: 'auto',\n    indenttarget: '',\n    indentalignfirst: 'indentalign',\n    indentshiftfirst: 'indentshift',\n    indentalignlast:  'indentalign',\n    indentshiftlast:  'indentshift'\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'math';\n  }\n\n  /**\n   * Linebreaking can occur in math nodes\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * The attributes of math nodes are inherited, so add them into the list.\n   * The displaystyle attribute comes from the display attribute if not given explicitly\n   * The scriptlevel comes from the scriptlevel attribute or default\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    if (this.attributes.get('mode') === 'display') {\n      this.attributes.setInherited('display', 'block');\n    }\n    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());\n    display = (!!this.attributes.get('displaystyle') ||\n               (!this.attributes.get('displaystyle') && this.attributes.get('display') === 'block'));\n    this.attributes.setInherited('displaystyle', display);\n    level = (this.attributes.get('scriptlevel') ||\n             (this.constructor as typeof MmlMath).defaults['scriptlevel']) as number;\n    super.setChildInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAmE;AAOnE,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAqB;IAAlD,SAAA;;IAwEA,CAAC;IAhCC,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,oBAAkB,EAAA;aAA7B;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IASS,QAAA,SAAA,CAAA,2BAA2B,GAArC,SAAsC,UAAyB,EAAE,OAAgB,EAAE,KAAa,EAAE,KAAc;QAC9G,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,SAAS,EAAE;YAC7C,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SAClD;QACD,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACzF,OAAO,GAAG,AAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,IACpC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC;QACjG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QACtD,KAAK,GAAG,AAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,IACjC,IAAI,CAAC,WAA8B,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAW,CAAC;QACjF,OAAA,SAAA,CAAM,2BAA2B,CAAA,IAAA,CAAA,IAAA,EAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IAjEa,QAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,qBAAqB,CAAC,QAAQ,GAAA;QACjC,WAAW,EAAE,QAAQ;QACrB,QAAQ,EAAE,QAAQ;QAClB,SAAS,EAAE,EAAE;QACb,cAAc,EAAE,aAAa;QAC7B,GAAG,EAAE,KAAK;QACV,WAAW,EAAE,CAAC;QACd,YAAY,EAAE,KAAK;QACnB,OAAO,EAAE,QAAQ;QACjB,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,WAAW;QACrB,MAAM,EAAE,EAAE;QACV,cAAc,EAAE,EAAE;QAClB,eAAe,EAAE,EAAE;QACnB,eAAe,EAAE,EAAE;QACnB,OAAO,EAAE,EAAE;QACX,OAAO,EAAE,EAAE;QACX,oBAAoB,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtC,aAAa,EAAE,KAAK;QACpB,mBAAmB,EAAE,QAAQ;QAC7B,WAAW,EAAE,KAAK;QAClB,iBAAiB,EAAE,QAAQ;QAC3B,WAAW,EAAE,MAAM;QACnB,WAAW,EAAE,MAAM;QACnB,YAAY,EAAE,EAAE;QAChB,gBAAgB,EAAE,aAAa;QAC/B,gBAAgB,EAAE,aAAa;QAC/B,eAAe,EAAG,aAAa;QAC/B,eAAe,EAAG,aAAa;IAAA,GAC/B;IAqCJ,OAAA,OAAC;CAAA,AAxED,CAA6B,aAAA,qBAAqB,GAwEjD;AAxEY,QAAA,OAAA,GAAA,QAAO","ignoreList":[0]}},
    {"offset": {"line": 4488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4493, "column": 0}, "map": {"version":3,"file":"mi.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mi.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMi node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlTokenNode, AbstractMmlNode, AttributeList, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMi node class (subclass of AbstractMmlTokenNode)\n */\n\nexport class MmlMi extends AbstractMmlTokenNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlTokenNode.defaults\n  };\n\n  /**\n   * Pattern for operator names\n   */\n  public static operatorName: RegExp = /^[a-z][a-z0-9]*$/i;\n  /**\n   * Pattern for single-character texts\n   */\n  public static singleCharacter: RegExp =\n    /^[\\uD800-\\uDBFF]?.[\\u0300-\\u036F\\u1AB0-\\u1ABE\\u1DC0-\\u1DFF\\u20D0-\\u20EF]*$/;\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mi';\n  }\n\n  /**\n   * Do the usual inheritance, then check the text length to see\n   *   if mathvariant should be normal or italic.\n   *\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList = {},\n                                display: boolean = false, level: number = 0, prime: boolean = false) {\n    super.setInheritedAttributes(attributes, display, level, prime);\n    let text = this.getText();\n    if (text.match(MmlMi.singleCharacter) && !attributes.mathvariant) {\n      this.attributes.setInherited('mathvariant', 'italic');\n    }\n  }\n\n  /**\n   * Mark multi-character texts as OP rather than ORD for spacing purposes\n   *\n   * @override\n   */\n  public setTeXclass(prev: AbstractMmlNode) {\n    this.getPrevClass(prev);\n    let name = this.getText();\n    if (name.length > 1 && name.match(MmlMi.operatorName) &&\n        this.attributes.get('mathvariant') === 'normal' &&\n        this.getProperty('autoOP') === undefined &&\n        this.getProperty('texClass') === undefined) {\n      this.texClass = TEXCLASS.OP;\n      this.setProperty('autoOP', true);\n    }\n    return this;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA6F;AAO7F,IAAA,QAAA,SAAA,MAAA;IAA2B,UAAA,OAAA,QAAoB;IAA/C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAgEC;QA1CW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IA0CpC,CAAC;IArCC,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAQM,MAAA,SAAA,CAAA,sBAAsB,GAA7B,SAA8B,UAA8B,EAC9B,OAAwB,EAAE,KAAiB,EAAE,KAAsB;QADnE,IAAA,eAAA,KAAA,GAAA;YAAA,aAAA,CAAA,CAA8B;QAAA;QAC9B,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA,KAAwB;QAAA;QAAE,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,CAAiB;QAAA;QAAE,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,KAAsB;QAAA;QAC/F,OAAA,SAAA,CAAM,sBAAsB,CAAA,IAAA,CAAA,IAAA,EAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAChE,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;YAChE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;SACvD;IACH,CAAC;IAOM,MAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,IAAqB;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,IACjD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,QAAQ,IAC/C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,SAAS,IACxC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,SAAS,EAAE;YAC9C,IAAI,CAAC,QAAQ,GAAG,aAAA,QAAQ,CAAC,EAAE,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;SAClC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAzDa,MAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,oBAAoB,CAAC,QAAQ,EAChC;IAKY,MAAA,YAAY,GAAW,mBAAmB,CAAC;IAI3C,MAAA,eAAe,GAC3B,4EAA4E,CAAC;IA+CjF,OAAA,KAAC;CAAA,AAhED,CAA2B,aAAA,oBAAoB,GAgE9C;AAhEY,QAAA,KAAA,GAAA,MAAK","ignoreList":[0]}},
    {"offset": {"line": 4577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4582, "column": 0}, "map": {"version":3,"file":"mn.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mn.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMn node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlTokenNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMn node class (subclass of AbstractMmlTokenNode)\n */\n\nexport class MmlMn extends AbstractMmlTokenNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlTokenNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mn';\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA6D;AAO7D,IAAA,QAAA,SAAA,MAAA;IAA2B,UAAA,OAAA,QAAoB;IAA/C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAqBC;QATW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IASpC,CAAC;IAJC,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAda,MAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,oBAAoB,CAAC,QAAQ,EAChC;IAcJ,OAAA,KAAC;CAAA,AArBD,CAA2B,aAAA,oBAAoB,GAqB9C;AArBY,QAAA,KAAA,GAAA,MAAK","ignoreList":[0]}},
    {"offset": {"line": 4636, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4641, "column": 0}, "map": {"version":3,"file":"ms.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/ms.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMs node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlTokenNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMs node class (subclass of AbstractMmlTokenNode)\n */\n\nexport class MmlMs extends AbstractMmlTokenNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlTokenNode.defaults,\n    lquote: '\"',\n    rquote: '\"'\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'ms';\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA6D;AAO7D,IAAA,QAAA,SAAA,MAAA;IAA2B,UAAA,OAAA,QAAoB;IAA/C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAuBC;QATW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IASpC,CAAC;IAJC,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAhBa,MAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,oBAAoB,CAAC,QAAQ,GAAA;QAChC,MAAM,EAAE,GAAG;QACX,MAAM,EAAE,GAAG;IAAA,GACX;IAcJ,OAAA,KAAC;CAAA,AAvBD,CAA2B,aAAA,oBAAoB,GAuB9C;AAvBY,QAAA,KAAA,GAAA,MAAK","ignoreList":[0]}},
    {"offset": {"line": 4698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4703, "column": 0}, "map": {"version":3,"file":"mtext.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mtext.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMtext node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlTokenNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMtext node class (subclass of AbstractMmlTokenNode)\n */\n\nexport class MmlMtext extends AbstractMmlTokenNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlTokenNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mtext';\n  }\n\n  /**\n   * <mtext> is always space-like according to the spec\n   * @override\n   */\n  public get isSpacelike() {\n    return true;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA6D;AAO7D,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAoB;IAAlD,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CA6BC;QAjBW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IAiBpC,CAAC;IAZC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,aAAW,EAAA;aAAtB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAtBa,SAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,oBAAoB,CAAC,QAAQ,EAChC;IAsBJ,OAAA,QAAC;CAAA,AA7BD,CAA8B,aAAA,oBAAoB,GA6BjD;AA7BY,QAAA,QAAA,GAAA,SAAQ","ignoreList":[0]}},
    {"offset": {"line": 4764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4769, "column": 0}, "map": {"version":3,"file":"mspace.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mspace.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMspace node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlTokenNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMspace node class (subclass of AbstractMmlTokenNode)\n */\n\nexport class MmlMspace extends AbstractMmlTokenNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlTokenNode.defaults,\n    width:  '0em',\n    height: '0ex',\n    depth:  '0ex',\n    linebreak: 'auto'\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.NONE;\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode): MmlNode {\n    return prev;\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mspace';\n  }\n\n  /**\n   * mspace can't have children\n   * @override\n   */\n  public get arity() {\n    return 0;\n  }\n\n  /**\n   * @override\n   */\n  public get isSpacelike() {\n    return true;\n  }\n\n  /**\n   * Only process linebreak if the space has no explicit dimensions (according to spec)\n   *\n   * @override\n   */\n  public get hasNewline() {\n    let attributes = this.attributes;\n    return (attributes.getExplicit('width') == null && attributes.getExplicit('height') == null &&\n            attributes.getExplicit('depth') == null && attributes.get('linebreak') === 'newline');\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAsE;AAOtE,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAoB;IAAnD,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CA0DC;QA1CW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,IAAI,CAAC;;IA0CrC,CAAC;IArCQ,UAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,IAAa;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAKD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC;QACX,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,aAAW,EAAA;aAAtB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAOD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,YAAU,EAAA;aAArB;YACE,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YACjC,OAAO,AAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,IAAI,IACnF,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,SAAS,CAAC,CAAC;QAChG,CAAC;;;OAAA;IAnDa,UAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,oBAAoB,CAAC,QAAQ,GAAA;QAChC,KAAK,EAAG,KAAK;QACb,MAAM,EAAE,KAAK;QACb,KAAK,EAAG,KAAK;QACb,SAAS,EAAE,MAAM;IAAA,GACjB;IA+CJ,OAAA,SAAC;CAAA,AA1DD,CAA+B,aAAA,oBAAoB,GA0DlD;AA1DY,QAAA,SAAA,GAAA,UAAS","ignoreList":[0]}},
    {"offset": {"line": 4853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4858, "column": 0}, "map": {"version":3,"file":"mpadded.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mpadded.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMpadded node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMpadded node class (subclass of AbstractMmlLayoutNode)\n */\n\nexport class MmlMpadded extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults,\n    width: '',\n    height: '',\n    depth: '',\n    lspace: 0,\n    voffset: 0\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mpadded';\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAoD;AAOpD,IAAA,aAAA,SAAA,MAAA;IAAgC,UAAA,YAAA,QAAqB;IAArD,SAAA;;IAqBA,CAAC;IAJC,OAAA,cAAA,CAAW,WAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,SAAS,CAAC;QACnB,CAAC;;;OAAA;IAda,WAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,qBAAqB,CAAC,QAAQ,GAAA;QACjC,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,CAAC;IAAA,GACV;IASJ,OAAA,UAAC;CAAA,AArBD,CAAgC,aAAA,qBAAqB,GAqBpD;AArBY,QAAA,UAAA,GAAA,WAAU","ignoreList":[0]}},
    {"offset": {"line": 4916, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4921, "column": 0}, "map": {"version":3,"file":"menclose.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/menclose.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMenclose node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlEnclose node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMenclose extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    notation: 'longdiv'\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * The menclose kind\n   * @override\n   */\n  public get kind() {\n    return 'menclose';\n  }\n\n  /**\n   * <menclose> has an inferred mrow\n   * @override\n   */\n  public get arity() {\n    return -1;\n  }\n\n  /**\n   * <menclose> is a linebreak container\n   * @override\n   */\n  public get linebreakContininer() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    prev = this.childNodes[0].setTeXclass(prev);\n    this.updateTeXclass(this.childNodes[0]);\n    return prev;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAiE;AAOjE,IAAA,cAAA,SAAA,MAAA;IAAiC,UAAA,aAAA,QAAe;IAAhD,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAgDC;QAnCW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IAmCpC,CAAC;IA7BC,OAAA,cAAA,CAAW,YAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,YAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,YAAA,SAAA,EAAA,qBAAmB,EAAA;aAA9B;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,YAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,IAAa;QAC9B,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,OAAO,IAAI,CAAC;IACd,CAAC;IAzCa,YAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,eAAe,CAAC,QAAQ,GAAA;QAC3B,QAAQ,EAAE,SAAS;IAAA,GACnB;IAwCJ,OAAA,WAAC;CAAA,AAhDD,CAAiC,aAAA,eAAe,GAgD/C;AAhDY,QAAA,WAAA,GAAA,YAAW","ignoreList":[0]}},
    {"offset": {"line": 4996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5001, "column": 0}, "map": {"version":3,"file":"mrow.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mrow.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMrow node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMrow node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMrow extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults\n  };\n\n  /**\n   * The index of the core child, when acting as an embellish mrow\n   */\n  protected _core: number = null;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mrow';\n  }\n\n  /**\n   * An mrow is space-like if all its children are.\n   *\n   * @override\n   */\n  public get isSpacelike() {\n    for (const child of this.childNodes) {\n      if (!child.isSpacelike) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * An mrow is embellished if it contains one embellished operator\n   * and any number of space-like nodes\n   *\n   * @override\n   */\n  public get isEmbellished() {\n    let embellished = false;\n    let i = 0;\n    for (const child of this.childNodes) {\n      if (child) {\n        if (child.isEmbellished) {\n          if (embellished) {\n            return false;\n          }\n          embellished = true;\n          this._core = i;\n        } else if (!child.isSpacelike) {\n          return false;\n        }\n      }\n      i++;\n    }\n    return embellished;\n  }\n\n  /**\n   * @override\n   */\n  public core(): MmlNode {\n    if (!this.isEmbellished || this._core == null) {\n      return this;\n    }\n    return this.childNodes[this._core];\n  }\n\n  /**\n   * @override\n   */\n  public coreMO(): MmlNode {\n    if (!this.isEmbellished || this._core == null) {\n      return this;\n    }\n    return this.childNodes[this._core].coreMO();\n  }\n\n  /**\n   * @return {number}  The number of non-spacelike child nodes\n   */\n  public nonSpaceLength(): number {\n    let n = 0;\n    for (const child of this.childNodes) {\n      if (child && !child.isSpacelike) {\n        n++;\n      }\n    }\n    return n;\n  }\n\n  /**\n   * @return {MmlNode|null}  The first non-space-like child node\n   */\n  public firstNonSpace(): MmlNode | null {\n    for (const child of this.childNodes) {\n      if (child && !child.isSpacelike) {\n        return child;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @return {MmlNode|null}  The last non-space-like child node\n   */\n  public lastNonSpace(): MmlNode | null {\n    let i = this.childNodes.length;\n    while (--i >= 0) {\n      let child = this.childNodes[i];\n      if (child && !child.isSpacelike) {\n        return child;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    if (this.getProperty('open') != null || this.getProperty('close') != null) {\n      //\n      // <mrow> looks like it came from \\left...\\right\n      //   so treat as subexpression (TeX class INNER).\n      // Use prev = null for the initial element in the\n      //   delimiters, since there is nothing previous to\n      //   it in what would be the TeX math list.\n      //\n      this.getPrevClass(prev);\n      prev = null;\n      for (const child of this.childNodes) {\n        prev = child.setTeXclass(prev);\n      }\n      if (this.texClass == null) {\n        this.texClass = TEXCLASS.INNER;\n      }\n    } else {\n      //\n      //  Normal <mrow>, so treat as though mrow is not there\n      //\n      for (const child of this.childNodes) {\n        prev = child.setTeXclass(prev);\n      }\n      if (this.childNodes[0]) {\n        this.updateTeXclass(this.childNodes[0]);\n      }\n    }\n    return prev;\n  }\n\n}\n\n\n/*****************************************************************/\n/**\n *  Implements the MmlInferredMrow node class (subclass of MmlMrow)\n */\n\nexport class MmlInferredMrow extends MmlMrow {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = MmlMrow.defaults;\n\n  /**\n   * @return {string}  The inferred-mrow kind\n   */\n  public get kind(): string {\n    return 'inferredMrow';\n  }\n\n  /**\n   * @return {boolean}  This is inferred\n   */\n  public get isInferred(): boolean {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public get notParent() {\n    return true;\n  }\n\n  /**\n   * Show the child nodes in brackets\n   */\n  public toString() {\n    return '[' + this.childNodes.join(',') + ']';\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5284, "column": 0}, "map": {"version":3,"file":"mfenced.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mfenced.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMfenced node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, TextNode, AbstractMmlNode, AttributeList, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMfenced node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMfenced extends AbstractMmlNode {\n\n  /**\n   * @overeride\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    open: '(',\n    close: ')',\n    separators: ','\n  };\n\n  /**\n   * TeX class is INNER\n   */\n  protected texclass = TEXCLASS.INNER;\n\n  /**\n   * Storage for \"fake\" nodes for the separators\n   */\n  public separators: MmlNode[] = [];\n  /**\n   * Storage for \"fake\" open node\n   */\n  public open: MmlNode = null;\n  /**\n   * Storage for \"fake\" close node\n   */\n  public close: MmlNode = null;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mfenced';\n  }\n\n  /**\n   * Include the fake nodes in the process, since they will be used\n   *  to produce the output.\n   *\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    if (this.open) {\n      prev = this.open.setTeXclass(prev);\n    }\n    if (this.childNodes[0]) {\n      prev = this.childNodes[0].setTeXclass(prev);\n    }\n    for (let i = 1, m = this.childNodes.length; i < m; i++) {\n      if (this.separators[i - 1]) {\n        prev = this.separators[i - 1].setTeXclass(prev);\n      }\n      if (this.childNodes[i]) {\n        prev = this.childNodes[i].setTeXclass(prev);\n      }\n    }\n    if (this.close) {\n      prev = this.close.setTeXclass(prev);\n    }\n    this.updateTeXclass(this.open);\n    return prev;\n  }\n\n  /**\n   * Create the fake nodes and do their inheritance\n   * Then do inheridence of usual children\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    this.addFakeNodes();\n    for (const child of [this.open, this.close].concat(this.separators)) {\n      if (child) {\n        child.setInheritedAttributes(attributes, display, level, prime);\n      }\n    }\n    super.setChildInheritedAttributes(attributes, display, level, prime);\n  }\n\n  /**\n   * Create <mo> elements for the open and close delimiters, and for the separators (if any)\n   */\n  protected addFakeNodes() {\n    let {open, close, separators} = this.attributes.getList('open', 'close', 'separators') as\n    {open: string, close: string, separators: string};\n    open = open.replace(/[ \\t\\n\\r]/g, '');\n    close = close.replace(/[ \\t\\n\\r]/g, '');\n    separators = separators.replace(/[ \\t\\n\\r]/g, '');\n    //\n    // Create open node\n    //\n    if (open) {\n      this.open = this.fakeNode(open, {fence: true, form: 'prefix'}, TEXCLASS.OPEN);\n    }\n    //\n    // Create nodes for the separators\n    //\n    if (separators) {\n      while (separators.length < this.childNodes.length - 1) {\n        separators += separators.charAt(separators.length - 1);\n      }\n      let i = 0;\n      for (const child of this.childNodes.slice(1)) {\n        if (child) {\n          this.separators.push(this.fakeNode(separators.charAt(i++)));\n        }\n      }\n    }\n    //\n    //  Create close node\n    //\n    if (close) {\n      this.close = this.fakeNode(close, {fence: true, form: 'postfix'}, TEXCLASS.CLOSE);\n    }\n  }\n\n  /**\n   * @param {string} c                 The character for the text of the node\n   * @param {PropertyList} properties  The attributes for the node\n   * @param {number} texClass          The TeX class for the node\n   * @return {MmlNode}                 The generated <mo> node\n   */\n  protected fakeNode(c: string, properties: PropertyList = {}, texClass: number = null): MmlNode {\n    let text = (this.factory.create('text') as TextNode).setText(c);\n    let node = this.factory.create('mo', properties, [text]);\n    node.texClass = texClass;\n    node.parent = this;\n    return node;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5470, "column": 0}, "map": {"version":3,"file":"mfrac.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mfrac.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMfrac node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlBaseNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMfrac node class (subclass of AbstractMmlBaseNode)\n */\n\nexport class MmlMfrac extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults,\n    linethickness: 'medium',\n    numalign: 'center',\n    denomalign: 'center',\n    bevelled: false\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mfrac';\n  }\n\n  /**\n   * <mfrac> requires two children\n   * @override\n   */\n  public get arity() {\n    return 2;\n  }\n\n  /**\n   * The children of <mfrac> can include line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * Update the children separately\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    for (const child of this.childNodes) {\n      child.setTeXclass(null);\n    }\n    return this;\n  }\n\n  /**\n   * Adjust the display level, and use prime style in denominator\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    if (!display || level > 0) {\n      level++;\n    }\n    this.childNodes[0].setInheritedAttributes(attributes, false, level, prime);\n    this.childNodes[1].setInheritedAttributes(attributes, false, level, true);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA0E;AAO1E,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAmB;IAAjD,SAAA;;IA4DA,CAAC;IA5CC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC;QACX,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,oBAAkB,EAAA;aAA7B;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAMM,SAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,IAAa;;QAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;;YACxB,IAAoB,IAAA,KAAA,SAAA,IAAI,CAAC,UAAU,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAhC,IAAM,KAAK,GAAA,GAAA,KAAA;gBACd,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACzB;;;;;;;;;;;;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAMS,SAAA,SAAA,CAAA,2BAA2B,GAArC,SAAsC,UAAyB,EAAE,OAAgB,EAAE,KAAa,EAAE,KAAc;QAC9G,IAAI,CAAC,OAAO,IAAI,KAAK,GAAG,CAAC,EAAE;YACzB,KAAK,EAAE,CAAC;SACT;QACD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC3E,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IArDa,SAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,mBAAmB,CAAC,QAAQ,GAAA;QAC/B,aAAa,EAAE,QAAQ;QACvB,QAAQ,EAAE,QAAQ;QAClB,UAAU,EAAE,QAAQ;QACpB,QAAQ,EAAE,KAAK;IAAA,GACf;IAiDJ,OAAA,QAAC;CAAA,AA5DD,CAA8B,aAAA,mBAAmB,GA4DhD;AA5DY,QAAA,QAAA,GAAA,SAAQ","ignoreList":[0]}},
    {"offset": {"line": 5583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5588, "column": 0}, "map": {"version":3,"file":"msqrt.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/msqrt.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMsqrt node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, AttributeList, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMsqrt node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMsqrt extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'msqrt';\n  }\n\n  /**\n   * <msqrt> has an inferred mrow\n   * @override\n   */\n  public get arity() {\n    return -1;\n  }\n\n  /**\n   * <msqrt> can contain line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    this.childNodes[0].setTeXclass(null);\n    return this;\n  }\n\n  /**\n   * The contents of sqrt are in TeX prime style.\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, _prime: boolean) {\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, true);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAgF;AAOhF,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAe;IAA7C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAuDC;QA3CW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IA2CpC,CAAC;IAtCC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,oBAAkB,EAAA;aAA7B;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,SAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,IAAa;QAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;IAOS,SAAA,SAAA,CAAA,2BAA2B,GAArC,SAAsC,UAAyB,EAAE,OAAgB,EAAE,KAAa,EAAE,MAAe;QAC/G,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC9E,CAAC;IAhDa,SAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,eAAe,CAAC,QAAQ,EAC3B;IAgDJ,OAAA,QAAC;CAAA,AAvDD,CAA8B,aAAA,eAAe,GAuD5C;AAvDY,QAAA,QAAA,GAAA,SAAQ","ignoreList":[0]}},
    {"offset": {"line": 5664, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5669, "column": 0}, "map": {"version":3,"file":"mroot.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mroot.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMroot node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, AttributeList, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMroot node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMroot extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mroot';\n  }\n\n  /**\n   * <mroot> requires two children\n   * @override\n   */\n  public get arity() {\n    return 2;\n  }\n\n  /**\n   * Set the TeX class for the content of the root and the root separately.\n   * Return ourself as the previous item.\n   *\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    this.childNodes[0].setTeXclass(null);\n    this.childNodes[1].setTeXclass(null);\n    return this;\n  }\n\n  /**\n   * Set the children display/level/prime for the base and root.\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, true);\n    this.childNodes[1].setInheritedAttributes(attributes, false, level + 2, prime);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAgF;AAOhF,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAe;IAA7C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAoDC;QAxCW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IAwCpC,CAAC;IAnCC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC;QACX,CAAC;;;OAAA;IAQM,SAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,IAAa;QAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;IAOS,SAAA,SAAA,CAAA,2BAA2B,GAArC,SAAsC,UAAyB,EAAE,OAAgB,EAAE,KAAa,EAAE,KAAc;QAC9G,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC5E,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,UAAU,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;IACjF,CAAC;IA7Ca,SAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,eAAe,CAAC,QAAQ,EAC3B;IA6CJ,OAAA,QAAC;CAAA,AApDD,CAA8B,aAAA,eAAe,GAoD5C;AApDY,QAAA,QAAA,GAAA,SAAQ","ignoreList":[0]}},
    {"offset": {"line": 5740, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5745, "column": 0}, "map": {"version":3,"file":"msubsup.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/msubsup.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMsubsup, MmlMsub, and MmlMsup nodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMsubsup node class (subclass of AbstractMmlBaseNode)\n */\n\nexport class MmlMsubsup extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults,\n    subscriptshift: '',\n    superscriptshift: ''\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'msubsup';\n  }\n\n  /**\n   * <msubsup> requires three children\n   * @override\n   */\n  public get arity() {\n    return 3;\n  }\n\n  /**\n   * @return {number}  The position of the base element\n   */\n  public get base(): number {\n    return 0;\n  }\n\n  /**\n   * @return {number}  The position of the subscript (overridden in msup below)\n   */\n  public get sub(): number {\n    return 1;\n  }\n\n  /**\n   * @return {number}  The position of the superscript (overridden in msup below)\n   */\n  public get sup(): number {\n    return 2;\n  }\n\n  /**\n   * Super- and subscripts are not in displaymode, have scriptlevel increased, and prime style in subscripts.\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    let nodes = this.childNodes;\n    nodes[0].setInheritedAttributes(attributes, display, level, prime);\n    nodes[1].setInheritedAttributes(attributes, false, level + 1, prime || this.sub === 1);\n    if (!nodes[2]) {\n      return;\n    }\n    nodes[2].setInheritedAttributes(attributes, false, level + 1, prime || this.sub === 2);\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMsub node class (subclass of MmlMsubsup)\n */\n\nexport class MmlMsub extends MmlMsubsup {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...MmlMsubsup.defaults\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'msub';\n  }\n\n  /**\n   * <msub> only gets two children\n   * @override\n   */\n  public get arity() {\n    return 2;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMsup node class (subclass of MmlMsubsup)\n */\n\nexport class MmlMsup extends MmlMsubsup {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...MmlMsubsup.defaults\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'msup';\n  }\n\n  /**\n   * <msup> only gets two children\n   * @override\n   */\n  get arity() {\n    return 2;\n  }\n\n  /**\n   * child 1 is superscript\n   * @override\n   */\n  get sup() {\n    return 1;\n  }\n\n  /**\n   * child 2 is null (no subscript)\n   * @override\n   */\n  get sub() {\n    return 2;\n  }\n\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5902, "column": 0}, "map": {"version":3,"file":"munderover.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/munderover.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMunderover node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMunderover node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMunderover extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults,\n    accent: false,\n    accentunder: false,\n    align: 'center'\n  };\n\n  /**\n   * The names of attributes controling accents for each child node (reversed for mover below)\n   */\n  protected static ACCENTS = ['', 'accentunder', 'accent'];\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'munderover';\n  }\n\n  /**\n   * <munderover> requires three children\n   * @override\n   */\n  public get arity() {\n    return 3;\n  }\n\n  /**\n   * @return {number}  The base is child 0\n   */\n  public get base(): number {\n    return 0;\n  }\n\n  /**\n   * @return {number}  Child 1 goes under (overridden by mover below)\n   */\n  public get under(): number {\n    return 1;\n  }\n\n  /**\n   * @return {number}  Child 2 goes over (overridden by mover below)\n   */\n  public get over(): number {\n    return 2;\n  }\n\n  /**\n   * <munderover> can contain line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * Base is in prime style if there is an over node\n   * Force scriptlevel change if converted to sub-sup by movablelimits on the base in non-display mode\n   * Adjust displaystyle, scriptlevel, and primestyle for the under/over nodes and check if accent\n   *   values have changed due to the inheritance (e.g., settings in operator dictionary)\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    let nodes = this.childNodes;\n    nodes[0].setInheritedAttributes(attributes, display, level, prime || !!nodes[this.over]);\n    let force = !!(!display && nodes[0].coreMO().attributes.get('movablelimits'));\n    let ACCENTS = (this.constructor as typeof MmlMunderover).ACCENTS;\n    nodes[1].setInheritedAttributes(attributes, false,\n                                    this.getScriptlevel(ACCENTS[1], force, level),\n                                    prime || this.under === 1);\n    this.setInheritedAccent(1, ACCENTS[1], display, level, prime, force);\n    if (!nodes[2]) {\n      return;\n    }\n    nodes[2].setInheritedAttributes(attributes, false,\n                                    this.getScriptlevel(ACCENTS[2], force, level),\n                                    prime || this.under === 2);\n    this.setInheritedAccent(2, ACCENTS[2], display, level, prime, force);\n  }\n\n  /**\n   * @param {string} accent  The name of the accent attribute to check (\"accent\" or \"accentunder\")\n   * @param {boolean} force  True if the scriptlevel change is to be forced to occur\n   * @param {number} level   The current scriptlevel\n   * @return {number}        The new script level based on the accent attribute\n   */\n  protected getScriptlevel(accent: string, force: boolean, level: number): number {\n    if (force || !this.attributes.get(accent)) {\n      level++;\n    }\n    return level;\n  }\n\n  /**\n   * Check if an under or over accent should cause the appropriate accent attribute to be inherited\n   *   on the munderover node, and if it is not the default, re-inherit the scriptlevel, since that\n   *   is affected by the accent attribute\n   *\n   * @param {number} n         The index of the node to check\n   * @param {string} accent    The name of the accent attribute to check (\"accent\" or \"accentunder\")\n   * @param {boolean} display  The displaystyle\n   * @param {number} level     The scriptlevel\n   * @param {number} prime     The TeX prime style\n   * @param {boolean} force    Whether to force the scriptlevel change\n   */\n  protected setInheritedAccent(n: number, accent: string, display: boolean, level: number,\n                               prime: boolean, force: boolean) {\n    let node = this.childNodes[n];\n    if (this.attributes.getExplicit(accent) == null && node.isEmbellished) {\n      let value = node.coreMO().attributes.get('accent');\n      this.attributes.setInherited(accent, value);\n      if (value !== this.attributes.getDefault(accent)) {\n        node.setInheritedAttributes({}, display, this.getScriptlevel(accent, force, level), prime);\n      }\n    }\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMunder node class (subclass of MmlMunderover)\n */\n\nexport class MmlMunder extends MmlMunderover {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n      ...MmlMunderover.defaults\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'munder';\n  }\n\n  /**\n   * <munder> has only two children\n   * @override\n   */\n  public get arity() {\n    return 2;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMover node class (subclass of MmlMunderover)\n */\n\nexport class MmlMover extends MmlMunderover {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n      ...MmlMunderover.defaults\n  };\n  /**\n   *  The first child is the over accent (second never occurs)\n   */\n  protected static ACCENTS = ['', 'accent', 'accentunder'];\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mover';\n  }\n\n  /**\n   * <mover> has only two children\n   * @override\n   */\n  get arity() {\n    return 2;\n  }\n\n  /**\n   * Child 1 is the over node\n   * @override\n   */\n  public get over() {\n    return 1;\n  }\n\n  /**\n   * Child 2 is the null (the under node)\n   * @override\n   */\n  public get under() {\n    return 2;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6092, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6097, "column": 0}, "map": {"version":3,"file":"mmultiscripts.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mmultiscripts.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMmultiscripts node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlNode, AttributeList} from '../MmlNode.js';\nimport {MmlMsubsup} from './msubsup.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMmultiscripts node class (subclass of MmlMsubsup)\n */\n\nexport class MmlMmultiscripts extends MmlMsubsup {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...MmlMsubsup.defaults\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mmultiscripts';\n  }\n\n  /**\n   * <mmultiscripts> requires at least one child (the base)\n   * @override\n   */\n  public get arity() {\n    return 1;\n  }\n\n  /**\n   * Push the inherited values to the base\n   * Make sure the number of pre- and post-scripts are even by adding mrows, if needed.\n   * For the scripts, use displaystyle = false, scriptlevel + 1, and\n   *   set the primestyle in the subscripts.\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);\n    let prescripts = false;\n    for (let i = 1, n = 0; i < this.childNodes.length; i++) {\n      let child = this.childNodes[i];\n      if (child.isKind('mprescripts')) {\n        if (!prescripts) {\n          prescripts = true;\n          if (i % 2 === 0) {\n            let mrow = this.factory.create('mrow');\n            this.childNodes.splice(i, 0, mrow);\n            mrow.parent = this;\n            i++;\n          }\n        }\n      } else {\n        let primestyle = prime || (n % 2 === 0);\n        child.setInheritedAttributes(attributes, false, level + 1, primestyle);\n        n++;\n      }\n    }\n    if (this.childNodes.length % 2 === (prescripts ? 1 : 0)) {\n      this.appendChild(this.factory.create('mrow'));\n      this.childNodes[this.childNodes.length - 1].setInheritedAttributes(attributes, false, level + 1, prime);\n    }\n  }\n\n  /**\n   * Check that mprescripts only occurs once, and that the number of pre- and post-scripts are even.\n   *\n   * @override\n   */\n  protected verifyChildren(options: PropertyList) {\n    let prescripts = false;\n    let fix = options['fixMmultiscripts'];\n    for (let i = 0; i < this.childNodes.length; i++) {\n      let child = this.childNodes[i];\n      if (child.isKind('mprescripts')) {\n        if (prescripts) {\n          child.mError(child.kind + ' can only appear once in ' + this.kind, options, true);\n        } else {\n          prescripts = true;\n          if (i % 2 === 0 && !fix) {\n            this.mError('There must be an equal number of prescripts of each type', options);\n          }\n        }\n      }\n    }\n    if (this.childNodes.length % 2 === (prescripts ? 1 : 0) && !fix) {\n      this.mError('There must be an equal number of scripts of each type', options);\n    }\n    super.verifyChildren(options);\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMprescripts node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMprescripts extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults\n  };\n\n  /**\n   * @return {string}  The mprescripts kind\n   */\n  public get kind(): string {\n    return 'mprescripts';\n  }\n\n  /**\n   * @return {number}  <mprescripts> can have no children\n   */\n  public get arity(): number {\n    return 0;\n  }\n\n  /**\n   * Check that parent is mmultiscripts\n   *\n   * @override\n   */\n  public verifyTree(options: PropertyList) {\n    super.verifyTree(options);\n    if (this.parent && !this.parent.isKind('mmultiscripts')) {\n      this.mError(this.kind + ' must be a child of mmultiscripts', options, true);\n    }\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlNone node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlNone extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults\n  };\n\n  /**\n   * @return {string}  The none kind\n   */\n  public get kind(): string {\n    return 'none';\n  }\n\n  /**\n   * @return {number}  <none> can have no children\n   */\n  public get arity(): number {\n    return 0;\n  }\n\n  /**\n   * Check that parent is mmultiscripts\n   *\n   * @override\n   */\n  public verifyTree(options: PropertyList) {\n    super.verifyTree(options);\n    if (this.parent && !this.parent.isKind('mmultiscripts')) {\n      this.mError(this.kind + ' must be a child of mmultiscripts', options, true);\n    }\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6267, "column": 0}, "map": {"version":3,"file":"mtable.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mtable.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMtable node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, AttributeList, TEXCLASS, indentAttributes} from '../MmlNode.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMtable node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMtable extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    align: 'axis',\n    rowalign: 'baseline',\n    columnalign: 'center',\n    groupalign: '{left}',\n    alignmentscope: true,\n    columnwidth: 'auto',\n    width: 'auto',\n    rowspacing: '1ex',\n    columnspacing: '.8em',\n    rowlines: 'none',\n    columnlines: 'none',\n    frame: 'none',\n    framespacing: '0.4em 0.5ex',\n    equalrows: false,\n    equalcolumns: false,\n    displaystyle: false,\n    side: 'right',\n    minlabelspacing: '0.8em'\n  };\n\n  /**\n   * Extra properties for this node\n   */\n  public properties = {\n    useHeight: true\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mtable';\n  }\n\n  /**\n   * Linebreaks are allowed in tables\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    //\n    // Force inheritance of shift and align values (since they are needed to output tables with labels)\n    //   but make sure they are not given explicitly on the <mtable> tag.\n    //\n    for (const name of indentAttributes) {\n      if (attributes[name]) {\n        this.attributes.setInherited(name, attributes[name][1]);\n      }\n      if (this.attributes.getExplicit(name) !== undefined) {\n        delete (this.attributes.getAllAttributes())[name];\n      }\n    }\n    super.setInheritedAttributes(attributes, display, level, prime);\n  }\n\n  /**\n   * Make sure all children are mtr or mlabeledtr nodes\n   * Inherit the table attributes, and set the display attribute based on the table's displaystyle attribute\n   * Reset the prime value to false\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, _prime: boolean) {\n    for (const child of this.childNodes) {\n      if (!child.isKind('mtr')) {\n        this.replaceChild(this.factory.create('mtr'), child)\n          .appendChild(child);\n      }\n    }\n    level = this.getProperty('scriptlevel') as number || level;\n    display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));\n    attributes = this.addInheritedAttributes(attributes, {\n      columnalign: this.attributes.get('columnalign'),\n      rowalign: 'center'\n    });\n    const cramped = this.attributes.getExplicit('data-cramped') as boolean;\n    const ralign = split(this.attributes.get('rowalign') as string);\n    for (const child of this.childNodes) {\n      attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];\n      child.setInheritedAttributes(attributes, display, level, !!cramped);\n    }\n  }\n\n  /**\n   * Check that children are mtr or mlabeledtr\n   *\n   * @override\n   */\n  protected verifyChildren(options: PropertyList) {\n    let mtr: MmlNode = null;      // all consecutive non-mtr elements are collected into one mtr\n    const factory = this.factory;\n    for (let i = 0; i < this.childNodes.length; i++) {\n      const child = this.childNodes[i];\n      if (child.isKind('mtr')) {\n        mtr = null;               // start a new row if there are non-mtr children\n      } else {\n        const isMtd = child.isKind('mtd');\n        //\n        //  If there is already an mtr for previous children, just remove the child\n        //    otherwise replace the child with a new mtr\n        //\n        if (mtr) {\n          this.removeChild(child);\n          i--;   // there is one fewer child now\n        } else {\n          mtr = this.replaceChild(factory.create('mtr'), child) as MmlNode;\n        }\n        mtr.appendChild(isMtd ? child : factory.create('mtd', {}, [child]));  // Move the child into the mtr\n        if (!options['fixMtables']) {\n          child.parent.removeChild(child);  // remove the child from its mtd or mtr\n          child.parent = this;              // ... and make it think it is a child of the table again\n          isMtd && mtr.appendChild(factory.create('mtd'));  // child will be replaced, so make sure there is an mtd\n          const merror = child.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options, isMtd);\n          mtr.childNodes[mtr.childNodes.length - 1].appendChild(merror);   // append the error to the mtd in the mtr\n        }\n      }\n    }\n    super.verifyChildren(options);\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    for (const child of this.childNodes) {\n      child.setTeXclass(null);\n    }\n    return this;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6491, "column": 0}, "map": {"version":3,"file":"mtr.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mtr.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMtr and MmlMlabeledtr nodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode, AttributeList} from '../MmlNode.js';\nimport {INHERIT} from '../Attributes.js';\nimport {split} from '../../../util/string.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMtr node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMtr extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    rowalign: INHERIT,\n    columnalign: INHERIT,\n    groupalign: INHERIT\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mtr';\n  }\n\n  /**\n   * <mtr> can contain linebreaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * Inherit the mtr attributes\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    for (const child of this.childNodes) {\n      if (!child.isKind('mtd')) {\n        this.replaceChild(this.factory.create('mtd'), child)\n            .appendChild(child);\n      }\n    }\n    const calign = split(this.attributes.get('columnalign') as string);\n    if (this.arity === 1) {\n      calign.unshift(this.parent.attributes.get('side') as string);\n    }\n    attributes = this.addInheritedAttributes(attributes, {\n      rowalign: this.attributes.get('rowalign'),\n      columnalign: 'center'\n    });\n    for (const child of this.childNodes) {\n      attributes.columnalign[1] = calign.shift() || attributes.columnalign[1];\n      child.setInheritedAttributes(attributes, display, level, prime);\n    }\n  }\n\n  /**\n   * Check that parent is mtable and children are mtd\n   *\n   * @override\n   */\n  protected verifyChildren(options: PropertyList) {\n    if (this.parent && !this.parent.isKind('mtable')) {\n      this.mError(this.kind + ' can only be a child of an mtable', options, true);\n      return;\n    }\n    for (const child of this.childNodes) {\n      if (!child.isKind('mtd')) {\n        let mtd = this.replaceChild(this.factory.create('mtd'), child) as MmlNode;\n        mtd.appendChild(child);\n        if (!options['fixMtables']) {\n          child.mError('Children of ' + this.kind + ' must be mtd', options);\n        }\n      }\n    }\n    super.verifyChildren(options);\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    for (const child of this.childNodes) {\n      child.setTeXclass(null);\n    }\n    return this;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMlabeledtr node class (subclass of MmlMtr)\n */\n\nexport class MmlMlabeledtr extends MmlMtr {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mlabeledtr';\n  }\n\n  /**\n   * <mlabeledtr> requires at least one child (the label)\n   * @override\n   */\n  get arity() {\n    return 1;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6689, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6694, "column": 0}, "map": {"version":3,"file":"mtd.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mtd.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMtd node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, MmlNode} from '../MmlNode.js';\nimport {INHERIT} from '../Attributes.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMtd node class (subclass of AbstractMmlBaseNode)\n */\n\nexport class MmlMtd extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults,\n    rowspan: 1,\n    columnspan: 1,\n    rowalign: INHERIT,\n    columnalign: INHERIT,\n    groupalign: INHERIT\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mtd';\n  }\n\n  /**\n   * <mtd> has an inferred mrow\n   * @overrride\n   */\n  public get arity() {\n    return -1;\n  }\n\n  /**\n   * <mtd> can contain line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n  /**\n   * Check that parent is mtr\n   *\n   * @override\n   */\n  protected verifyChildren(options: PropertyList) {\n    if (this.parent && !this.parent.isKind('mtr')) {\n      this.mError(this.kind + ' can only be a child of an mtr or mlabeledtr', options, true);\n      return;\n    }\n    super.verifyChildren(options);\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.getPrevClass(prev);\n    this.childNodes[0].setTeXclass(null);\n    return this;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA2D;AAC3D,IAAA,8CAAyC;AAOzC,IAAA,SAAA,SAAA,MAAA;IAA4B,UAAA,QAAA,QAAmB;IAA/C,SAAA;;IA2DA,CAAC;IA1CC,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,oBAAkB,EAAA;aAA7B;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAOS,OAAA,SAAA,CAAA,cAAc,GAAxB,SAAyB,OAAqB;QAC5C,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,8CAA8C,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YACvF,OAAO;SACR;QACD,OAAA,SAAA,CAAM,cAAc,CAAA,IAAA,CAAA,IAAA,EAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAKM,OAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,IAAa;QAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;IApDa,OAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,mBAAmB,CAAC,QAAQ,GAAA;QAC/B,OAAO,EAAE,CAAC;QACV,UAAU,EAAE,CAAC;QACb,QAAQ,EAAE,gBAAA,OAAO;QACjB,WAAW,EAAE,gBAAA,OAAO;QACpB,UAAU,EAAE,gBAAA,OAAO;IAAA,GACnB;IA+CJ,OAAA,MAAC;CAAA,AA3DD,CAA4B,aAAA,mBAAmB,GA2D9C;AA3DY,QAAA,MAAA,GAAA,OAAM","ignoreList":[0]}},
    {"offset": {"line": 6779, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6784, "column": 0}, "map": {"version":3,"file":"maction.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/maction.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMaction node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {MmlNode, AbstractMmlNode} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMaction node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMaction extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    actiontype: 'toggle',\n    selection: 1\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'maction';\n  }\n\n  /**\n   * At least one child\n   * @override\n   */\n  public get arity() {\n    return 1;\n  }\n\n  /**\n   * @return {MmlNode}  The selected child node (or an mrow if none selected)\n   */\n  public get selected(): MmlNode {\n    const selection = this.attributes.get('selection') as number;\n    const i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;\n    return this.childNodes[i] || this.factory.create('mrow');\n  }\n\n  /**\n   * @override\n   */\n  public get isEmbellished() {\n    return this.selected.isEmbellished;\n  }\n\n  /**\n   * @override\n   */\n  public get isSpacelike() {\n    return this.selected.isSpacelike;\n  }\n\n  /**\n   * @override\n   */\n  public core(): MmlNode {\n    return this.selected.core();\n  }\n\n  /**\n   * @override\n   */\n  public coreMO(): MmlNode {\n    return this.selected.coreMO();\n  }\n\n  /**\n   * @override\n   */\n  protected verifyAttributes(options: PropertyList) {\n    super.verifyAttributes(options);\n    if (this.attributes.get('actiontype') !== 'toggle' &&\n        this.attributes.getExplicit('selection') !== undefined) {\n      const attributes = this.attributes.getAllAttributes();\n      delete attributes.selection;\n    }\n  }\n\n  /**\n   * Get the TeX class from the selceted node\n   * For tooltips, set TeX classes within the tip as a separate math list\n   *\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    if (this.attributes.get('actiontype') === 'tooltip' && this.childNodes[1]) {\n      this.childNodes[1].setTeXclass(null);\n    }\n    let selected = this.selected;\n    prev = selected.setTeXclass(prev);\n    this.updateTeXclass(selected);\n    return prev;\n  }\n\n  /**\n   * Select the next child for a toggle action\n   */\n  public nextToggleSelection() {\n    let selection = Math.max(1, (this.attributes.get('selection') as number) + 1);\n    if (selection > this.childNodes.length) {\n      selection = 1;\n    }\n    this.attributes.set('selection', selection);\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6898, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6903, "column": 0}, "map": {"version":3,"file":"mglyph.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mglyph.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMglyph node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlTokenNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMglyph node class (subclass of AbstractMmlTokenNode)\n */\n\nexport class MmlMglyph extends AbstractMmlTokenNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlTokenNode.defaults,\n    alt: '',\n    src: '',\n    index: '',\n    width: 'auto',\n    height: 'auto',\n    valign: '0em'\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mglyph';\n  }\n\n  /**\n   * @override\n   */\n  public verifyAttributes(options: PropertyList) {\n    const {src, fontfamily, index} = this.attributes.getList('src', 'fontfamily', 'index');\n    if (src === '' && (fontfamily === '' || index === '')) {\n      this.mError('mglyph must have either src or fontfamily and index attributes', options, true);\n    } else {\n      super.verifyAttributes(options);\n    }\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA6D;AAO7D,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAoB;IAAnD,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAuCC;QArBW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IAqBpC,CAAC;IAhBC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,gBAAgB,GAAvB,SAAwB,OAAqB;QACrC,IAAA,KAA2B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,EAAE,OAAO,CAAC,EAA/E,GAAG,GAAA,GAAA,GAAA,EAAE,UAAU,GAAA,GAAA,UAAA,EAAE,KAAK,GAAA,GAAA,KAAyD,CAAC;QACvF,IAAI,GAAG,KAAK,EAAE,IAAI,CAAC,UAAU,KAAK,EAAE,IAAI,KAAK,KAAK,EAAE,CAAC,EAAE;YACrD,IAAI,CAAC,MAAM,CAAC,gEAAgE,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;SAC9F,MAAM;YACL,OAAA,SAAA,CAAM,gBAAgB,CAAA,IAAA,CAAA,IAAA,EAAC,OAAO,CAAC,CAAC;SACjC;IACH,CAAC;IAhCa,UAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,oBAAoB,CAAC,QAAQ,GAAA;QAChC,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,KAAK,EAAE,EAAE;QACT,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,KAAK;IAAA,GACb;IA0BJ,OAAA,SAAC;CAAA,AAvCD,CAA+B,aAAA,oBAAoB,GAuClD;AAvCY,QAAA,SAAA,GAAA,UAAS","ignoreList":[0]}},
    {"offset": {"line": 6972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6977, "column": 0}, "map": {"version":3,"file":"semantics.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/semantics.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlSemantics, MmlAnnotation, and MmlAnnotationXML nodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlNode, AbstractMmlBaseNode} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMroot node class (subclass of AbstractMmlBaseNode)\n */\n\nexport class MmlSemantics extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults,\n    definitionUrl: null,\n    encoding: null\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'semantics';\n  }\n\n  /**\n   * <semantics> requires at least one node\n   * @override\n   */\n  public get arity() {\n    return 1;\n  }\n\n  /**\n   * Ignore <semantics> when looking for partent node\n   * @override\n   */\n  public get notParent() {\n    return true;\n  }\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMroot node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlAnnotationXML extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    definitionUrl: null,\n    encoding: null,\n    cd: 'mathmlkeys',\n    name: '',\n    src: null\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'annotation-xml';\n  }\n\n  /**\n   * Children are XMLNodes, so don't bother inheritting to them\n   * @override\n   */\n  protected setChildInheritedAttributes() {}\n\n}\n\n/*****************************************************************/\n/**\n *  Implements the MmlMroot node class (subclass of MmlAnnotationXML)\n */\n\nexport class MmlAnnotation extends MmlAnnotationXML {\n\n  /**\n   * @override\n   */\n  public static defaults = {\n    ...MmlAnnotationXML.defaults\n  };\n\n  /**\n   * Extra properties for this node\n   */\n  public properties = {\n    isChars: true\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'annotation';\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAmE;AAOnE,IAAA,eAAA,SAAA,MAAA;IAAkC,UAAA,cAAA,QAAmB;IAArD,SAAA;;IAkCA,CAAC;IApBC,OAAA,cAAA,CAAW,aAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,WAAW,CAAC;QACrB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,aAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC;QACX,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,aAAA,SAAA,EAAA,WAAS,EAAA;aAApB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IA3Ba,aAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,mBAAmB,CAAC,QAAQ,GAAA;QAC/B,aAAa,EAAE,IAAI;QACnB,QAAQ,EAAE,IAAI;IAAA,GACd;IAyBJ,OAAA,YAAC;CAAA,AAlCD,CAAkC,aAAA,mBAAmB,GAkCpD;AAlCY,QAAA,YAAA,GAAA,aAAY;AAyCzB,IAAA,mBAAA,SAAA,MAAA;IAAsC,UAAA,kBAAA,QAAe;IAArD,SAAA;;IA2BA,CAAC;IAVC,OAAA,cAAA,CAAW,iBAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,gBAAgB,CAAC;QAC1B,CAAC;;;OAAA;IAMS,iBAAA,SAAA,CAAA,2BAA2B,GAArC,YAAyC,CAAC;IApB5B,iBAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,eAAe,CAAC,QAAQ,GAAA;QAC3B,aAAa,EAAE,IAAI;QACnB,QAAQ,EAAE,IAAI;QACd,EAAE,EAAE,YAAY;QAChB,IAAI,EAAE,EAAE;QACR,GAAG,EAAE,IAAI;IAAA,GACT;IAeJ,OAAA,gBAAC;CAAA,AA3BD,CAAsC,aAAA,eAAe,GA2BpD;AA3BY,QAAA,gBAAA,GAAA,iBAAgB;AAkC7B,IAAA,gBAAA,SAAA,MAAA;IAAmC,UAAA,eAAA,QAAgB;IAAnD,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAuBC;QAXQ,MAAA,UAAU,GAAG;YAClB,OAAO,EAAE,IAAI;SACd,CAAC;;IASJ,CAAC;IAJC,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,YAAY,CAAC;QACtB,CAAC;;;OAAA;IAhBa,cAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,gBAAgB,CAAC,QAAQ,EAC5B;IAgBJ,OAAA,aAAC;CAAA,AAvBD,CAAmC,gBAAgB,GAuBlD;AAvBY,QAAA,aAAA,GAAA,cAAa","ignoreList":[0]}},
    {"offset": {"line": 7089, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7094, "column": 0}, "map": {"version":3,"file":"TeXAtom.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/TeXAtom.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the TeXAtom node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MmlFactory} from '../MmlFactory.js';\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, MmlNode, TEXCLASS} from '../MmlNode.js';\nimport {MmlMo} from './mo.js';\n\n/*****************************************************************/\n/**\n *  Implements the TeXAtom node class (subclass of AbstractMmlBaseNode)\n */\n\nexport class TeXAtom extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'TeXAtom';\n  }\n\n  /**\n   * Inferred mrow with any number of children\n   * @override\n   */\n  public get arity() {\n    return -1;\n  }\n\n  /**\n   * This element is not considered a MathML container\n   * @override\n   */\n  public get notParent() {\n    return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;\n  }\n\n  /**\n   * @override\n   */\n  constructor(factory: MmlFactory, attributes: PropertyList, children: MmlNode[]) {\n    super(factory, attributes, children);\n    this.setProperty('texClass', this.texClass);   // needed for serialization to include the texClass\n  }\n\n  /**\n   * @override\n   */\n  public setTeXclass(prev: MmlNode) {\n    this.childNodes[0].setTeXclass(null);\n    return this.adjustTeXclass(prev);\n  }\n\n  /**\n   * (Replaced below by the version from the MmlMo node)\n   *\n   * @override\n   */\n  public adjustTeXclass(prev: MmlNode) {\n    return prev;\n  }\n\n}\n/**\n *  Use the method from the MmlMo class\n */\nTeXAtom.prototype.adjustTeXclass = MmlMo.prototype.adjustTeXclass;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,wCAAqE;AACrE,IAAA,6BAA8B;AAO9B,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAmB;IAwC9C,SAAA,QAAY,OAAmB,EAAE,UAAwB,EAAE,QAAmB;QAA9E,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC,IAAA,IAAA,CAErC;QA/BS,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;QA8BhC,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;;IAC9C,CAAC;IA1BD,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,SAAS,CAAC;QACnB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,WAAS,EAAA;aAApB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC;QAC1E,CAAC;;;OAAA;IAaM,QAAA,SAAA,CAAA,WAAW,GAAlB,SAAmB,IAAa;QAC9B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAOM,QAAA,SAAA,CAAA,cAAc,GAArB,SAAsB,IAAa;QACjC,OAAO,IAAI,CAAC;IACd,CAAC;IAvDa,QAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,mBAAmB,CAAC,QAAQ,EAC/B;IAuDJ,OAAA,OAAC;CAAA,AA9DD,CAA6B,aAAA,mBAAmB,GA8D/C;AA9DY,QAAA,OAAA,GAAA,QAAO;AAkEpB,OAAO,CAAC,SAAS,CAAC,cAAc,GAAG,QAAA,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7177, "column": 0}, "map": {"version":3,"file":"DOMAdaptor.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/DOMAdaptor.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The DOMAdaptor interface and abstract class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {OptionList} from '../util/Options.js';\n\n/**\n * The data for an attribute\n */\nexport type AttributeData = {\n  name: string,\n  value: string\n};\n\n/**\n * The data for an elements page-based bounding box\n */\nexport type PageBBox = {\n  left: number,\n  right: number,\n  top: number,\n  bottom: number\n};\n\n\n/*****************************************************************/\n/**\n *  The interface for the DOMAdaptor\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface DOMAdaptor<N, T, D> {\n  /**\n   * Document in which the nodes are to be created\n   */\n  document: D;\n\n  /**\n   * @param {string} text    The serialized document to be parsed\n   * @param {string} format  The format (e.g., 'text/html' or 'text/xhtml')\n   * @return {D}             The parsed document\n   */\n  parse(text: string, format?: string): D;\n\n  /**\n   * @param {string} kind      The tag name of the HTML node to be created\n   * @param {OptionList} def   The properties to set for the created node\n   * @param {(N|T)[]} children The child nodes for the created HTML node\n   * @param {string} ns        The namespace in which to create the node\n   * @return {N}               The generated HTML tree\n   */\n  node(kind: string, def?: OptionList, children?: (N | T)[], ns?: string): N;\n\n  /**\n   * @param {string} text   The text from which to create an HTML text node\n   * @return {T}            The generated text node with the given text\n   */\n  text(text: string): T;\n\n  /**\n   * @param {D} doc   The document whose head is to be obtained\n   * @return {N}      The document.head element\n   */\n  head(doc: D): N;\n\n  /**\n   * @param {D} doc   The document whose body is to be obtained\n   * @return {N}      The document.body element\n   */\n  body(doc: D): N;\n\n  /**\n   * @param {D} doc   The document whose documentElement is to be obtained\n   * @return {N}      The documentElement\n   */\n  root(doc: D): N;\n\n  /**\n   * @param {D} doc     The document whose doctype is to be obtained\n   * @return {string}   The DOCTYPE comment\n   */\n  doctype(doc: D): string;\n\n  /**\n   * @param {N} node        The node to search for tags\n   * @param {string} name   The name of the tag to search for\n   * @param {string} ns     The namespace to search in (or null for no namespace)\n   * @return {N[]}          The list of tags found\n   */\n  tags(node: N, name: string, ns?: string): N[];\n\n  /**\n   * Get a list of containers (to be searched for math).  These can be\n   *  specified by CSS selector, or as actual DOM elements or arrays of such.\n   *\n   * @param {(string | N | N[])[]} nodes  The array of items to make into a container list\n   * @param {D} document                  The document in which to search\n   * @return {N[]}                        The array of containers to search\n   */\n  getElements(nodes: (string | N | N[])[], document: D): N[];\n\n  /**\n   * Determine if a container node contains a given node somewhere in its DOM tree\n   *\n   * @param {N} container  The container to search\n   * @param {N|T} node     The node to look for\n   * @return {boolean}     True if the node is in the container's DOM tree\n   */\n  contains(container: N, node: N | T): boolean;\n\n  /**\n   * @param {N|T} node  The HTML node whose parent is to be obtained\n   * @return {N}        The parent node of the given one\n   */\n  parent(node: N | T): N;\n\n  /**\n   * @param {N} node     The HTML node to be appended to\n   * @param {N|T} child  The node or text to be appended\n   * @return {N|T}       The appended node\n   */\n  append(node: N, child: N | T): N | T;\n\n  /**\n   * @param {N|T} nchild  The node or text to be inserted\n   * @param {N|T} ochild  The node or text where the new child is to be added before it\n   */\n  insert(nchild: N | T, ochild: N | T): void;\n\n  /**\n   * @param {N|T} child  The node or text to be removed from its parent\n   * @return {N|T}       The removed node\n   */\n  remove(child: N | T): N | T;\n\n  /**\n   * @param {N|T} nnode  The node to replace with\n   * @param {N|T} onode  The child to be replaced\n   * @return {N|T}       The removed node\n   */\n  replace(nnode: N | T, onode: N | T): N | T;\n\n  /**\n   * @param {N} node   The HTML node to be cloned\n   * @return {N}       The copied node\n   */\n  clone(node: N): N;\n\n  /**\n   * @param {T} node    The HTML text node to be split\n   * @param {number} n  The index of the character where the split will occur\n   */\n  split(node: T, n: number): T;\n\n  /**\n   * @param {N|T} node   The HTML node whose sibling is to be obtained\n   * @return {N|T}       The node following the given one (or null)\n   */\n  next(node: N | T): N | T;\n\n  /**\n   * @param {N|T} node   The HTML node whose sibling is to be obtained\n   * @return {N|T}       The node preceding the given one (or null)\n   */\n  previous(node: N | T): N | T;\n\n  /**\n   * @param {N} node   The HTML node whose child is to be obtained\n   * @return {N|T}     The first child of the given node (or null)\n   */\n  firstChild(node: N): N | T;\n\n  /**\n   * @param {N} node   The HTML node whose child is to be obtained\n   * @return {N}       The last child of the given node (or null)\n   */\n  lastChild(node: N): N | T;\n\n  /**\n   * @param {N} node    The HTML node whose children are to be obtained\n   * @return {(N|T)[]}  Array of children for the given node (not a live list)\n   */\n  childNodes(node: N): (N | T)[];\n\n  /**\n   * @param {N} node    The HTML node whose child is to be obtained\n   * @param {number} i  The index of the child to return\n   * @return {N|T}      The i-th child node of the given node (or null)\n   */\n  childNode(node: N, i: number): N | T;\n\n  /**\n   * @param {N | T} node   The HTML node whose tag or node name is to be obtained\n   * @return {string}      The tag or node name of the given node\n   */\n  kind(node: N | T): string;\n\n  /**\n   * @param {N|T} node  The HTML node whose value is to be obtained\n   * @return {string}   The value of the given node\n   */\n  value(node: N | T): string;\n\n  /**\n   * @param {N} node    The HTML node whose text content is to be obtained\n   * @return {string}   The text content of the given node\n   */\n  textContent(node: N): string;\n\n  /**\n   * @param {N} node   The HTML node whose inner HTML string is to be obtained\n   * @return {string}  The serialized content of the node\n   */\n  innerHTML(node: N): string;\n\n  /**\n   * @param {N} node   The HTML node whose outer HTML string is to be obtained\n   * @return {string}  The serialized node and its content\n   */\n  outerHTML(node: N): string;\n\n  /**\n   * @param {N} node   The HTML node whose serialized string is to be obtained\n   * @return {string}  The serialized node and its content\n   */\n  serializeXML(node: N): string;\n\n  /**\n   * @param {N} node               The HTML node whose attribute is to be set\n   * @param {string|number} name   The name of the attribute to set\n   * @param {string} value         The new value of the attribute\n   * @param {string=} ns           The namespace to use for the attribute\n   */\n  setAttribute(node: N, name: string, value: string | number, ns?: string): void;\n\n  /**\n   * @param {N} node           The HTML element whose attributes are to be set\n   * @param {OptionList} def   The attributes to set on that node\n   */\n  setAttributes(node: N, def: OptionList): void;\n\n  /**\n   * @param {N} node        The HTML node whose attribute is to be obtained\n   * @param {string} name   The name of the attribute to get\n   * @return {string}       The value of the given attribute of the given node\n   */\n  getAttribute(node: N, name: string): string;\n\n  /**\n   * @param {N} node        The HTML node whose attribute is to be removed\n   * @param {string} name   The name of the attribute to remove\n   */\n  removeAttribute(node: N, name: string): void;\n\n  /**\n   * @param {N} node        The HTML node whose attribute is to be tested\n   * @param {string} name   The name of the attribute to test\n   * @return {boolean}      True of the node has the given attribute defined\n   */\n  hasAttribute(node: N, name: string): boolean;\n\n  /**\n   * @param {N} node           The HTML node whose attributes are to be returned\n   * @return {AttributeData[]} The list of attributes\n   */\n  allAttributes(node: N): AttributeData[];\n\n  /**\n   * @param {N} node        The HTML node whose class is to be augmented\n   * @param {string} name   The class to be added\n   */\n  addClass(node: N, name: string): void;\n\n  /**\n   * @param {N} node        The HTML node whose class is to be changed\n   * @param {string} name   The class to be removed\n   */\n  removeClass(node: N, name: string): void;\n\n  /**\n   * @param {N} node        The HTML node whose class is to be tested\n   * @param {string} name   The class to test\n   * @return {boolean}      True if the node has the given class\n   */\n  hasClass(node: N, name: string): boolean;\n\n  /**\n   * @param {N} node        The HTML node whose class list is needed\n   * @return {string[]}     An array of the class names for this node\n   */\n  allClasses(node: N): string[];\n\n  /**\n   * @param {N} node        The HTML node whose style is to be changed\n   * @param {string} name   The style to be set\n   * @param {string} value  The new value of the style\n   */\n  setStyle(node: N, name: string, value: string): void;\n\n  /**\n   * @param {N} node        The HTML node whose style is to be obtained\n   * @param {string} name   The style to be obtained\n   * @return {string}       The value of the style\n   */\n  getStyle(node: N, name: string): string;\n\n  /**\n   * @param {N} node        The HTML node whose styles are to be returned\n   * @return {string}       The cssText for the styles\n   */\n  allStyles(node: N): string;\n\n  /**\n   * @param {N} node           The stylesheet node where the rule will be added\n   * @param {string[]} rules   The rule to add at the beginning of the stylesheet\n   */\n  insertRules(node: N, rules: string[]): void;\n\n  /**\n   * @param {N} node        The HTML node whose font size is to be determined\n   * @return {number}       The font size (in pixels) of the node\n   */\n  fontSize(node: N): number;\n\n  /**\n   * @param {N} node        The HTML node whose font family is to be determined\n   * @return {string}       The font family\n   */\n  fontFamily(node: N): string;\n\n  /**\n   * @param {N} node            The HTML node whose dimensions are to be determined\n   * @param {number} em         The number of pixels in an em\n   * @param {boolean} local     True if local coordinates are to be used in SVG elements\n   * @return {[number, number]} The width and height (in ems) of the element\n   */\n  nodeSize(node: N, em?: number, local?: boolean): [number, number];\n\n\n  /**\n   * @param {N} node            The HTML node whose BBox is to be determined\n   * @return {PageBBox}         BBox as {left, right, top, bottom} position on the page (in pixels)\n   */\n  nodeBBox(node: N): PageBBox;\n}\n\n/*****************************************************************/\n/**\n *  Abstract DOMAdaptor class for creating HTML elements\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractDOMAdaptor<N, T, D> implements DOMAdaptor<N, T, D> {\n\n  /**\n   * The document in which the HTML nodes will be created\n   */\n  public document: D;\n\n  /**\n   * @param {D} document  The document in which the nodes will be created\n   * @constructor\n   */\n  constructor(document: D = null) {\n    this.document = document;\n  }\n\n  /**\n   * @override\n   */\n  public abstract parse(text: string, format?: string): D;\n\n  /**\n   * @override\n   */\n  public node(kind: string, def: OptionList = {}, children: (N | T)[] = [], ns?: string) {\n    const node = this.create(kind, ns);\n    this.setAttributes(node, def);\n    for (const child of children) {\n      this.append(node, child);\n    }\n    return node as N;\n  }\n\n  /**\n   * @param {string} kind  The type of the node to create\n   * @param {string} ns    The optional namespace in which to create the node\n   * @return {N}           The created node\n   */\n  protected abstract create(kind: string, ns?: string): N;\n\n  /**\n   * @override\n   */\n  public abstract text(text: string): T;\n\n  /**\n   * @param {N} node           The HTML element whose attributes are to be set\n   * @param {OptionList} def   The attributes to set on that node\n   */\n  public setAttributes(node: N, def: OptionList) {\n    if (def.style && typeof(def.style) !== 'string') {\n      for (let key of Object.keys(def.style)) {\n        this.setStyle(node, key.replace(/-([a-z])/g, (_m, c) => c.toUpperCase()), def.style[key]);\n      }\n    }\n    if (def.properties) {\n      for (let key of Object.keys(def.properties)) {\n        (node as OptionList)[key] = def.properties[key];\n      }\n    }\n    for (let key of Object.keys(def)) {\n      if ((key !== 'style' || typeof(def.style) === 'string') && key !== 'properties') {\n        this.setAttribute(node, key, def[key]);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  public abstract head(doc: D): N;\n\n  /**\n   * @override\n   */\n  public abstract body(doc: D): N;\n\n  /**\n   * @override\n   */\n  public abstract root(doc: D): N;\n\n  /**\n   * @override\n   */\n  public abstract doctype(doc: D): string;\n\n  /**\n   * @override\n   */\n  public abstract tags(node: N, name: string, ns?: string): N[];\n\n  /**\n   * @override\n   */\n  public abstract getElements(nodes: (string | N | N[])[], document: D): N[];\n\n  /**\n   * @override\n   */\n  public abstract contains(container: N, node: N | T): boolean;\n\n  /**\n   * @override\n   */\n  public abstract parent(node: N | T): N;\n\n  /**\n   * @override\n   */\n  public abstract append(node: N, child: N | T): N | T;\n\n  /**\n   * @override\n   */\n  public abstract insert(nchild: N | T, ochild: N | T): void;\n\n  /**\n   * @override\n   */\n  public abstract remove(child: N | T): N | T;\n\n  /**\n   * @override\n   */\n  public replace(nnode: N | T, onode: N | T) {\n    this.insert(nnode, onode);\n    this.remove(onode);\n    return onode;\n  }\n\n  /**\n   * @override\n   */\n  public abstract clone(node: N):  N;\n\n  /**\n   * @override\n   */\n  public abstract split(node: T, n: number): T;\n\n  /**\n   * @override\n   */\n  public abstract next(node: N | T): N | T;\n\n  /**\n   * @override\n   */\n  public abstract previous(node: N | T): N | T;\n\n  /**\n   * @override\n   */\n  public abstract firstChild(node: N): N | T;\n\n  /**\n   * @override\n   */\n  public abstract lastChild(node: N): N | T;\n\n  /**\n   * @override\n   */\n  public abstract childNodes(node: N): (N | T)[];\n\n  /**\n   * @override\n   */\n  public childNode(node: N, i: number) {\n    return this.childNodes(node)[i];\n  }\n\n  /**\n   * @override\n   */\n  public abstract kind(node: N | T): string;\n\n  /**\n   * @override\n   */\n  public abstract value(node: N | T): string;\n\n  /**\n   * @override\n   */\n  public abstract textContent(node: N): string;\n\n  /**\n   * @override\n   */\n  public abstract innerHTML(node: N): string;\n\n  /**\n   * @override\n   */\n  public abstract outerHTML(node: N): string;\n\n  /**\n   * @override\n   */\n  public abstract serializeXML(node: N): string;\n\n  /**\n   * @override\n   */\n  public abstract setAttribute(node: N, name: string, value: string, ns?: string): void;\n\n  /**\n   * @override\n   */\n  public abstract getAttribute(node: N, name: string): string;\n\n  /**\n   * @override\n   */\n  public abstract removeAttribute(node: N, name: string): void;\n\n  /**\n   * @override\n   */\n  public abstract hasAttribute(node: N, name: string): boolean;\n\n\n  /**\n   * @override\n   */\n  public abstract allAttributes(node: N): AttributeData[];\n\n  /**\n   * @override\n   */\n  public abstract addClass(node: N, name: string): void;\n\n  /**\n   * @override\n   */\n  public abstract removeClass(node: N, name: string): void;\n\n  /**\n   * @override\n   */\n  public abstract hasClass(node: N, name: string): boolean;\n\n  /**\n   * @override\n   */\n  public allClasses(node: N) {\n    const classes = this.getAttribute(node, 'class');\n    return (!classes ? [] as string[] :\n            classes.replace(/  +/g, ' ').replace(/^ /, '').replace(/ $/, '').split(/ /));\n  }\n\n  /**\n   * @override\n   */\n  public abstract setStyle(node: N, name: string, value: string): void;\n\n  /**\n   * @override\n   */\n  public abstract getStyle(node: N, name: string): string;\n\n  /**\n   * @override\n   */\n  public abstract allStyles(node: N): string;\n\n  /**\n   * @override\n   */\n  public abstract insertRules(node: N, rules: string[]): void;\n\n  /**\n   * @override\n   */\n  public abstract fontSize(node: N): number;\n\n  /**\n   * @override\n   */\n  public abstract fontFamily(node: N): string;\n\n  /**\n   * @override\n   */\n  public abstract nodeSize(node: N, em?: number, local?: boolean): [number, number];\n\n  /**\n   * @override\n   */\n  public abstract nodeBBox(node: N): PageBBox;\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7310, "column": 0}, "map": {"version":3,"file":"MathList.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MathList.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for MathList objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {LinkedList} from '../util/LinkedList.js';\nimport {MathItem} from './MathItem.js';\n\n/*****************************************************************/\n/**\n *  The MathList interface (extends LinkedList<MathItem>)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface MathList<N, T, D> extends LinkedList<MathItem<N, T, D>> {\n  /**\n   * Test if one math item is before the other in the document (a < b)\n   *\n   * @param {MathItem} a   The first MathItem\n   * @param {MathItem} b   The second MathItem\n   */\n  isBefore(a: MathItem<N, T, D>, b: MathItem<N, T, D>): boolean;\n}\n\n/*****************************************************************/\n/**\n *  The MathList abstract class (extends LinkedList<MathItem>)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractMathList<N, T, D> extends\nLinkedList<MathItem<N, T, D>> implements MathList<N, T, D> {\n\n  /**\n   * @override\n   */\n  public isBefore(a: MathItem<N, T, D>, b: MathItem<N, T, D>) {\n    return (a.start.i < b.start.i || (a.start.i === b.start.i && a.start.n < b.start.n));\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,mDAAiD;AA6BjD,IAAA,mBAAA,SAAA,MAAA;IACA,UAAA,kBAAA,QAA6B;IAD7B,SAAA;;IAUA,CAAC;IAJQ,iBAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,CAAoB,EAAE,CAAoB;QACxD,OAAO,AAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,AAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,CAAC;IAEH,OAAA,gBAAC;AAAD,CAAC,AAVD,CACA,gBAAA,UAAU,GAST;AAVqB,QAAA,gBAAA,GAAA,iBAAgB","ignoreList":[0]}},
    {"offset": {"line": 7347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7352, "column": 0}, "map": {"version":3,"file":"NodeFactory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/Tree/NodeFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  The generic NodeFactory class for creating Node objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {Node, PropertyList} from './Node.js';\nimport {Factory, FactoryNodeClass, AbstractFactory} from './Factory.js';\n\n/*****************************************************************/\n/**\n * The NodeFactory interface\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\nexport interface NodeFactory<N extends Node, C extends FactoryNodeClass<N>> extends Factory<N, C> {\n  /**\n   * @param {string} kind  The kind of node to create\n   * @param {PropertyList} properties  The list of initial properties for the node (if any)\n   * @param {N[]} children  The array of initial child nodes (if any)\n   * @return {N}  The newly created node of the given kind\n   */\n  create(kind: string, properties?: PropertyList, children?: N[]): N;\n}\n\n/*****************************************************************/\n/**\n * The generic NodeFactory class\n *\n * @template N  The node type created by the factory\n * @template C  The class of the node being constructed (for access to static properties)\n */\nexport abstract class AbstractNodeFactory<N extends Node, C extends FactoryNodeClass<N>> extends AbstractFactory<N, C> {\n  /**\n   * @override\n   */\n  public create(kind: string, properties: PropertyList = {}, children: N[] = []) {\n    return this.node[kind](properties, children);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,uCAAwE;AA0BxE,IAAA,sBAAA,SAAA,MAAA;IAAiG,UAAA,qBAAA,QAAqB;IAAtH,SAAA;;IAQA,CAAC;IAJQ,oBAAA,SAAA,CAAA,MAAM,GAAb,SAAc,IAAY,EAAE,UAA6B,EAAE,QAAkB;QAAjD,IAAA,eAAA,KAAA,GAAA;YAAA,aAAA,CAAA,CAA6B;QAAA;QAAE,IAAA,aAAA,KAAA,GAAA;YAAA,WAAA,EAAkB;QAAA;QAC3E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAEH,OAAA,mBAAC;AAAD,CAAC,AARD,CAAiG,aAAA,eAAe,GAQ/G;AARqB,QAAA,mBAAA,GAAA,oBAAmB","ignoreList":[0]}},
    {"offset": {"line": 7395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7400, "column": 0}, "map": {"version":3,"file":"mstyle.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mstyle.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMstyle node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, AttributeList} from '../MmlNode.js';\nimport {INHERIT} from '../Attributes.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMstyle node class (subclass of AbstractMmlLayoutNode)\n */\n\nexport class MmlMstyle extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults,\n    scriptlevel: INHERIT,\n    displaystyle: INHERIT,\n    scriptsizemultiplier: 1 / Math.sqrt(2),\n    scriptminsize: '8px',  // should be 8pt, but that is too large\n    mathbackground: INHERIT,\n    mathcolor: INHERIT,\n    dir: INHERIT,\n    infixlinebreakstyle: 'before'\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mstyle';\n  }\n\n  /**\n   * @override\n   */\n  public get notParent() {\n    return this.childNodes[0] && this.childNodes[0].childNodes.length === 1;\n  }\n\n  /**\n   * Handle scriptlevel changes, and add mstyle attributes to the ones being inherited.\n   *\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    let scriptlevel = this.attributes.getExplicit('scriptlevel');\n    if (scriptlevel != null) {\n      scriptlevel = scriptlevel.toString();\n      if (scriptlevel.match(/^\\s*[-+]/)) {\n        level += parseInt(scriptlevel);\n      } else {\n        level = parseInt(scriptlevel);\n      }\n      prime = false;  // style change resets tex prime style\n    }\n    let displaystyle = this.attributes.getExplicit('displaystyle') as boolean;\n    if (displaystyle != null) {\n      display = (displaystyle === true);\n      prime = false;  // style change resets tex prime style\n    }\n    const cramped = this.attributes.getExplicit('data-cramped') as boolean;  // manual control of tex prime style\n    if (cramped != null) {\n      prime = cramped;\n    }\n    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAmE;AACnE,IAAA,8CAAyC;AAOzC,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAqB;IAApD,SAAA;;IA4DA,CAAC;IAxCC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,WAAS,EAAA;aAApB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC;QAC1E,CAAC;;;OAAA;IAOS,UAAA,SAAA,CAAA,2BAA2B,GAArC,SAAsC,UAAyB,EAAE,OAAgB,EAAE,KAAa,EAAE,KAAc;QAC9G,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC7D,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,WAAW,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;YACrC,IAAI,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;gBACjC,KAAK,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC;aAChC,MAAM;gBACL,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC/B;YACD,KAAK,GAAG,KAAK,CAAC;SACf;QACD,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,cAAc,CAAY,CAAC;QAC1E,IAAI,YAAY,IAAI,IAAI,EAAE;YACxB,OAAO,GAAG,AAAC,YAAY,KAAK,IAAI,CAAC,CAAC;YAClC,KAAK,GAAG,KAAK,CAAC;SACf;QACD,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,cAAc,CAAY,CAAC;QACvE,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,KAAK,GAAG,OAAO,CAAC;SACjB;QACD,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAC/E,CAAC;IArDa,UAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,qBAAqB,CAAC,QAAQ,GAAA;QACjC,WAAW,EAAE,gBAAA,OAAO;QACpB,YAAY,EAAE,gBAAA,OAAO;QACrB,oBAAoB,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtC,aAAa,EAAE,KAAK;QACpB,cAAc,EAAE,gBAAA,OAAO;QACvB,SAAS,EAAE,gBAAA,OAAO;QAClB,GAAG,EAAE,gBAAA,OAAO;QACZ,mBAAmB,EAAE,QAAQ;IAAA,GAC7B;IA6CJ,OAAA,SAAC;CAAA,AA5DD,CAA+B,aAAA,qBAAqB,GA4DnD;AA5DY,QAAA,SAAA,GAAA,UAAS","ignoreList":[0]}},
    {"offset": {"line": 7492, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7497, "column": 0}, "map": {"version":3,"file":"merror.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/merror.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMerror node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMerror node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMerror extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'merror';\n  }\n\n  /**\n   * <merror> gets an inferred mrow\n   * @override\n   */\n  public get arity() {\n    return -1;\n  }\n\n  /**\n   * <merror> can contain line breaks\n   * @override\n   */\n  public get linebreakContainer() {\n    return true;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAwD;AAOxD,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAe;IAA9C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAqCC;QAzBW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IAyBpC,CAAC;IApBC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,oBAAkB,EAAA;aAA7B;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IA9Ba,UAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,eAAe,CAAC,QAAQ,EAC3B;IA8BJ,OAAA,SAAC;CAAA,AArCD,CAA+B,aAAA,eAAe,GAqC7C;AArCY,QAAA,SAAA,GAAA,UAAS","ignoreList":[0]}},
    {"offset": {"line": 7565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7570, "column": 0}, "map": {"version":3,"file":"mphantom.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mphantom.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMphantom node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, TEXCLASS} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMphantom node class (subclass of AbstractMmlLayoutNode)\n */\n\nexport class MmlMphantom extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults\n  };\n\n  /**\n   * TeX class is ORD\n   */\n  protected texclass = TEXCLASS.ORD;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mphantom';\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA8D;AAO9D,IAAA,cAAA,SAAA,MAAA;IAAiC,UAAA,aAAA,QAAqB;IAAtD,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAqBC;QATW,MAAA,QAAQ,GAAG,aAAA,QAAQ,CAAC,GAAG,CAAC;;IASpC,CAAC;IAJC,OAAA,cAAA,CAAW,YAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAda,YAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,qBAAqB,CAAC,QAAQ,EACjC;IAcJ,OAAA,WAAC;CAAA,AArBD,CAAiC,aAAA,qBAAqB,GAqBrD;AArBY,QAAA,WAAA,GAAA,YAAW","ignoreList":[0]}},
    {"offset": {"line": 7624, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7629, "column": 0}, "map": {"version":3,"file":"maligngroup.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/maligngroup.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMaligngroup node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlLayoutNode, AttributeList} from '../MmlNode.js';\nimport {INHERIT} from '../Attributes.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMaligngroup node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMaligngroup extends AbstractMmlLayoutNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlLayoutNode.defaults,\n    groupalign: INHERIT\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'maligngroup';\n  }\n\n  /**\n   * <maligngroup> is space-like\n   * @override\n   */\n  public get isSpacelike() {\n    return true;\n  }\n\n  /**\n   * Children can inherit from <maligngroup>\n   * @override\n   */\n  protected setChildInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());\n    super.setChildInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAmE;AACnE,IAAA,8CAAyC;AAOzC,IAAA,iBAAA,SAAA,MAAA;IAAoC,UAAA,gBAAA,QAAqB;IAAzD,SAAA;;IAkCA,CAAC;IArBC,OAAA,cAAA,CAAW,eAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,aAAa,CAAC;QACvB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,eAAA,SAAA,EAAA,aAAW,EAAA;aAAtB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAMS,eAAA,SAAA,CAAA,2BAA2B,GAArC,SAAsC,UAAyB,EAAE,OAAgB,EAAE,KAAa,EAAE,KAAc;QAC9G,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACzF,OAAA,SAAA,CAAM,2BAA2B,CAAA,IAAA,CAAA,IAAA,EAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IA3Ba,eAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,qBAAqB,CAAC,QAAQ,GAAA;QACjC,UAAU,EAAE,gBAAA,OAAO;IAAA,GACnB;IA0BJ,OAAA,cAAC;CAAA,AAlCD,CAAoC,aAAA,qBAAqB,GAkCxD;AAlCY,QAAA,cAAA,GAAA,eAAc","ignoreList":[0]}},
    {"offset": {"line": 7695, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7700, "column": 0}, "map": {"version":3,"file":"malignmark.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/malignmark.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlMalignmark node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlNode} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlMalignmark node class (subclass of AbstractMmlNode)\n */\n\nexport class MmlMalignmark extends AbstractMmlNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlNode.defaults,\n    edge: 'left'\n  };\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'malignmark';\n  }\n\n  /**\n   * No children allowed\n   * @override\n   */\n  public get arity() {\n    return 0;\n  }\n\n  /**\n   * <malignmark> is space-like\n   * @override\n   */\n  public get isSpacelike() {\n    return true;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAA8C;AAO9C,IAAA,gBAAA,SAAA,MAAA;IAAmC,UAAA,eAAA,QAAe;IAAlD,SAAA;;IAiCA,CAAC;IApBC,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,YAAY,CAAC;QACtB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC;QACX,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,aAAW,EAAA;aAAtB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IA1Ba,cAAA,QAAQ,GAAA,SAAA,SAAA,CAAA,GACjB,aAAA,eAAe,CAAC,QAAQ,GAAA;QAC3B,IAAI,EAAE,MAAM;IAAA,GACZ;IAyBJ,OAAA,aAAC;CAAA,AAjCD,CAAmC,aAAA,eAAe,GAiCjD;AAjCY,QAAA,aAAA,GAAA,cAAa","ignoreList":[0]}},
    {"offset": {"line": 7768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7773, "column": 0}, "map": {"version":3,"file":"mathchoice.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlNodes/mathchoice.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MathChoice node\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {PropertyList} from '../../Tree/Node.js';\nimport {AbstractMmlBaseNode, AttributeList} from '../MmlNode.js';\n\n/*****************************************************************/\n/**\n *  Implements the MathChoice node class (subclass of AbstractMmlBaseNode)\n *\n *  This is used by TeX's \\mathchoice macro, but removes itself\n *  during the setInheritedAttributes process\n */\n\nexport class MathChoice extends AbstractMmlBaseNode {\n\n  /**\n   * @override\n   */\n  public static defaults: PropertyList = {\n    ...AbstractMmlBaseNode.defaults\n  };\n\n  /**\n   *  @override\n   */\n  public get kind() {\n    return 'MathChoice';\n  }\n\n  /**\n   * 4 children (display, text, script, and scriptscript styles)\n   * @override\n   */\n  public get arity() {\n    return 4;\n  }\n\n  /**\n   * This element is not considered a MathML container\n   * @override\n   */\n  public get notParent() {\n    return true;\n  }\n\n  /**\n   * Replace the MathChoice node with the selected on based on the displaystyle and scriptlevel settings\n   * (so the MathChoice never ends up in a finished MmlNode tree)\n   *\n   * @override\n   */\n  public setInheritedAttributes(attributes: AttributeList, display: boolean, level: number, prime: boolean) {\n    const selection = (display ? 0 : Math.max(0, Math.min(level, 2)) + 1);\n    const child = this.childNodes[selection] || this.factory.create('mrow');\n    this.parent.replaceChild(child, this);\n    child.setInheritedAttributes(attributes, display, level, prime);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,wCAAiE;AAUjE,IAAA,aAAA,SAAA,MAAA;IAAgC,UAAA,YAAA,QAAmB;IAAnD,SAAA;;IA6CA,CAAC;IAjCC,OAAA,cAAA,CAAW,WAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,YAAY,CAAC;QACtB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,WAAA,SAAA,EAAA,OAAK,EAAA;aAAhB;YACE,OAAO,CAAC,CAAC;QACX,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAW,WAAA,SAAA,EAAA,WAAS,EAAA;aAApB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAQM,WAAA,SAAA,CAAA,sBAAsB,GAA7B,SAA8B,UAAyB,EAAE,OAAgB,EAAE,KAAa,EAAE,KAAc;QACtG,IAAM,SAAS,GAAG,AAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACtE,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACxE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACtC,KAAK,CAAC,sBAAsB,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAtCa,WAAA,QAAQ,GAAA,SAAA,CAAA,GACjB,aAAA,mBAAmB,CAAC,QAAQ,EAC/B;IAsCJ,OAAA,UAAC;CAAA,AA7CD,CAAgC,aAAA,mBAAmB,GA6ClD;AA7CY,QAAA,UAAA,GAAA,WAAU","ignoreList":[0]}},
    {"offset": {"line": 7845, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7850, "column": 0}, "map": {"version":3,"file":"MML.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MML.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  An object listing all the MathML node types\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MmlNodeClass, TextNode, XMLNode} from './MmlNode.js';\n\nimport {MmlMath}      from './MmlNodes/math.js';\n\nimport {MmlMi}        from './MmlNodes/mi.js';\nimport {MmlMn}        from './MmlNodes/mn.js';\nimport {MmlMo}        from './MmlNodes/mo.js';\nimport {MmlMtext}     from './MmlNodes/mtext.js';\nimport {MmlMspace}    from './MmlNodes/mspace.js';\nimport {MmlMs}        from './MmlNodes/ms.js';\n\nimport {MmlMrow, MmlInferredMrow} from './MmlNodes/mrow.js';\nimport {MmlMfrac}     from './MmlNodes/mfrac.js';\nimport {MmlMsqrt}     from './MmlNodes/msqrt.js';\nimport {MmlMroot}     from './MmlNodes/mroot.js';\nimport {MmlMstyle}    from './MmlNodes/mstyle.js';\nimport {MmlMerror}    from './MmlNodes/merror.js';\nimport {MmlMpadded}   from './MmlNodes/mpadded.js';\nimport {MmlMphantom}  from './MmlNodes/mphantom.js';\nimport {MmlMfenced}   from './MmlNodes/mfenced.js';\nimport {MmlMenclose}  from './MmlNodes/menclose.js';\n\nimport {MmlMaction}   from './MmlNodes/maction.js';\n\nimport {MmlMsubsup, MmlMsub, MmlMsup}       from './MmlNodes/msubsup.js';\nimport {MmlMunderover, MmlMunder, MmlMover} from './MmlNodes/munderover.js';\nimport {MmlMmultiscripts, MmlMprescripts, MmlNone} from './MmlNodes/mmultiscripts.js';\n\nimport {MmlMtable}      from './MmlNodes/mtable.js';\nimport {MmlMtr, MmlMlabeledtr} from './MmlNodes/mtr.js';\nimport {MmlMtd}         from './MmlNodes/mtd.js';\nimport {MmlMaligngroup} from './MmlNodes/maligngroup.js';\nimport {MmlMalignmark}  from './MmlNodes/malignmark.js';\n\nimport {MmlMglyph}      from './MmlNodes/mglyph.js';\n\nimport {MmlSemantics, MmlAnnotation, MmlAnnotationXML} from './MmlNodes/semantics.js';\n\nimport {TeXAtom} from './MmlNodes/TeXAtom.js';\nimport {MathChoice} from './MmlNodes/mathchoice.js';\n\n/************************************************************************/\n/**\n *  This object collects all the MathML node types together so that\n *  they can be used to seed an MmlNodeFactory.  One could copy this\n *  object to override existing classes with subclasses, or to add new\n *  classes as necessary.\n */\n\nexport let MML: {[kind: string]: MmlNodeClass} = {\n  [MmlMath.prototype.kind]: MmlMath,\n\n  [MmlMi.prototype.kind]: MmlMi,\n  [MmlMn.prototype.kind]: MmlMn,\n  [MmlMo.prototype.kind]: MmlMo,\n  [MmlMtext.prototype.kind]: MmlMtext,\n  [MmlMspace.prototype.kind]: MmlMspace,\n  [MmlMs.prototype.kind]: MmlMs,\n\n  [MmlMrow.prototype.kind]: MmlMrow,\n  [MmlInferredMrow.prototype.kind]: MmlInferredMrow,\n  [MmlMfrac.prototype.kind]: MmlMfrac,\n  [MmlMsqrt.prototype.kind]: MmlMsqrt,\n  [MmlMroot.prototype.kind]: MmlMroot,\n  [MmlMstyle.prototype.kind]: MmlMstyle,\n  [MmlMerror.prototype.kind]: MmlMerror,\n  [MmlMpadded.prototype.kind]: MmlMpadded,\n  [MmlMphantom.prototype.kind]: MmlMphantom,\n  [MmlMfenced.prototype.kind]: MmlMfenced,\n  [MmlMenclose.prototype.kind]: MmlMenclose,\n\n  [MmlMaction.prototype.kind]: MmlMaction,\n\n  [MmlMsub.prototype.kind]: MmlMsub,\n  [MmlMsup.prototype.kind]: MmlMsup,\n  [MmlMsubsup.prototype.kind]: MmlMsubsup,\n  [MmlMunder.prototype.kind]: MmlMunder,\n  [MmlMover.prototype.kind]: MmlMover,\n  [MmlMunderover.prototype.kind]: MmlMunderover,\n  [MmlMmultiscripts.prototype.kind]: MmlMmultiscripts,\n  [MmlMprescripts.prototype.kind]: MmlMprescripts,\n  [MmlNone.prototype.kind]: MmlNone,\n\n  [MmlMtable.prototype.kind]: MmlMtable,\n  [MmlMlabeledtr.prototype.kind]: MmlMlabeledtr,\n  [MmlMtr.prototype.kind]: MmlMtr,\n  [MmlMtd.prototype.kind]: MmlMtd,\n  [MmlMaligngroup.prototype.kind]: MmlMaligngroup,\n  [MmlMalignmark.prototype.kind]: MmlMalignmark,\n\n  [MmlMglyph.prototype.kind]: MmlMglyph,\n\n  [MmlSemantics.prototype.kind]: MmlSemantics,\n  [MmlAnnotation.prototype.kind]: MmlAnnotation,\n  [MmlAnnotationXML.prototype.kind]: MmlAnnotationXML,\n\n  [TeXAtom.prototype.kind]: TeXAtom,\n  [MathChoice.prototype.kind]: MathChoice,\n\n  [TextNode.prototype.kind]: TextNode,\n  [XMLNode.prototype.kind]: XMLNode\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7893, "column": 0}, "map": {"version":3,"file":"MmlFactory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MmlTree/MmlFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the MmlFactory to create Mml Nodes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractNodeFactory} from '../Tree/NodeFactory.js';\nimport {MmlNode, MmlNodeClass} from './MmlNode.js';\nimport {MML} from './MML.js';\n\n/*****************************************************************/\n/**\n *  Implements the MmlFactory (subclass of NodeFactory)\n */\n\nexport class MmlFactory extends AbstractNodeFactory<MmlNode, MmlNodeClass> {\n\n  /**\n   * The default node-creation functions\n   */\n  public static defaultNodes = MML;\n\n  /**\n   * @return {Object}  The list of node-creation functions (similar to the\n   *                   MML object from MathJax v2).\n   */\n  get MML(): Object {\n    return this.node;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,qDAA2D;AAE3D,IAAA,+BAA6B;AAO7B,IAAA,aAAA,SAAA,MAAA;IAAgC,UAAA,YAAA,QAA0C;IAA1E,SAAA;;IAeA,CAAC;IAJC,OAAA,cAAA,CAAI,WAAA,SAAA,EAAA,KAAG,EAAA;aAAP;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;;;OAAA;IARa,WAAA,YAAY,GAAG,SAAA,GAAG,CAAC;IAUnC,OAAA,UAAC;CAAA,AAfD,CAAgC,iBAAA,mBAAmB,GAelD;AAfY,QAAA,UAAA,GAAA,WAAU","ignoreList":[0]}},
    {"offset": {"line": 7936, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7941, "column": 0}, "map": {"version":3,"file":"MathDocument.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/MathDocument.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the interface and abstract class for MathDocument objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {userOptions, defaultOptions, OptionList, expandable} from '../util/Options.js';\nimport {InputJax, AbstractInputJax} from './InputJax.js';\nimport {OutputJax, AbstractOutputJax} from './OutputJax.js';\nimport {MathList, AbstractMathList} from './MathList.js';\nimport {MathItem, AbstractMathItem, STATE} from './MathItem.js';\nimport {MmlNode, TextNode} from './MmlTree/MmlNode.js';\nimport {MmlFactory} from '../core/MmlTree/MmlFactory.js';\nimport {DOMAdaptor} from '../core/DOMAdaptor.js';\nimport {BitField, BitFieldClass} from '../util/BitField.js';\n\nimport {PrioritizedList} from '../util/PrioritizedList.js';\n\n/*****************************************************************/\n\n/**\n * A function to call while rendering a document (usually calls a MathDocument method)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport type RenderDoc<N, T, D> = (document: MathDocument<N, T, D>) => boolean;\n\n/**\n * A function to call while rendering a MathItem (usually calls one of its methods)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport type RenderMath<N, T, D> = (math: MathItem<N, T, D>, document: MathDocument<N, T, D>) => boolean;\n\n/**\n * The data for an action to perform during rendering or conversion\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport type RenderData<N, T, D> = {\n  id: string,                           //  The name for the action\n  renderDoc: RenderDoc<N, T, D>,        //  The action to take during a render() call\n  renderMath: RenderMath<N, T, D>,      //  The action to take during a rerender() or convert() call\n  convert: boolean                      //  Whether the action is to be used during convert()\n};\n\n/**\n * The data used to define a render action in configurations and options objects\n *   (the key is used as the id, the number in the data below is the priority, and\n *    the remainind data is as described below; if no boolean is given, convert = true\n *    by default)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport type RenderAction<N, T, D> =\n  [number] |                                                     // id (i.e., key) is method name to use\n  [number, string] |                                             // string is method to call\n  [number, string, string] |                                     // the strings are methods names for doc and math\n  [number, RenderDoc<N, T, D>, RenderMath<N, T, D>] |            // explicit functions for doc and math\n  [number, boolean] |                                            // same as first above, with boolean for convert\n  [number, string, boolean] |                                    // same as second above, with boolean for convert\n  [number, string, string, boolean] |                            // same as third above, with boolean for convert\n  [number, RenderDoc<N, T, D>, RenderMath<N, T, D>, boolean];    // same as forth above, with boolean for convert\n\n/**\n * An object representing a collection of rendering actions (id's tied to priority-and-method data)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport type RenderActions<N, T, D> = {[id: string]: RenderAction<N, T, D>};\n\n/**\n * Implements a prioritized list of render actions.  Extensions can add actions to the list\n *   to make it easy to extend the normal typesetting and conversion operations.\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class RenderList<N, T, D> extends PrioritizedList<RenderData<N, T, D>> {\n\n  /**\n   * Creates a new RenderList from an initial list of rendering actions\n   *\n   * @param {RenderActions} actions The list of actions to take during render(), rerender(), and convert() calls\n   * @returns {RenderList}    The newly created prioritied list\n   */\n  public static create<N, T, D>(actions: RenderActions<N, T, D>): RenderList<N, T, D> {\n    const list = new this<N, T, D>();\n    for (const id of Object.keys(actions)) {\n      const [action, priority] = this.action<N, T, D>(id, actions[id]);\n      if (priority) {\n        list.add(action, priority);\n      }\n    }\n    return list;\n  }\n\n  /**\n   * Parses a RenderAction to produce the correspinding RenderData item\n   *  (e.g., turn method names into actual functions that call the method)\n   *\n   * @param {string} id               The id of the action\n   * @param {RenderAction} action     The RenderAction defining the action\n   * @returns {[RenderData,number]}   The corresponding RenderData definition for the action and its priority\n   */\n  public static action<N, T, D>(id: string, action: RenderAction<N, T, D>): [RenderData<N, T, D>, number] {\n    let renderDoc, renderMath;\n    let convert = true;\n    let priority = action[0];\n    if (action.length === 1 || typeof action[1] === 'boolean') {\n      action.length === 2 && (convert = action[1] as boolean);\n      [renderDoc, renderMath] = this.methodActions(id);\n    } else if (typeof action[1] === 'string') {\n      if (typeof action[2] === 'string') {\n        action.length === 4 && (convert = action[3] as boolean);\n        const [method1, method2] = action.slice(1) as [string, string];\n        [renderDoc, renderMath] = this.methodActions(method1, method2);\n      } else {\n        action.length === 3 && (convert = action[2] as boolean);\n        [renderDoc, renderMath] = this.methodActions(action[1] as string);\n      }\n    } else {\n      action.length === 4 && (convert = action[3] as boolean);\n      [renderDoc, renderMath] = action.slice(1) as [RenderDoc<N, T, D>, RenderMath<N, T, D>];\n    }\n    return [{id, renderDoc, renderMath, convert} as RenderData<N, T, D>, priority];\n  }\n\n  /**\n   * Produces the doc and math actions for the given method name(s)\n   *   (a blank name is a no-op)\n   *\n   * @param {string} method1    The method to use for the render() call\n   * @param {string} method1    The method to use for the rerender() and convert() calls\n   */\n  protected static methodActions(method1: string, method2: string = method1) {\n    return [\n      (document: any) => {method1 && document[method1](); return false; },\n      (math: any, document: any) => {method2 && math[method2](document); return false; }\n    ];\n  }\n\n  /**\n   * Perform the document-level rendering functions\n   *\n   * @param {MathDocument} document   The MathDocument whose methods are to be called\n   * @param {number=} start           The state at which to start rendering (default is UNPROCESSED)\n   */\n  public renderDoc(document: MathDocument<N, T, D>, start: number = STATE.UNPROCESSED) {\n    for (const item of this.items) {\n      if (item.priority >= start) {\n        if (item.item.renderDoc(document)) return;\n      }\n    }\n  }\n\n  /**\n   * Perform the MathItem-level rendering functions\n   *\n   * @param {MathItem} math           The MathItem whose methods are to be called\n   * @param {MathDocument} document   The MathDocument to pass to the MathItem methods\n   * @param {number=} start           The state at which to start rendering (default is UNPROCESSED)\n   */\n  public renderMath(math: MathItem<N, T, D>, document: MathDocument<N, T, D>, start: number = STATE.UNPROCESSED) {\n    for (const item of this.items) {\n      if (item.priority >= start) {\n        if (item.item.renderMath(math, document)) return;\n      }\n    }\n  }\n\n  /**\n   * Perform the MathItem-level conversion functions\n   *\n   * @param {MathItem} math           The MathItem whose methods are to be called\n   * @param {MathDocument} document   The MathDocument to pass to the MathItem methods\n   * @param {number=} end             The state at which to end rendering (default is LAST)\n   */\n  public renderConvert(math: MathItem<N, T, D>, document: MathDocument<N, T, D>, end: number = STATE.LAST) {\n    for (const item of this.items) {\n      if (item.priority > end) return;\n      if (item.item.convert) {\n        if (item.item.renderMath(math, document)) return;\n      }\n    }\n  }\n\n  /**\n   * Find an entry in the list with a given ID\n   *\n   * @param {string} id            The id to search for\n   * @returns {RenderData|null}   The data for the given id, if found, or null\n   */\n  public findID(id: string): RenderData<N, T, D> | null {\n    for (const item of this.items) {\n      if (item.item.id === id) {\n        return item.item;\n      }\n    }\n    return null;\n  }\n\n}\n\n/*****************************************************************/\n\n/**\n * The ways of specifying a container (a selector string, an actual node,\n * or an array of those (e.g., the result of document.getElementsByTagName())\n *\n * @template N  The HTMLElement node class\n */\nexport type ContainerList<N> = string | N | (string | N | N[])[];\n\n/**\n * The options allowed for the reset() method\n */\nexport type ResetList = {\n  all?: boolean,\n  processed?: boolean,\n  inputJax?: any[],\n  outputJax?: any[]\n};\n\n/**\n * The default option list for the reset() method\n */\nexport const resetOptions: ResetList = {\n  all: false,\n  processed: false,\n  inputJax: null,\n  outputJax: null\n};\n\n/**\n * The option list for when all options are to be reset\n */\nexport const resetAllOptions: ResetList = {\n  all: true,\n  processed: true,\n  inputJax: [],\n  outputJax: []\n};\n\n/*****************************************************************/\n/**\n *  The MathDocument interface\n *\n *  The MathDocument is created by MathJax.Document() and holds the\n *  document, the math found in it, and so on.  The methods of the\n *  MathDocument all return the MathDocument itself, so you can\n *  chain the method calls.  E.g.,\n *\n *    const html = MathJax.Document('<html>...</html>');\n *    html.findMath()\n *        .compile()\n *        .getMetrics()\n *        .typeset()\n *        .updateDocument();\n *\n *  The MathDocument is the main interface for page authors to\n *  interact with MathJax.\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface MathDocument<N, T, D> {\n  /**\n   * The document being processed (e.g., DOM document, or Markdown string)\n   */\n  document: D;\n\n  /**\n   * The kind of MathDocument (e.g., \"HTML\")\n   */\n  kind: string;\n\n  /**\n   * The options for the document\n   */\n  options: OptionList;\n\n  /**\n   * The list of MathItems found in this page\n   */\n  math: MathList<N, T, D>;\n\n  /**\n   * The list of actions to take during a render() or convert() call\n   */\n  renderActions: RenderList<N, T, D>;\n\n  /**\n   * This object tracks what operations have been performed, so that (when\n   *  asynchronous operations are used), the ones that have already been\n   *  completed won't be performed again.\n   */\n  processed: BitField;\n\n  /**\n   * An array of input jax to run on the document\n   */\n  inputJax: InputJax<N, T, D>[];\n\n  /**\n   * The output jax to use for the document\n   */\n  outputJax: OutputJax<N, T, D>;\n\n  /**\n   * The DOM adaptor to use for input and output\n   */\n  adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * The MmlFactory to be used for input jax and error processing\n   */\n  mmlFactory: MmlFactory;\n\n  /**\n   * @param {string} id      The id of the action to add\n   * @param {any[]} action   The RenderAction to take\n   */\n  addRenderAction(id: string, ...action: any[]): void;\n\n  /**\n   * @param {string} id   The id of the action to remove\n   */\n  removeRenderAction(id: string): void;\n\n  /**\n   * Perform the renderActions on the document\n   */\n  render(): MathDocument<N, T, D>;\n\n  /**\n   * Rerender the MathItems on the page\n   *\n   * @param {number=} start    The state to start rerendering at\n   * @return {MathDocument}    The math document instance\n   */\n  rerender(start?: number): MathDocument<N, T, D>;\n\n  /**\n   * Convert a math string to the document's output format\n   *\n   * @param {string} math           The math string to convert\n   * @params {OptionList} options   The options for the conversion (e.g., format, ex, em, etc.)\n   * @return {MmlNode|N}            The MmlNode or N node for the converted content\n   */\n  convert(math: string, options?: OptionList): MmlNode | N;\n\n  /**\n   * Locates the math in the document and constructs the MathList\n   *  for the document.\n   *\n   * @param {OptionList} options  The options for locating the math\n   * @return {MathDocument}       The math document instance\n   */\n  findMath(options?: OptionList): MathDocument<N, T, D>;\n\n  /**\n   * Calls the input jax to process the MathItems in the MathList\n   *\n   * @return {MathDocument}  The math document instance\n   */\n  compile(): MathDocument<N, T, D>;\n\n  /**\n   * Gets the metric information for the MathItems\n   *\n   * @return {MathDocument}  The math document instance\n   */\n  getMetrics(): MathDocument<N, T, D>;\n\n  /**\n   * Calls the output jax to process the compiled math in the MathList\n   *\n   * @return {MathDocument}  The math document instance\n   */\n  typeset(): MathDocument<N, T, D>;\n\n  /**\n   * Updates the document to include the typeset math\n   *\n   * @return {MathDocument}  The math document instance\n   */\n  updateDocument(): MathDocument<N, T, D>;\n\n  /**\n   * Removes the typeset math from the document\n   *\n   * @param {boolean} restore  True if the original math should be put\n   *                            back into the document as well\n   * @return {MathDocument}    The math document instance\n   */\n  removeFromDocument(restore?: boolean): MathDocument<N, T, D>;\n\n  /**\n   * Set the state of the document (allowing you to roll back\n   *  the state to a previous one, if needed).\n   *\n   * @param {number} state     The new state of the document\n   * @param {boolean} restore  True if the original math should be put\n   *                            back into the document during the rollback\n   * @return {MathDocument}    The math document instance\n   */\n  state(state: number, restore?: boolean): MathDocument<N, T, D>;\n\n  /**\n   * Clear the processed values so that the document can be reprocessed\n   *\n   * @param {ResetList} options   The things to be reset\n   * @return {MathDocument}       The math document instance\n   */\n  reset(options?: ResetList): MathDocument<N, T, D>;\n\n  /**\n   * Reset the processed values and clear the MathList (so that new math\n   * can be processed in the document).\n   *\n   * @return {MathDocument}  The math document instance\n   */\n  clear(): MathDocument<N, T, D>;\n\n  /**\n   * Merges a MathList into the list for this document.\n   *\n   * @param {MathList} list   The MathList to be merged into this document's list\n   * @return {MathDocument}   The math document instance\n   */\n  concat(list: MathList<N, T, D>): MathDocument<N, T, D>;\n\n  /**\n   * Clear the typeset MathItems that are within the given container\n   *   from the document's MathList.  (E.g., when the content of the\n   *   container has been updated and you want to remove the\n   *   associated MathItems)\n   *\n   * @param {ContainerList<N>} elements   The container DOM elements whose math items are to be removed\n   * @return {MathItem<N,T,D>[]}          The removed MathItems\n   */\n  clearMathItemsWithin(containers: ContainerList<N>): MathItem<N, T, D>[];\n\n  /**\n   * Get the typeset MathItems that are within a given container.\n   *\n   * @param {ContainerList<N>} elements   The container DOM elements whose math items are to be found\n   * @return {MathItem<N,T,D>[]}          The list of MathItems within that container\n   */\n  getMathItemsWithin(elements: ContainerList<N>): MathItem<N, T, D>[];\n\n}\n\n/*****************************************************************/\n\n/**\n * Defaults used when input jax isn't specified\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nclass DefaultInputJax<N, T, D> extends AbstractInputJax<N, T, D> {\n  /**\n   * @override\n   */\n  public compile(_math: MathItem<N, T, D>) {\n    return null as MmlNode;\n  }\n}\n\n/**\n * Defaults used when ouput jax isn't specified\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nclass DefaultOutputJax<N, T, D> extends AbstractOutputJax<N, T, D> {\n  /**\n   * @override\n   */\n  public typeset(_math: MathItem<N, T, D>, _document: MathDocument<N, T, D> = null) {\n    return null as N;\n  }\n  /**\n   * @override\n   */\n  public escaped(_math: MathItem<N, T, D>, _document?: MathDocument<N, T, D>) {\n    return null as N;\n  }\n}\n\n/**\n * Default for the MathList when one isn't specified\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nclass DefaultMathList<N, T, D> extends AbstractMathList<N, T, D> {}\n\n/**\n * Default for the Mathitem when one isn't specified\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nclass DefaultMathItem<N, T, D> extends AbstractMathItem<N, T, D> {}\n\n/*****************************************************************/\n/**\n *  Implements the abstract MathDocument class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractMathDocument<N, T, D> implements MathDocument<N, T, D> {\n\n  /**\n   * The type of MathDocument\n   */\n  public static KIND: string = 'MathDocument';\n\n  /**\n   * The default options for the document\n   */\n  public static OPTIONS: OptionList = {\n    OutputJax: null,           // instance of an OutputJax for the document\n    InputJax: null,            // instance of an InputJax or an array of them\n    MmlFactory: null,          // instance of a MmlFactory for this document\n    MathList: DefaultMathList, // constructor for a MathList to use for the document\n    MathItem: DefaultMathItem, // constructor for a MathItem to use for the MathList\n    compileError: (doc: AbstractMathDocument<any, any, any>, math: MathItem<any, any, any>, err: Error) => {\n      doc.compileError(math, err);\n    },\n    typesetError: (doc: AbstractMathDocument<any, any, any>, math: MathItem<any, any, any>, err: Error) => {\n      doc.typesetError(math, err);\n    },\n    renderActions: expandable({\n      find:    [STATE.FINDMATH, 'findMath', '', false],\n      compile: [STATE.COMPILED],\n      metrics: [STATE.METRICS, 'getMetrics', '', false],\n      typeset: [STATE.TYPESET],\n      update:  [STATE.INSERTED, 'updateDocument', false]\n    }) as RenderActions<any, any, any>\n  };\n\n  /**\n   * A bit-field for the actions that have been processed\n   */\n  public static ProcessBits = BitFieldClass('findMath', 'compile', 'getMetrics', 'typeset', 'updateDocument');\n\n  /**\n   * The document managed by this MathDocument\n   */\n  public document: D;\n  /**\n   * The actual options for this document (with user-supplied ones merged in)\n   */\n  public options: OptionList;\n\n  /**\n   * The list of MathItems for this document\n   */\n  public math: MathList<N, T, D>;\n\n  /**\n   * The list of render actions\n   */\n  public renderActions: RenderList<N, T, D>;\n\n  /**\n   * The bit-field used to tell what steps have been taken on the document (for retries)\n   */\n  public processed: BitField;\n\n  /**\n   * The list of input jax for the document\n   */\n  public inputJax: InputJax<N, T, D>[];\n\n  /**\n   * The output jax for the document\n   */\n  public outputJax: OutputJax<N, T, D>;\n\n  /**\n   * The DOM adaptor for the document\n   */\n  public adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * The MathML node factory for the internal MathML representation\n   */\n  public mmlFactory: MmlFactory;\n\n\n  /**\n   * @param {any} document           The document (HTML string, parsed DOM, etc.) to be processed\n   * @param {DOMAdaptor} adaptor     The DOM adaptor for this document\n   * @param {OptionList} options     The options for this document\n   * @constructor\n   */\n  constructor (document: D, adaptor: DOMAdaptor<N, T, D>, options: OptionList) {\n    let CLASS = this.constructor as typeof AbstractMathDocument;\n    this.document = document;\n    this.options = userOptions(defaultOptions({}, CLASS.OPTIONS), options);\n    this.math = new (this.options['MathList'] || DefaultMathList)();\n    this.renderActions = RenderList.create<N, T, D>(this.options['renderActions']);\n    this.processed = new AbstractMathDocument.ProcessBits();\n    this.outputJax = this.options['OutputJax'] || new DefaultOutputJax<N, T, D>();\n    let inputJax = this.options['InputJax'] || [new DefaultInputJax<N, T, D>()];\n    if (!Array.isArray(inputJax)) {\n      inputJax = [inputJax];\n    }\n    this.inputJax = inputJax;\n    //\n    // Pass the DOM adaptor to the jax\n    //\n    this.adaptor = adaptor;\n    this.outputJax.setAdaptor(adaptor);\n    this.inputJax.map(jax => jax.setAdaptor(adaptor));\n    //\n    // Pass the MmlFactory to the jax\n    //\n    this.mmlFactory = this.options['MmlFactory'] || new MmlFactory();\n    this.inputJax.map(jax => jax.setMmlFactory(this.mmlFactory));\n    //\n    // Do any initialization that requires adaptors or factories\n    //\n    this.outputJax.initialize();\n    this.inputJax.map(jax => jax.initialize());\n  }\n\n  /**\n   * @return {string}  The kind of document\n   */\n  public get kind(): string {\n    return (this.constructor as typeof AbstractMathDocument).KIND;\n  }\n\n  /**\n   * @override\n   */\n  public addRenderAction(id: string, ...action: any[]) {\n    const [fn, p] = RenderList.action<N, T, D>(id, action as RenderAction<N, T, D>);\n    this.renderActions.add(fn, p);\n  }\n\n  /**\n   * @override\n   */\n  public removeRenderAction(id: string) {\n    const action = this.renderActions.findID(id);\n    if (action) {\n      this.renderActions.remove(action);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public render() {\n    this.renderActions.renderDoc(this);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public rerender(start: number = STATE.RERENDER) {\n    this.state(start - 1);\n    this.render();\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public convert(math: string, options: OptionList = {}) {\n    let {format, display, end, ex, em, containerWidth, lineWidth, scale, family} = userOptions({\n      format: this.inputJax[0].name, display: true, end: STATE.LAST,\n      em: 16, ex: 8, containerWidth: null, lineWidth: 1000000, scale: 1, family: ''\n    }, options);\n    if (containerWidth === null) {\n      containerWidth = 80 * ex;\n    }\n    const jax = this.inputJax.reduce((jax, ijax) => (ijax.name === format ? ijax : jax), null);\n    const mitem = new this.options.MathItem(math, jax, display);\n    mitem.start.node = this.adaptor.body(this.document);\n    mitem.setMetrics(em, ex, containerWidth, lineWidth, scale);\n    if (this.outputJax.options.mtextInheritFont) {\n      mitem.outputData.mtextFamily = family;\n    }\n    if (this.outputJax.options.merrorInheritFont) {\n      mitem.outputData.merrorFamily = family;\n    }\n    mitem.convert(this, end);\n    return (mitem.typesetRoot || mitem.root);\n  }\n\n  /**\n   * @override\n   */\n  public findMath(_options: OptionList = null) {\n    this.processed.set('findMath');\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public compile() {\n    if (!this.processed.isSet('compile')) {\n      //\n      //  Compile all the math in the list\n      //\n      const recompile = [];\n      for (const math of this.math) {\n        this.compileMath(math);\n        if (math.inputData.recompile !== undefined) {\n          recompile.push(math);\n        }\n      }\n      //\n      //  If any were added to the recompile list,\n      //    compile them again\n      //\n      for (const math of recompile) {\n        const data = math.inputData.recompile;\n        math.state(data.state);\n        math.inputData.recompile = data;\n        this.compileMath(math);\n      }\n      this.processed.set('compile');\n    }\n    return this;\n  }\n\n  /**\n   * @param {MathItem} math   The item to compile\n   */\n  protected compileMath(math: MathItem<N, T, D>) {\n    try {\n      math.compile(this);\n    } catch (err) {\n      if (err.retry || err.restart) {\n        throw err;\n      }\n      this.options['compileError'](this, math, err);\n      math.inputData['error'] = err;\n    }\n  }\n\n  /**\n   * Produce an error using MmlNodes\n   *\n   * @param {MathItem} math  The MathItem producing the error\n   * @param {Error} err      The Error object for the error\n   */\n  public compileError(math: MathItem<N, T, D>, err: Error) {\n    math.root = this.mmlFactory.create('math', null, [\n      this.mmlFactory.create('merror', {'data-mjx-error': err.message, title: err.message}, [\n        this.mmlFactory.create('mtext', null, [\n          (this.mmlFactory.create('text') as TextNode).setText('Math input error')\n        ])\n      ])\n    ]);\n    if (math.display) {\n      math.root.attributes.set('display', 'block');\n    }\n    math.inputData.error = err.message;\n  }\n\n  /**\n   * @override\n   */\n  public typeset() {\n    if (!this.processed.isSet('typeset')) {\n      for (const math of this.math) {\n        try {\n          math.typeset(this);\n        } catch (err) {\n          if (err.retry || err.restart) {\n            throw err;\n          }\n          this.options['typesetError'](this, math, err);\n          math.outputData['error'] = err;\n        }\n      }\n      this.processed.set('typeset');\n    }\n    return this;\n  }\n\n  /**\n   * Produce an error using HTML\n   *\n   * @param {MathItem} math  The MathItem producing the error\n   * @param {Error} err      The Error object for the error\n   */\n  public typesetError(math: MathItem<N, T, D>, err: Error) {\n    math.typesetRoot = this.adaptor.node('mjx-container', {\n      class: 'MathJax mjx-output-error',\n      jax: this.outputJax.name,\n    }, [\n      this.adaptor.node('span', {\n        'data-mjx-error': err.message,\n        title: err.message,\n        style: {\n          color: 'red',\n          'background-color': 'yellow',\n          'line-height': 'normal'\n        }\n      }, [\n        this.adaptor.text('Math output error')\n      ])\n    ]);\n    if (math.display) {\n      this.adaptor.setAttributes(math.typesetRoot, {\n        style: {\n          display: 'block',\n          margin: '1em 0',\n          'text-align': 'center'\n        }\n      });\n    }\n    math.outputData.error = err.message;\n  }\n\n  /**\n   * @override\n   */\n  public getMetrics() {\n    if (!this.processed.isSet('getMetrics')) {\n      this.outputJax.getMetrics(this);\n      this.processed.set('getMetrics');\n    }\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public updateDocument() {\n    if (!this.processed.isSet('updateDocument')) {\n      for (const math of this.math.reversed()) {\n        math.updateDocument(this);\n      }\n      this.processed.set('updateDocument');\n    }\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public removeFromDocument(_restore: boolean = false) {\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public state(state: number, restore: boolean = false) {\n    for (const math of this.math) {\n      math.state(state, restore);\n    }\n    if (state < STATE.INSERTED) {\n      this.processed.clear('updateDocument');\n    }\n    if (state < STATE.TYPESET) {\n      this.processed.clear('typeset');\n      this.processed.clear('getMetrics');\n    }\n    if (state < STATE.COMPILED) {\n      this.processed.clear('compile');\n    }\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public reset(options: ResetList = {processed: true}) {\n    options = userOptions(Object.assign({}, resetOptions), options);\n    options.all && Object.assign(options, resetAllOptions);\n    options.processed && this.processed.reset();\n    options.inputJax && this.inputJax.forEach(jax => jax.reset(...options.inputJax));\n    options.outputJax && this.outputJax.reset(...options.outputJax);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public clear() {\n    this.reset();\n    this.math.clear();\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public concat(list: MathList<N, T, D>) {\n    this.math.merge(list);\n    return this;\n  }\n\n  /**\n   * @override\n   */\n  public clearMathItemsWithin(containers: ContainerList<N>) {\n    const items = this.getMathItemsWithin(containers);\n    this.math.remove(...items);\n    return items;\n  }\n\n  /**\n   * @override\n   */\n  public getMathItemsWithin(elements: ContainerList<N>) {\n    if (!Array.isArray(elements)) {\n      elements = [elements];\n    }\n    const adaptor = this.adaptor;\n    const items = [] as MathItem<N, T, D>[];\n    const containers = adaptor.getElements(elements, this.document);\n    ITEMS:\n    for (const item of this.math) {\n      for (const container of containers) {\n        if (item.start.node && adaptor.contains(container, item.start.node)) {\n          items.push(item);\n          continue ITEMS;\n        }\n      }\n    }\n    return items;\n  }\n\n}\n\n/**\n * The constructor type for a MathDocument\n *\n * @template D    The MathDocument type this constructor is for\n */\nexport interface MathDocumentConstructor<D extends MathDocument<any, any, any>> {\n  KIND: string;\n  OPTIONS: OptionList;\n  ProcessBits: typeof BitField;\n  new (...args: any[]): D;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8673, "column": 0}, "map": {"version":3,"file":"Handler.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/core/Handler.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Interfaces and abstract classes for Handler objects\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {MathDocument, AbstractMathDocument, MathDocumentConstructor} from './MathDocument.js';\nimport {OptionList} from '../util/Options.js';\nimport {DOMAdaptor} from '../core/DOMAdaptor.js';\n\n/*****************************************************************/\n/**\n *  The Handler interface\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport interface Handler<N, T, D> {\n  /**\n   * The name of the handler class\n   */\n  name: string;\n\n  /**\n   * The DOM Adaptor to use for managing HTML elements\n   */\n  adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * The priority for the handler when handlers are polled\n   *   to see which one can process a given document.\n   */\n  priority: number;\n\n  /**\n   * The class implementing the MathDocument for this handler\n   *   (so it can be subclassed by extensions as needed)\n   */\n  documentClass: MathDocumentConstructor<AbstractMathDocument<N, T, D>>;\n\n  /**\n   * Checks to see if the handler can process a given document\n   *\n   * @param {any} document  The document to be processed (string, window, etc.)\n   * @return {boolean}      True if this handler can process the given document\n   */\n  handlesDocument(document: any): boolean;\n\n  /**\n   * Creates a MathDocument for the given handler\n   *\n   * @param {any} document        The document to be handled\n   * @param {OptionList} options  The options for the handling of the document\n   * @return {MathDocument}       The MathDocument object that manages the processing\n   */\n  create(document: any, options: OptionList): MathDocument<N, T, D>;\n}\n\n/*****************************************************************/\n/**\n *  The default MathDocument class (subclasses use their own)\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nclass DefaultMathDocument<N, T, D> extends AbstractMathDocument<N, T, D> {}\n\n/*****************************************************************/\n/**\n *  The Handler interface\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport abstract class AbstractHandler<N, T, D> implements Handler<N, T, D> {\n\n  /**\n   * The name of this class\n   */\n  public static NAME: string = 'generic';\n\n  /**\n   * The DOM Adaptor to use for managing HTML elements\n   */\n  public adaptor: DOMAdaptor<N, T, D>;\n\n  /**\n   * The priority for this handler\n   */\n  public priority: number;\n\n  /**\n   * The class implementing the MathDocument for this handler\n   *   (so it can be subclassed by extensions as needed)\n   */\n  public documentClass: MathDocumentConstructor<AbstractMathDocument<N, T, D>> = DefaultMathDocument;\n\n  /**\n   * @param {number} priority  The priority to use for this handler\n   *\n   * @constructor\n   */\n  constructor(adaptor: DOMAdaptor<N, T, D>, priority: number = 5) {\n    this.adaptor = adaptor;\n    this.priority = priority;\n  }\n\n  /**\n   * @return {string}  The name of this handler class\n   */\n  public get name(): string {\n    return (this.constructor as typeof AbstractHandler).NAME;\n  }\n\n  /**\n   * @override\n   */\n  public handlesDocument(_document: any) {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  public create(document: any, options: OptionList) {\n    return new this.documentClass(document, this.adaptor, options) as MathDocument<N, T, D>;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,iDAA8F;AA6D9F,IAAA,sBAAA,SAAA,MAAA;IAA2C,UAAA,qBAAA,QAA6B;IAAxE,SAAA;;IAA0E,CAAC;IAAD,OAAA,mBAAC;AAAD,CAAC,AAA3E,CAA2C,kBAAA,oBAAoB,GAAY;AAU3E,IAAA,kBAAA;IA4BE,SAAA,gBAAY,OAA4B,EAAE,QAAoB;QAApB,IAAA,aAAA,KAAA,GAAA;YAAA,WAAA,CAAoB;QAAA;QAPvD,IAAA,CAAA,aAAa,GAA2D,mBAAmB,CAAC;QAQjG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAKD,OAAA,cAAA,CAAW,gBAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAQ,IAAI,CAAC,WAAsC,CAAC,IAAI,CAAC;QAC3D,CAAC;;;OAAA;IAKM,gBAAA,SAAA,CAAA,eAAe,GAAtB,SAAuB,SAAc;QACnC,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,gBAAA,SAAA,CAAA,MAAM,GAAb,SAAc,QAAa,EAAE,OAAmB;QAC9C,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAA0B,CAAC;IAC1F,CAAC;IA/Ca,gBAAA,IAAI,GAAW,SAAS,CAAC;IAiDzC,OAAA,eAAC;CAAA,AAtDD,IAsDC;AAtDqB,QAAA,eAAA,GAAA,gBAAe","ignoreList":[0]}},
    {"offset": {"line": 8732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}