{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/utils/config.js"],"sourcesContent":["export const API_BASE_URL = \"https://mitoslearning.in/api\";\r\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe"}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/contexts/useAuth.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { API_BASE_URL } from \"@/utils/config\";\r\n\r\nconst useAuth = () => {\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const refreshToken = localStorage.getItem(\"refreshToken\");\r\n\r\n    if (!token) {\r\n      router.push(\"/login\");\r\n      return;\r\n    }\r\n\r\n    const refreshAccessToken = async () => {\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/auth/refresh`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ refreshToken }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          localStorage.setItem(\"token\", data.accessToken);\r\n          console.log(\"Token refreshed successfully.\");\r\n        } else {\r\n          console.warn(\"Refresh token expired, logging out...\");\r\n          localStorage.removeItem(\"token\");\r\n          localStorage.removeItem(\"refreshToken\");\r\n          router.push(\"/login\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error refreshing token:\", error);\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"refreshToken\");\r\n        router.push(\"/login\");\r\n      }\r\n    };\r\n\r\n    // Refresh token every 5 hours\r\n    const interval = setInterval(refreshAccessToken, 5 * 60 * 60 * 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [router]);\r\n\r\n};\r\n\r\nexport default useAuth;\r\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;;AAJA;;;;AAMA,MAAM,UAAU;;IACd,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,MAAM,eAAe,aAAa,OAAO,CAAC;YAE1C,IAAI,CAAC,OAAO;gBACV,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,MAAM;wDAAqB;oBACzB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM,GAAG,yHAAA,CAAA,eAAY,CAAC,aAAa,CAAC,EAAE;4BAC3D,QAAQ;4BACR,SAAS;gCAAE,gBAAgB;4BAAmB;4BAC9C,MAAM,KAAK,SAAS,CAAC;gCAAE;4BAAa;wBACtC;wBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;wBAEhC,IAAI,SAAS,EAAE,EAAE;4BACf,aAAa,OAAO,CAAC,SAAS,KAAK,WAAW;4BAC9C,QAAQ,GAAG,CAAC;wBACd,OAAO;4BACL,QAAQ,IAAI,CAAC;4BACb,aAAa,UAAU,CAAC;4BACxB,aAAa,UAAU,CAAC;4BACxB,OAAO,IAAI,CAAC;wBACd;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,2BAA2B;wBACzC,aAAa,UAAU,CAAC;wBACxB,aAAa,UAAU,CAAC;wBACxB,OAAO,IAAI,CAAC;oBACd;gBACF;;YAEA,8BAA8B;YAC9B,MAAM,WAAW,YAAY,oBAAoB,IAAI,KAAK,KAAK;YAE/D;qCAAO,IAAM,cAAc;;QAC7B;4BAAG;QAAC;KAAO;AAEb;GA7CM;;QACW,qIAAA,CAAA,YAAS;;;uCA8CX"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/app/admin/materials/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { API_BASE_URL } from \"@/utils/config\";\r\nimport useAuth from \"@/contexts/useAuth\";\r\n\r\nexport default function PDFViewer() {\r\n  const [pdfs, setPdfs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  useAuth();\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const storedToken = localStorage.getItem(\"token\");\r\n      setToken(storedToken);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    const fetchPDFs = async () => {\r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/pdf`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch PDFs\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setPdfs(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPDFs();\r\n  }, [token]);\r\n\r\n  const deletePDF = async (id) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this PDF?\");\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/pdf/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete PDF\");\r\n      }\r\n\r\n      setPdfs((prevPdfs) => prevPdfs.filter((pdf) => pdf.id !== id));\r\n      alert(\"PDF deleted successfully\");\r\n    } catch (error) {\r\n      alert(\"Error deleting PDF\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <p className=\"text-center text-gray-500\">Loading PDFs...</p>;\r\n  if (error) return <p className=\"text-center text-red-500\">Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h1 className=\" font-semibold mb-6\">ðŸ“š PDF List</h1>\r\n      <div className=\"overflow-x-auto bg-white shadow-lg rounded-lg\">\r\n        <table className=\"min-w-full border border-gray-200\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr className=\"text-left text-gray-700\">\r\n              <th className=\"py-3 px-4 border-b bg-[#35095e5c]\">#</th>\r\n              <th className=\"py-3 px-4 border-b bg-[#35095e5c]\">PDF Name</th>\r\n              <th className=\"py-3 px-4 border-b bg-[#35095e5c]\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pdfs.length > 0 ? (\r\n              pdfs.map((pdf, index) => (\r\n                <tr\r\n                  key={pdf.id}\r\n                  className=\"border-b transition duration-200 hover:bg-gray-50\"\r\n                >\r\n                  <td className=\"py-3 px-4\">{index + 1}</td>\r\n                  <td className=\"py-3 px-4 font-medium text-gray-800\">{pdf.name}</td>\r\n                  <td className=\"py-3 px-4\">\r\n                    <div className=\"flex space-x-3\">\r\n                      <a\r\n                        href={`https://mitoslearning.in${pdf.url}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"bg-blue-500 text-white px-4 py-1.5 rounded-lg hover:bg-blue-600 transition\"\r\n                      >\r\n                        View\r\n                      </a>\r\n                      <button\r\n                        onClick={() => deletePDF(pdf.id)}\r\n                        className=\"bg-red-500 text-white px-4 py-1.5 rounded-lg hover:bg-red-600 transition\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"3\" className=\"py-6 text-center text-gray-500\">\r\n                  No PDFs available\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}