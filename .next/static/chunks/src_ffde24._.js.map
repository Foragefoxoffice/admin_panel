{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://mitoslearning.in/api\",\r\n});\r\n\r\nAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// API call for fetching subjects\r\nexport const fetchSubjects = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/subjects\"); // Directly return the data\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    throw error; // Propagate the error to the calling function\r\n  }\r\n};\r\n\r\nexport const fetchPortions = async () => {\r\n  try {\r\n    const { data } = await API.get(\"/portions\"); // Directly return the data\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    throw error; // Propagate the error to the calling function\r\n  }\r\n};\r\n\r\nexport const fetchSubjectsByPortions = async (portionId) => {\r\n  try {\r\n    const response = await API.get(`/subjects/subject/${portionId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chapter:\", error);\r\n    throw error;\r\n  }\r\n};\r\nexport const fetchChaptersBySubject = async (subjectId) => {\r\n  try {\r\n    const response = await API.get(`/chapters/chapter/${subjectId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chapter:\", error);\r\n    throw error;\r\n  }\r\n};\r\nexport const fetchChapter = async (subjectId) => {\r\n  try {\r\n    const response = await API.get(`/chapters/chapter/${subjectId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chapter:\", error);\r\n    throw error;\r\n  }\r\n};\r\nexport const fetchChapterTopics = async (chapterId) => {\r\n  try {\r\n    const response = await API.get(`/topics/chapter/${chapterId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching chapter:\", error);\r\n    throw error;\r\n  }\r\n};\r\nexport const fetchTopics = (chapterId) => API.get(`/topics/topic/${chapterId}`);\r\nexport const fetchQuestionType = () => API.get(\"/question-types\");\r\nexport const fetchQuestion = (topicId) => API.get(`/questions?topicId=${topicId}`);\r\nexport const fetchQuestions = (topics) => {\r\n  const topicIds = topics.join(\",\"); // Ensure topics are serialized correctly\r\n  return API.get(`/questions/topics?topicIds=${topicIds}`); // Use 'topicIds' here\r\n};\r\nexport const fetchQuestionsByTypes = (selectedQuestionTypes, chapterId) => {\r\n  const questionTypeIds = selectedQuestionTypes.join(\",\"); // Ensure topics are serialized correctly\r\n  return API.get(`/questions/questiontype?questionTypeIds=${questionTypeIds}&chapterId=${chapterId}`); // Use 'topicIds' here\r\n};\r\n\r\nexport const fetchFullTestQuestion = () => API.get(`/questions/fulltest`);\r\n\r\nexport const fetchFullTestByPortion = (portionId) => API.get(`/questions/portion/${portionId}`);\r\n\r\nexport const fetchFullTestBySubject = (portionId, subjectId) => API.get(`/questions/portion/${portionId}/subject/${subjectId}`);\r\n\r\nexport const fetchFullTestByChapter = (portionId, subjectId,chapterId) => API.get(`/questions/portion/${portionId}/subject/${subjectId}/chapter/${chapterId}`);\r\n\r\nexport const fetchCustomTestQuestions = async (\r\n  portionId,\r\n  subjectId,\r\n  chapterId,\r\n  topicIds,\r\n  questionCount\r\n) => {\r\n\r\n  const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\r\n\r\n  if (!token) {\r\n    throw new Error(\"No token found. Please log in.\");\r\n  }\r\n  const response = await fetch(\"https://mitoslearning.in/api/questions/custom\", {\r\n    \r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`, // Include the token in the Authorization header\r\n    },\r\n    body: JSON.stringify({\r\n      portionId,\r\n      subjectId,\r\n      chapterId,\r\n      topicIds,\r\n      questionCount,\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json(); // Parse the error response\r\n    throw new Error(errorData.message || \"Failed to fetch custom test questions\");\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const fetchResultByUser = (userId) => API.get(`/tests/${userId}`);\r\n\r\nexport const fetchLeaderBoard = async () => {\r\n  try {\r\n    const { data } = await API.get(`/tests/a`); // Use correct endpoint\r\n    return data; // Directly return data\r\n  } catch (error) {\r\n    console.error(\"Error fetching leaderboard:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateBlockStatus = async (type, id, isPremium) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const { data } = await API.post(\r\n      \"/block\",\r\n      { type, id, isPremium },\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error updating block status:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport default API;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/app/admin/blocks/page.jsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  fetchPortions,\r\n  fetchSubjectsByPortions,\r\n  fetchChaptersBySubject,\r\n  fetchChapterTopics,\r\n  updateBlockStatus,\r\n} from \"@/utils/api\";\r\nimport { FiChevronDown, FiChevronRight, FiRefreshCw, FiCheck, FiX, FiSearch } from \"react-icons/fi\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst BlockContentPage = () => {\r\n  // State\r\n  const [portions, setPortions] = useState([]);\r\n  const [selectedPortion, setSelectedPortion] = useState(null);\r\n  const [selectedSubject, setSelectedSubject] = useState(null);\r\n  const [selectedChapter, setSelectedChapter] = useState(null);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [chapters, setChapters] = useState([]);\r\n  const [topics, setTopics] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [activePanel, setActivePanel] = useState(\"portions\");\r\n\r\n  // Fetch initial data\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await fetchPortions();\r\n        setPortions(data);\r\n      } catch (error) {\r\n        toast.error(\"Failed to load portions\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  // Filter items based on search term\r\n  const filterItems = (items) => {\r\n    if (!searchTerm) return items;\r\n    return items.filter(item => \r\n      item.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  };\r\n\r\n  // Handlers\r\n  const handlePortionSelect = async (portionId) => {\r\n    try {\r\n      setLoading(true);\r\n      setSelectedPortion(portionId);\r\n      setSelectedSubject(null);\r\n      setSelectedChapter(null);\r\n      const subs = await fetchSubjectsByPortions(portionId);\r\n      setSubjects(subs);\r\n      setChapters([]);\r\n      setTopics([]);\r\n      setActivePanel(\"subjects\");\r\n      toast.success(`Loaded ${subs.length} subjects`);\r\n    } catch (error) {\r\n      toast.error(\"Failed to load subjects\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubjectSelect = async (subjectId) => {\r\n    try {\r\n      setLoading(true);\r\n      setSelectedSubject(subjectId);\r\n      setSelectedChapter(null);\r\n      const chaps = await fetchChaptersBySubject(subjectId);\r\n      setChapters(chaps);\r\n      setTopics([]);\r\n      setActivePanel(\"chapters\");\r\n      toast.success(`Loaded ${chaps.length} chapters`);\r\n    } catch (error) {\r\n      toast.error(\"Failed to load chapters\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChapterSelect = async (chapterId) => {\r\n    try {\r\n      setLoading(true);\r\n      setSelectedChapter(chapterId);\r\n      const tops = await fetchChapterTopics(chapterId);\r\n      setTopics(tops);\r\n      setActivePanel(\"topics\");\r\n      toast.success(`Loaded ${tops.length} topics`);\r\n    } catch (error) {\r\n      toast.error(\"Failed to load topics\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleBlock = async (type, id, currentState) => {\r\n    try {\r\n      setLoading(true);\r\n      await updateBlockStatus(type, id, !currentState);\r\n      \r\n      // Refresh data\r\n      const refreshData = async () => {\r\n        switch (type) {\r\n          case \"portion\":\r\n            setPortions(await fetchPortions());\r\n            break;\r\n          case \"subject\":\r\n            if (selectedPortion) setSubjects(await fetchSubjectsByPortions(selectedPortion));\r\n            break;\r\n          case \"chapter\":\r\n            if (selectedSubject) setChapters(await fetchChaptersBySubject(selectedSubject));\r\n            break;\r\n          case \"topic\":\r\n            if (selectedChapter) setTopics(await fetchChapterTopics(selectedChapter));\r\n            break;\r\n        }\r\n      };\r\n      \r\n      await refreshData();\r\n      toast.success(`Content ${!currentState ? 'blocked' : 'unblocked'}`);\r\n    } catch (error) {\r\n      toast.error(\"Failed to update status\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const refreshAll = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setPortions(await fetchPortions());\r\n      if (selectedPortion) setSubjects(await fetchSubjectsByPortions(selectedPortion));\r\n      if (selectedSubject) setChapters(await fetchChaptersBySubject(selectedSubject));\r\n      if (selectedChapter) setTopics(await fetchChapterTopics(selectedChapter));\r\n      toast.success(\"Data refreshed\");\r\n    } catch (error) {\r\n      toast.error(\"Failed to refresh data\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const navigateBack = () => {\r\n    if (activePanel === \"topics\") setActivePanel(\"chapters\");\r\n    else if (activePanel === \"chapters\") setActivePanel(\"subjects\");\r\n    else if (activePanel === \"subjects\") setActivePanel(\"portions\");\r\n  };\r\n\r\n  // Get current path for display\r\n  const getCurrentPath = () => {\r\n    const path = [];\r\n    if (selectedPortion) path.push(portions.find(p => p.id === selectedPortion)?.name);\r\n    if (selectedSubject) path.push(subjects.find(s => s.id === selectedSubject)?.name);\r\n    if (selectedChapter) path.push(chapters.find(c => c.id === selectedChapter)?.name);\r\n    return path;\r\n  };\r\n\r\n  // Filtered data\r\n  const filteredPortions = filterItems(portions);\r\n  const filteredSubjects = filterItems(subjects);\r\n  const filteredChapters = filterItems(chapters);\r\n  const filteredTopics = filterItems(topics);\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-6xl mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold\">Content Manager</h1>\r\n          <p className=\"text-gray-600\">Manage your learning materials</p>\r\n        </div>\r\n        <button\r\n          onClick={refreshAll}\r\n          disabled={loading}\r\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50\"\r\n        >\r\n          <FiRefreshCw className={loading ? \"animate-spin\" : \"\"} />\r\n          Refresh\r\n        </button>\r\n      </div>\r\n\r\n      {/* Search */}\r\n      <div className=\"mb-6 bg-white p-4 rounded shadow\">\r\n        <div className=\"flex gap-4\">\r\n          <div className=\"relative flex-1\">\r\n            <FiSearch className=\"absolute left-3 top-3 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n          {activePanel !== \"portions\" && (\r\n            <button\r\n              onClick={navigateBack}\r\n              className=\"px-4 py-2 bg-gray-100 rounded hover:bg-gray-200\"\r\n            >\r\n              Back\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Breadcrumbs */}\r\n      {getCurrentPath().length > 0 && (\r\n        <div className=\"flex gap-2 mb-4 text-sm text-gray-600\">\r\n          {getCurrentPath().map((item, i) => (\r\n            <div key={i} className=\"flex items-center\">\r\n              {i > 0 && <span className=\"mx-1\">/</span>}\r\n              <span>{item}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Content Panels */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n        {/* Sidebar */}\r\n        <div className=\"bg-white rounded shadow p-4\">\r\n          <h3 className=\"font-medium mb-3 text-[#35095E]\">Navigation</h3>\r\n          <nav className=\"space-y-2\">\r\n            <button\r\n              onClick={() => setActivePanel(\"portions\")}\r\n              className={`w-full text-left p-2 rounded text-white ${activePanel === \"portions\" ? 'bg-blue-500 text-[#35095E]' : 'hover:bg-transparent hover:shadow hover:text-[#35095E]'} `}\r\n            >\r\n              Portions ({portions.length})\r\n            </button>\r\n            <button\r\n              onClick={() => selectedPortion && setActivePanel(\"subjects\")}\r\n              disabled={!selectedPortion}\r\n              className={`w-full text-left p-2 rounded text-white ${activePanel === \"subjects\" ? 'bg-blue-500 text-[#35095E]' : 'hover:bg-transparent hover:shadow hover:text-[#35095E]'} ${!selectedPortion ? 'opacity-50' : ''}`}\r\n            >\r\n              Subjects ({subjects.length})\r\n            </button>\r\n            <button\r\n              onClick={() => selectedSubject && setActivePanel(\"chapters\")}\r\n              disabled={!selectedSubject}\r\n              className={`w-full text-left p-2 rounded text-white ${activePanel === \"chapters\" ? 'bg-blue-500 text-[#35095E]' : 'hover:bg-transparent hover:shadow hover:text-[#35095E]'} ${!selectedSubject ? 'opacity-50' : ''}`}\r\n            >\r\n              Chapters ({chapters.length})\r\n            </button>\r\n            <button\r\n              onClick={() => selectedChapter && setActivePanel(\"topics\")}\r\n              disabled={!selectedChapter}\r\n              className={`w-full text-left p-2 rounded text-white ${activePanel === \"topics\" ? 'bg-blue-500 text-[#35095E]' : 'hover:bg-transparent hover:shadow hover:text-[#35095E]'} ${!selectedChapter ? 'opacity-50' : ''}`}\r\n            >\r\n              Topics ({topics.length})\r\n            </button>\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"lg:col-span-3\">\r\n          {activePanel === \"portions\" && (\r\n            <ContentPanel\r\n              title=\"Portions\"\r\n              items={filteredPortions}\r\n              onSelect={handlePortionSelect}\r\n              onToggleBlock={(id, isPremium) => toggleBlock(\"portion\", id, isPremium)}\r\n              loading={loading}\r\n            />\r\n          )}\r\n\r\n          {activePanel === \"subjects\" && (\r\n            <ContentPanel\r\n              title=\"Subjects\"\r\n              items={filteredSubjects}\r\n              onSelect={handleSubjectSelect}\r\n              onToggleBlock={(id, isPremium) => toggleBlock(\"subject\", id, isPremium)}\r\n              loading={loading}\r\n            />\r\n          )}\r\n\r\n          {activePanel === \"chapters\" && (\r\n            <ContentPanel\r\n              title=\"Chapters\"\r\n              items={filteredChapters}\r\n              onSelect={handleChapterSelect}\r\n              onToggleBlock={(id, isPremium) => toggleBlock(\"chapter\", id, isPremium)}\r\n              loading={loading}\r\n            />\r\n          )}\r\n\r\n          {activePanel === \"topics\" && (\r\n            <ContentPanel\r\n              title=\"Topics\"\r\n              items={filteredTopics}\r\n              onToggleBlock={(id, isPremium) => toggleBlock(\"topic\", id, isPremium)}\r\n              loading={loading}\r\n              gridView\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading Overlay */}\r\n      {loading && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center\">\r\n          <div className=\"bg-white p-6 rounded shadow-lg flex items-center gap-2\">\r\n            <FiRefreshCw className=\"animate-spin\" />\r\n            <span>Loading...</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Content Panel Component\r\nconst ContentPanel = ({ title, items, onSelect, onToggleBlock, loading, gridView = false }) => {\r\n  return (\r\n    <div className=\"bg-white rounded shadow overflow-hidden\">\r\n      <div className=\"p-4 border-b\">\r\n        <h3 className=\"font-medium text-[#35095E]\">{title} ({items.length})</h3>\r\n      </div>\r\n      <div className=\"p-4\">\r\n        {items.length > 0 ? (\r\n          gridView ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n              {items.map(item => (\r\n                <BlockItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  onToggleBlock={onToggleBlock}\r\n                  loading={loading}\r\n                />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-2\">\r\n              {items.map(item => (\r\n                <div key={item.id} className=\"flex justify-between items-center gap-4 p-3 hover:bg-gray-50 rounded\">\r\n                  <BlockItem\r\n                    item={item}\r\n                    onToggleBlock={onToggleBlock}\r\n                    loading={loading}\r\n                  />\r\n                  {onSelect && (\r\n                    <button\r\n                      onClick={() => onSelect(item.id)}\r\n                      className=\"px-3 py-1 text-sm bg-blue-50 text-blue-600 rounded hover:bg-blue-100\"\r\n                    >\r\n                      View\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            No items found\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Block Item Component\r\nconst BlockItem = ({ item, onToggleBlock, loading }) => {\r\n  return (\r\n    <div className=\"flex items-center justify-between flex-1\">\r\n      <span className=\"truncate\">{item.name}</span>\r\n      <button\r\n        onClick={() => onToggleBlock(item.id, item.isPremium)}\r\n        disabled={loading}\r\n        className={`px-3 py-1 text-sm rounded ${item.isPremium ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'} hover:opacity-80 disabled:opacity-50`}\r\n      >\r\n        {item.isPremium ? (\r\n          <>\r\n            <FiX className=\"inline mr-1\" /> Blocked\r\n          </>\r\n        ) : (\r\n          <>\r\n            <FiCheck className=\"inline mr-1\" /> Unblocked\r\n          </>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockContentPage;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}