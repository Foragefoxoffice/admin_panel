{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"Wrapper.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/output/svg/Wrapper.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGWrapper class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {OptionList} from '../../util/Options.js';\nimport {BBox} from '../../util/BBox.js';\nimport {CommonWrapper, AnyWrapperClass, Constructor} from '../common/Wrapper.js';\nimport {SVG, XLINKNS} from '../svg.js';\nimport {SVGWrapperFactory} from './WrapperFactory.js';\nimport {SVGFontData, SVGDelimiterData, SVGCharOptions} from './FontData.js';\n\nexport {Constructor, StringMap} from '../common/Wrapper.js';\n\n/*****************************************************************/\n\n/**\n * Shorthand for makeing a SVGWrapper constructor\n */\nexport type SVGConstructor<N, T, D> = Constructor<SVGWrapper<N, T, D>>;\n\n\n/*****************************************************************/\n/**\n *  The type of the SVGWrapper class (used when creating the wrapper factory for this class)\n */\nexport interface SVGWrapperClass extends AnyWrapperClass {\n\n  kind: string;\n\n}\n\n/*****************************************************************/\n/**\n *  The base SVGWrapper class\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGWrapper<N, T, D> extends\nCommonWrapper<\n  SVG<N, T, D>,\n  SVGWrapper<N, T, D>,\n  SVGWrapperClass,\n  SVGCharOptions,\n  SVGDelimiterData,\n  SVGFontData\n> {\n\n  /**\n   * The kind of wrapper\n   */\n  public static kind: string = 'unknown';\n\n  /**\n   * A fuzz factor for borders to avoid anti-alias problems at the edges\n   */\n  public static borderFuzz = 0.005;\n\n  /**\n   * The factory used to create more SVGWrappers\n   */\n  protected factory: SVGWrapperFactory<N, T, D>;\n\n  /**\n   * @override\n   */\n  public parent: SVGWrapper<N, T, D>;\n  /**\n   * @override\n   */\n  public childNodes: SVGWrapper<N, T, D>[];\n\n  /**\n   * The SVG element generated for this wrapped node\n   */\n  public element: N = null;\n\n  /**\n   * Offset due to border/padding\n   */\n  public dx: number = 0;\n\n  /**\n   * @override\n   */\n  public font: SVGFontData;\n\n  /*******************************************************************/\n\n  /**\n   * Create the HTML for the wrapped node.\n   *\n   * @param {N} parent  The HTML node where the output is added\n   */\n  public toSVG(parent: N) {\n    this.addChildren(this.standardSVGnode(parent));\n  }\n\n  /**\n   * @param {N} parent  The element in which to add the children\n   */\n  public addChildren(parent: N) {\n    let x = 0;\n    for (const child of this.childNodes) {\n      child.toSVG(parent);\n      const bbox = child.getOuterBBox();\n      if (child.element) {\n        child.place(x + bbox.L * bbox.rscale, 0);\n      }\n      x += (bbox.L + bbox.w + bbox.R) * bbox.rscale;\n    }\n  }\n\n  /*******************************************************************/\n\n  /**\n   * Create the standard SVG element for the given wrapped node.\n   *\n   * @param {N} parent  The HTML element in which the node is to be created\n   * @returns {N}  The root of the HTML tree for the wrapped node's output\n   */\n  protected standardSVGnode(parent: N): N {\n    const svg = this.createSVGnode(parent);\n    this.handleStyles();\n    this.handleScale();\n    this.handleBorder();\n    this.handleColor();\n    this.handleAttributes();\n    return svg;\n  }\n\n  /**\n   * @param {N} parent  The HTML element in which the node is to be created\n   * @returns {N}  The root of the HTML tree for the wrapped node's output\n   */\n  protected createSVGnode(parent: N): N {\n    this.element = this.svg('g', {'data-mml-node': this.node.kind});\n    const href = this.node.attributes.get('href');\n    if (href) {\n      parent = this.adaptor.append(parent, this.svg('a', {href: href})) as N;\n      const {h, d, w} = this.getOuterBBox();\n      this.adaptor.append(this.element, this.svg('rect', {\n        'data-hitbox': true, fill: 'none', stroke: 'none', 'pointer-events': 'all',\n        width: this.fixed(w), height: this.fixed(h + d), y: this.fixed(-d)\n      }));\n    }\n    this.adaptor.append(parent, this.element) as N;\n    return this.element;\n  }\n\n  /**\n   * Set the CSS styles for the svg element\n   */\n  protected handleStyles() {\n    if (!this.styles) return;\n    const styles = this.styles.cssText;\n    if (styles) {\n      this.adaptor.setAttribute(this.element, 'style', styles);\n    }\n    BBox.StyleAdjust.forEach(([name, , lr]) => {\n      if (lr !== 0) return;\n      const x = this.styles.get(name);\n      if (x) {\n        this.dx += this.length2em(x, 1, this.bbox.rscale);\n      }\n    });\n  }\n\n  /**\n   * Set the (relative) scaling factor for the node\n   */\n  protected handleScale() {\n    if (this.bbox.rscale !== 1) {\n      const scale = 'scale(' + this.fixed(this.bbox.rscale / 1000, 3) + ')';\n      this.adaptor.setAttribute(this.element, 'transform', scale);\n    }\n  }\n\n  /**\n   * Add the foreground and background colors\n   * (Only look at explicit attributes, since inherited ones will\n   *  be applied to a parent element, and we will inherit from that)\n   */\n  protected handleColor() {\n    const adaptor = this.adaptor;\n    const attributes = this.node.attributes;\n    const mathcolor = attributes.getExplicit('mathcolor') as string;\n    const color = attributes.getExplicit('color') as string;\n    const mathbackground = attributes.getExplicit('mathbackground') as string;\n    const background = attributes.getExplicit('background') as string;\n    const bgcolor = (this.styles?.get('background-color') || '');\n    if (mathcolor || color) {\n      adaptor.setAttribute(this.element, 'fill', mathcolor || color);\n      adaptor.setAttribute(this.element, 'stroke', mathcolor || color);\n    }\n    if (mathbackground || background || bgcolor) {\n      let {h, d, w} = this.getOuterBBox();\n      let rect = this.svg('rect', {\n        fill: mathbackground || background || bgcolor,\n        x: this.fixed(-this.dx), y: this.fixed(-d),\n        width: this.fixed(w),\n        height: this.fixed(h + d),\n        'data-bgcolor': true\n      });\n      let child = adaptor.firstChild(this.element);\n      if (child) {\n        adaptor.insert(rect, child);\n      } else {\n        adaptor.append(this.element, rect);\n      }\n    }\n  }\n\n  /**\n   * Create the borders, if any are requested.\n   */\n  protected handleBorder() {\n    if (!this.styles) return;\n    const width = Array(4).fill(0);\n    const style = Array(4);\n    const color = Array(4);\n    for (const [name, i] of [['Top', 0], ['Right', 1], ['Bottom', 2], ['Left', 3]] as [string, number][]) {\n      const key = 'border' + name;\n      const w = this.styles.get(key + 'Width');\n      if (!w) continue;\n      width[i] = Math.max(0, this.length2em(w, 1, this.bbox.rscale));\n      style[i] = this.styles.get(key + 'Style') || 'solid';\n      color[i] = this.styles.get(key + 'Color') || 'currentColor';\n    }\n    const f = SVGWrapper.borderFuzz;\n    const bbox = this.getOuterBBox();\n    const [h, d, w] = [bbox.h + f, bbox.d + f, bbox.w + f];\n    const outerRT = [w, h];\n    const outerLT = [-f, h];\n    const outerRB = [w, -d];\n    const outerLB = [-f, -d];\n    const innerRT = [w - width[1], h - width[0]];\n    const innerLT = [-f + width[3], h - width[0]];\n    const innerRB = [w - width[1], -d + width[2]];\n    const innerLB = [-f + width[3], -d + width[2]];\n    const paths: number[][][] = [\n      [outerLT, outerRT, innerRT, innerLT],\n      [outerRB, outerRT, innerRT, innerRB],\n      [outerLB, outerRB, innerRB, innerLB],\n      [outerLB, outerLT, innerLT, innerLB]\n    ];\n    const adaptor = this.adaptor;\n    const child = adaptor.firstChild(this.element) as N;\n    for (const i of [0, 1, 2, 3]) {\n      if (!width[i]) continue;\n      const path = paths[i];\n      if (style[i] === 'dashed' || style[i] === 'dotted') {\n        this.addBorderBroken(path, color[i], style[i], width[i], i);\n      } else {\n        this.addBorderSolid(path, color[i], child);\n      }\n    }\n  }\n\n  /**\n   * Create a solid border piece with the given color\n   *\n   * @param {[number, number][]} path    The points for the border segment\n   * @param {string} color               The color to use\n   * @param {N} child                    Insert the border before this child, if any\n   */\n  protected addBorderSolid(path: number[][], color: string, child: N) {\n    const border = this.svg('polygon', {\n      points: path.map(([x, y]) => `${this.fixed(x - this.dx)},${this.fixed(y)}`).join(' '),\n      stroke: 'none',\n      fill: color\n    });\n    if (child) {\n      this.adaptor.insert(border, child);\n    } else {\n      this.adaptor.append(this.element, border);\n    }\n  }\n\n  /**\n   * Create a dashed or dotted border line with the given width and color\n   *\n   * @param {[number, number][]} path   The points for the border segment\n   * @param {string} color              The color to use\n   * @param {string} style              Either 'dotted' or 'dashed'\n   * @param {number} t                  The thickness for the border line\n   * @param {number} i                  The side being drawn\n   */\n  protected addBorderBroken(path: number[][], color: string, style: string, t: number, i: number) {\n    const dot = (style === 'dotted');\n    const t2 = t / 2;\n    const [tx1, ty1, tx2, ty2] = [[t2, -t2, -t2, -t2], [-t2, t2, -t2, -t2], [t2, t2, -t2, t2], [t2, t2, t2, -t2]][i];\n    const [A, B] = path;\n    const x1 = A[0] + tx1 - this.dx, y1 = A[1] + ty1;\n    const x2 = B[0] + tx2 - this.dx, y2 = B[1] + ty2;\n    const W = Math.abs(i % 2 ? y2 - y1 : x2 - x1);\n    const n = (dot ? Math.ceil(W / (2 * t)) : Math.ceil((W - t) / (4 * t)));\n    const m = W / (4 * n + 1);\n    const line = this.svg('line', {\n      x1: this.fixed(x1), y1: this.fixed(y1),\n      x2: this.fixed(x2), y2: this.fixed(y2),\n      'stroke-width': this.fixed(t), stroke: color, 'stroke-linecap': dot ? 'round' : 'square',\n      'stroke-dasharray': dot ? [1, this.fixed(W / n - .002)].join(' ') : [this.fixed(m), this.fixed(3 * m)].join(' ')\n    });\n    const adaptor = this.adaptor;\n    const child = adaptor.firstChild(this.element);\n    if (child) {\n      adaptor.insert(line, child);\n    } else {\n      adaptor.append(this.element, line);\n    }\n  }\n\n  /**\n   * Copy RDFa, aria, and other tags from the MathML to the SVG output nodes.\n   * Don't copy those in the skipAttributes list, or anything that already exists\n   * as a property of the node (e.g., no \"onlick\", etc.).  If a name in the\n   * skipAttributes object is set to false, then the attribute WILL be copied.\n   * Add the class to any other classes already in use.\n   */\n  protected handleAttributes() {\n    const attributes = this.node.attributes;\n    const defaults = attributes.getAllDefaults();\n    const skip = SVGWrapper.skipAttributes;\n    for (const name of attributes.getExplicitNames()) {\n      if (skip[name] === false || (!(name in defaults) && !skip[name] &&\n                                   !this.adaptor.hasAttribute(this.element, name))) {\n        this.adaptor.setAttribute(this.element, name, attributes.getExplicit(name) as string);\n      }\n    }\n    if (attributes.get('class')) {\n      const names = (attributes.get('class') as string).trim().split(/ +/);\n      for (const name of names) {\n        this.adaptor.addClass(this.element, name);\n      }\n    }\n  }\n\n  /*******************************************************************/\n\n  /**\n   * @param {number} x   The x-offset for the element\n   * @param {number} y   The y-offset for the element\n   * @param {N} element  The element to be placed\n   */\n  public place(x: number, y: number, element: N = null) {\n    x += this.dx;\n    if (!(x || y)) return;\n    if (!element) {\n      element = this.element;\n      y = this.handleId(y);\n    }\n    const translate = `translate(${this.fixed(x)},${this.fixed(y)})`;\n    const transform = this.adaptor.getAttribute(element, 'transform') || '';\n    this.adaptor.setAttribute(element, 'transform', translate + (transform ? ' ' + transform : ''));\n  }\n\n  /**\n   * Firefox and Safari don't scroll to the top of the element with an Id, so\n   *   we shift the element up and then translate its contents down in order to\n   *   correct for their positioning.  Also, Safari will go to the baseline of\n   *   a <text> element (e.g., when mtextInheritFont is true), so add a text\n   *   element to help Safari get the right location.\n   *\n   * @param {number} y     The current offset of the element\n   * @return {number}      The new offset for the element if it has an id\n   */\n  protected handleId(y: number): number {\n    if (!this.node.attributes || !this.node.attributes.get('id')) {\n      return y;\n    }\n    const adaptor = this.adaptor;\n    const h = this.getBBox().h;\n    //\n    //  Remove the element's children and put them into a <g> with transform\n    //\n    const children =  adaptor.childNodes(this.element);\n    children.forEach(child => adaptor.remove(child));\n    const g = this.svg('g', {'data-idbox': true, transform: `translate(0,${this.fixed(-h)})`}, children);\n    //\n    //  Add the text element (not transformed) and the transformed <g>\n    //\n    adaptor.append(this.element, this.svg('text', {'data-id-align': true} , [this.text('')]));\n    adaptor.append(this.element, g);\n    return y + h;\n  }\n\n  /**\n   * Return the first child element, skipping id align boxes and href hit boxes\n   *\n   * @return {N}   The first \"real\" child element\n   */\n  public firstChild(): N {\n    const adaptor = this.adaptor;\n    let child = adaptor.firstChild(this.element);\n    if (child && adaptor.kind(child) === 'text' && adaptor.getAttribute(child, 'data-id-align')) {\n      child = adaptor.firstChild(adaptor.next(child));\n    }\n    if (child && adaptor.kind(child) === 'rect' && adaptor.getAttribute(child, 'data-hitbox')) {\n      child = adaptor.next(child);\n    }\n    return child;\n  }\n\n  /**\n   * @param {number} n        The character number\n   * @param {number} x        The x-position of the character\n   * @param {number} y        The y-position of the character\n   * @param {N} parent        The container for the character\n   * @param {string} variant  The variant to use for the character\n   * @return {number}         The width of the character\n   */\n  public placeChar(n: number, x: number, y: number, parent: N, variant: string = null): number {\n    if (variant === null) {\n      variant = this.variant;\n    }\n    const C = n.toString(16).toUpperCase();\n    const [ , , w, data] = this.getVariantChar(variant, n);\n    if ('p' in data) {\n      const path = (data.p ? 'M' + data.p + 'Z' : '');\n      this.place(x, y, this.adaptor.append(parent, this.charNode(variant, C, path)));\n    } else if ('c' in data) {\n      const g = this.adaptor.append(parent, this.svg('g', {'data-c': C}));\n      this.place(x, y, g);\n      x = 0;\n      for (const n of this.unicodeChars(data.c, variant)) {\n        x += this.placeChar(n, x, y, g, variant);\n      }\n    } else if (data.unknown) {\n      const char = String.fromCodePoint(n);\n      const text = this.adaptor.append(parent, this.jax.unknownText(char, variant));\n      this.place(x, y, text);\n      return this.jax.measureTextNodeWithCache(text, char, variant).w;\n    }\n    return w;\n  }\n\n  /**\n   * @param {string} variant    The name of the variant being used\n   * @param {string} C          The hex string for the character code\n   * @param {string} path       The data from the character\n   * @return {N}                The <path> or <use> node for the glyph\n   */\n  protected charNode(variant: string, C: string, path: string): N {\n    const cache = this.jax.options.fontCache;\n    return (cache !== 'none' ? this.useNode(variant, C, path) : this.pathNode(C, path));\n  }\n\n  /**\n   * @param {string} C          The hex string for the character code\n   * @param {string} path       The data from the character\n   * @return {N}                The <path> for the glyph\n   */\n  protected pathNode(C: string, path: string): N {\n    return this.svg('path', {'data-c': C, d: path});\n  }\n\n  /**\n   * @param {string} variant    The name of the variant being used\n   * @param {string} C          The hex string for the character code\n   * @param {string} path       The data from the character\n   * @return {N}                The <use> node for the glyph\n   */\n  protected useNode(variant: string, C: string, path: string): N {\n    const use = this.svg('use', {'data-c': C});\n    const id = '#' + this.jax.fontCache.cachePath(variant, C, path);\n    this.adaptor.setAttribute(use, 'href', id, XLINKNS);\n    return use;\n  }\n\n  /*******************************************************************/\n  /**\n   * For debugging\n   */\n\n  public drawBBox() {\n    let {w, h, d}  = this.getBBox();\n    const box = this.svg('g', {style: {\n      opacity: .25\n    }}, [\n      this.svg('rect', {\n        fill: 'red',\n        height: this.fixed(h),\n        width: this.fixed(w)\n      }),\n      this.svg('rect', {\n        fill: 'green',\n        height: this.fixed(d),\n        width: this.fixed(w),\n        y: this.fixed(-d)\n      })\n    ] as N[]);\n    const node = this.element || this.parent.element;\n    this.adaptor.append(node, box);\n  }\n\n  /*******************************************************************/\n  /*\n   * Easy access to some utility routines\n   */\n\n  /**\n   * @param {string} type      The tag name of the HTML node to be created\n   * @param {OptionList} def   The properties to set for the created node\n   * @param {(N|T)[]} content  The child nodes for the created HTML node\n   * @return {N}               The generated HTML tree\n   */\n  public html(type: string, def: OptionList = {}, content: (N | T)[] = []): N {\n    return this.jax.html(type, def, content);\n  }\n\n  /**\n   * @param {string} type      The tag name of the svg node to be created\n   * @param {OptionList} def   The properties to set for the created node\n   * @param {(N|T)[]} content  The child nodes for the created SVG node\n   * @return {N}               The generated SVG tree\n   */\n  public svg(type: string, def: OptionList = {}, content: (N | T)[] = []): N {\n    return this.jax.svg(type, def, content);\n  }\n\n  /**\n   * @param {string} text  The text from which to create an HTML text node\n   * @return {T}  The generated text node with the given text\n   */\n  public text(text: string): T {\n    return this.jax.text(text);\n  }\n\n  /**\n   * @param {number} x   The dimension to display\n   * @param {number=} n  The number of digits to display\n   * @return {string}    The dimension with the given number of digits (minus trailing zeros)\n   */\n  public fixed(x: number, n: number = 1): string {\n    return this.jax.fixed(x * 1000, n);\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"file":"Notation.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/output/svg/Notation.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements utilities for notations for menclose elements\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVGmenclose} from './Wrappers/menclose.js';\nimport * as Notation from '../common/Notation.js';\nexport * from '../common/Notation.js';\n\n/*******************************************************************/\n\n/**\n * Shorthand for SVGmenclose\n */\nexport type Menclose = SVGmenclose<any, any, any>;\n\n\n/*\n * Shorthands for common types\n */\nexport type RENDERER<N, T, D> = Notation.Renderer<SVGmenclose<N, T, D>, N>;\nexport type DEFPAIR<N, T, D> = Notation.DefPair<SVGmenclose<N, T, D>, N>;\n\n/**\n * The kinds of lines that can be drawn\n */\nexport type LineName = Notation.Side | ('vertical' | 'horizontal' | 'up' | 'down');\n\n/**\n * [x1,y1, x2,y2] endpoints for a line\n */\nexport type LineData = [number, number, number, number];\n\n/**\n * Functions for computing the line data for each type of line\n */\nexport const computeLineData = {\n  top: (h, _d, w, t) => [0, h - t, w, h - t],\n  right: (h, d, w, t) => [w - t, -d, w - t, h],\n  bottom: (_h, d, w, t) => [0, t - d, w, t - d],\n  left: (h, d, _w, t) => [t, -d, t, h],\n  vertical: (h, d, w, _t) => [w / 2, h, w / 2, -d],\n  horizontal: (h, d, w, _t) => [0, (h - d) / 2, w, (h - d) / 2],\n  up: (h, d, w, t) => [t, t - d, w - t, h - t],\n  down: (h, d, w, t) => [t, h - t, w - t, t - d]\n} as {[kind: string]: (h: number, d: number, w: number, t: number) => LineData};\n\n/**\n * The data for a given line as two endpoints: [x1, y1, x2, y1]\n *\n * @param {Menclose} node   The node whose line is to be drawn\n * @param {LineName} kind   The type of line to draw for the node\n * @param {string} offset   The offset direction, if any\n * @return {LineData}       The coordinates of the two endpoints\n */\nexport const lineData = function(node: Menclose, kind: LineName, offset: string = ''): LineData {\n  const {h, d, w} = node.getBBox();\n  const t = node.thickness / 2;\n  return lineOffset(computeLineData[kind](h, d, w, t), node, offset);\n};\n\n/**\n * Recenter the line data for vertical and horizontal lines\n *\n * @param {LineData} data   The line endpoints to adjust\n * @param {Menclose} node   The menclose node\n * @param {string} offset   The direction to offset\n */\nexport const lineOffset = function(data: LineData, node: Menclose, offset: string): LineData {\n  if (offset) {\n    const d = node.getOffset(offset);\n    if (d) {\n      if (offset === 'X') {\n        data[0] -= d;\n        data[2] -= d;\n      } else {\n        data[1] -= d;\n        data[3] -= d;\n      }\n    }\n  }\n  return data;\n};\n\n\n/*******************************************************************/\n\n/**\n * @param {LineName} line  The name of the line to create\n * @return {RENDERER}      The renderer function for the given line\n */\nexport const RenderLine = function<N, T, D>(line: LineName, offset: string = ''): RENDERER<N, T, D> {\n  return ((node, _child) => {\n    const L = node.line(lineData(node, line, offset));\n    node.adaptor.append(node.element, L);\n  });\n};\n\n/*******************************************************************/\n\n/**\n * @param {Notation.Side} side   The kind of line (side, diagonal, etc.)\n * @return {DEFPAIR}      The notation definition for the notation having a line on the given side\n */\nexport const Border = function<N, T, D>(side: Notation.Side): DEFPAIR<N, T, D> {\n  return Notation.CommonBorder<SVGmenclose<N, T, D>, N>((node, _child) => {\n    node.adaptor.append(node.element, node.line(lineData(node, side)));\n  })(side);\n};\n\n\n/**\n * @param {string} name    The name of the notation to define\n * @param {Notation.Side} side1   The first side to get a border\n * @param {Notation.Side} side2   The second side to get a border\n * @return {DEFPAIR}       The notation definition for the notation having lines on two sides\n */\nexport const Border2 = function<N, T, D>(name: string, side1: Notation.Side, side2: Notation.Side): DEFPAIR<N, T, D> {\n  return Notation.CommonBorder2<SVGmenclose<N, T, D>, N>((node, _child) => {\n    node.adaptor.append(node.element, node.line(lineData(node, side1)));\n    node.adaptor.append(node.element, node.line(lineData(node, side2)));\n  })(name, side1, side2);\n};\n\n/*******************************************************************/\n\n/**\n * @param {LineName} name  The name of the diagonal strike to define\n * @return {DEFPAIR}       The notation definition for the diagonal strike\n */\nexport const DiagonalStrike = function<N, T, D>(name: LineName): DEFPAIR<N, T, D> {\n  return Notation.CommonDiagonalStrike<SVGmenclose<N, T, D>, N>((_cname: string) => (node, _child) => {\n    node.adaptor.append(node.element, node.line(lineData(node, name)));\n  })(name);\n};\n\n/*******************************************************************/\n\n/**\n * @param {string} name   The name of the diagonal arrow to define\n * @return {DEFPAIR}      The notation definition for the diagonal arrow\n */\nexport const DiagonalArrow = function<N, T, D>(name: string): DEFPAIR<N, T, D> {\n  return Notation.CommonDiagonalArrow<SVGmenclose<N, T, D>, N>((node, arrow) => {\n    node.adaptor.append(node.element, arrow);\n  })(name);\n};\n\n/**\n * @param {string} name   The name of the horizontal or vertical arrow to define\n * @return {DEFPAIR}      The notation definition for the arrow\n */\nexport const Arrow = function<N, T, D>(name: string): DEFPAIR<N, T, D> {\n  return Notation.CommonArrow<SVGmenclose<N, T, D>, N>((node, arrow) => {\n    node.adaptor.append(node.element, arrow);\n  })(name);\n};\n\n/*******************************************************************/\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"file":"Wrappers.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/output/svg/Wrappers.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  An object listing all the SVGWrapper classes\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {WrapperConstructor} from '../common/Wrapper.js';\nimport {SVGWrapper} from './Wrapper.js';\nimport {SVGmath} from './Wrappers/math.js';\nimport {SVGmrow, SVGinferredMrow} from './Wrappers/mrow.js';\nimport {SVGmi} from './Wrappers/mi.js';\nimport {SVGmo} from './Wrappers/mo.js';\nimport {SVGmn} from './Wrappers/mn.js';\nimport {SVGms} from './Wrappers/ms.js';\nimport {SVGmtext} from './Wrappers/mtext.js';\nimport {SVGmerror} from './Wrappers/merror.js';\nimport {SVGmspace} from './Wrappers/mspace.js';\nimport {SVGmpadded} from './Wrappers/mpadded.js';\nimport {SVGmphantom} from './Wrappers/mphantom.js';\nimport {SVGmfrac} from './Wrappers/mfrac.js';\nimport {SVGmsqrt} from './Wrappers/msqrt.js';\nimport {SVGmroot} from './Wrappers/mroot.js';\nimport {SVGmfenced} from './Wrappers/mfenced.js';\nimport {SVGmsub, SVGmsup, SVGmsubsup} from './Wrappers/msubsup.js';\nimport {SVGmover, SVGmunder, SVGmunderover} from './Wrappers/munderover.js';\nimport {SVGmmultiscripts} from './Wrappers/mmultiscripts.js';\n\nimport {SVGmtable} from './Wrappers/mtable.js';\nimport {SVGmtr, SVGmlabeledtr} from './Wrappers/mtr.js';\nimport {SVGmtd} from './Wrappers/mtd.js';\n\nimport {SVGmaction} from './Wrappers/maction.js';\nimport {SVGmenclose} from './Wrappers/menclose.js';\nimport {SVGsemantics, SVGannotation, SVGannotationXML, SVGxml} from './Wrappers/semantics.js';\nimport {SVGmglyph} from './Wrappers/mglyph.js';\nimport {SVGTeXAtom} from './Wrappers/TeXAtom.js';\nimport {SVGTextNode} from './Wrappers/TextNode.js';\n\nexport const SVGWrappers: {[kind: string]: WrapperConstructor}  = {\n  [SVGmath.kind]: SVGmath,\n  [SVGmrow.kind]: SVGmrow,\n  [SVGinferredMrow.kind]: SVGinferredMrow,\n  [SVGmi.kind]: SVGmi,\n  [SVGmo.kind]: SVGmo,\n  [SVGmn.kind]: SVGmn,\n  [SVGms.kind]: SVGms,\n  [SVGmtext.kind]: SVGmtext,\n  [SVGmerror.kind]: SVGmerror,\n  [SVGmspace.kind]: SVGmspace,\n  [SVGmpadded.kind]: SVGmpadded,\n  [SVGmphantom.kind]: SVGmphantom,\n  [SVGmfrac.kind]: SVGmfrac,\n  [SVGmsqrt.kind]: SVGmsqrt,\n  [SVGmroot.kind]: SVGmroot,\n  [SVGmfenced.kind]: SVGmfenced,\n  [SVGmsub.kind]: SVGmsub,\n  [SVGmsup.kind]: SVGmsup,\n  [SVGmsubsup.kind]: SVGmsubsup,\n  [SVGmunder.kind]: SVGmunder,\n  [SVGmover.kind]: SVGmover,\n  [SVGmunderover.kind]: SVGmunderover,\n  [SVGmmultiscripts.kind]: SVGmmultiscripts,\n  [SVGmtable.kind]: SVGmtable,\n  [SVGmtr.kind]: SVGmtr,\n  [SVGmlabeledtr.kind]: SVGmlabeledtr,\n  [SVGmtd.kind]: SVGmtd,\n  [SVGmaction.kind]: SVGmaction,\n  [SVGmenclose.kind]: SVGmenclose,\n  [SVGsemantics.kind]: SVGsemantics,\n  [SVGannotation.kind]: SVGannotation,\n  [SVGannotationXML.kind]: SVGannotationXML,\n  [SVGxml.kind]: SVGxml,\n  [SVGmglyph.kind]: SVGmglyph,\n  [SVGTeXAtom.kind]: SVGTeXAtom,\n  [SVGTextNode.kind]: SVGTextNode,\n  [SVGWrapper.kind]: SVGWrapper\n};\n"],"names":[],"mappings":";;;;;;AAwBA,IAAA,uCAAwC;AACxC,IAAA,0CAA2C;AAC3C,IAAA,0CAA4D;AAC5D,IAAA,sCAAuC;AACvC,IAAA,sCAAuC;AACvC,IAAA,sCAAuC;AACvC,IAAA,sCAAuC;AACvC,IAAA,4CAA6C;AAC7C,IAAA,8CAA+C;AAC/C,IAAA,8CAA+C;AAC/C,IAAA,gDAAiD;AACjD,IAAA,kDAAmD;AACnD,IAAA,4CAA6C;AAC7C,IAAA,4CAA6C;AAC7C,IAAA,4CAA6C;AAC7C,IAAA,gDAAiD;AACjD,IAAA,gDAAmE;AACnE,IAAA,sDAA4E;AAC5E,IAAA,4DAA6D;AAE7D,IAAA,8CAA+C;AAC/C,IAAA,wCAAwD;AACxD,IAAA,wCAAyC;AAEzC,IAAA,gDAAiD;AACjD,IAAA,kDAAmD;AACnD,IAAA,oDAA8F;AAC9F,IAAA,8CAA+C;AAC/C,IAAA,gDAAiD;AACjD,IAAA,kDAAmD;AAEtC,QAAA,WAAW,GAAA,CAAA,KAAA,CAAA,GACtB,EAAA,CAAC,UAAA,OAAO,CAAC,IAAI,CAAA,GAAG,UAAA,OAAO,EACvB,EAAA,CAAC,UAAA,OAAO,CAAC,IAAI,CAAA,GAAG,UAAA,OAAO,EACvB,EAAA,CAAC,UAAA,eAAe,CAAC,IAAI,CAAA,GAAG,UAAA,eAAe,EACvC,EAAA,CAAC,QAAA,KAAK,CAAC,IAAI,CAAA,GAAG,QAAA,KAAK,EACnB,EAAA,CAAC,QAAA,KAAK,CAAC,IAAI,CAAA,GAAG,QAAA,KAAK,EACnB,EAAA,CAAC,QAAA,KAAK,CAAC,IAAI,CAAA,GAAG,QAAA,KAAK,EACnB,EAAA,CAAC,QAAA,KAAK,CAAC,IAAI,CAAA,GAAG,QAAA,KAAK,EACnB,EAAA,CAAC,WAAA,QAAQ,CAAC,IAAI,CAAA,GAAG,WAAA,QAAQ,EACzB,EAAA,CAAC,YAAA,SAAS,CAAC,IAAI,CAAA,GAAG,YAAA,SAAS,EAC3B,EAAA,CAAC,YAAA,SAAS,CAAC,IAAI,CAAA,GAAG,YAAA,SAAS,EAC3B,EAAA,CAAC,aAAA,UAAU,CAAC,IAAI,CAAA,GAAG,aAAA,UAAU,EAC7B,EAAA,CAAC,cAAA,WAAW,CAAC,IAAI,CAAA,GAAG,cAAA,WAAW,EAC/B,EAAA,CAAC,WAAA,QAAQ,CAAC,IAAI,CAAA,GAAG,WAAA,QAAQ,EACzB,EAAA,CAAC,WAAA,QAAQ,CAAC,IAAI,CAAA,GAAG,WAAA,QAAQ,EACzB,EAAA,CAAC,WAAA,QAAQ,CAAC,IAAI,CAAA,GAAG,WAAA,QAAQ,EACzB,EAAA,CAAC,aAAA,UAAU,CAAC,IAAI,CAAA,GAAG,aAAA,UAAU,EAC7B,EAAA,CAAC,aAAA,OAAO,CAAC,IAAI,CAAA,GAAG,aAAA,OAAO,EACvB,EAAA,CAAC,aAAA,OAAO,CAAC,IAAI,CAAA,GAAG,aAAA,OAAO,EACvB,EAAA,CAAC,aAAA,UAAU,CAAC,IAAI,CAAA,GAAG,aAAA,UAAU,EAC7B,EAAA,CAAC,gBAAA,SAAS,CAAC,IAAI,CAAA,GAAG,gBAAA,SAAS,EAC3B,EAAA,CAAC,gBAAA,QAAQ,CAAC,IAAI,CAAA,GAAG,gBAAA,QAAQ,EACzB,EAAA,CAAC,gBAAA,aAAa,CAAC,IAAI,CAAA,GAAG,gBAAA,aAAa,EACnC,EAAA,CAAC,mBAAA,gBAAgB,CAAC,IAAI,CAAA,GAAG,mBAAA,gBAAgB,EACzC,EAAA,CAAC,YAAA,SAAS,CAAC,IAAI,CAAA,GAAG,YAAA,SAAS,EAC3B,EAAA,CAAC,SAAA,MAAM,CAAC,IAAI,CAAA,GAAG,SAAA,MAAM,EACrB,EAAA,CAAC,SAAA,aAAa,CAAC,IAAI,CAAA,GAAG,SAAA,aAAa,EACnC,EAAA,CAAC,SAAA,MAAM,CAAC,IAAI,CAAA,GAAG,SAAA,MAAM,EACrB,EAAA,CAAC,aAAA,UAAU,CAAC,IAAI,CAAA,GAAG,aAAA,UAAU,EAC7B,EAAA,CAAC,cAAA,WAAW,CAAC,IAAI,CAAA,GAAG,cAAA,WAAW,EAC/B,EAAA,CAAC,eAAA,YAAY,CAAC,IAAI,CAAA,GAAG,eAAA,YAAY,EACjC,EAAA,CAAC,eAAA,aAAa,CAAC,IAAI,CAAA,GAAG,eAAA,aAAa,EACnC,EAAA,CAAC,eAAA,gBAAgB,CAAC,IAAI,CAAA,GAAG,eAAA,gBAAgB,EACzC,EAAA,CAAC,eAAA,MAAM,CAAC,IAAI,CAAA,GAAG,eAAA,MAAM,EACrB,EAAA,CAAC,YAAA,SAAS,CAAC,IAAI,CAAA,GAAG,YAAA,SAAS,EAC3B,EAAA,CAAC,aAAA,UAAU,CAAC,IAAI,CAAA,GAAG,aAAA,UAAU,EAC7B,EAAA,CAAC,cAAA,WAAW,CAAC,IAAI,CAAA,GAAG,cAAA,WAAW,EAC/B,EAAA,CAAC,aAAA,UAAU,CAAC,IAAI,CAAA,GAAG,aAAA,UAAU,MAC7B","ignoreList":[0]}},
    {"offset": {"line": 829, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"file":"WrapperFactory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/output/svg/WrapperFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGWrapperFactory class\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVG} from '../svg.js';\nimport {CommonWrapperFactory} from '../common/WrapperFactory.js';\nimport {SVGWrapper, SVGWrapperClass} from './Wrapper.js';\nimport {SVGWrappers} from './Wrappers.js';\nimport {SVGCharOptions, SVGDelimiterData, SVGFontData} from './FontData.js';\n\n/*****************************************************************/\n/*\n *  The SVGWrapperFactory class for creating CHTMLWrapper nodes\n *\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class SVGWrapperFactory<N, T, D> extends\nCommonWrapperFactory<\n  SVG<N, T, D>,\n  SVGWrapper<N, T, D>,\n  SVGWrapperClass,\n  SVGCharOptions,\n  SVGDelimiterData,\n  SVGFontData\n> {\n\n  /**\n   * The default list of wrapper nodes this factory can create\n   */\n  public static defaultNodes = SVGWrappers;\n\n  /**\n   * The CHTML output jax associated with this factory\n   */\n  public jax: SVG<N, T, D> = null;\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,6DAAiE;AAEjE,IAAA,yCAA0C;AAW1C,IAAA,oBAAA,SAAA,MAAA;IACA,UAAA,mBAAA,QAOC;IARD,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAoBC;QAFQ,MAAA,GAAG,GAAiB,IAAI,CAAC;;IAElC,CAAC;IAPe,kBAAA,YAAY,GAAG,cAAA,WAAW,CAAC;IAO3C,OAAA,iBAAC;CAAA,AApBD,CACA,oBAAA,oBAAoB,GAmBnB;AApBY,QAAA,iBAAA,GAAA,kBAAiB","ignoreList":[0]}},
    {"offset": {"line": 872, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 877, "column": 0}, "map": {"version":3,"file":"FontData.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/output/svg/FontData.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the SVGFontData class for font data in SVG output.\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {CharMap, CharOptions, CharData, VariantData, DelimiterData, FontData} from '../common/FontData.js';\nexport * from '../common/FontData.js';\n\nexport type CharStringMap = {[name: number]: string};\n\n/**\n * Add the extra data needed for CharOptions in SVG\n */\nexport interface SVGCharOptions extends CharOptions {\n  c?: string;                   // the character value (overrides default value)\n  p?: string;                   // svg path\n}\n\n/**\n * Shorthands for SVG char maps and char data\n */\nexport type SVGCharMap = CharMap<SVGCharOptions>;\nexport type SVGCharData = CharData<SVGCharOptions>;\n\n/**\n * The extra data needed for a Variant in SVG output\n */\nexport interface SVGVariantData extends VariantData<SVGCharOptions> {\n  cacheID: string;\n}\n\n/**\n * the extra data neede for a Delimiter in SVG output\n */\nexport interface SVGDelimiterData extends DelimiterData {\n}\n\n\n/****************************************************************************/\n\n/**\n * The SVG FontData class\n */\nexport class SVGFontData extends FontData<SVGCharOptions, SVGVariantData, SVGDelimiterData> {\n\n  /**\n   * @override\n   */\n  public static OPTIONS = {\n    ...FontData.OPTIONS,\n    dynamicPrefix: './output/svg/fonts'\n  };\n\n  /**\n   * @override\n   */\n  public static JAX = 'SVG';\n\n  /**\n   * @override\n   */\n  public static charOptions(font: SVGCharMap, n: number) {\n    return super.charOptions(font, n) as SVGCharOptions;\n  }\n\n}\n\nexport type SVGFontDataClass = typeof SVGFontData;\n\n/****************************************************************************/\n\n/**\n * @param {CharMap} font        The font to augment\n * @param {CharStringMap} paths     The path data to use for each character\n * @param {CharStringMap} content   The string to use for remapped characters\n * @return {SVGCharMap}            The augmented font\n */\nexport function AddPaths(font: SVGCharMap, paths: CharStringMap, content: CharStringMap): SVGCharMap {\n  for (const c of Object.keys(paths)) {\n    const n = parseInt(c);\n    SVGFontData.charOptions(font, n).p = paths[n];\n  }\n  for (const c of Object.keys(content)) {\n    const n = parseInt(c);\n    SVGFontData.charOptions(font, n).c = content[n];\n  }\n  return font;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,iDAA2G;AAC3G,kIAAA,SAAsC;AAqCtC,IAAA,cAAA,SAAA,MAAA;IAAiC,UAAA,aAAA,QAA0D;IAA3F,SAAA;;IAsBA,CAAC;IAJe,YAAA,WAAW,GAAzB,SAA0B,IAAgB,EAAE,CAAS;QACnD,OAAO,OAAM,WAAW,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,EAAE,CAAC,CAAmB,CAAC;IACtD,CAAC;IAfa,YAAA,OAAO,GAAA,SAAA,SAAA,CAAA,GAChB,cAAA,QAAQ,CAAC,OAAO,GAAA;QACnB,aAAa,EAAE,oBAAoB;IAAA,GACnC;IAKY,YAAA,GAAG,GAAG,KAAK,CAAC;IAS5B,OAAA,WAAC;CAAA,AAtBD,CAAiC,cAAA,QAAQ,GAsBxC;AAtBY,QAAA,WAAA,GAAA,YAAW;AAkCxB,SAAgB,QAAQ,CAAC,IAAgB,EAAE,KAAoB,EAAE,OAAsB;;;QACrF,IAAgB,IAAA,KAAA,SAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;YAA/B,IAAM,CAAC,GAAA,GAAA,KAAA;YACV,IAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtB,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SAC/C;;;;;;;;;;;;;QACD,IAAgB,IAAA,KAAA,SAAA,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;YAAjC,IAAM,CAAC,GAAA,GAAA,KAAA;YACV,IAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACtB,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;SACjD;;;;;;;;;;;;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAVD,QAAA,QAAA,GAAA,SAUC","ignoreList":[0]}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"file":"FontCache.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/output/svg/FontCache.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the FontCache object for SVG output\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {SVG} from '../svg.js';\n\nexport class FontCache<N, T, D> {\n\n  /**\n   * The SVG jax that owsn this cache\n   */\n  protected jax: SVG<N, T, D>;\n\n  /**\n   * The cache of font character IDs to their paths\n   */\n  protected cache: Map<string, string> = new Map();\n\n  /**\n   * The SVG <defs> element for storing the cache\n   */\n  protected defs: N = null;\n\n  /**\n   * A string to use to make per-equation cache IDs unique\n   */\n  protected localID: string = '';\n\n  /**\n   * A number used to make localID values to use for each equation\n   */\n  protected nextID: number = 0;\n\n  /**\n   * @param {SVG} jax  The SVG jax owning this font cache\n   */\n  constructor(jax: SVG<N, T, D>) {\n    this.jax = jax;\n  }\n\n  /**\n   * Cache a character from a particular variant and return the cache ID\n   *\n   * @param {string} variant   The variant name for the character\n   * @param {string} C         The character to be cached\n   * @param {string} path      The SVG path data for the character\n   * @return {string}          The id for the cached <path> element\n   */\n  public cachePath(variant: string, C: string, path: string): string {\n    const id = 'MJX-' + this.localID + (this.jax.font.getVariant(variant).cacheID || '') + '-' + C;\n    if (!this.cache.has(id)) {\n      this.cache.set(id, path);\n      this.jax.adaptor.append(this.defs, this.jax.svg('path', {id: id, d: path}));\n    }\n    return id;\n  }\n\n  /**\n   * Clear the localID value\n   */\n  public clearLocalID() {\n    this.localID = '';\n  }\n\n  /**\n   * Use a localID (for font-specific caching), either with a specific string,\n   * or from the nextID number.\n   */\n  public useLocalID(id: string = null) {\n    this.localID = (id == null ? ++this.nextID : id) + (id === '' ? '' : '-');\n  }\n\n  /**\n   * Clear the cache\n   */\n  public clearCache() {\n    this.cache = new Map();\n    this.defs = this.jax.svg('defs');\n  }\n\n  /**\n   * Return the font cache <defs> element\n   */\n  public getCache() {\n    return this.defs;\n  }\n\n}\n"],"names":[],"mappings":";;;;;AAyBA,IAAA,YAAA;IA8BE,SAAA,UAAY,GAAiB;QApBnB,IAAA,CAAA,KAAK,GAAwB,IAAI,GAAG,EAAE,CAAC;QAKvC,IAAA,CAAA,IAAI,GAAM,IAAI,CAAC;QAKf,IAAA,CAAA,OAAO,GAAW,EAAE,CAAC;QAKrB,IAAA,CAAA,MAAM,GAAW,CAAC,CAAC;QAM3B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IAUM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,OAAe,EAAE,CAAS,EAAE,IAAY;QACvD,IAAM,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;QAC/F,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE;gBAAC,EAAE,EAAE,EAAE;gBAAE,CAAC,EAAE,IAAI;YAAA,CAAC,CAAC,CAAC,CAAC;SAC7E;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAKM,UAAA,SAAA,CAAA,YAAY,GAAnB;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAMM,UAAA,SAAA,CAAA,UAAU,GAAjB,SAAkB,EAAiB;QAAjB,IAAA,OAAA,KAAA,GAAA;YAAA,KAAA,IAAiB;QAAA;QACjC,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5E,CAAC;IAKM,UAAA,SAAA,CAAA,UAAU,GAAjB;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAKM,UAAA,SAAA,CAAA,QAAQ,GAAf;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AAjFD,IAiFC;AAjFY,QAAA,SAAA,GAAA,UAAS","ignoreList":[0]}},
    {"offset": {"line": 1049, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}