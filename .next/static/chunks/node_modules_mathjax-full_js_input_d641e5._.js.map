{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"file":"FindTeX.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/FindTeX.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the TeX version of the FindMath object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractFindMath} from '../../core/FindMath.js';\nimport {OptionList} from '../../util/Options.js';\nimport {sortLength, quotePattern} from '../../util/string.js';\nimport {ProtoItem, protoItem} from '../../core/MathItem.js';\n\n/**\n * Shorthand types for data about end delimiters and delimiter pairs\n */\nexport type EndItem = [string, boolean, RegExp];\nexport type Delims = [string, string];\n\n/*****************************************************************/\n/*\n *  Implements the FindTeX class (extends AbstractFindMath)\n *\n *  Locates TeX expressions within strings\n */\n\n/*\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class FindTeX<N, T, D> extends AbstractFindMath<N, T, D> {\n\n  /**\n   * @type {OptionList}\n   */\n  public static OPTIONS: OptionList = {\n    inlineMath: [              // The start/end delimiter pairs for in-line math\n      //  ['$', '$'],              //  (comment out any you don't want, or add your own, but\n      ['\\\\(', '\\\\)']           //  be sure that you don't have an extra comma at the end)\n    ],\n\n    displayMath: [             // The start/end delimiter pairs for display math\n      ['$$', '$$'],            //  (comment out any you don't want, or add your own, but\n      ['\\\\[', '\\\\]']           //  be sure that you don't have an extra comma at the end)\n    ],\n\n    processEscapes: true,      // set to true to allow \\$ to produce a dollar without\n    //   starting in-line math mode\n    processEnvironments: true, // set to true to process \\begin{xxx}...\\end{xxx} outside\n    //   of math mode, false to prevent that\n    processRefs: true,         // set to true to process \\ref{...} outside of math mode\n  };\n\n  /**\n   * The regular expression for any starting delimiter\n   */\n  protected start: RegExp;\n\n  /**\n   * The end-delimiter data keyed to the opening delimiter string\n   */\n  protected end: {[name: string]: EndItem};\n\n  /**\n   * False if the configuration has no delimiters (so search can be skipped), true otherwise\n   */\n  protected hasPatterns: boolean;\n\n  /**\n   * The index of the \\begin...\\end pattern in the regex match array\n   */\n  protected env: number;\n\n  /**\n   * The index of the \\ref and escaped character patters in the regex match array\n   */\n  protected sub: number;\n\n  /**\n   * @override\n   */\n  constructor(options: OptionList) {\n    super(options);\n    this.getPatterns();\n  }\n\n  /**\n   * Create the patterns needed for searching the strings for TeX\n   *   based on the configuration options\n   */\n  protected getPatterns() {\n    let options = this.options;\n    let starts: string[] = [], parts: string[] = [], subparts: string[] = [];\n    this.end = {};\n    this.env = this.sub = 0;\n    let i = 1;\n    options['inlineMath'].forEach((delims: Delims) => this.addPattern(starts, delims, false));\n    options['displayMath'].forEach((delims: Delims) => this.addPattern(starts, delims, true));\n    if (starts.length) {\n      parts.push(starts.sort(sortLength).join('|'));\n    }\n    if (options['processEnvironments']) {\n      parts.push('\\\\\\\\begin\\\\s*\\\\{([^}]*)\\\\}');\n      this.env = i;\n      i++;\n    }\n    if (options['processEscapes']) {\n      subparts.push('\\\\\\\\([\\\\\\\\$])');\n    }\n    if (options['processRefs']) {\n      subparts.push('(\\\\\\\\(?:eq)?ref\\\\s*\\\\{[^}]*\\\\})');\n    }\n    if (subparts.length) {\n      parts.push('(' + subparts.join('|') + ')');\n      this.sub = i;\n    }\n    this.start = new RegExp(parts.join('|'), 'g');\n    this.hasPatterns = (parts.length > 0);\n  }\n\n  /**\n   * Add the needed patterns for a pair of delimiters\n   *\n   * @param {string[]} starts  Array of starting delimiter strings\n   * @param {Delims} delims    Array of delimiter strings, as [start, end]\n   * @param {boolean} display  True if the delimiters are for display mode\n   */\n  protected addPattern(starts: string[], delims: Delims, display: boolean) {\n    let [open, close] = delims;\n    starts.push(quotePattern(open));\n    this.end[open] = [close, display, this.endPattern(close)];\n  }\n\n  /**\n   * Create the pattern for a close delimiter\n   *\n   * @param {string} end   The end delimiter text\n   * @param {string} endp  The end delimiter pattern (overrides the literal end pattern)\n   * @return {RegExp}      The regular expression for the end delimiter\n   */\n  protected endPattern(end: string, endp?: string): RegExp {\n    return new RegExp((endp || quotePattern(end)) + '|\\\\\\\\(?:[a-zA-Z]|.)|[{}]', 'g');\n  }\n\n  /**\n   * Search for the end delimiter given the start delimiter,\n   *   skipping braced groups, and control sequences that aren't\n   *   the close delimiter.\n   *\n   * @param {string} text            The string being searched for the end delimiter\n   * @param {number} n               The index of the string being searched\n   * @param {RegExpExecArray} start  The result array from the start-delimiter search\n   * @param {EndItem} end            The end-delimiter data corresponding to the start delimiter\n   * @return {ProtoItem<N,T>}        The proto math item for the math, if found\n   */\n  protected findEnd(text: string, n: number, start: RegExpExecArray, end: EndItem): ProtoItem<N, T> {\n    let [close, display, pattern] = end;\n    let i = pattern.lastIndex = start.index + start[0].length;\n    let match: RegExpExecArray, braces: number = 0;\n    while ((match = pattern.exec(text))) {\n      if ((match[1] || match[0]) === close && braces === 0) {\n        return protoItem<N, T>(start[0], text.substr(i, match.index - i), match[0],\n                               n, start.index, match.index + match[0].length, display);\n      } else if (match[0] === '{') {\n        braces++;\n      } else if (match[0] === '}' && braces) {\n        braces--;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Search a string for math delimited by one of the delimiter pairs,\n   *   or by \\begin{env}...\\end{env}, or \\eqref{...}, \\ref{...}, \\\\, or \\$.\n   *\n   * @param {ProtoItem[]} math  The array of proto math items located so far\n   * @param {number} n          The index of the string being searched\n   * @param {string} text       The string being searched\n   */\n  protected findMathInString(math: ProtoItem<N, T>[], n: number, text: string) {\n    let start, match;\n    this.start.lastIndex = 0;\n    while ((start = this.start.exec(text))) {\n      if (start[this.env] !== undefined && this.env) {\n        let end = '\\\\\\\\end\\\\s*(\\\\{' + quotePattern(start[this.env]) + '\\\\})';\n        match = this.findEnd(text, n, start, ['{' + start[this.env] + '}', true, this.endPattern(null, end)]);\n        if (match) {\n          match.math = match.open + match.math + match.close;\n          match.open = match.close = '';\n        }\n      } else if (start[this.sub] !== undefined && this.sub) {\n        let math = start[this.sub];\n        let end = start.index + start[this.sub].length;\n        if (math.length === 2) {\n          match = protoItem<N, T>('', math.substr(1), '', n, start.index, end);\n        } else {\n          match = protoItem<N, T>('', math, '', n, start.index, end, false);\n        }\n      } else {\n        match = this.findEnd(text, n, start, this.end[start[0]]);\n      }\n      if (match) {\n        math.push(match);\n        this.start.lastIndex = match.end.n;\n      }\n    }\n  }\n\n  /**\n   * Search for math in an array of strings and return an array of matches.\n   *\n   * @override\n   */\n  public findMath(strings: string[]) {\n    let math: ProtoItem<N, T>[] = [];\n    if (this.hasPatterns) {\n      for (let i = 0, m = strings.length; i < m; i++) {\n        this.findMathInString(math, i, strings[i]);\n      }\n    }\n    return math;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"file":"NodeUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/NodeUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Node utility methods.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {TextNode, MMLNODE, MmlNode, AbstractMmlNode, AbstractMmlEmptyNode} from '../../core/MmlTree/MmlNode.js';\nimport {MmlMo} from '../../core/MmlTree/MmlNodes/mo.js';\nimport {Property, PropertyList} from '../../core/Tree/Node.js';\nimport {Args} from './Types.js';\nimport {OperatorDef} from '../../core/MmlTree/OperatorDictionary.js';\n\n\nnamespace NodeUtil {\n\n  const attrs: Map<String, boolean> = new Map([\n    ['autoOP', true],\n    ['fnOP', true],\n    ['movesupsub', true],\n    ['subsupOK', true],\n    ['texprimestyle', true],\n    ['useHeight', true],\n    ['variantForm', true],\n    ['withDelims', true],\n    ['mathaccent', true],\n    ['open', true],\n    ['close', true]\n  ]);\n\n\n  /**\n   * Creates a single character from a unicode hex string.\n   * @param {string} code The code.\n   * @return {string} The newly created entity.\n   */\n  export function createEntity(code: string): string  {\n    return String.fromCodePoint(parseInt(code, 16));\n  }\n\n\n  /**\n   * Get the children of the a node.\n   * @param {MmlNode} node The node.\n   * @return {MMLNODE[]} Its children.\n   */\n  export function getChildren(node: MmlNode): MMLNODE[] {\n    return (node.childNodes as MMLNODE[]);\n  }\n\n\n  /**\n   * Get text content of a node.\n   * @param {TextNode} node The node.\n   * @return {string} Its text content.\n   */\n  export function getText(node: TextNode): string {\n    return node.getText();\n  }\n\n\n  /**\n   * Append children to a node.\n   * @param {MmlNode} node The node.\n   * @param {MMLNODE[]} children A list of new children.\n   */\n  export function appendChildren(node: MmlNode, children: MMLNODE[])  {\n    for (let child of children) {\n      node.appendChild(child);\n    }\n  }\n\n\n  /**\n   * Sets an attribute of a node.\n   * @param {MmlNode} node The node.\n   * @param {string} attribute An attribute.\n   * @param {Args} value The attribute value.\n   */\n  export function setAttribute(node: MmlNode, attribute: string, value: Args) {\n    node.attributes.set(attribute, value);\n  }\n\n\n  /**\n   * Sets a property of a node.\n   * @param {MmlNode} node The node.\n   * @param {string} property The property.\n   * @param {Args} value The property value.\n   */\n  export function setProperty(node: MmlNode, property: string, value: Args) {\n    node.setProperty(property, value);\n  }\n\n\n  /**\n   * Sets properties and attributes of a node.\n   * @param {MmlNode} node The node.\n   * @param {PropertyList} properties A list of property/attribute value pairs.\n   */\n  export function setProperties(node: MmlNode, properties: PropertyList) {\n    for (const name of Object.keys(properties)) {\n      let value = properties[name];\n      if (name === 'texClass') {\n        node.texClass = (value as number);\n        node.setProperty(name, value);\n      } else if (name === 'movablelimits') {\n        node.setProperty('movablelimits', value);\n        if (node.isKind('mo') || node.isKind('mstyle')) {\n          node.attributes.set('movablelimits', value);\n        }\n      } else if (name === 'inferred') {\n        // ignore\n      } else if (attrs.has(name)) {\n        node.setProperty(name, value);\n      } else {\n        node.attributes.set(name, value);\n      }\n    }\n  }\n\n\n  /**\n   * Returns the property of a node.\n   * @param {MmlNode} node The node.\n   * @param {string} property A property name.\n   * @return {Property} Value of the property.\n   */\n  export function getProperty(node: MmlNode, property: string): Property  {\n    return node.getProperty(property);\n  }\n\n\n  /**\n   * Returns the attribute of a node.\n   * @param {MmlNode} node The node.\n   * @param {string} attr A attribute name.\n   * @return {Property} Value of the attribute.\n   */\n  export function getAttribute(node: MmlNode, attr: string): Property  {\n    return node.attributes.get(attr);\n  }\n\n\n  /**\n   * Removes a set of properties from a node.\n   * @param {MmlNode} node The node.\n   * @param {string[]} ...properties  A list of properties.\n   */\n  export function removeProperties(node: MmlNode, ...properties: string[]) {\n    node.removeProperty(...properties);\n  }\n\n\n  /**\n   * Returns a child node at a given position.\n   * @param {MmlNode} node The node.\n   * @param {number} position The position of the child.\n   * @return {MMLNODE} The child node at position.\n   */\n  export function getChildAt(node: MmlNode, position: number): MMLNODE {\n    return (node.childNodes[position] as MMLNODE);\n  }\n\n\n  /**\n   * Set node child at position.\n   * @param {MmlNode} node The node.\n   * @param {number} position The position of the new child.\n   * @param {MmlNode} child The new child.\n   */\n  export function setChild(node: MmlNode, position: number, child: MmlNode) {\n    let children = node.childNodes;\n    children[position] = child;\n    if (child) {\n      child.parent = node;\n    }\n  }\n\n\n  /**\n   * Copies children between nodes.\n   * @param {MmlNode} oldNode The source node.\n   * @param {MmlNode} newNode The target node.\n   */\n  export function copyChildren(oldNode: MmlNode, newNode: MmlNode) {\n    let children = oldNode.childNodes as (TextNode | MmlNode)[];\n    for (let i = 0; i < children.length; i++) {\n      setChild(newNode, i, children[i]);\n    }\n  }\n\n\n  /**\n   * Copies attributes between nodes.\n   * @param {MmlNode} oldNode The source node.\n   * @param {MmlNode} newNode The target node.\n   */\n  export function copyAttributes(oldNode: MmlNode, newNode: MmlNode) {\n    newNode.attributes = oldNode.attributes;\n    setProperties(newNode, oldNode.getAllProperties());\n  }\n\n\n  /**\n   * Checks if node is of a particular type.\n   * @param {MmlNode} node The node.\n   * @param {string} kind The type to check.\n   * @return {boolean} True if node is of the given type.\n   */\n  export function isType(node: MmlNode, kind: string): boolean  {\n    return node.isKind(kind);\n  }\n\n\n  /**\n   * Checks if the node is embellished.\n   * @param {MmlNode} node The node.\n   * @return {boolean} True if node is embellished.\n   */\n  export function isEmbellished(node: MmlNode): boolean {\n    return node.isEmbellished;\n  }\n\n\n  /**\n   * Gets the texclass of a node.\n   * @param {MmlNode} node The node.\n   * @return {number} Its texclass.\n   */\n  export function getTexClass(node: MmlNode): number  {\n    return node.texClass;\n  }\n\n\n  /**\n   * Gets the mo element at the core of the node.\n   * @param {MmlNode} node The node.\n   * @return {MmlNode} The MO node at the core.\n   */\n  export function getCoreMO(node: MmlNode): MmlNode  {\n    return node.coreMO();\n  }\n\n\n  /**\n   * Checks if an object is a node.\n   * @param {any} item The object.\n   * @return {boolean} True if it is a node.\n   */\n  export function isNode(item: any): boolean  {\n    return item instanceof AbstractMmlNode || item instanceof AbstractMmlEmptyNode;\n  }\n\n\n  /**\n   * Checks if the node is an inferred mrow.\n   * @param {MmlNode} node The node.\n   * @return {boolean} True if the node is an inferred mrow.\n   */\n  export function isInferred(node: MmlNode): boolean {\n    return node.isInferred;\n  }\n\n\n  /**\n   * Gets the operator definition of a node.\n   * @param {MmlNode} node The node.\n   * @return {OperatorDef} If node is an MO returns the operator definition. O/w\n   *    null.\n   */\n  export function getForm(node: MmlNode): OperatorDef {\n    if (!isType(node, 'mo')) {\n      return null;\n    }\n    let mo = node as MmlMo;\n    let forms = mo.getForms();\n    for (let form of forms) {\n      let symbol = MmlMo.OPTABLE[form][mo.getText()];\n      if (symbol) {\n        return symbol;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport default NodeUtil;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"file":"FilterUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/FilterUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Utility functions for standard pre and post filters.\n *\n * @author sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {TEXCLASS, MMLNODE, MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport NodeUtil from './NodeUtil.js';\nimport ParseOptions from './ParseOptions.js';\nimport {MmlMo} from '../../core/MmlTree/MmlNodes/mo.js';\nimport {Attributes} from '../../core/MmlTree/Attributes.js';\n\n\nnamespace FilterUtil {\n\n  /**\n   * Visitor to set stretchy attributes to false on <mo> elements, if they are\n   * not used as delimiters. Also wraps non-stretchy infix delimiters into a\n   * TeXAtom.\n   * @param {MmlNode} math The node to rewrite.\n   * @param {ParseOptions} data The parse options.\n   */\n  export let cleanStretchy = function(arg: {math: any, data: ParseOptions}) {\n    let options = arg.data;\n    for (let mo of options.getList('fixStretchy')) {\n      if (NodeUtil.getProperty(mo, 'fixStretchy')) {\n        let symbol = NodeUtil.getForm(mo);\n        if (symbol && symbol[3] && symbol[3]['stretchy']) {\n          NodeUtil.setAttribute(mo, 'stretchy', false);\n        }\n        const parent = mo.parent;\n        if (!NodeUtil.getTexClass(mo) && (!symbol || !symbol[2])) {\n          const texAtom = options.nodeFactory.create('node', 'TeXAtom', [mo]);\n          parent.replaceChild(texAtom, mo);\n          texAtom.inheritAttributesFrom(mo);\n        }\n        NodeUtil.removeProperties(mo, 'fixStretchy');\n      }\n    }\n  };\n\n\n  /**\n   * Visitor that removes superfluous attributes from nodes. I.e., if a node has\n   * an attribute, which is also an inherited attribute it will be removed. This\n   * is necessary as attributes are set bottom up in the parser.\n   * @param {ParseOptions} data The parse options.\n   */\n  export let cleanAttributes = function(arg: {data: ParseOptions}) {\n    let node = arg.data.root as MmlNode;\n    node.walkTree((mml: MmlNode, _d: any) => {\n      let attribs = mml.attributes as any;\n      if (!attribs) {\n        return;\n      }\n      const keep = new Set((attribs.get('mjx-keep-attrs') || '').split(/ /));\n      delete (attribs.getAllAttributes())['mjx-keep-attrs'];\n      for (const key of attribs.getExplicitNames()) {\n        if (!keep.has(key) && attribs.attributes[key] === mml.attributes.getInherited(key)) {\n          delete attribs.attributes[key];\n        }\n      }\n    }, {});\n  };\n\n\n  /**\n   * Combine adjacent <mo> elements that are relations (since MathML treats the\n   * spacing very differently)\n   * @param {ParseOptions} data The parse options.\n   */\n  export let combineRelations = function(arg: {data: ParseOptions}) {\n    const remove: MmlNode[] = [];\n    for (let mo of arg.data.getList('mo')) {\n      if (mo.getProperty('relationsCombined') || !mo.parent ||\n          (mo.parent && !NodeUtil.isType(mo.parent, 'mrow')) ||\n          NodeUtil.getTexClass(mo) !== TEXCLASS.REL) {\n        // @test Prime, PrimeSup, Named Function\n        continue;\n      }\n      let mml = mo.parent;\n      let m2: MmlNode;\n      let children = mml.childNodes as MMLNODE[];\n      let next = children.indexOf(mo) + 1;\n      let variantForm = NodeUtil.getProperty(mo, 'variantForm');\n      while (next < children.length && (m2 = children[next]) &&\n             NodeUtil.isType(m2, 'mo') &&\n             NodeUtil.getTexClass(m2) === TEXCLASS.REL) {\n        if (variantForm === NodeUtil.getProperty(m2, 'variantForm') &&\n            _compareExplicit(mo, m2)) {\n          // @test Shift Left, Less Equal,\n          //       Multirel Font X, Multirel Mathvariant X\n          NodeUtil.appendChildren(mo, NodeUtil.getChildren(m2));\n          // This treatment means we might loose some inheritance structure, but\n          // no properties.\n          _copyExplicit(['stretchy', 'rspace'], mo, m2);\n          for (const name of m2.getPropertyNames()) {\n            mo.setProperty(name, m2.getProperty(name));\n          }\n          children.splice(next, 1);\n          remove.push(m2);\n          m2.parent = null;\n          m2.setProperty('relationsCombined', true);\n        } else {\n          // @test Preset Rspace Lspace\n          if (mo.attributes.getExplicit('rspace') == null) {\n            // @test Mulitrel Mathvariant 3, Mulitrel Mathvariant 4\n            NodeUtil.setAttribute(mo, 'rspace', '0pt');\n          }\n          if (m2.attributes.getExplicit('lspace') == null) {\n            // @test Mulitrel Mathvariant 3, Mulitrel Mathvariant 4\n            NodeUtil.setAttribute(m2, 'lspace', '0pt');\n          }\n          break;\n        }\n      }\n      mo.attributes.setInherited('form', (mo as MmlMo).getForms()[0]);\n    }\n    arg.data.removeFromList('mo', remove);\n  };\n\n\n  /**\n   * Copies the specified explicit attributes from node2 to node1.\n   * @param {string[]} attrs List of explicit attribute names.\n   * @param {MmlNode} node1 The goal node.\n   * @param {MmlNode} node2 The source node.\n   */\n  let _copyExplicit = function(attrs: string[],\n                               node1: MmlNode, node2: MmlNode) {\n    let attr1 = node1.attributes;\n    let attr2 = node2.attributes;\n    attrs.forEach(x => {\n      let attr = attr2.getExplicit(x);\n      if (attr != null) {\n        // @test Infix Stretchy Right, Preset Lspace Rspace\n        attr1.set(x, attr);\n      }\n    });\n  };\n\n\n  /**\n   * Compares the explicit attributes of two nodes. Returns true if they\n   * coincide, with the following exceptions:\n   *   - lspace attribute of node1 is ignored.\n   *   - rspace attribute of node2 is ignored.\n   *   - stretchy=false attributes are ignored.\n   * @param {MmlNode} node1 The first node.\n   * @param {MmlNode} node2 Its next sibling.\n   */\n  let _compareExplicit = function(node1: MmlNode, node2: MmlNode) {\n    let filter = (attr: Attributes, space: string): string[] => {\n      let exp = attr.getExplicitNames();\n      return exp.filter(x => {\n        return x !== space &&\n          (x !== 'stretchy' ||\n           attr.getExplicit('stretchy'));\n      });\n    };\n    let attr1 = node1.attributes;\n    let attr2 = node2.attributes;\n    let exp1 = filter(attr1, 'lspace');\n    let exp2 = filter(attr2, 'rspace');\n    if (exp1.length !== exp2.length) {\n      return false;\n    }\n    for (let name of exp1) {\n      if (attr1.getExplicit(name) !== attr2.getExplicit(name)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Cleans msubsup and munderover elements.\n   * @param {ParseOptions} options The parse options.\n   * @param {string} low String representing the lower part of the expression.\n   * @param {string} up String representing the upper part.\n   */\n  let _cleanSubSup = function(options: ParseOptions, low: string, up: string) {\n    const remove: MmlNode[] = [];\n    for (let mml of options.getList('m' + low + up) as any[]) {\n      const children = mml.childNodes;\n      if (children[mml[low]] && children[mml[up]]) {\n        continue;\n      }\n      const parent = mml.parent;\n      let newNode = (children[mml[low]] ?\n                 options.nodeFactory.create('node', 'm' + low, [children[mml.base], children[mml[low]]]) :\n                 options.nodeFactory.create('node', 'm' + up, [children[mml.base], children[mml[up]]]));\n      NodeUtil.copyAttributes(mml, newNode);\n      if (parent) {\n        parent.replaceChild(newNode, mml);\n      } else {\n        options.root = newNode;\n      }\n      remove.push(mml);\n    }\n    options.removeFromList('m' + low + up, remove);\n  };\n\n\n  /**\n   * Visitor that rewrites incomplete msubsup/munderover elements in the given\n   * node into corresponding msub/sup/under/over nodes.\n   * @param {MmlNode} math The node to rewrite.\n   * @param {ParseOptions} data The parse options.\n   */\n  export let cleanSubSup = function(arg: {math: any, data: ParseOptions}) {\n    let options = arg.data;\n    if (options.error) {\n      return;\n    }\n    _cleanSubSup(options, 'sub', 'sup');\n    _cleanSubSup(options, 'under', 'over');\n  };\n\n\n  /**\n   * Looks through the list of munderover elements for ones that have\n   * movablelimits and bases that are not mo's, and creates new msubsup\n   * elements to replace them if they aren't in displaystyle.\n   *\n   * @param {MmlNode} ath The node to rewrite.\n   * @param {ParseOptions} data The parse options.\n   */\n  let _moveLimits = function (options: ParseOptions, underover: string, subsup: string) {\n    const remove: MmlNode[] = [];\n    for (const mml of options.getList(underover)) {\n      if (mml.attributes.get('displaystyle')) {\n        continue;\n      }\n      const base = mml.childNodes[(mml as any).base] as MmlNode;\n      const mo = base.coreMO();\n      if (base.getProperty('movablelimits') && !mo.attributes.getExplicit('movablelimits')) {\n        let node = options.nodeFactory.create('node', subsup, mml.childNodes);\n        NodeUtil.copyAttributes(mml, node);\n        if (mml.parent) {\n          mml.parent.replaceChild(node, mml);\n        } else {\n          options.root = node;\n        }\n        remove.push(mml);\n      }\n    }\n    options.removeFromList(underover, remove);\n  };\n\n  /**\n   * Visitor that rewrites in-line munderover elements with movablelimits but bases\n   * that are not mo's into explicit msubsup elements.\n   *\n   * @param {ParseOptions} data  The parse options to use\n   */\n  export let moveLimits = function (arg: {data: ParseOptions}) {\n    const options = arg.data;\n    _moveLimits(options, 'munderover', 'msubsup');\n    _moveLimits(options, 'munder', 'msub');\n    _moveLimits(options, 'mover', 'msup');\n  };\n\n\n  /**\n   * Recursively sets the inherited attributes on the math tree.\n   * @param {MmlNode} math The node to rewrite.\n   * @param {ParseOptions} data The parse options.\n   */\n  export let setInherited = function(arg: {math: any, data: ParseOptions}) {\n    arg.data.root.setInheritedAttributes({}, arg.math['display'], 0, false);\n  };\n\n}\n\n\nexport default FilterUtil;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"file":"TexError.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/TexError.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Error class for the TeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nexport default class TexError {\n\n  private static pattern =\n    /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g;\n\n  /**\n   * Default error message.\n   * @type {string}\n   */\n  public message: string;\n\n  /**\n   * The old MathJax processing function.\n   * @param {string} str The basic error message.\n   * @param {string[]} args The arguments to be replaced in the error message.\n   * @return {string} The processed error string.\n   */\n  private static processString(str: string, args: string[]): string {\n    let parts = str.split(TexError.pattern);\n    for (let i = 1, m = parts.length; i < m; i += 2) {\n      let c = parts[i].charAt(0);  // first char will be { or \\d or a char to be\n                                   // kept literally\n      if (c >= '0' && c <= '9') {    // %n\n        parts[i] = args[parseInt(parts[i], 10) - 1];\n        if (typeof parts[i] === 'number') {\n          parts[i] = parts[i].toString();\n        }\n      } else if (c === '{') {        // %{n} or %{plural:%n|...}\n        c = parts[i].substr(1);\n        if (c >= '0' && c <= '9') {  // %{n}\n          parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];\n          if (typeof parts[i] === 'number') {\n            parts[i] = parts[i].toString();\n          }\n        } else {                     // %{plural:%n|...}\n          let match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n          if (match) {\n            // Removed plural here.\n            parts[i] = '%' + parts[i];\n          }\n        }\n      }\n      if (parts[i] == null) {\n        parts[i] = '???';\n      }\n    }\n    return parts.join('');\n  }\n\n  /**\n   * @constructor\n   * @param{string} id        message id (for localization)\n   * @param{string} message   text of English message\n   * @param{string[]=} rest   any substitution arguments\n   */\n  constructor(public id: string, message: string, ...rest: string[]) {\n    this.message = TexError.processString(message, rest);\n  }\n\n}\n"],"names":[],"mappings":";;;;AAyBA,IAAA,WAAA;IAuDE,SAAA,SAAmB,EAAU,EAAE,OAAe;QAAE,IAAA,OAAA,EAAA,CAAiB;YAAjB,IAAA,KAAA,CAAiB,EAAjB,KAAA,UAAA,MAAiB,EAAjB,IAAiB,CAAA;YAAjB,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAiB;;QAA9C,IAAA,CAAA,EAAE,GAAF,EAAE,CAAQ;QAC3B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAxCc,SAAA,aAAa,GAA5B,SAA6B,GAAW,EAAE,IAAc;QACtD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAE;YAC/C,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE;gBACxB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC5C,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBAChC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;iBAChC;aACF,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;gBACpB,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE;oBACxB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC3E,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;wBAChC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;qBAChC;iBACF,MAAM;oBACL,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;oBAC1D,IAAI,KAAK,EAAE;wBAET,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;qBAC3B;iBACF;aACF;YACD,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;gBACpB,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;aAClB;SACF;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IA7Cc,SAAA,OAAO,GACpB,iEAAiE,CAAC;IAwDtE,OAAA,QAAC;CAAA,AA3DD,IA2DC;kBA3DoB,QAAQ","ignoreList":[0]}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"file":"ParseUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ParseUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview A namespace for utility functions for the TeX Parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {TEXCLASS, MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {EnvList} from './StackItem.js';\nimport {ArrayItem} from './base/BaseItems.js';\nimport ParseOptions from './ParseOptions.js';\nimport NodeUtil from './NodeUtil.js';\nimport TexParser from './TexParser.js';\nimport TexError from './TexError.js';\nimport {entities} from '../../util/Entities.js';\nimport {MmlMunderover} from '../../core/MmlTree/MmlNodes/munderover.js';\n\n\nnamespace ParseUtil {\n\n  // TODO (VS): Combine some of this with lengths in util.\n  const emPerInch = 7.2;\n  const pxPerInch = 72;\n  // Note, the following are TeX CM font values.\n  const UNIT_CASES: {[key: string]: ((m: number) => number)}  = {\n    'em': m => m,\n    'ex': m => m * .43,\n    'pt': m => m / 10,                    // 10 pt to an em\n    'pc': m => m * 1.2,                   // 12 pt to a pc\n    'px': m => m * emPerInch / pxPerInch,\n    'in': m => m * emPerInch,\n    'cm': m => m * emPerInch / 2.54, // 2.54 cm to an inch\n    'mm': m => m * emPerInch / 25.4, // 10 mm to a cm\n    'mu': m => m / 18,\n  };\n  const num = '([-+]?([.,]\\\\d+|\\\\d+([.,]\\\\d*)?))';\n  const unit = '(pt|em|ex|mu|px|mm|cm|in|pc)';\n  const dimenEnd = RegExp('^\\\\s*' + num + '\\\\s*' + unit + '\\\\s*$');\n  const dimenRest = RegExp('^\\\\s*' + num + '\\\\s*' + unit + ' ?');\n\n\n  /**\n   * Matches for a dimension argument.\n   * @param {string} dim The argument.\n   * @param {boolean} rest Allow for trailing garbage in the dimension string.\n   * @return {[string, string, number]} The match result as (Anglosaxon) value,\n   *     unit name, length of matched string. The latter is interesting in the\n   *     case of trailing garbage.\n   */\n  export function matchDimen(\n    dim: string, rest: boolean = false): [string, string, number] {\n      let match = dim.match(rest ? dimenRest : dimenEnd);\n      return match ?\n        muReplace([match[1].replace(/,/, '.'), match[4], match[0].length]) :\n        [null, null, 0];\n  }\n\n\n  /**\n   * Transforms mu dimension to em if necessary.\n   * @param {[string, string, number]} [value, unit, length] The dimension triple.\n   * @return {[string, string, number]} [value, unit, length] The transformed triple.\n   */\n  function muReplace([value, unit, length]: [string, string, number]): [string, string, number] {\n    if (unit !== 'mu') {\n      return [value, unit, length];\n    }\n    let em = Em(UNIT_CASES[unit](parseFloat(value || '1')));\n    return [em.slice(0, -2), 'em', length];\n  }\n\n\n  /**\n   * Convert a dimension string into standard em dimension.\n   * @param {string} dim The attribute string.\n   * @return {number} The numerical value.\n   */\n  export function dimen2em(dim: string): number {\n    let [value, unit] = matchDimen(dim);\n    let m = parseFloat(value || '1');\n    let func = UNIT_CASES[unit];\n    return func ? func(m) : 0;\n  }\n\n\n  /**\n   * Turns a number into an em value.\n   * @param {number} m The number.\n   * @return {string} The em dimension string.\n   */\n  export function Em(m: number): string {\n    if (Math.abs(m) < .0006) {\n      return '0em';\n    }\n    return m.toFixed(3).replace(/\\.?0+$/, '') + 'em';\n  }\n\n\n  /**\n   * Takes an array of numbers and returns a space-separated string of em values.\n   * @param {number[]} W  The widths to be turned into em values\n   * @return {string}     The numbers with em units, separated by spaces.\n   */\n  export function cols(...W: number[]): string {\n    return W.map(n => Em(n)).join(' ');\n  }\n\n\n  /**\n   * Create an mrow that has stretchy delimiters at either end, as needed\n   * @param {ParseOptions} configuration Current parse options.\n   * @param {string} open The opening fence.\n   * @param {MmlNode} mml The enclosed node.\n   * @param {string} close The closing fence.\n   * @param {string=} big Bigg command.\n   */\n  export function fenced(configuration: ParseOptions, open: string, mml: MmlNode,\n                         close: string, big: string = '', color: string = '') {\n    // @test Fenced, Fenced3\n    let nf = configuration.nodeFactory;\n    let mrow = nf.create('node', 'mrow', [],\n                         {open: open, close: close, texClass: TEXCLASS.INNER});\n    let mo;\n    if (big) {\n      mo = new TexParser('\\\\' + big + 'l' + open, configuration.parser.stack.env, configuration).mml();\n    } else {\n      let openNode = nf.create('text', open);\n      mo = nf.create('node', 'mo', [],\n                     {fence: true, stretchy: true, symmetric: true, texClass: TEXCLASS.OPEN},\n                     openNode);\n    }\n    NodeUtil.appendChildren(mrow, [mo, mml]);\n    if (big) {\n      mo = new TexParser('\\\\' + big + 'r' + close, configuration.parser.stack.env, configuration).mml();\n    } else {\n      let closeNode = nf.create('text', close);\n      mo = nf.create('node', 'mo', [],\n                     {fence: true, stretchy: true, symmetric: true, texClass: TEXCLASS.CLOSE},\n                     closeNode);\n    }\n    color && mo.attributes.set('mathcolor', color);\n    NodeUtil.appendChildren(mrow, [mo]);\n    return mrow;\n  }\n\n\n  /**\n   *  Create an mrow that has \\\\mathchoice using \\\\bigg and \\\\big for the delimiters.\n   * @param {ParseOptions} configuration The current parse options.\n   * @param {string} open The opening fence.\n   * @param {MmlNode} mml The enclosed node.\n   * @param {string} close The closing fence.\n   * @return {MmlNode} The mrow node.\n   */\n  export function fixedFence(configuration: ParseOptions, open: string,\n                             mml: MmlNode, close: string): MmlNode {\n    // @test Choose, Over With Delims, Above with Delims\n    let mrow = configuration.nodeFactory.create('node',\n      'mrow', [], {open: open, close: close, texClass: TEXCLASS.ORD});\n    if (open) {\n      NodeUtil.appendChildren(mrow, [mathPalette(configuration, open, 'l')]);\n    }\n    if (NodeUtil.isType(mml, 'mrow')) {\n      NodeUtil.appendChildren(mrow, NodeUtil.getChildren(mml));\n    } else {\n      NodeUtil.appendChildren(mrow, [mml]);\n    }\n    if (close) {\n      NodeUtil.appendChildren(mrow, [mathPalette(configuration, close, 'r')]);\n    }\n    return mrow;\n  }\n\n\n  /**\n   * Generates a mathchoice element for fences. These will be resolved later,\n   * once the position, and therefore size, of the of the fenced expression is\n   * known.\n   * @param {ParseOptions} configuration The current parse otpions.\n   * @param {string} fence The fence.\n   * @param {string} side The side of the fence (l or r).\n   * @return {MmlNode} The mathchoice node.\n   */\n  export function mathPalette(configuration: ParseOptions, fence: string,\n                              side: string): MmlNode  {\n    if (fence === '{' || fence === '}') {\n      fence = '\\\\' + fence;\n    }\n    let D = '{\\\\bigg' + side + ' ' + fence + '}';\n    let T = '{\\\\big' + side + ' ' + fence + '}';\n    return new TexParser('\\\\mathchoice' + D + T + T + T, {}, configuration).mml();\n  }\n\n\n  /**\n   * If the initial child, skipping any initial space or\n   * empty braces (TeXAtom with child being an empty inferred row),\n   * is an <mo>, precede it by an empty <mi> to force the <mo> to\n   * be infix.\n   * @param {ParseOptions} configuration The current parse options.\n   * @param {MmlNode[]} nodes The row of nodes to scan for an initial <mo>\n   */\n  export function fixInitialMO(configuration: ParseOptions, nodes: MmlNode[]) {\n    for (let i = 0, m = nodes.length; i < m; i++) {\n      let child = nodes[i];\n      if (child && (!NodeUtil.isType(child, 'mspace') &&\n                    (!NodeUtil.isType(child, 'TeXAtom') ||\n                     (NodeUtil.getChildren(child)[0] &&\n                      NodeUtil.getChildren(NodeUtil.getChildren(child)[0]).length)))) {\n        if (NodeUtil.isEmbellished(child) ||\n            (NodeUtil.isType(child, 'TeXAtom') && NodeUtil.getTexClass(child) === TEXCLASS.REL)) {\n          let mi = configuration.nodeFactory.create('node', 'mi');\n          nodes.unshift(mi);\n        }\n        break;\n      }\n    }\n  }\n\n\n  /**\n   * Break up a string into text and math blocks.\n   * @param {TexParser} parser The calling parser.\n   * @param {string} text The text in the math expression to parse.\n   * @param {number|string=} level The scriptlevel.\n   * @param {string} font The mathvariant to use\n   * @return {MmlNode[]} The nodes corresponding to the internal math expression.\n   */\n  export function internalMath(parser: TexParser, text: string,\n                               level?: number | string, font?: string): MmlNode[] {\n    if (parser.configuration.options.internalMath) {\n      return parser.configuration.options.internalMath(parser, text, level, font);\n    }\n    let mathvariant = font || parser.stack.env.font;\n    let def = (mathvariant ? {mathvariant} : {});\n    let mml: MmlNode[] = [], i = 0, k = 0, c, node, match = '', braces = 0;\n    if (text.match(/\\\\?[${}\\\\]|\\\\\\(|\\\\(eq)?ref\\s*\\{/)) {\n      while (i < text.length) {\n        c = text.charAt(i++);\n        if (c === '$') {\n          if (match === '$' && braces === 0) {\n            // @test Interspersed Text\n            node = parser.create(\n              'node', 'TeXAtom',\n              [(new TexParser(text.slice(k, i - 1), {}, parser.configuration)).mml()]);\n            mml.push(node);\n            match = '';\n            k = i;\n          } else if (match === '') {\n            // @test Interspersed Text\n            if (k < i - 1) {\n              // @test Interspersed Text\n              mml.push(internalText(parser, text.slice(k, i - 1), def));\n            }\n            match = '$';\n            k = i;\n          }\n        } else if (c === '{' && match !== '') {\n          // @test Mbox Mbox, Mbox Math\n          braces++;\n        } else if (c === '}') {\n          // @test Mbox Mbox, Mbox Math\n          if (match === '}' && braces === 0) {\n            // @test Mbox Eqref, Mbox Math\n            let atom = (new TexParser(text.slice(k, i), {}, parser.configuration)).mml();\n            node = parser.create('node', 'TeXAtom', [atom], def);\n            mml.push(node);\n            match = '';\n            k = i;\n          } else if (match !== '') {\n            // @test Mbox Math, Mbox Mbox\n            if (braces) {\n              // @test Mbox Math, Mbox Mbox\n              braces--;\n            }\n          }\n        } else if (c === '\\\\') {\n          // @test Mbox Eqref, Mbox CR\n          if (match === '' && text.substr(i).match(/^(eq)?ref\\s*\\{/)) {\n            // @test Mbox Eqref\n            let len = ((RegExp as any)['$&'] as string).length;\n            if (k < i - 1) {\n              // @test Mbox Eqref\n              mml.push(internalText(parser, text.slice(k, i - 1), def));\n            }\n            match = '}';\n            k = i - 1;\n            i += len;\n          } else {\n            // @test Mbox CR, Mbox Mbox\n            c = text.charAt(i++);\n            if (c === '(' && match === '') {\n              // @test Mbox Internal Display\n              if (k < i - 2) {\n                // @test Mbox Internal Display\n                mml.push(internalText(parser, text.slice(k, i - 2), def));\n              }\n              match = ')'; k = i;\n            } else if (c === ')' && match === ')' && braces === 0) {\n              // @test Mbox Internal Display\n              node = parser.create(\n                'node', 'TeXAtom',\n                [(new TexParser(text.slice(k, i - 2), {}, parser.configuration)).mml()]);\n              mml.push(node);\n              match = '';\n              k = i;\n            } else if (c.match(/[${}\\\\]/) && match === '')  {\n              // @test Mbox CR\n              i--;\n              text = text.substr(0, i - 1) + text.substr(i); // remove \\ from \\$, \\{, \\}, or \\\\\n            }\n          }\n        }\n      }\n      if (match !== '') {\n        // @test Internal Math Error\n        throw new TexError('MathNotTerminated', 'Math not terminated in text box');\n      }\n    }\n    if (k < text.length) {\n      // @test Interspersed Text, Mbox Mbox\n      mml.push(internalText(parser, text.slice(k), def));\n    }\n    if (level != null) {\n      // @test Label, Fbox, Hbox\n      mml = [parser.create('node', 'mstyle', mml, {displaystyle: false, scriptlevel: level})];\n    } else if (mml.length > 1) {\n      // @test Interspersed Text\n      mml = [parser.create('node', 'mrow', mml)];\n    }\n    return mml;\n  }\n\n\n  /**\n   * Parses text internal to boxes or labels.\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} text The text to parse.\n   * @param {EnvList} def The attributes of the text node.\n   * @return {MmlNode} The text node.\n   */\n  export function internalText(parser: TexParser, text: string, def: EnvList): MmlNode {\n    // @test Label, Fbox, Hbox\n    text = text.replace(/^\\s+/, entities.nbsp).replace(/\\s+$/, entities.nbsp);\n    let textNode = parser.create('text', text);\n    return parser.create('node', 'mtext', [], def, textNode);\n  }\n\n  /**\n   * Create an munderover node with the given script position.\n   * @param {TexParser} parser   The current TeX parser.\n   * @param {MmlNode} base       The base node.\n   * @param {MmlNode} script     The under- or over-script.\n   * @param {string} pos         Either 'over' or 'under'.\n   * @param {boolean} stack      True if super- or sub-scripts should stack.\n   * @return {MmlNode}           The generated node (MmlMunderover or TeXAtom)\n   */\n  export function underOver(parser: TexParser, base: MmlNode, script: MmlNode, pos: string, stack: boolean): MmlNode {\n    // @test Overline\n    ParseUtil.checkMovableLimits(base);\n    if (NodeUtil.isType(base, 'munderover') && NodeUtil.isEmbellished(base)) {\n      // @test Overline Limits\n      NodeUtil.setProperties(NodeUtil.getCoreMO(base), {lspace: 0, rspace: 0});\n      const mo = parser.create('node', 'mo', [], {rspace: 0});\n      base = parser.create('node', 'mrow', [mo, base]);\n      // TODO? add an empty <mi> so it's not embellished any more\n    }\n    const mml = parser.create('node', 'munderover', [base]) as MmlMunderover;\n    NodeUtil.setChild(mml, pos === 'over' ?  mml.over : mml.under, script);\n    let node: MmlNode = mml;\n    if (stack) {\n      // @test Overbrace 1 2 3, Underbrace, Overbrace Op 1 2\n      node = parser.create('node', 'TeXAtom', [mml], {texClass: TEXCLASS.OP, movesupsub: true});\n    }\n    NodeUtil.setProperty(node, 'subsupOK', true);\n    return node;\n  }\n\n  /**\n   * Set movablelimits to false if necessary.\n   * @param {MmlNode} base   The base node being tested.\n   */\n  export function checkMovableLimits(base: MmlNode) {\n    const symbol = (NodeUtil.isType(base, 'mo') ? NodeUtil.getForm(base) : null);\n    if (NodeUtil.getProperty(base, 'movablelimits') || (symbol && symbol[3] && symbol[3].movablelimits)) {\n      // @test Overline Sum\n      NodeUtil.setProperties(base, {movablelimits: false});\n    }\n  }\n\n  /**\n   * Trim spaces from a string.\n   * @param {string} text The string to clean.\n   * @return {string} The string with leading and trailing whitespace removed.\n   */\n  export function trimSpaces(text: string): string {\n    if (typeof(text) !== 'string') {\n      return text;\n    }\n    let TEXT = text.trim();\n    if (TEXT.match(/\\\\$/) && text.match(/ $/)) {\n      TEXT += ' ';\n    }\n    return TEXT;\n  }\n\n\n  /**\n   * Sets alignment in array definitions.\n   * @param {ArrayItem} array The array item.\n   * @param {string} align The alignment string.\n   * @return {ArrayItem} The altered array item.\n   */\n  export function setArrayAlign(array: ArrayItem, align: string): ArrayItem {\n    // @test Array1, Array2, Array Test\n    align = ParseUtil.trimSpaces(align || '');\n    if (align === 't') {\n      array.arraydef.align = 'baseline 1';\n    } else if (align === 'b') {\n      array.arraydef.align = 'baseline -1';\n    } else if (align === 'c') {\n      array.arraydef.align = 'axis';\n    } else if (align) {\n      array.arraydef.align = align;\n    } // FIXME: should be an error?\n    return array;\n  }\n\n\n  /**\n   * Replace macro parameters with their values.\n   * @param {TexParser} parser The current TeX parser.\n   * @param {string[]} args A list of arguments for macro parameters.\n   * @param {string} str The macro parameter string.\n   * @return {string} The string with all parameters replaced by arguments.\n   */\n  export function substituteArgs(parser: TexParser, args: string[],\n                                 str: string): string {\n    let text = '';\n    let newstring = '';\n    let i = 0;\n    while (i < str.length) {\n      let c = str.charAt(i++);\n      if (c === '\\\\') {\n        text += c + str.charAt(i++);\n      }\n      else if (c === '#') {\n        c = str.charAt(i++);\n        if (c === '#') {\n          text += c;\n        } else {\n          if (!c.match(/[1-9]/) || parseInt(c, 10) > args.length) {\n            throw new TexError('IllegalMacroParam',\n                                'Illegal macro parameter reference');\n          }\n          newstring = addArgs(parser, addArgs(parser, newstring, text),\n                              args[parseInt(c, 10) - 1]);\n          text = '';\n        }\n      } else {\n        text += c;\n      }\n    }\n    return addArgs(parser, newstring, text);\n  }\n\n\n  /**\n   * Adds a new expanded argument to an already macro parameter string.  Makes\n   * sure that macros are followed by a space if their names could accidentally\n   * be continued into the following text.\n   * @param {TexParser} parser The current TeX parser.\n   * @param {string} s1 The already expanded string.\n   * @param {string} s2 The string to add.\n   * @return {string} The combined string.\n   */\n  export function addArgs(parser: TexParser, s1: string, s2: string): string {\n    if (s2.match(/^[a-z]/i) && s1.match(/(^|[^\\\\])(\\\\\\\\)*\\\\[a-z]+$/i)) {\n      s1 += ' ';\n    }\n    if (s1.length + s2.length > parser.configuration.options['maxBuffer']) {\n      throw new TexError('MaxBufferSize',\n                          'MathJax internal buffer size exceeded; is there a' +\n                          ' recursive macro call?');\n    }\n    return s1 + s2;\n  }\n\n  /**\n   * Report an error if there are too many macro substitutions.\n   * @param {TexParser} parser The current TeX parser.\n   * @param {boolean} isMacro  True if we are substituting a macro, false for environment.\n   */\n  export function checkMaxMacros(parser: TexParser, isMacro: boolean = true) {\n    if (++parser.macroCount <= parser.configuration.options['maxMacros']) {\n      return;\n    }\n    if (isMacro) {\n      throw new TexError('MaxMacroSub1',\n                         'MathJax maximum macro substitution count exceeded; ' +\n                         'is here a recursive macro call?');\n    } else {\n      throw new TexError('MaxMacroSub2',\n                         'MathJax maximum substitution count exceeded; ' +\n                         'is there a recursive latex environment?');\n    }\n  }\n\n\n  /**\n   *  Check for bad nesting of equation environments\n   */\n  export function checkEqnEnv(parser: TexParser) {\n    if (parser.stack.global.eqnenv) {\n      // @test ErroneousNestingEq\n      throw new TexError('ErroneousNestingEq', 'Erroneous nesting of equation structures');\n    }\n    parser.stack.global.eqnenv = true;\n  }\n\n  /**\n   * Copy an MmlNode and add it (and its children) to the proper lists.\n   *\n   * @param {MmlNode} node       The MmlNode to copy\n   * @param {TexParser} parser   The active tex parser\n   * @return {MmlNode}           The duplicate tree\n   */\n  export function copyNode(node: MmlNode, parser: TexParser): MmlNode  {\n    const tree = node.copy() as MmlNode;\n    const options = parser.configuration;\n    tree.walkTree((n: MmlNode) => {\n      options.addNode(n.kind, n);\n      const lists = (n.getProperty('in-lists') as string || '').split(/,/);\n      for (const list of lists) {\n        list && options.addNode(list, n);\n      }\n    });\n    return tree;\n  }\n\n  /**\n   * This is a placeholder for future security filtering of attributes.\n   * @param {TexParser} parser The current parser.\n   * @param {string} name The attribute name.\n   * @param {string} value The attribute value to filter.\n   * @return {string} The filtered value.\n   */\n  export function MmlFilterAttribute(_parser: TexParser, _name: string, value: string): string {\n    // TODO: Implement in security package.\n    return value;\n  }\n\n\n  /**\n   * Initialises an stack environment with current font definition in the parser.\n   * @param {TexParser} parser The current tex parser.\n   * @return {EnvList} The initialised environment list.\n   */\n  export function getFontDef(parser: TexParser): EnvList {\n    const font = parser.stack.env['font'];\n    return (font ? {mathvariant: font} : {});\n  }\n\n\n  /**\n   * Splits a package option list of the form [x=y,z=1] into an attribute list\n   * of the form {x: y, z: 1}.\n   * @param {string} attrib The attributes of the package.\n   * @param {{[key: string]: number}?} allowed A list of allowed options. If\n   *     given only allowed arguments are returned.\n   * @param {boolean?} error If true, raises an exception if not allowed options\n   *     are found.\n   * @return {EnvList} The attribute list.\n   */\n  export function keyvalOptions(attrib: string,\n                                allowed: {[key: string]: number} = null,\n                                error: boolean = false): EnvList {\n    let def: EnvList = readKeyval(attrib);\n    if (allowed) {\n      for (let key of Object.keys(def)) {\n        if (!allowed.hasOwnProperty(key)) {\n          if (error) {\n            throw new TexError('InvalidOption', 'Invalid option: %1', key);\n          }\n          delete def[key];\n        }\n      }\n    }\n    return def;\n  }\n\n\n  /**\n   * Implementation of the keyval function from https://www.ctan.org/pkg/keyval\n   * @param {string} text The optional parameter string for a package or\n   *     command.\n   * @return {EnvList} Set of options as key/value pairs.\n   */\n  function readKeyval(text: string): EnvList {\n    let options: EnvList = {};\n    let rest = text;\n    let end, key, val;\n    while (rest) {\n      [key, end, rest] = readValue(rest, ['=', ',']);\n      if (end === '=') {\n        [val, end, rest] = readValue(rest, [',']);\n        val = (val === 'false' || val === 'true') ?\n            JSON.parse(val) : val;\n        options[key] = val;\n      } else if (key) {\n        options[key] = true;\n      }\n    }\n    return options;\n  }\n\n\n  /**\n   * Removes pairs of outer braces.\n   * @param {string} text The string to clean.\n   * @param {number} count The number of outer braces to slice off.\n   * @return {string} The cleaned string.\n   */\n  function removeBraces(text: string, count: number): string {\n    while (count > 0) {\n      text = text.trim().slice(1, -1);\n      count--;\n    }\n    return text.trim();\n  }\n\n\n  /**\n   * Read a value from the given string until an end parameter is reached or\n   * string is exhausted.\n   * @param {string} text The string to process.\n   * @param {string[]} end List of possible end characters.\n   * @return {[string, string, string]} The collected value, the actual end\n   *     character, and the rest of the string still to parse.\n   */\n  function readValue(text: string, end: string[]): [string, string, string] {\n    let length = text.length;\n    let braces = 0;\n    let value = '';\n    let index = 0;\n    let start = 0;             // Counter for the starting left braces.\n    let startCount = true;     // Flag for counting starting left braces.\n    let stopCount = false;     // If true right braces are found directly\n                               // after starting braces, but no other char yet.\n    while (index < length) {\n      let c = text[index++];\n      switch (c) {\n      case ' ':                // Ignore spaces.\n        break;\n      case '{':\n        if (startCount) {      // Count start left braces at start.\n          start++;\n        } else {\n          stopCount = false;\n          if (start > braces) {   // Some start left braces have been closed.\n            start = braces;\n          }\n        }\n        braces++;\n        break;\n      case '}':\n        if (braces) {          // Closing braces.\n          braces--;\n        }\n        if (startCount || stopCount) {  // Closing braces at the start.\n          start--;\n          stopCount = true;    // Continue to close braces.\n        }\n        startCount = false;    // Stop counting start left braces.\n        break;\n      default:\n        if (!braces && end.indexOf(c) !== -1) {   // End character reached.\n          return [stopCount ? 'true' :            // If Stop count is true we\n                                                  // have balanced braces, only.\n                  removeBraces(value, start), c, text.slice(index)];\n        }\n        startCount = false;\n        stopCount = false;\n      }\n      value += c;\n    }\n    if (braces) {\n      throw new TexError('ExtraOpenMissingClose',\n                         'Extra open brace or missing close brace');\n    }\n    return [stopCount ? 'true' : removeBraces(value, start), '', text.slice(index)];\n  }\n\n}\n\nexport default ParseUtil;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"file":"Stack.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/Stack.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The Stack for the TeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport NodeUtil from './NodeUtil.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {StackItem, EnvList} from './StackItem.js';\nimport StackItemFactory from './StackItemFactory.js';\n\n\nexport default class Stack {\n\n  /**\n   * @type {EnvList}\n   */\n  public global: EnvList = {};\n\n  /**\n   * The actual stack, a list of stack items.\n   * @type {Array.<StackItem>}\n   */\n  private stack: StackItem[] = [];\n\n  /**\n   * @constructor\n   * @param {StackItemFactory} factory The stack item factory.\n   * @param {EnvList} env The environment.\n   * @param {boolean} inner True if parser has been called recursively.\n   */\n  constructor(private _factory: StackItemFactory,\n              private _env: EnvList, inner: boolean) {\n    this.global = {isInner: inner};\n    this.stack = [ this._factory.create('start', this.global) ];\n    if (_env) {\n      this.stack[0].env = _env;\n    }\n    this.env = this.stack[0].env;\n  }\n\n\n  /**\n   * Set the environment of the stack.\n   * @param {EnvList} env The new environment.\n   */\n  public set env(env: EnvList) {\n    this._env = env;\n  }\n\n\n  /**\n   * Retrieves the environment of that stack.\n   * @return {EnvList} The current environment.\n   */\n  public get env(): EnvList {\n    return this._env;\n  }\n\n\n  /**\n   * Pushes items or nodes onto stack.\n   * @param {...StackItem|MmlNode} args A list of items to push.\n   */\n  public Push(...args: (StackItem | MmlNode)[]) {\n    for (const node of args) {\n      if (!node) {\n        continue;\n      }\n      const item = NodeUtil.isNode(node) ?\n        this._factory.create('mml', node) : node as StackItem;\n      item.global = this.global;\n      const [top, success] =\n        this.stack.length ? this.Top().checkItem(item) : [null, true];\n      if (!success) {\n        continue;\n      }\n      if (top) {\n        this.Pop();\n        this.Push(...top);\n        continue;\n      }\n      this.stack.push(item);\n      if (item.env) {\n        if (item.copyEnv) {\n          Object.assign(item.env, this.env);\n        }\n        this.env = item.env;\n      } else {\n        item.env = this.env;\n      }\n    }\n  }\n\n\n  /**\n   * Pop the topmost elements off the stack.\n   * @return {StackItem} A stack item.\n   */\n  public Pop(): StackItem {\n    const item = this.stack.pop();\n    if (!item.isOpen) {\n      delete item.env;\n    }\n    this.env = (this.stack.length ? this.Top().env : {});\n    return item;\n  }\n\n\n  /**\n   * Lookup the nth elements on the stack without removing them.\n   * @param {number=} n Position of element that should be returned. Default 1.\n   * @return {StackItem} Nth item on the stack.\n   */\n  public Top(n: number = 1): StackItem {\n    return this.stack.length < n ? null : this.stack[this.stack.length - n];\n  }\n\n\n  /**\n   * Lookup the topmost element on the stack, returning the Mml node in that\n   * item. Optionally pops the Mml node from that stack item.\n   * @param {boolean=} noPop Pop top item if true.\n   * @return {MmlNode} The Mml node in the topmost stack item.\n   */\n  public Prev(noPop?: boolean): MmlNode | void {\n    const top = this.Top();\n    return noPop ? top.First : top.Pop();\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return 'stack[\\n  ' + this.stack.join('\\n  ') + '\\n]';\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1592, "column": 0}, "map": {"version":3,"file":"TexParser.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/TexParser.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The TexParser. Implements the basic parsing functionality and\n *     administers the global stack and tree objects.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport ParseUtil from './ParseUtil.js';\nimport {HandlerType} from './MapHandler.js';\nimport Stack from './Stack.js';\nimport StackItemFactory from './StackItemFactory.js';\nimport {Tags} from './Tags.js';\nimport TexError from './TexError.js';\nimport {MmlNode, AbstractMmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {ParseInput, ParseResult} from './Types.js';\nimport ParseOptions from './ParseOptions.js';\nimport {StackItem, EnvList} from './StackItem.js';\nimport {Symbol} from './Symbol.js';\nimport {OptionList} from '../../util/Options.js';\n\n\n/**\n * The main Tex Parser class.\n */\nexport default class TexParser {\n\n  /**\n   * Counter for recursive macros.\n   * @type {number}\n   */\n  public macroCount: number = 0;\n\n  /**\n   * The stack for items and created nodes.\n   * @type {Stack}\n   */\n  public stack: Stack;\n\n  /**\n   * Current position in the string that is parsed.\n   * @type {number}\n   */\n  public i: number = 0;\n\n  /**\n   * The last command sequence\n   * @type {string}\n   */\n  public currentCS: string = '';\n\n  /**\n   * @constructor\n   * @param {string} string The string to parse.\n   * @param {EnvList} env The intial environment representing the current parse\n   *     state of the overall expression translation.\n   * @param {ParseOptions} configuration A parser configuration.\n   */\n  constructor(private _string: string, env: EnvList, public configuration: ParseOptions) {\n    const inner = env.hasOwnProperty('isInner');\n    const isInner = env['isInner'] as boolean;\n    delete env['isInner'];\n    let ENV: EnvList;\n    if (env) {\n      ENV = {};\n      for (const id of Object.keys(env)) {\n        ENV[id] = env[id];\n      }\n    }\n    this.configuration.pushParser(this);\n    this.stack = new Stack(this.itemFactory, ENV, inner ? isInner : true);\n    this.Parse();\n    this.Push(this.itemFactory.create('stop'));\n  }\n\n  /**\n   * @return {OptionList} The configuration options.\n   */\n  get options(): OptionList {\n    return this.configuration.options;\n  }\n\n  /**\n   * @return {StackItemFactory} The factory for stack items.\n   */\n  get itemFactory(): StackItemFactory {\n    return this.configuration.itemFactory;\n  }\n\n  /**\n   * @return {Tags} The tags style of this configuration.\n   */\n  get tags(): Tags {\n    return this.configuration.tags;\n  }\n\n  /**\n   * Sets the string that should be parsed.\n   * @param {string} str The new string to parse.\n   */\n  set string(str: string) {\n    this._string = str;\n  }\n\n  /**\n   * @return {string} The string that is currently parsed.\n   */\n  get string(): string {\n    return this._string;\n  }\n\n\n  /**\n   * Parses the input with the specified kind of map.\n   * @param {HandlerType} kind Configuration name.\n   * @param {ParseInput} input Input to be parsed.\n   * @return {ParseResult} The output of the parsing function.\n   */\n  public parse(kind: HandlerType, input: ParseInput): ParseResult {\n    return this.configuration.handlers.get(kind).parse(input);\n  }\n\n\n  /**\n   * Maps a symbol to its \"parse value\" if it exists.\n   * @param {HandlerType} kind Configuration name.\n   * @param {string} symbol The symbol to parse.\n   * @return {any} A boolean, Character, or Macro.\n   */\n  public lookup(kind: HandlerType, symbol: string): any {\n    return this.configuration.handlers.get(kind).lookup(symbol);\n  }\n\n\n  /**\n   * Checks if a symbol is contained in one of the symbol mappings of the\n   * specified kind.\n   * @param {HandlerType} kind Configuration name.\n   * @param {string} symbol The symbol to parse.\n   * @return {boolean} True if the symbol is contained in the given types of\n   *     symbol mapping.\n   */\n  public contains(kind: HandlerType, symbol: string): boolean {\n    return this.configuration.handlers.get(kind).contains(symbol);\n  }\n\n\n  /**\n   * @override\n   */\n  public toString(): string {\n    let str = '';\n    for (const config of Array.from(this.configuration.handlers.keys())) {\n      str += config + ': ' +\n        this.configuration.handlers.get(config as HandlerType) + '\\n';\n    }\n    return str;\n  }\n\n\n  /**\n   * Parses the current input string.\n   */\n  public Parse() {\n    let c: string;\n    while (this.i < this.string.length) {\n      c = this.getCodePoint();\n      this.i += c.length;\n      this.parse('character', [this, c]);\n    }\n  }\n\n\n  /**\n   * Pushes a new item onto the stack. The item can also be a Mml node,\n   *   but if the mml item is an inferred row, push its children instead.\n   * @param {StackItem|MmlNode} arg The new item.\n   */\n  public Push(arg: StackItem | MmlNode) {\n    if (arg instanceof AbstractMmlNode && arg.isInferred) {\n      this.PushAll(arg.childNodes);\n    } else {\n      this.stack.Push(arg);\n    }\n  }\n\n\n  /**\n   * Pushes a list of new items onto the stack.\n   * @param {StackItem|MmlNode[]} args The new items.\n   */\n  public PushAll(args: (StackItem | MmlNode)[]) {\n    for (const arg of args) {\n      this.stack.Push(arg);\n    }\n  }\n\n\n  /**\n   * @return {MmlNode} The internal Mathml structure.\n   */\n  public mml(): MmlNode {\n    if (!this.stack.Top().isKind('mml')) {\n      return null;\n    }\n    let node = this.stack.Top().First;\n    this.configuration.popParser();\n    return node;\n  }\n\n  /************************************************************************\n   *\n   *   String handling routines\n   */\n\n  /**\n   * Convert delimiter to character.\n   * @param {string} c The delimiter name.\n   * @return {string} The corresponding character.\n   */\n  public convertDelimiter(c: string): string {\n    const symbol = this.lookup('delimiter', c) as Symbol;\n    return symbol ? symbol.char : null;\n  }\n\n  /**\n   * @return {string}   Get the next unicode character in the string\n   */\n  public getCodePoint(): string {\n    const code = this.string.codePointAt(this.i);\n    return code === undefined ? '' : String.fromCodePoint(code);\n  }\n\n  /**\n   * @return {boolean} True if the next character to parse is a space.\n   */\n  public nextIsSpace(): boolean {\n    return !!this.string.charAt(this.i).match(/\\s/);\n  }\n\n  /**\n   * @return {string} Get the next non-space character.\n   */\n  public GetNext(): string {\n    while (this.nextIsSpace()) {\n      this.i++;\n    }\n    return this.getCodePoint();\n  }\n\n  /**\n   * @return {string} Get and return a control-sequence name\n   */\n  public GetCS(): string {\n    let CS = this.string.slice(this.i).match(/^(([a-z]+) ?|[\\uD800-\\uDBFF].|.)/i);\n    if (CS) {\n      this.i += CS[0].length;\n      return CS[2] || CS[1];\n    } else {\n      this.i++;\n      return ' ';\n    }\n  }\n\n  /**\n   * Get and return a TeX argument (either a single character or control\n   *     sequence, or the contents of the next set of braces).\n   * @param {string} name Name of the current control sequence.\n   * @param {boolean} noneOK? True if no argument is OK.\n   * @return {string} The next argument.\n   */\n  public GetArgument(_name: string, noneOK?: boolean): string {\n    switch (this.GetNext()) {\n    case '':\n      if (!noneOK) {\n        // @test MissingArgFor\n        throw new TexError('MissingArgFor', 'Missing argument for %1', this.currentCS);\n      }\n      return null;\n    case '}':\n      if (!noneOK) {\n        // @test ExtraCloseMissingOpen\n        throw new TexError('ExtraCloseMissingOpen',\n                            'Extra close brace or missing open brace');\n      }\n      return null;\n    case '\\\\':\n      this.i++;\n      return '\\\\' + this.GetCS();\n    case '{':\n      let j = ++this.i, parens = 1;\n      while (this.i < this.string.length) {\n        switch (this.string.charAt(this.i++)) {\n        case '\\\\':  this.i++; break;\n        case '{':   parens++; break;\n        case '}':\n          if (--parens === 0) {\n            return this.string.slice(j, this.i - 1);\n          }\n          break;\n        }\n      }\n      // @test MissingCloseBrace\n      throw new TexError('MissingCloseBrace', 'Missing close brace');\n    }\n    const c = this.getCodePoint();\n    this.i += c.length;\n    return c;\n  }\n\n\n  /**\n   * Get an optional LaTeX argument in brackets.\n   * @param {string} name Name of the current control sequence.\n   * @param {string} def? The default value for the optional argument.\n   * @return {string} The optional argument.\n   */\n  public GetBrackets(_name: string, def?: string): string {\n    if (this.GetNext() !== '[') {\n      return def;\n    }\n    let j = ++this.i, parens = 0;\n    while (this.i < this.string.length) {\n      switch (this.string.charAt(this.i++)) {\n      case '{':   parens++; break;\n      case '\\\\':  this.i++; break;\n      case '}':\n        if (parens-- <= 0) {\n          // @test ExtraCloseLooking1\n          throw new TexError('ExtraCloseLooking',\n                              'Extra close brace while looking for %1', '\\']\\'');\n        }\n        break;\n      case ']':\n        if (parens === 0) {\n          return this.string.slice(j, this.i - 1);\n        }\n        break;\n      }\n    }\n    // @test MissingCloseBracket\n    throw new TexError('MissingCloseBracket',\n                        'Could not find closing \\']\\' for argument to %1', this.currentCS);\n  }\n\n  /**\n   *  Get the name of a delimiter (check it in the delimiter list).\n   * @param {string} name Name of the current control sequence.\n   * @param {boolean} braceOK? Are braces around the delimiter OK.\n   * @return {string} The delimiter name.\n   */\n  public GetDelimiter(name: string, braceOK?: boolean): string {\n    let c = this.GetNext(); this.i += c.length;\n    if (this.i <= this.string.length) {\n      if (c === '\\\\') {\n        c += this.GetCS();\n      } else if (c === '{' && braceOK) {\n        this.i--;\n        c = this.GetArgument(name).trim();\n      }\n      if (this.contains('delimiter', c)) {\n        return this.convertDelimiter(c);\n      }\n    }\n    // @test MissingOrUnrecognizedDelim1, MissingOrUnrecognizedDelim2\n    throw new TexError('MissingOrUnrecognizedDelim',\n                        'Missing or unrecognized delimiter for %1', this.currentCS);\n  }\n\n  /**\n   * Get a dimension (including its units).\n   * @param {string} name Name of the current control sequence.\n   * @return {string} The dimension string.\n   */\n  public GetDimen(name: string): string {\n    if (this.GetNext() === '{') {\n      let dimen = this.GetArgument(name);\n      let [value, unit] = ParseUtil.matchDimen(dimen);\n      if (value) {\n        // @test Raise In Line, Lower 2, (Raise|Lower) Negative\n        return value + unit;\n      }\n    } else {\n      // @test Above, Raise, Lower, Modulo, Above With Delims\n      let dimen = this.string.slice(this.i);\n      let [value, unit, length] = ParseUtil.matchDimen(dimen, true);\n      if (value) {\n        this.i += length;\n        return value + unit;\n      }\n    }\n    // @test MissingDimOrUnits\n    throw new TexError('MissingDimOrUnits',\n                        'Missing dimension or its units for %1', this.currentCS);\n  }\n\n  /**\n   *  Get everything up to the given control sequence (token)\n   * @param {string} name Name of the current control sequence.\n   * @param {string} token The element until where to parse.\n   * @return {string} The text between the current position and the given token.\n   */\n  public GetUpTo(_name: string, token: string): string {\n    while (this.nextIsSpace()) {\n      this.i++;\n    }\n    let j = this.i;\n    let parens = 0;\n    while (this.i < this.string.length) {\n      let k = this.i;\n      let c = this.GetNext(); this.i += c.length;\n      switch (c) {\n      case '\\\\':  c += this.GetCS(); break;\n      case '{':   parens++; break;\n      case '}':\n        if (parens === 0) {\n          // @test ExtraCloseLooking2\n          throw new TexError('ExtraCloseLooking',\n                              'Extra close brace while looking for %1', token);\n        }\n        parens--;\n        break;\n      }\n      if (parens === 0 && c === token) {\n        return this.string.slice(j, k);\n      }\n    }\n    // @test TokenNotFoundForCommand\n    throw new TexError('TokenNotFoundForCommand',\n                        'Could not find %1 for %2', token, this.currentCS);\n  }\n\n  /**\n   * Parse the arguments of a control sequence in a new parser instance.\n   * @param {string} name Name of the current control sequence.\n   * @return {MmlNode} The parsed node.\n   */\n  public ParseArg(name: string): MmlNode  {\n    return new TexParser(this.GetArgument(name), this.stack.env,\n                         this.configuration).mml();\n  }\n\n  /**\n   * Parses a given string up to a given token in a new parser instance.\n   * @param {string} name Name of the current control sequence.\n   * @param {string} token A Token at which to end parsing.\n   * @return {MmlNode} The parsed node.\n   */\n  public ParseUpTo(name: string, token: string): MmlNode {\n    return new TexParser(this.GetUpTo(name, token), this.stack.env,\n                         this.configuration).mml();\n  }\n\n\n  /**\n   * Get a delimiter or empty argument\n   * @param {string} name Name of the current control sequence.\n   * @return {string} The delimiter.\n   */\n  public GetDelimiterArg(name: string): string {\n    let c = ParseUtil.trimSpaces(this.GetArgument(name));\n    if (c === '') {\n      return null;\n    }\n    if (this.contains('delimiter', c)) {\n      return c;\n    }\n    // @test MissingOrUnrecognizedDelim\n    throw new TexError('MissingOrUnrecognizedDelim',\n                        'Missing or unrecognized delimiter for %1', this.currentCS);\n  }\n\n  /**\n   * @return {boolean} True if a star follows the control sequence name.\n   */\n  public GetStar(): boolean {\n    let star = (this.GetNext() === '*');\n    if (star) {\n      this.i++;\n    }\n    return star;\n  }\n\n\n  /**\n   * Convenience method to create nodes with the node factory of the current\n   * configuration.\n   * @param {string} kind The kind of node to create.\n   * @param {any[]} ...rest The remaining arguments for the creation method.\n   * @return {MmlNode} The newly created node.\n   */\n  public create(kind: string, ...rest: any[]): MmlNode {\n    return this.configuration.nodeFactory.create(kind, ...rest);\n  }\n\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1985, "column": 0}, "map": {"version":3,"file":"StackItem.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/StackItem.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items hold information on the TexParser stack.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {FactoryNodeClass} from '../../core/Tree/Factory.js';\nimport TexError from './TexError.js';\nimport StackItemFactory from './StackItemFactory.js';\n\n// Union types for abbreviation.\nexport type EnvProp = string | number | boolean;\n\nexport type EnvList = {[key: string]: EnvProp};\n\n// This is the type for all fields that used to be set with With.\nexport type Prop = string | number | boolean | MmlNode | PropList;\n\nexport type PropList = {[key: string]: Prop};\n\nexport type CheckType = [(MmlNode | StackItem)[], boolean];\n\n\nexport interface NodeStack {\n\n  /**\n   * Get or set the topmost element on the node stack without removing it.\n   * @return {MmlNode} The topmost node on the stack.\n   */\n  First: MmlNode;\n\n  /**\n   * Get or set the last element on the node stack without removing it.\n   * @return {MmlNode} The last node on the stack.\n   */\n  Last: MmlNode;\n\n  /**\n   * @return {MmlNode} The topmost node on the item's node stack.\n   */\n  Pop(): MmlNode | void;\n\n  /**\n   * Pushes new nodes onto the items node stack.\n   * @param {MmlNode[]} ...nodes A list of nodes.\n   */\n  Push(...nodes: MmlNode[]): void;\n\n  /**\n   * Get the top n elements on the node stack without removing them.\n   * @param {number=} n Number of elements that should be returned.\n   * @return {MmlNode[]} List of nodes on top of stack.\n   */\n  Peek(n?: number): MmlNode[];\n\n  /**\n   * @return {number} The size of the stack.\n   */\n  Size(): number;\n\n  /**\n   * Clears the stack.\n   */\n  Clear(): void;\n\n  /**\n   * Returns nodes on the stack item's node stack as an Mml node. I.e., in case\n   * the item contains more than one node, it creates an mrow.\n   * @param {boolean=} inferred If set the mrow will be an inferred mrow.\n   * @param {boolean=} forceRow If set an mrow will be created, regardless of\n   *     how many nodes the item contains.\n   * @return {MmlNode} The topmost Mml node.\n   */\n  toMml(inferred?: boolean, forceRow?: boolean): MmlNode;\n\n}\n\n\nexport abstract class MmlStack implements NodeStack {\n\n  /**\n   * @constructor\n   * @extends {NodeStack}\n   * @param {MmlNode[]} nodes An initial list of nodes to put on the stack.\n   */\n  constructor(private _nodes: MmlNode[]) { }\n\n  /**\n   * @return {MmlNode[]} The nodes on the stack.\n   */\n  protected get nodes(): MmlNode[] {\n    return this._nodes;\n  }\n\n  /**\n   * @override\n   */\n  public Push(...nodes: MmlNode[]) {\n    this._nodes.push(...nodes);\n  }\n\n\n  /**\n   * @override\n   */\n  public Pop(): MmlNode {\n    return this._nodes.pop();\n  }\n\n\n  /**\n   * @override\n   */\n  public get First(): MmlNode {\n    return this._nodes[this.Size() - 1];\n  }\n\n\n  /**\n   * @override\n   */\n  public set First(node: MmlNode) {\n    this._nodes[this.Size() - 1] = node;\n  }\n\n\n  /**\n   * @override\n   */\n  public get Last(): MmlNode {\n    return this._nodes[0];\n  }\n\n\n  /**\n   * @override\n   */\n  public set Last(node: MmlNode) {\n    this._nodes[0] = node;\n  }\n\n\n  /**\n   * @override\n   */\n  public Peek(n?: number): MmlNode[] {\n    if (n == null) {\n      n = 1;\n    }\n    return this._nodes.slice(this.Size() - n);\n  }\n\n\n  /**\n   * @override\n   */\n  public Size(): number {\n    return this._nodes.length;\n  }\n\n\n  /**\n   * @override\n   */\n  public Clear(): void {\n    this._nodes = [];\n  }\n\n\n  protected abstract get factory(): StackItemFactory;\n\n  /**\n   * @override\n   */\n  public toMml(inferred: boolean = true, forceRow?: boolean) {\n    if (this._nodes.length === 1 && !forceRow) {\n      return this.First;\n    }\n    // @test Two Identifiers\n    return this.create(\n      'node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});\n  }\n\n\n  /**\n   * Convenience method to create nodes with the node factory on this stack.\n   * @param {string} kind The kind of node to create.\n   * @param {any[]} ...rest The remaining arguments for the creation method.\n   * @return {MmlNode} The newly created node.\n   */\n  public create(kind: string, ...rest: any[]): MmlNode {\n    return this.factory.configuration.nodeFactory.create(kind, ...rest);\n  }\n\n}\n\nexport interface StackItem extends NodeStack {\n\n\n  /**\n   * Type of stack item.\n   * @type {string}\n   */\n  kind: string;\n\n  /**\n   * Is this a closing item, e.g., end.\n   * @type {boolean}\n   */\n  isClose: boolean;\n\n  /**\n   * Is this an opening item, e.g., begin.\n   * @type {boolean}\n   */\n  isOpen: boolean;\n\n  /**\n   * Is this a finalising item, i.e., one that only collects nodes.\n   * @type {boolean}\n   */\n  isFinal: boolean;\n\n  /**\n   * Global properties of the parser.\n   * @type {EnvList}\n   */\n   global: EnvList;\n\n  /**\n   * Local properties of the stack item.\n   * @type {EnvList}\n   */\n   env: EnvList;\n\n  /**\n   * Copy local properties when pushed to stack?\n   * @type {boolean}\n   */\n   copyEnv: boolean;\n\n  /**\n   * Tests if item is of the given type.\n   * @param {string} kind The type.\n   * @return {boolean} True if item is of that type.\n   */\n  isKind(kind: string): boolean;\n\n  /**\n   * Get a property of the item.\n   * @param {string} key Property name.\n   * @return {Prop} Property value if it exists.\n   */\n  getProperty(key: string): Prop;\n\n  /**\n   * Set a property.\n   * @param {string} key Property name.\n   * @param {Prop} value Property value.\n   * @return {StackItem} The item for pipelining.\n   */\n  setProperty(key: string, value: Prop): StackItem;\n\n  /**\n   * Sets a list of properties.\n   * @param {PropList} def The properties to set.\n   * @return {StackItem} Returns the stack item object for pipelining.\n   */\n  setProperties(def: PropList): StackItem;\n\n  /**\n   * Convenience method for returning the string property \"name\".\n   * @return {string} The value for the name property.\n   */\n  getName(): string;\n\n  /**\n   * TeX parsing in MathJax is essentially implemented via a nested stack\n   * automaton. That is the tex parser works on a stack, and each item on the\n   * stack can have a data stack of its own. Data on the stack is either a stack\n   * item or a node.\n   *\n   * The checkItem method effectively implements the recursive checking of\n   * input data from the parser against data recursively given on the stack.\n   *\n   * I.e., new input is parsed resulting in a new item. When pushed on the stack\n   * it is checked against the top most item on the stack. This either leads to\n   * the item being pushed onto the stack or combined with the top most\n   * element(s), pushing a new item, which is recursively checked, unless an\n   * error is thrown.\n   *\n   * A simple example: If \\\\end{foo} is parsed, an endItem is created, pushed on\n   * the stack. Nodes on the stack are collapsed into content of the 'foo'\n   * environment, until a beginItem for 'foo' is found.  If a beginItem is not\n   * for 'foo' or does not exist an error is thrown.\n   *\n   * @param {StackItem} item The pushed item.\n   * @return {CheckType} True/false or an item or node.\n   */\n  checkItem(item: StackItem): CheckType;\n\n}\n\nexport interface StackItemClass extends FactoryNodeClass<StackItem> {\n  // new (factory: StackItemFactory, ...args: any[]): StackItem;\n}\n\n\n/**\n * Abstract basic item class that implements most of the stack item\n * functionality. In particular, it contains the base method for checkItem.\n */\nexport abstract class BaseItem extends MmlStack implements StackItem {\n\n  /**\n   * The fail value.\n   * @type {CheckType}\n   */\n  protected static fail: CheckType = [null, false];\n\n  /**\n   * The success value.\n   * @type {CheckType}\n   */\n  protected static success: CheckType = [null, true];\n\n  /**\n   * A list of basic errors.\n   * @type {{[key: string]: string[]}}\n   */\n  protected static errors: {[key: string]: string[]} = {\n    // @test ExtraOpenMissingClose\n    end: ['MissingBeginExtraEnd', 'Missing \\\\begin{%1} or extra \\\\end{%1}'],\n    // @test ExtraCloseMissingOpen\n    close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],\n    // @test MissingLeftExtraRight\n    right: ['MissingLeftExtraRight', 'Missing \\\\left or extra \\\\right'],\n    middle: ['ExtraMiddle', 'Extra \\\\middle']\n  };\n\n\n  /**\n   * @override\n   */\n  public global: EnvList = {};\n\n  private _env: EnvList;\n\n  private _properties: PropList = {};\n\n\n  /**\n   * @constructor\n   * @extends {MmlStack}\n   */\n  constructor(protected factory: StackItemFactory, ...nodes: MmlNode[]) {\n    super(nodes);\n    if (this.isOpen) {\n      this._env = {};\n    }\n  }\n\n  /**\n   * @return {string} The type of the stack item.\n   */\n    public get kind(): string {\n    return 'base';\n  }\n\n  /**\n   * @return {EnvList} Get the private environment\n   */\n  public get env(): EnvList {\n    return this._env;\n  }\n\n  /**\n   * Set the private environment\n   * @param {EnvList} value New private environemt.\n   */\n  public set env(value: EnvList) {\n    this._env = value;\n  }\n\n  /**\n   * Default is to copy local environment when pushed on stack\n   */\n  public get copyEnv() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public getProperty(key: string): Prop {\n    return this._properties[key];\n  }\n\n  /**\n   * @override\n   */\n  public setProperty(key: string, value: Prop) {\n    this._properties[key] = value;\n    return this;\n  }\n\n\n  /**\n   * @return {boolean} True if item is an opening entity, i.e., it expects a\n   *     closing counterpart on the stack later.\n   */\n  get isOpen(): boolean {\n    return false;\n  }\n\n  /**\n   * @return {boolean} True if item is an closing entity, i.e., it needs an\n   *     opening counterpart already on the stack.\n   */\n  get isClose(): boolean {\n    return false;\n  }\n\n\n  /**\n   * @return {boolean} True if item is final, i.e., it contains one or multiple\n   *      finished parsed nodes.\n   */\n  get isFinal(): boolean {\n    return false;\n  }\n\n\n  /**\n   * @override\n   */\n  public isKind(kind: string) {\n    return kind === this.kind;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('over') && this.isOpen) {\n      item.setProperty('num', this.toMml(false));\n      this.Clear();\n    }\n    if (item.isKind('cell') && this.isOpen) {\n      if (item.getProperty('linebreak')) {\n        return BaseItem.fail;\n      }\n      // @test Ampersand-error\n      throw new TexError('Misplaced', 'Misplaced %1', item.getName());\n    }\n    if (item.isClose && this.getErrors(item.kind)) {\n      // @test ExtraOpenMissingClose, ExtraCloseMissingOpen,\n      //       MissingLeftExtraRight, MissingBeginExtraEnd\n      const [id, message] = this.getErrors(item.kind);\n      throw new TexError(id, message, item.getName());\n    }\n    if (!item.isFinal) {\n      return BaseItem.success;\n    }\n    this.Push(item.First);\n    return BaseItem.fail;\n  }\n\n\n  /**\n   * Clears the item's environment.\n   */\n  public clearEnv() {\n    for (const id of Object.keys(this.env)) {\n      delete this.env[id];\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public setProperties(def: PropList) {\n    Object.assign(this._properties, def);\n    return this;\n  }\n\n\n  /**\n   * @override\n   */\n  public getName() {\n    return this.getProperty('name') as string;\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return this.kind + '[' + this.nodes.join('; ') + ']';\n  }\n\n\n  /**\n   * Get error messages for a particular types of stack items. This reads error\n   * messages from the static errors object, which can be extended in\n   * subclasses.\n   * @param {string} kind The stack item type.\n   * @return {string[]} The list of arguments for the TeXError.\n   */\n  public getErrors(kind: string): string[] {\n    const CLASS = (this.constructor as typeof BaseItem);\n    return (CLASS.errors || {})[kind] || BaseItem.errors[kind];\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2293, "column": 0}, "map": {"version":3,"file":"StackItemFactory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/StackItemFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview A factory for stack items. This allows particular items to be\n *     overwritten later.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {StackItemClass, StackItem, BaseItem} from './StackItem.js';\nimport ParseOptions from './ParseOptions.js';\nimport {AbstractFactory} from '../../core/Tree/Factory.js';\n\n\nclass DummyItem extends BaseItem {}\n\n/**\n * The StackItemFactory is initially populated with the default stack item\n * classes. They can be changed, deleted or added to, if and when necessary.\n *\n * @constructor\n * @extends {AbstractFactory}\n */\nexport default class StackItemFactory extends AbstractFactory<StackItem, StackItemClass> {\n\n  /**\n   * @override\n   */\n  public static DefaultStackItems: {[kind: string]: StackItemClass} = {\n    [DummyItem.prototype.kind]: DummyItem\n  };\n\n\n  /**\n   * @override\n   */\n  public defaultKind = 'dummy';\n\n\n  /**\n   * The parser configuration.\n   * @type {ParseOptions}\n   */\n  public configuration: ParseOptions = null;\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,2CAAmE;AAEnE,IAAA,qDAA2D;AAG3D,IAAA,YAAA,SAAA,MAAA;IAAwB,UAAA,WAAA,QAAQ;IAAhC,SAAA;;IAAkC,CAAC;IAAD,OAAA,SAAC;AAAD,CAAC,AAAnC,CAAwB,eAAA,QAAQ,GAAG;AASnC,IAAA,mBAAA,SAAA,MAAA;IAA8C,UAAA,kBAAA,QAA0C;IAAxF,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAsBC;QATQ,MAAA,WAAW,GAAG,OAAO,CAAC;QAOtB,MAAA,aAAa,GAAiB,IAAI,CAAC;;IAE5C,CAAC;IAjBe,iBAAA,iBAAiB,GAAA,CAAA,KAAA,CAAA,GAC7B,EAAA,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,SAAS,MACrC;IAeJ,OAAA,gBAAC;CAAA,AAtBD,CAA8C,aAAA,eAAe,GAsB5D;kBAtBoB,gBAAgB","ignoreList":[0]}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2344, "column": 0}, "map": {"version":3,"file":"NodeFactory.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/NodeFactory.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Node factory for creating MmlNodes. This allows extension\n *     packages to add node constructors or overwrite existing ones.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {TextNode, MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {MmlFactory} from '../../core/MmlTree/MmlFactory.js';\nimport ParseOptions from './ParseOptions.js';\nimport NodeUtil from './NodeUtil.js';\n\n\nexport type NodeFactoryMethod = (factory: NodeFactory, kind: string, ...rest: any[]) => MmlNode;\n\nexport class NodeFactory {\n\n  /**\n   * Parser configuration that can be used to pass information between node methods.\n   * @type {ParseOption}\n   */\n  public configuration: ParseOptions;\n\n\n  /**\n   * The external node factory.\n   * @type {MmlFactory}\n   */\n  protected mmlFactory: MmlFactory = null;\n\n\n  /**\n   * The factory table populated with some default methods.\n   */\n  private factory: {[kind: string]: NodeFactoryMethod} =\n    {'node': NodeFactory.createNode,\n     'token': NodeFactory.createToken,\n     'text': NodeFactory.createText,\n     'error': NodeFactory.createError\n    };\n\n  /**\n   * Default node generation function.\n   * @param {NodeFactory} factory The current node factory.\n   * @param {string} kind The type of node to create.\n   * @param {MmlNode[]} children Its children.\n   * @param {any=} def Its properties.\n   * @param {TextNode=} text An optional text node if this is a token.\n   * @return {MmlNode} The newly created Mml node.\n   */\n  public static createNode(factory: NodeFactory, kind: string,\n                           children: MmlNode[] = [], def: any = {},\n                           text?: TextNode): MmlNode {\n    const node = factory.mmlFactory.create(kind);\n    node.setChildren(children);\n    if (text) {\n      node.appendChild(text);\n    }\n    NodeUtil.setProperties(node, def);\n    return node;\n  }\n\n\n  /**\n   * Default token generation function.\n   * @param {NodeFactory} factory The current node factory.\n   * @param {string} kind The type of node to create.\n   * @param {any} def Its properties.\n   * @param {string} text Text of the token.\n   * @return {MmlNode} The newly created token node.\n   */\n  public static createToken(factory: NodeFactory, kind: string,\n                            def: any = {}, text: string = ''): MmlNode  {\n    const textNode = factory.create('text', text);\n    return factory.create('node', kind, [], def, textNode);\n  }\n\n\n  /**\n   * Default text node generation function.\n   * @param {NodeFactory} factory The current node factory.\n   * @param {string} text The text for the new node.\n   * @return {TextNode} The newly created text node.\n   */\n  public static createText(factory: NodeFactory, text: string): TextNode  {\n    if (text == null) {\n      return null;\n    }\n    return (factory.mmlFactory.create('text') as TextNode).setText(text);\n  }\n\n\n  /**\n   * Default error node generation function.\n   * @param {NodeFactory} factory The current node factory.\n   * @param {string} message The error message.\n   * @return {MmlNode} The newly created error node.\n   */\n  public static createError(factory: NodeFactory, message: string): MmlNode  {\n    let text = factory.create('text', message);\n    let mtext = factory.create('node', 'mtext', [], {}, text);\n    let error = factory.create('node', 'merror', [mtext], {'data-mjx-error': message});\n    return error;\n  }\n\n\n  /**\n   * @param {MmlFactory} mmlFactory   The MmlFactory for the TeX jax to use\n   */\n  public setMmlFactory(mmlFactory: MmlFactory) {\n    this.mmlFactory = mmlFactory;\n  }\n\n  /**\n   * Adds a method to the factory.\n   * @param {string} kind The type of node the method creates.\n   * @param {NodeFactoryMethod} func The node creator.\n   */\n  public set(kind: string, func: NodeFactoryMethod) {\n    this.factory[kind] = func;\n  }\n\n\n  /**\n   * Adds a set of node creators to the factory.\n   * @param {Object.<NodeFactoryMethod>} maps The set of functions.\n   */\n  public setCreators(maps: {[kind: string]: NodeFactoryMethod}) {\n    for (let kind in maps) {\n      this.set(kind, maps[kind]);\n    }\n  }\n\n\n  /**\n   * Creates a node for the internal data structure from the factory.\n   * @param {string} kind The type of node to be created.\n   * @param {any[]} ...rest The arguments for the node.\n   * @return {MmlNode} The created node.\n   */\n  public create(kind: string, ...rest: any[]): MmlNode {\n    const func = this.factory[kind] || this.factory['node'];\n    const node = func(this, rest[0], ...rest.slice(1));\n    if (kind === 'node') {\n      this.configuration.addNode(rest[0], node);\n    }\n    return node;\n  }\n\n\n  /**\n   * @param {string} kind The method for generating a node of given kind.\n   */\n  public get(kind: string) {\n    return this.factory[kind];\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2471, "column": 0}, "map": {"version":3,"file":"ParseOptions.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ParseOptions.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Factory generating maps to keep options for the TeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport StackItemFactory from './StackItemFactory.js';\nimport {Tags} from './Tags.js';\nimport {SubHandlers} from './MapHandler.js';\nimport {NodeFactory} from './NodeFactory.js';\nimport NodeUtil from './NodeUtil.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport TexParser from './TexParser.js';\nimport {defaultOptions, OptionList} from '../../util/Options.js';\nimport {ParserConfiguration} from './Configuration.js';\n\n\n/**\n * @class\n */\nexport default class ParseOptions {\n\n  /**\n   * A set of sub handlers\n   * @type {SubHandlers}\n   */\n  public handlers: SubHandlers;\n\n  /**\n   * A set of options, mapping names to string or boolean values.\n   * @type {OptionList}\n   */\n  public options: OptionList = {};\n\n  /**\n   * The current item factory.\n   * @type {StackItemFactory}\n   */\n  public itemFactory: StackItemFactory;\n\n  /**\n   * The current node factory.\n   * @type {NodeFactory}\n   */\n  public nodeFactory: NodeFactory;\n\n  /**\n   * The current tagging object.\n   * @type {Tags}\n   */\n  public tags: Tags;\n\n  /**\n   * Storage area for parser-specific package data (indexed by package name)\n   * @type {Map<string, any>}\n   */\n  public packageData: Map<string, any> = new Map();\n\n  // Fields for ephemeral options, i.e., options that will be cleared for each\n  // run of the parser.\n  /**\n   * Stack of previous tex parsers. This is used to keep track of parser\n   * settings when expressions are recursively parsed.\n   * @type {TexParser[]}\n   */\n  public parsers: TexParser[] = [];\n\n\n  /**\n   * The current root node.\n   * @type {MmlNode}\n   */\n  public root: MmlNode = null;\n\n  /**\n   * List of node lists saved with respect to some property or their kind.\n   * @type {{[key: string]: MmlNode[]}}\n   */\n  public nodeLists: {[key: string]: MmlNode[]} = {};\n\n  /**\n   * Error state of the parser.\n   * @type {boolean}\n   */\n  public error: boolean = false;\n\n\n\n  /**\n   * @constructor\n   * @param {Configuration} configuration Configuration object of the current\n   *     TeX parser.\n   * @param {OptionList[]} options   [TeX options, Tag options, {packages}]\n   */\n  public constructor(configuration: ParserConfiguration, options: OptionList[] = []) {\n    this.handlers = configuration.handlers;\n    // Add node factory methods from packages.\n    this.nodeFactory = new NodeFactory();\n    this.nodeFactory.configuration = this;\n    this.nodeFactory.setCreators(configuration.nodes);\n    // Add stackitems from packages.\n    this.itemFactory = new StackItemFactory(configuration.items);\n    this.itemFactory.configuration = this;\n    // Set default options for parser from packages and for tags.\n    defaultOptions(this.options, ...options);\n    defaultOptions(this.options, configuration.options);\n  }\n\n\n  // Methods for dealing with ephemeral fields.\n  /**\n   * Pushes a new tex parser onto the stack.\n   * @param {TexParser} parser The new parser.\n   */\n  public pushParser(parser: TexParser) {\n    this.parsers.unshift(parser);\n  }\n\n\n  /**\n   * Pops a parser of the tex parser stack.\n   */\n  public popParser() {\n    this.parsers.shift();\n  }\n\n\n  /**\n   * @return {TexParser} The currently active tex parser.\n   */\n  public get parser(): TexParser {\n    return this.parsers[0];\n  }\n\n  /**\n   * Clears all the ephemeral options.\n   */\n  public clear() {\n    this.parsers = [];\n    this.root = null;\n    this.nodeLists = {};\n    this.error = false;\n    this.tags.resetTag();\n  }\n\n\n  /**\n   * Saves a tree node to a list of nodes for post processing.\n   * @param {string} property The property name that will be used for\n   *     postprocessing.\n   * @param {MmlNode} node The node to save.\n   */\n  public addNode(property: string, node: MmlNode) {\n    let list = this.nodeLists[property];\n    if (!list) {\n      list = this.nodeLists[property] = [];\n    }\n    list.push(node);\n    if (node.kind !== property) {\n      //\n      // If the list is not just for its kind, record that it is in this list\n      //   so that if it is copied, the copy can also be added to the list.\n      //\n      const inlists = (NodeUtil.getProperty(node, 'in-lists') as string || '');\n      const lists = (inlists ? inlists.split(/,/) : []).concat(property).join(',');\n      NodeUtil.setProperty(node, 'in-lists', lists);\n    }\n  }\n\n\n  /**\n   * Gets a saved node list with respect to a given property. It first ensures\n   * that all the nodes are \"live\", i.e., actually live in the current\n   * tree. Sometimes nodes are created, saved in the node list but discarded\n   * later in the parsing. These will be filtered out here.\n   *\n   * NB: Do not use this method before the root field of the options is\n   * set. Otherwise, your node list will always be empty!\n   * @param {string} property The property for which to retrieve the node list.\n   */\n  public getList(property: string) {\n    let list = this.nodeLists[property] || [];\n    let result = [];\n    for (let node of list) {\n      if (this.inTree(node)) {\n        result.push(node);\n      }\n    }\n    this.nodeLists[property] = result;\n    return result;\n  }\n\n\n  /**\n   * Remove a list of nodes from a saved list (e.g., when a filter removes the\n   * node from the DOM, like for munderover => munder).\n   *\n   * @param {string} property The property from which to remove nodes.\n   * @param {MmlNode[]} nodes The nodes to remove.\n   */\n  public removeFromList(property: string, nodes: MmlNode[]) {\n    const list = this.nodeLists[property] || [];\n    for (const node of nodes) {\n      const i = list.indexOf(node);\n      if (i >= 0) {\n        list.splice(i, 1);\n      }\n    }\n  }\n\n\n  /**\n   * Tests if the node is in the tree spanned by the current root node.\n   * @param {MmlNode} node The node to test.\n   */\n  private inTree(node: MmlNode) {\n    while (node && node !== this.root) {\n      node = node.parent;\n    }\n    return !!node;\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2637, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2642, "column": 0}, "map": {"version":3,"file":"Tags.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/Tags.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Class for generating tags, references, etc.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport TexParser from './TexParser.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport {MathItem} from '../../core/MathItem.js';\nimport {EnvList} from './StackItem.js';\nimport ParseOptions from './ParseOptions.js';\nimport {OptionList} from '../../util/Options.js';\n\n\n/**\n *  Simple class for label objects.\n */\nexport class Label {\n\n  /**\n   * @constructor\n   * @param {string=} tag The tag that's displayed.\n   * @param {string=} id The id that serves as reference.\n   */\n  constructor(public tag: string = '???', public id: string = '') {}\n}\n\n\n/**\n * A simple class for keeping track of tag information.\n */\nexport class TagInfo {\n\n  /**\n   * @constructor\n   * @param {string} env The environment name (e.g., align).\n   * @param {boolean} taggable Environment supports tags (e.g., align* does, but\n   *     split does not.)\n   * @param {boolean} defaultTags Environment is tagged by default (e.g., align\n   *     is, but align* is not).\n   * @param {string} tag The tag name (e.g., 1).\n   * @param {string} tagId The unique id for that tag (e.g., mjx-eqn:1).\n   * @param {string} tagFormat The formatted tag (e.g., \"(1)\").\n   * @param {boolean} noTag A no tagging command has been set (e.g., \\notag,\n   *     \\nonumber).\n   * @param {string} labelId The label referring to the tag.\n   */\n  constructor(readonly env: string = '',\n              readonly taggable: boolean = false,\n              readonly defaultTags: boolean = false,\n              public tag: string = null,\n              public tagId: string = '',\n              public tagFormat: string = '',\n              public noTag: boolean = false,\n              public labelId: string = '') {}\n\n}\n\n\nexport interface Tags {\n\n  /**\n   * The global configurations in which the parsing takes place.\n   * @type {ParseOptions}\n   */\n  configuration: ParseOptions;\n\n  /**\n   * IDs used in this equation.\n   * @type {Object.<boolean>}\n   */\n  ids: {[key: string]: boolean};\n\n  /**\n   * IDs used in previous equations.\n   * @type {Object.<boolean>}\n   */\n  allIds: {[key: string]: boolean};\n\n  /**\n   * Labels in the current equation.\n   * @type {Object.<Label>}\n   */\n  labels: {[key: string]: Label};\n\n  /**\n   * Labels in previous equations.\n   * @type {Object.<Label>}\n   */\n  allLabels: {[key: string]: Label};\n\n  /**\n   * The label to use for the next tag.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * True if the equation contains an undefined label and must be reprocessed later.\n   * @type {boolean}\n   */\n  redo: boolean;\n\n  /**\n   * True when recompiling to update undefined references\n   * @type {boolean}\n   */\n  refUpdate: boolean;\n\n  /**\n   * The environment that is currently tagged.\n   * @type {string}\n   */\n  env: string;\n\n  /**\n   * The currently active tag.\n   * @type {TagInfo}\n   */\n  currentTag: TagInfo;\n\n  /**\n   * How to format tags.\n   * @param {string} tag The tag string.\n   * @return {string} The formatted numbered tag.\n   */\n  formatTag(tag: string): string;\n\n  /**\n   * How to format URLs for references.\n   * @param {string} id The reference id.\n   * @param {string} base The base URL in the reference.\n   * @return {}\n   */\n  formatUrl(id: string, base: string): string;\n\n  /**\n   * Set the tag automatically, by incrementing equation number.\n   */\n  autoTag(): void;\n\n  /**\n   * @return {MmlNode|void} Generates and returns the tag node.\n   */\n  getTag(): MmlNode | void;\n\n  /**\n   * Clears tagging information.\n   */\n  clearTag(): void;\n\n  /**\n   * Resets the tag structure after an expression has been typeset.\n   */\n  resetTag(): void;\n\n  /**\n   * Fully resets the tag structure, in particular all the tagging and label\n   * history.\n   * @param {number} offset A new offset value to start counting ids from.\n   */\n  reset(offset?: number): void;\n\n  /**\n   * Initialise tagging for a MathItem\n   * (clear equation-specific labels and ids, set counter\n   * and check for recompile)\n   * @param {MathItem} math   The MathItem for the current equation\n   */\n    startEquation(math: MathItem<any, any, any>): void;\n\n  /**\n   * Move equation-specific labels and ids to global ones,\n   * save the counter, and mark the MathItem for redos\n   */\n    finishEquation(math: MathItem<any, any, any>): void;\n\n  /**\n   * Finalizes tag creation.\n   * @param {MmlNode} node\n   * @param {EnvList} env List of environment properties.\n   * @return {MmlNode} The newly created tag.\n   */\n  finalize(node: MmlNode, env: EnvList): MmlNode;\n\n  /**\n   * Starts tagging on a given environment.\n   * @param {string} env The name of the environment.\n   * @param {boolean} taggable True if taggable.\n   * @param {boolean} defaultTags True if tagged by default.\n   */\n  start(env: string, taggable: boolean, defaultTags: boolean): void;\n\n  /**\n   * End tagging.\n   */\n  end(): void;\n\n  /**\n   * Computes the next tag.\n   * @param {string} tag The tag content.\n   * @param {boolean} noFormat True if tag should not be formatted.\n   */\n  tag(tag: string, noFormat: boolean): void;\n\n  /**\n   * Call an explicit no tag.\n   */\n  notag(): void;\n\n  /**\n   * Entag an element by creating a table around it.\n   * @param {MmlNode} node The node to be tagged.\n   * @param {MmlNode} tag The tag node.\n   * @return {MmlNode} The table node containing the original node and tag.\n   */\n  enTag(node: MmlNode, tag: MmlNode): MmlNode;\n}\n\n\nexport class AbstractTags implements Tags {\n\n  /**\n   * Current equation number.\n   * @type {number}\n   */\n  protected counter: number = 0;\n\n  /**\n   * Equation number as equation begins.\n   * @type {number}\n   */\n  protected allCounter: number = 0;\n\n  /**\n   * @override\n   */\n  public configuration: ParseOptions = null;\n\n  /**\n   * @override\n   */\n  public ids: {[key: string]: boolean} = {};\n\n  /**\n   * @override\n   */\n  public allIds: {[key: string]: boolean} = {};\n\n  /**\n   * @override\n   */\n  public labels: {[key: string]: Label} = {};\n\n  /**\n   * @override\n   */\n  public allLabels: {[key: string]: Label} = {};\n\n  /**\n   * @override\n   */\n  public redo: boolean = false;\n\n  /**\n   * @override\n   */\n  public refUpdate: boolean = false;\n\n  /**\n   * @override\n   */\n  public currentTag: TagInfo = new TagInfo();\n\n\n  /**\n   * Chronology of all previous tags, in case we need to look something up in\n   * the finalize method.\n   * @type {TagInfo[]}\n   */\n  protected history: TagInfo[] = [];\n\n  private stack: TagInfo[] = [];\n\n  /**\n   * @override\n   */\n  public start(env: string, taggable: boolean, defaultTags: boolean) {\n    if (this.currentTag) {\n      this.stack.push(this.currentTag);\n    }\n    this.currentTag = new TagInfo(env, taggable, defaultTags);\n  }\n\n  public get env() {\n    return this.currentTag.env;\n  }\n\n\n  /**\n   * @override\n   */\n  public end() {\n    this.history.push(this.currentTag);\n    this.currentTag = this.stack.pop();\n  }\n\n\n  /**\n   * @override\n   */\n  public tag(tag: string, noFormat: boolean) {\n    this.currentTag.tag = tag;\n    this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);\n    this.currentTag.noTag = false;\n  }\n\n\n  /**\n   * @override\n   */\n  public notag() {\n    this.tag('', true);\n    this.currentTag.noTag = true;\n  }\n\n  protected get noTag(): boolean {\n    return this.currentTag.noTag;\n  }\n\n  public set label(label: string) {\n    this.currentTag.labelId = label;\n  }\n\n  public get label() {\n    return this.currentTag.labelId;\n  }\n\n  /**\n   * @override\n   */\n  public formatUrl(id: string, base: string) {\n    return base + '#' + encodeURIComponent(id);\n  }\n\n  /**\n   * @override\n   */\n  public formatTag(tag: string) {\n    return '(' + tag + ')';\n  }\n\n  /**\n   * How to format ids for labelling equations.\n   * @param {string} id The unique part of the id (e.g., label or number).\n   * @return {string} The formatted id.\n   */\n  protected formatId(id: string): string {\n    return 'mjx-eqn:' + id.replace(/\\s/g, '_');\n  }\n\n  /**\n   * How to format numbers in tags.\n   * @param {number} n The tag number.\n   * @return {string} The formatted number.\n   */\n  protected formatNumber(n: number): string {\n    return n.toString();\n  }\n\n  // Tag handling functions.\n  /**\n   * @override\n   */\n  public autoTag() {\n    if (this.currentTag.tag == null) {\n      this.counter++;\n      this.tag(this.formatNumber(this.counter), false);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public clearTag() {\n    this.label = '';\n    this.tag(null, true);\n    this.currentTag.tagId = '';\n  }\n\n\n  /**\n   * @override\n   */\n  public getTag(force: boolean = false) {\n    if (force) {\n      this.autoTag();\n      return this.makeTag();\n    }\n    const ct = this.currentTag;\n    if (ct.taggable && !ct.noTag) {\n      if (ct.defaultTags) {\n        this.autoTag();\n      }\n      if (ct.tag) {\n        return this.makeTag();\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * @override\n   */\n  public resetTag() {\n    this.history = [];\n    this.redo = false;\n    this.refUpdate = false;\n    this.clearTag();\n  }\n\n  /**\n   * @override\n   */\n  public reset(offset: number = 0) {\n    this.resetTag();\n    this.counter = this.allCounter = offset;\n    this.allLabels = {};\n    this.allIds = {};\n  }\n\n  /**\n   * @override\n   */\n  public startEquation(math: MathItem<any, any, any>) {\n    this.history = [];\n    this.stack = [];\n    this.clearTag();\n    this.currentTag = new TagInfo('', undefined, undefined);\n    this.labels = {};\n    this.ids = {};\n    this.counter = this.allCounter;\n    this.redo = false;\n    const recompile = math.inputData.recompile;\n    if (recompile) {\n      this.refUpdate = true;\n      this.counter = recompile.counter;\n    }\n  }\n\n  /**\n   * @override\n   */\n  public finishEquation(math: MathItem<any, any, any>) {\n    if (this.redo) {\n      math.inputData.recompile = {\n        state: math.state(),\n        counter: this.allCounter\n      };\n    }\n    if (!this.refUpdate) {\n      this.allCounter = this.counter;\n    }\n    Object.assign(this.allIds, this.ids);\n    Object.assign(this.allLabels, this.labels);\n  }\n\n  /**\n   * @override\n   */\n  public finalize(node: MmlNode, env: EnvList): MmlNode {\n    if (!env.display || this.currentTag.env ||\n        this.currentTag.tag == null) {\n      return node;\n    }\n    let tag = this.makeTag();\n    let table = this.enTag(node, tag);\n    return table;\n  }\n\n  /**\n   * @override\n   */\n  public enTag = function(node: MmlNode, tag: MmlNode): MmlNode {\n    let nf = this.configuration.nodeFactory;\n    let cell = nf.create('node', 'mtd', [node]);\n    let row = nf.create('node', 'mlabeledtr', [tag, cell]);\n    let table = nf.create('node', 'mtable', [row], {\n      side: this.configuration.options['tagSide'],\n      minlabelspacing: this.configuration.options['tagIndent'],\n      displaystyle: true\n    });\n    return table;\n  };\n\n\n  /**\n   * Sets the tag id.\n   */\n  private makeId() {\n    this.currentTag.tagId = this.formatId(\n      this.configuration.options['useLabelIds'] ?\n        (this.label || this.currentTag.tag) : this.currentTag.tag);\n  }\n\n\n  /**\n   * @return {MmlNode} The actual tag node as an mtd.\n   */\n  private makeTag(): MmlNode {\n    this.makeId();\n    if (this.label) {\n      this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);\n    }\n    let mml = new TexParser('\\\\text{' + this.currentTag.tagFormat + '}', {},\n                            this.configuration).mml();\n    return this.configuration.nodeFactory.create('node', 'mtd', [mml],\n                                                 {id: this.currentTag.tagId});\n  }\n\n}\n\n\n/**\n * No tags, except where explicitly set.\n * @constructor\n * @extends {AbstractTags}\n */\nexport class NoTags extends AbstractTags {\n\n  /**\n   * @override\n   */\n  public autoTag() {}\n\n  /**\n   * @override\n   */\n  public getTag() {\n    return !this.currentTag.tag ? null : super.getTag();\n  }\n\n}\n\n\n/**\n * Tags every display formula. Exceptions are: Environments that explicitly\n * disallow tags, e.g., equation*.\n * @constructor\n * @extends {AbstractTags}\n */\nexport class AllTags extends AbstractTags {\n\n  /**\n   * @override\n   */\n  public finalize(node: MmlNode, env: EnvList) {\n    if (!env.display || this.history.find(\n      function(x: TagInfo) { return x.taggable; })) {\n      return node;\n    }\n    let tag = this.getTag(true);\n    return this.enTag(node, tag);\n  }\n\n}\n\n\n/**\n * Class interface for factory.\n * @interface\n */\nexport interface TagsClass {\n  new (): Tags;\n}\n\n\nexport namespace TagsFactory {\n\n  let tagsMapping = new Map<string, TagsClass>([\n    ['none', NoTags],\n    ['all', AllTags]\n  ]);\n\n  let defaultTags = 'none';\n\n  /**\n   * The default options for tagging\n   * @type {OptionList}\n   */\n  export let OPTIONS: OptionList = {\n    // Tagging style, used to be autonumber in v2.\n    tags: defaultTags,\n    // This specifies the side on which \\tag{} macros will place the tags.\n    // Set to 'left' to place on the left-hand side.\n    tagSide: 'right',\n    // This is the amount of indentation (from right or left) for the tags.\n    tagIndent: '0.8em',\n    // make element ID's use \\label name rather than equation number\n    // MJ puts in an equation prefix: mjx-eqn\n    // When true it uses the label name XXX as mjx-eqn:XXX\n    // If false it uses the actual number N that is displayed: mjx-eqn:N\n    useLabelIds: true,\n    // Set to true in order to prevent error messages for duplicate label ids\n    ignoreDuplicateLabels: false\n  };\n\n\n  /**\n   * Add a tagging object.\n   * @param {string} name Name of the tagging object.\n   * @param {TagsClass} constr The class of the Tagging object.\n   */\n  export let add = function(name: string, constr: TagsClass) {\n    tagsMapping.set(name, constr);\n  };\n\n\n  /**\n   * Adds a list of tagging objects to the factory.\n   * @param {{[name: string]: TagsClass}} tags The list of tagging objects.\n   */\n  export let addTags = function(tags: {[name: string]: TagsClass}) {\n    for (const key of Object.keys(tags)) {\n      TagsFactory.add(key, tags[key]);\n    }\n  };\n\n\n  /**\n   * Creates a new tagging object.\n   * @param {string} name The name of the tagging object.\n   * @return {Tags} The newly created object.\n   */\n  export let create = function(name: string): Tags {\n    let constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);\n    if (!constr) {\n        throw Error('Unknown tags class');\n    }\n    return new constr();\n  };\n\n\n  /**\n   * Set the name of the default tagging object.\n   * @param {string} name The default.\n   */\n  export let setDefault = function(name: string) {\n    defaultTags = name;\n  };\n\n\n  /**\n   * @return {Tags} The default tagging object.\n   */\n  export let getDefault = function(): Tags {\n    return TagsFactory.create(defaultTags);\n  };\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,iBAAA,2CAAuC;AAWvC,IAAA,QAAA;IAOE,SAAA,MAAmB,GAAmB,EAAS,EAAe;QAA3C,IAAA,QAAA,KAAA,GAAA;YAAA,MAAA,KAAmB;QAAA;QAAS,IAAA,OAAA,KAAA,GAAA;YAAA,KAAA,EAAe;QAAA;QAA3C,IAAA,CAAA,GAAG,GAAH,GAAG,CAAgB;QAAS,IAAA,CAAA,EAAE,GAAF,EAAE,CAAa;IAAG,CAAC;IACpE,OAAA,KAAC;AAAD,CAAC,AARD,IAQC;AARY,QAAA,KAAA,GAAA,MAAK;AAclB,IAAA,UAAA;IAgBE,SAAA,QAAqB,GAAgB,EAChB,QAAyB,EACzB,WAA4B,EAC9B,GAAkB,EAClB,KAAkB,EAClB,SAAsB,EACtB,KAAsB,EACtB,OAAoB;QAPlB,IAAA,QAAA,KAAA,GAAA;YAAA,MAAA,EAAgB;QAAA;QAChB,IAAA,aAAA,KAAA,GAAA;YAAA,WAAA,KAAyB;QAAA;QACzB,IAAA,gBAAA,KAAA,GAAA;YAAA,cAAA,KAA4B;QAAA;QAC9B,IAAA,QAAA,KAAA,GAAA;YAAA,MAAA,IAAkB;QAAA;QAClB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,EAAkB;QAAA;QAClB,IAAA,cAAA,KAAA,GAAA;YAAA,YAAA,EAAsB;QAAA;QACtB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,KAAsB;QAAA;QACtB,IAAA,YAAA,KAAA,GAAA;YAAA,UAAA,EAAoB;QAAA;QAPlB,IAAA,CAAA,GAAG,GAAH,GAAG,CAAa;QAChB,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAiB;QACzB,IAAA,CAAA,WAAW,GAAX,WAAW,CAAiB;QAC9B,IAAA,CAAA,GAAG,GAAH,GAAG,CAAe;QAClB,IAAA,CAAA,KAAK,GAAL,KAAK,CAAa;QAClB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAa;QACtB,IAAA,CAAA,KAAK,GAAL,KAAK,CAAiB;QACtB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAa;IAAG,CAAC;IAE7C,OAAA,OAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,QAAA,OAAA,GAAA,QAAO;AA6LpB,IAAA,eAAA;IAAA,SAAA;QAMY,IAAA,CAAA,OAAO,GAAW,CAAC,CAAC;QAMpB,IAAA,CAAA,UAAU,GAAW,CAAC,CAAC;QAK1B,IAAA,CAAA,aAAa,GAAiB,IAAI,CAAC;QAKnC,IAAA,CAAA,GAAG,GAA6B,CAAA,CAAE,CAAC;QAKnC,IAAA,CAAA,MAAM,GAA6B,CAAA,CAAE,CAAC;QAKtC,IAAA,CAAA,MAAM,GAA2B,CAAA,CAAE,CAAC;QAKpC,IAAA,CAAA,SAAS,GAA2B,CAAA,CAAE,CAAC;QAKvC,IAAA,CAAA,IAAI,GAAY,KAAK,CAAC;QAKtB,IAAA,CAAA,SAAS,GAAY,KAAK,CAAC;QAK3B,IAAA,CAAA,UAAU,GAAY,IAAI,OAAO,EAAE,CAAC;QAQjC,IAAA,CAAA,OAAO,GAAc,EAAE,CAAC;QAE1B,IAAA,CAAA,KAAK,GAAc,EAAE,CAAC;QA2MvB,IAAA,CAAA,KAAK,GAAG,SAAS,IAAa,EAAE,GAAY;YACjD,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;YACxC,IAAI,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE;gBAAC,IAAI;aAAC,CAAC,CAAC;YAC5C,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE;gBAAC,GAAG;gBAAE,IAAI;aAAC,CAAC,CAAC;YACvD,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;gBAAC,GAAG;aAAC,EAAE;gBAC7C,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC;gBAC3C,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC;gBACxD,YAAY,EAAE,IAAI;aACnB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;IA2BJ,CAAC;IA3OQ,aAAA,SAAA,CAAA,KAAK,GAAZ,SAAa,GAAW,EAAE,QAAiB,EAAE,WAAoB;QAC/D,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAClC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IAC5D,CAAC;IAED,OAAA,cAAA,CAAW,aAAA,SAAA,EAAA,KAAG,EAAA;aAAd;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;QAC7B,CAAC;;;OAAA;IAMM,aAAA,SAAA,CAAA,GAAG,GAAV;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IACrC,CAAC;IAMM,aAAA,SAAA,CAAA,GAAG,GAAV,SAAW,GAAW,EAAE,QAAiB;QACvC,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACjE,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;IAChC,CAAC;IAMM,aAAA,SAAA,CAAA,KAAK,GAAZ;QACE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;IAC/B,CAAC;IAED,OAAA,cAAA,CAAc,aAAA,SAAA,EAAA,OAAK,EAAA;aAAnB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,aAAA,SAAA,EAAA,OAAK,EAAA;aAIhB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QACjC,CAAC;aAND,SAAiB,KAAa;YAC5B,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAAA;IASM,aAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,EAAU,EAAE,IAAY;QACvC,OAAO,IAAI,GAAG,GAAG,GAAG,kBAAkB,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC;IAKM,aAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,GAAW;QAC1B,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACzB,CAAC;IAOS,aAAA,SAAA,CAAA,QAAQ,GAAlB,SAAmB,EAAU;QAC3B,OAAO,UAAU,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;IAOS,aAAA,SAAA,CAAA,YAAY,GAAtB,SAAuB,CAAS;QAC9B,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtB,CAAC;IAMM,aAAA,SAAA,CAAA,OAAO,GAAd;QACE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,EAAE;YAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;SAClD;IACH,CAAC;IAMM,aAAA,SAAA,CAAA,QAAQ,GAAf;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;IAC7B,CAAC;IAMM,aAAA,SAAA,CAAA,MAAM,GAAb,SAAc,KAAsB;QAAtB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,KAAsB;QAAA;QAClC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;QACD,IAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3B,IAAI,EAAE,CAAC,QAAQ,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;YAC5B,IAAI,EAAE,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YACD,IAAI,EAAE,CAAC,GAAG,EAAE;gBACV,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;aACvB;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAMM,aAAA,SAAA,CAAA,QAAQ,GAAf;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAKM,aAAA,SAAA,CAAA,KAAK,GAAZ,SAAa,MAAkB;QAAlB,IAAA,WAAA,KAAA,GAAA;YAAA,SAAA,CAAkB;QAAA;QAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,CAAA,CAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,CAAA,CAAE,CAAC;IACnB,CAAC;IAKM,aAAA,SAAA,CAAA,aAAa,GAApB,SAAqB,IAA6B;QAChD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,OAAO,CAAC,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,GAAG,CAAA,CAAE,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,CAAA,CAAE,CAAC;QACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;QAC3C,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;SAClC;IACH,CAAC;IAKM,aAAA,SAAA,CAAA,cAAc,GAArB,SAAsB,IAA6B;QACjD,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG;gBACzB,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;gBACnB,OAAO,EAAE,IAAI,CAAC,UAAU;aACzB,CAAC;SACH;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;SAChC;QACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAKM,aAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,IAAa,EAAE,GAAY;QACzC,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,IACnC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,IAAI,EAAE;YAC/B,OAAO,IAAI,CAAC;SACb;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAClC,OAAO,KAAK,CAAC;IACf,CAAC;IAqBO,aAAA,SAAA,CAAA,MAAM,GAAd;QACE,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CACnC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CACxC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACjE,CAAC;IAMO,aAAA,SAAA,CAAA,OAAO,GAAf;QACE,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACjF;QACD,IAAI,GAAG,GAAG,IAAI,eAAA,OAAS,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,EAAE,CAAA,CAAE,EAC/C,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;QAClD,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE;YAAC,GAAG;SAAC,EACpB;YAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;QAAA,CAAC,CAAC,CAAC;IAC5E,CAAC;IAEH,OAAA,YAAC;AAAD,CAAC,AA9SD,IA8SC;AA9SY,QAAA,YAAA,GAAA,aAAY;AAsTzB,IAAA,SAAA,SAAA,MAAA;IAA4B,UAAA,QAAA,QAAY;IAAxC,SAAA;;IAcA,CAAC;IATQ,OAAA,SAAA,CAAA,OAAO,GAAd,YAAkB,CAAC;IAKZ,OAAA,SAAA,CAAA,MAAM,GAAb;QACE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAA,SAAA,CAAM,MAAM,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;IACtD,CAAC;IAEH,OAAA,MAAC;AAAD,CAAC,AAdD,CAA4B,YAAY,GAcvC;AAdY,QAAA,MAAA,GAAA,OAAM;AAuBnB,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAY;IAAzC,SAAA;;IAcA,CAAC;IATQ,QAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,IAAa,EAAE,GAAY;QACzC,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CACnC,SAAS,CAAU;YAAI,OAAO,CAAC,CAAC,QAAQ,CAAC;QAAC,CAAC,CAAC,EAAE;YAC9C,OAAO,IAAI,CAAC;SACb;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEH,OAAA,OAAC;AAAD,CAAC,AAdD,CAA6B,YAAY,GAcxC;AAdY,QAAA,OAAA,GAAA,QAAO;AA0BpB,IAAiB,WAAW,CAkF3B;AAlFD,CAAA,SAAiB,WAAW;IAE1B,IAAI,WAAW,GAAG,IAAI,GAAG,CAAoB;QAC3C;YAAC,MAAM;YAAE,MAAM;SAAC;QAChB;YAAC,KAAK;YAAE,OAAO;SAAC;KACjB,CAAC,CAAC;IAEH,IAAI,WAAW,GAAG,MAAM,CAAC;IAMd,YAAA,OAAO,GAAe;QAE/B,IAAI,EAAE,WAAW;QAGjB,OAAO,EAAE,OAAO;QAEhB,SAAS,EAAE,OAAO;QAKlB,WAAW,EAAE,IAAI;QAEjB,qBAAqB,EAAE,KAAK;KAC7B,CAAC;IAQS,YAAA,GAAG,GAAG,SAAS,IAAY,EAAE,MAAiB;QACvD,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC,CAAC;IAOS,YAAA,OAAO,GAAG,SAAS,IAAiC;;;YAC7D,IAAkB,IAAA,KAAA,SAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAAhC,IAAM,GAAG,GAAA,GAAA,KAAA;gBACZ,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;aACjC;;;;;;;;;;;;IACH,CAAC,CAAC;IAQS,YAAA,MAAM,GAAG,SAAS,IAAY;QACvC,IAAI,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACnE,IAAI,CAAC,MAAM,EAAE;YACT,MAAM,KAAK,CAAC,oBAAoB,CAAC,CAAC;SACrC;QACD,OAAO,IAAI,MAAM,EAAE,CAAC;IACtB,CAAC,CAAC;IAOS,YAAA,UAAU,GAAG,SAAS,IAAY;QAC3C,WAAW,GAAG,IAAI,CAAC;IACrB,CAAC,CAAC;IAMS,YAAA,UAAU,GAAG;QACtB,OAAO,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACzC,CAAC,CAAC;AAEJ,CAAC,EAlFgB,WAAW,GAAX,QAAA,WAAW,IAAA,CAAX,QAAA,WAAW,GAAA,CAAA,CAAA,GAkF3B","ignoreList":[0]}},
    {"offset": {"line": 3011, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3016, "column": 0}, "map": {"version":3,"file":"MapHandler.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/MapHandler.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Singleton class for handling symbol maps.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {AbstractSymbolMap, SymbolMap} from './SymbolMap.js';\nimport {ParseInput, ParseResult, ParseMethod} from './Types.js';\n// import {ParserConfiguration} from './Configuration.js';\nimport {PrioritizedList} from '../../util/PrioritizedList.js';\nimport {FunctionList} from '../../util/FunctionList.js';\n\n\nexport type HandlerType = 'delimiter' | 'macro' | 'character' | 'environment';\n\nexport type HandlerConfig = {[P in HandlerType]?: string[]};\nexport type FallbackConfig = {[P in HandlerType]?: ParseMethod};\n\n\nexport namespace MapHandler {\n\n  let maps: Map<string, SymbolMap> = new Map();\n\n  /**\n   * Adds a new symbol map to the map handler. Might overwrite an existing\n   * symbol map of the same name.\n   *\n   * @param {SymbolMap} map Registers a new symbol map.\n   */\n  export let register = function(map: SymbolMap): void {\n    maps.set(map.name, map);\n  };\n\n\n  /**\n   * Looks up a symbol map if it exists.\n   *\n   * @param {string} name The name of the symbol map.\n   * @return {SymbolMap} The symbol map with the given name or null.\n   */\n  export let getMap = function(name: string): SymbolMap {\n    return maps.get(name);\n  };\n\n}\n\n\n/**\n * Class of symbol mappings that are active in a configuration.\n */\nexport class SubHandler {\n\n  private _configuration: PrioritizedList<SymbolMap> = new PrioritizedList<SymbolMap>();\n  private _fallback: FunctionList = new FunctionList();\n\n  /**\n   * Adds a list of symbol maps to the handler.\n   * @param {string[]} maps The names of the symbol maps to add.\n   * @param {ParseMethod} fallback A fallback method.\n   * @param {number} priority Optionally a priority.\n   */\n  public add(maps: string[], fallback: ParseMethod,\n             priority: number = PrioritizedList.DEFAULTPRIORITY) {\n    for (const name of maps.slice().reverse()) {\n      let map = MapHandler.getMap(name);\n      if (!map) {\n        this.warn('Configuration ' + name + ' not found! Omitted.');\n        return;\n      }\n      this._configuration.add(map, priority);\n    }\n    if (fallback) {\n      this._fallback.add(fallback, priority);\n    }\n  }\n\n  /**\n   * Parses the given input with the first applicable symbol map.\n   * @param {ParseInput} input The input for the parser.\n   * @return {ParseResult} The output of the parsing function.\n   */\n  public parse(input: ParseInput): ParseResult {\n    for (let {item: map} of this._configuration) {\n      const result = map.parse(input);\n      if (result) {\n        return result;\n      }\n    }\n    let [env, symbol] = input;\n    Array.from(this._fallback)[0].item(env, symbol);\n  }\n\n\n  /**\n   * Maps a symbol to its \"parse value\" if it exists.\n   *\n   * @param {string} symbol The symbol to parse.\n   * @return {T} A boolean, Character, or Macro.\n   */\n  public lookup<T>(symbol: string): T {\n    let map = this.applicable(symbol) as AbstractSymbolMap<T>;\n    return map ? map.lookup(symbol) : null;\n  }\n\n\n  /**\n   * Checks if a symbol is contained in one of the symbol mappings of this\n   * configuration.\n   *\n   * @param {string} symbol The symbol to parse.\n   * @return {boolean} True if the symbol is contained in the mapping.\n   */\n  public contains(symbol: string): boolean {\n    return this.applicable(symbol) ? true : false;\n  }\n\n\n  /**\n   * @override\n   */\n  public toString(): string {\n    let names = [];\n    for (let {item: map} of this._configuration) {\n      names.push(map.name);\n    }\n    return names.join(', ');\n  }\n\n\n  /**\n   * Retrieves the first applicable symbol map in the configuration.\n   * @param {string} symbol The symbol to parse.\n   * @return {SymbolMap} A map that can parse the symbol.\n   */\n  public applicable(symbol: string): SymbolMap {\n    for (let {item: map} of this._configuration) {\n      if (map.contains(symbol)) {\n        return map;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * Retrieves the map of the given name.\n   * @param {string} name Name of the symbol map.\n   * @return {SymbolMap} The map if it exists.\n   */\n  public retrieve(name: string): SymbolMap {\n    for (let {item: map} of this._configuration) {\n      if (map.name === name) {\n        return map;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * Prints a warning message.\n   * @param {string} message The warning.\n   */\n  private warn(message: string) {\n    console.log('TexParser Warning: ' + message);\n  }\n\n}\n\n\nexport class SubHandlers {\n\n  private map = new Map<HandlerType, SubHandler>();\n\n  /**\n   * Adds a symbol map to the configuration if it exists.\n   * @param {string} name of the symbol map.\n   */\n  public add(handlers: HandlerConfig, fallbacks: FallbackConfig,\n             priority: number = PrioritizedList.DEFAULTPRIORITY): void {\n    for (const key of Object.keys(handlers)) {\n      let name = key as HandlerType;\n      let subHandler = this.get(name);\n      if (!subHandler) {\n        subHandler = new SubHandler();\n        this.set(name, subHandler);\n      }\n      subHandler.add(handlers[name], fallbacks[name], priority);\n    }\n  }\n\n\n  /**\n   * Setter for subhandlers.\n   * @param {HandlerType} name The name of the subhandler.\n   * @param {SubHandler} subHandler The subhandler.\n   */\n  public set(name: HandlerType, subHandler: SubHandler) {\n    this.map.set(name, subHandler);\n  }\n\n\n  /**\n   * Getter for subhandler.\n   * @param {HandlerType} name Name of the subhandler.\n   * @return {SubHandler} The subhandler by that name if it exists.\n   */\n  public get(name: HandlerType): SubHandler {\n    return this.map.get(name);\n  }\n\n\n  /**\n   * Retrieves a symbol map of the given name.\n   * @param {string} name Name of the symbol map.\n   * @return {SymbolMap} The map if it exists. O/w null.\n   */\n  public retrieve(name: string): SymbolMap {\n    for (const handler of this.map.values()) {\n      let map = handler.retrieve(name);\n      if (map) {\n        return map;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * All names of registered subhandlers.\n   * @return {IterableIterator<string>} Iterable list of keys.\n   */\n  public keys(): IterableIterator<string> {\n    return this.map.keys();\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3275, "column": 0}, "map": {"version":3,"file":"Configuration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/Configuration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration options for the TexParser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {HandlerConfig, FallbackConfig} from './MapHandler.js';\nimport {StackItemClass} from './StackItem.js';\nimport {TagsClass} from './Tags.js';\nimport {userOptions, defaultOptions, OptionList} from '../../util/Options.js';\nimport {SubHandlers} from './MapHandler.js';\nimport {FunctionList} from '../../util/FunctionList.js';\nimport {TeX} from '../tex.js';\nimport {PrioritizedList} from '../../util/PrioritizedList.js';\nimport {TagsFactory} from './Tags.js';\n\n\nexport type StackItemConfig = {[kind: string]: StackItemClass};\nexport type TagsConfig = {[kind: string]: TagsClass};\nexport type Processor<T> = [T, number];\nexport type ProtoProcessor<T> = Processor<T> | T;\nexport type ProcessorList = Processor<Function>[];\nexport type ConfigMethod = (c: ParserConfiguration, j: TeX<any, any, any>) => void;\nexport type InitMethod = (c: ParserConfiguration) => void;\n\n\n\nexport class Configuration {\n\n  /**\n   * Creates a function priority pair.\n   * @param {ProtoProcessor<T>} func The function or processor.\n   * @param {number} priority The default priority.\n   * @return {Processor} The processor pair.\n   * @template T\n   */\n  private static makeProcessor<T>(func: ProtoProcessor<T>, priority: number): Processor<T> {\n    return Array.isArray(func) ? func : [func, priority];\n  }\n\n  /**\n   * Creates a configuration for a package.\n   * @param {string} name The package name or empty string.\n   * @param {Object} config See `create` method.\n   * @return {Configuration} The newly generated configuration.\n   */\n  private static _create(name: string,\n                         config: {handler?: HandlerConfig,\n                                  fallback?: FallbackConfig,\n                                  items?: StackItemConfig,\n                                  tags?: TagsConfig,\n                                  options?: OptionList,\n                                  nodes?: {[key: string]: any},\n                                  preprocessors?: ProtoProcessor<Function>[],\n                                  postprocessors?: ProtoProcessor<Function>[],\n                                  init?: ProtoProcessor<InitMethod>,\n                                  config?: ProtoProcessor<ConfigMethod>,\n                                  priority?: number,\n                                  parser?: string,\n                                 } = {}): Configuration {\n    let priority = config.priority || PrioritizedList.DEFAULTPRIORITY;\n    let init = config.init ? this.makeProcessor(config.init, priority) : null;\n    let conf = config.config ? this.makeProcessor(config.config, priority) : null;\n    let preprocessors = (config.preprocessors || []).map(\n      pre => this.makeProcessor(pre, priority));\n    let postprocessors = (config.postprocessors || []).map(\n      post => this.makeProcessor(post, priority));\n    let parser = config.parser || 'tex';\n    return new Configuration(\n      name,\n      config.handler || {},\n      config.fallback || {},\n      config.items || {},\n      config.tags || {},\n      config.options || {},\n      config.nodes || {},\n      preprocessors, postprocessors, init, conf, priority,\n      parser\n    );\n  }\n\n  /**\n   * Creator pattern for creating a named package configuration. This will be\n   * administered in the configuration handler and can be retrieved again.\n   * @param {string} name The package name.\n   * @param {Object} config The configuration parameters:\n   * Configuration for the TexParser consist of the following:\n   *  * _handler_  configuration mapping handler types to lists of symbol mappings.\n   *  * _fallback_ configuration mapping handler types to fallback methods.\n   *  * _items_ for the StackItem factory.\n   *  * _tags_ mapping tagging configurations to tagging objects.\n   *  * _options_ parse options for the packages.\n   *  * _nodes_ for the Node factory.\n   *  * _preprocessors_ list of functions for preprocessing the LaTeX\n   *      string wrt. to given parse options. Can contain a priority.\n   *  * _postprocessors_ list of functions for postprocessing the MmlNode\n   *      wrt. to given parse options. Can contain a priority.\n   *  * _init_ init method and optionally its priority.\n   *  * _config_ config method and optionally its priority.\n   *  * _priority_ default priority of the configuration.\n   *  * _parser_ the name of the parser that this configuration targets.\n   * @return {Configuration} The newly generated configuration.\n   */\n  public static create(name: string,\n                       config: {handler?: HandlerConfig,\n                                fallback?: FallbackConfig,\n                                items?: StackItemConfig,\n                                tags?: TagsConfig,\n                                options?: OptionList,\n                                nodes?: {[key: string]: any},\n                                preprocessors?: ProtoProcessor<Function>[],\n                                postprocessors?: ProtoProcessor<Function>[],\n                                init?: ProtoProcessor<InitMethod>,\n                                config?: ProtoProcessor<ConfigMethod>,\n                                priority?: number,\n                                parser?: string,\n                               } = {}): Configuration {\n    let configuration = Configuration._create(name, config);\n    ConfigurationHandler.set(name, configuration);\n    return configuration;\n  }\n\n  /**\n   * Creates an unnamed, ephemeral package configuration. It will not added to\n   * the configuration handler.\n   * @param {Object} config See `create` method.\n   * @return {Configuration} The ephemeral package configuration.\n   */\n  public static local(config: {handler?: HandlerConfig,\n                              fallback?: FallbackConfig,\n                              items?: StackItemConfig,\n                              tags?: TagsConfig,\n                              options?: OptionList,\n                              nodes?: {[key: string]: any},\n                              preprocessors?: ProtoProcessor<Function>[],\n                              postprocessors?: ProtoProcessor<Function>[],\n                              init?: ProtoProcessor<InitMethod>,\n                              config?: ProtoProcessor<ConfigMethod>,\n                              priority?: number,\n                              parser?: string,\n                             } = {}): Configuration {\n    return Configuration._create('', config);\n  }\n\n\n  /**\n   * @constructor\n   */\n  private constructor(readonly name: string,\n                      readonly handler: HandlerConfig = {},\n                      readonly fallback: FallbackConfig = {},\n                      readonly items: StackItemConfig = {},\n                      readonly tags: TagsConfig = {},\n                      readonly options: OptionList = {},\n                      readonly nodes: {[key: string]: any} = {},\n                      readonly preprocessors: ProcessorList = [],\n                      readonly postprocessors: ProcessorList = [],\n                      readonly initMethod: Processor<InitMethod> = null,\n                      readonly configMethod: Processor<ConfigMethod> = null,\n                      public priority: number,\n                      readonly parser: string\n                     ) {\n    this.handler = Object.assign(\n      {character: [], delimiter: [], macro: [], environment: []}, handler);\n  }\n\n  /**\n   * The init method.\n   * @type {Function}\n   */\n  public get init(): InitMethod {\n    return this.initMethod ? this.initMethod[0] : null;\n  }\n\n  /**\n   * The config method to call once jax is ready.\n   * @type {FunctionList}\n   */\n  public get config(): ConfigMethod {\n    return this.configMethod ? this.configMethod[0] : null;\n  }\n\n}\n\n\nexport namespace ConfigurationHandler {\n\n  let maps: Map<string, Configuration> = new Map();\n\n  /**\n   * Adds a new configuration to the handler overwriting old ones.\n   *\n   * @param {string} name The name of the configuration.\n   * @param {Configuration} map The configuration mapping.\n   */\n  export let set = function(name: string, map: Configuration): void {\n    maps.set(name, map);\n  };\n\n\n  /**\n   * Looks up a configuration.\n   *\n   * @param {string} name The name of the configuration.\n   * @return {Configuration} The configuration with the given name or null.\n   */\n  export let get = function(name: string): Configuration {\n    return maps.get(name);\n  };\n\n  /**\n   * @return {string[]} All configurations in the handler.\n   */\n  export let keys = function(): IterableIterator<string> {\n    return maps.keys();\n  };\n\n}\n\n\n/**\n * Parser configuration combines the configurations of the currently selected\n * packages.\n * @constructor\n */\nexport class ParserConfiguration {\n\n  /**\n   * Priority list of init methods.\n   * @type {FunctionList}\n   */\n  protected initMethod: FunctionList = new FunctionList();\n\n  /**\n   * Priority list of init methods to call once jax is ready.\n   * @type {FunctionList}\n   */\n  protected configMethod: FunctionList = new FunctionList();\n\n  /**\n   * An ordered list of cofigurations.\n   * @type {PrioritizedList<Configuration>}\n   */\n  protected configurations: PrioritizedList<Configuration> = new PrioritizedList();\n\n  /**\n   * The list of parsers this configuration targets\n   */\n  protected parsers: string[] = [];\n\n  /**\n   * The subhandlers for this configuration.\n   * @type {SubHandlers}\n   */\n  public handlers: SubHandlers = new SubHandlers();\n\n  /**\n   * The collated stack items.\n   * @type {StackItemConfig}\n   */\n  public items: StackItemConfig = {};\n\n  /**\n   * The collated tag configurations.\n   * @type {TagsConfig}\n   */\n  public tags: TagsConfig = {};\n\n  /**\n   * The collated options.\n   * @type {OptionList}\n   */\n  public options: OptionList = {};\n\n  /**\n   * The collated node creators.\n   * @type {{[key: string]: any}}\n   */\n  public nodes: {[key: string]: any}  = {};\n\n  /**\n   * @constructor\n   * @param {(string|[string,number])[]} packages A list of packages with\n   *     optional priorities.\n   * @parm {string[]} parsers   The names of the parsers this package targets\n   */\n  constructor(packages: (string | [string, number])[], parsers: string[] = ['tex']) {\n    this.parsers = parsers;\n    for (const pkg of packages.slice().reverse()) {\n      this.addPackage(pkg);\n    }\n    for (let {item: config, priority: priority} of this.configurations) {\n      this.append(config, priority);\n    }\n  }\n\n  /**\n   * Init method for the configuration;\n   */\n  public init() {\n    this.initMethod.execute(this);\n  }\n\n  /**\n   * Init method for when the jax is ready\n   * @param {TeX} jax The TeX jax for this configuration\n   */\n  public config(jax: TeX<any, any, any>) {\n    this.configMethod.execute(this, jax);\n    for (const config of this.configurations) {\n      this.addFilters(jax, config.item);\n    }\n  }\n\n  /**\n   * Retrieves and adds configuration for a package with priority.\n   * @param {(string | [string, number]} pkg Package with priority.\n   */\n  public addPackage(pkg: (string | [string, number])) {\n    const name = typeof pkg === 'string' ? pkg : pkg[0];\n    const conf = this.getPackage(name);\n    conf && this.configurations.add(conf, typeof pkg === 'string' ? conf.priority : pkg[1]);\n  }\n\n  /**\n   * Adds a configuration after the input jax is created.  (Used by \\require.)\n   * Sets items, nodes and runs configuration method explicitly.\n   *\n   * @param {string} name            The name of the package to add\n   * @param {TeX} jax                The TeX jax where it is being registered\n   * @param {OptionList=} options    The options for the configuration.\n   */\n  public add(name: string, jax: TeX<any, any, any>, options: OptionList = {}) {\n    const config = this.getPackage(name);\n    this.append(config);\n    this.configurations.add(config, config.priority);\n    this.init();\n    const parser = jax.parseOptions;\n    parser.nodeFactory.setCreators(config.nodes);\n    for (const kind of Object.keys(config.items)) {\n      parser.itemFactory.setNodeClass(kind, config.items[kind]);\n    }\n    TagsFactory.addTags(config.tags);\n    defaultOptions(parser.options, config.options);\n    userOptions(parser.options, options);\n    this.addFilters(jax, config);\n    if (config.config) {\n      config.config(this, jax);\n    }\n  }\n\n /**\n  * Find a package and check that it is for the targeted parser\n  *\n  * @param {string} name       The name of the package to check\n  * @return {Configuration}    The configuration for the package\n  */\n  protected getPackage(name: string): Configuration {\n    const config = ConfigurationHandler.get(name);\n    if (config && this.parsers.indexOf(config.parser) < 0) {\n      throw Error(`Package ${name} doesn't target the proper parser`);\n    }\n    return config;\n  }\n\n  /**\n   * Appends a configuration to the overall configuration object.\n   * @param {Configuration} config A configuration.\n   * @param {number} priority The configurations optional priority.\n   */\n  public append(config: Configuration, priority?: number) {\n    priority = priority || config.priority;\n    if (config.initMethod) {\n      this.initMethod.add(config.initMethod[0], config.initMethod[1]);\n    }\n    if (config.configMethod) {\n        this.configMethod.add(config.configMethod[0], config.configMethod[1]);\n      }\n    this.handlers.add(config.handler, config.fallback, priority);\n    Object.assign(this.items, config.items);\n    Object.assign(this.tags, config.tags);\n    defaultOptions(this.options, config.options);\n    Object.assign(this.nodes, config.nodes);\n  }\n\n  /**\n   * Adds pre- and postprocessor as filters to the jax.\n   * @param {TeX<any} jax The TeX Jax.\n   * @param {Configuration} config The configuration whose processors are added.\n   */\n  private addFilters(jax: TeX<any, any, any>, config: Configuration) {\n    for (const [pre, priority] of config.preprocessors) {\n      jax.preFilters.add(pre, priority);\n    }\n    for (const [post, priority] of config.postprocessors) {\n      jax.postFilters.add(post, priority);\n    }\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3615, "column": 0}, "map": {"version":3,"file":"Symbol.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/Symbol.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Symbol classes.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Args, Attributes, ParseMethod} from './Types.js';\n\n\n/**\n * Symbol class\n */\nexport class Symbol {\n\n  /**\n   * @constructor\n   * @param {string} symbol The symbol parsed.\n   * @param {string} char The corresponding translation.\n   * @param {Attributes} attributes The attributes for the translation.\n   */\n  constructor(private _symbol: string, private _char: string,\n              private _attributes: Attributes) {\n  }\n\n  public get symbol(): string {\n    return this._symbol;\n  }\n\n  public get char(): string {\n    return this._char;\n  }\n\n  public get attributes(): Attributes {\n    return this._attributes;\n  }\n\n}\n\n\nexport class Macro {\n\n  /**\n   * @constructor\n   * @param {string} symbol The symbol parsed\n   * @param {ParseMethod} func The parsing function for that symbol.\n   * @param {Args[]} args Additional arguments for the function.\n   */\n  constructor(private _symbol: string, private _func: ParseMethod,\n              private _args: Args[] = []) {\n  }\n\n  public get symbol(): string {\n    return this._symbol;\n  }\n\n  public get func(): ParseMethod {\n    return this._func;\n  }\n\n  public get args(): Args[] {\n    return this._args;\n  }\n\n}\n"],"names":[],"mappings":";;;;;AA8BA,IAAA,SAAA;IAQE,SAAA,OAAoB,OAAe,EAAU,KAAa,EACtC,WAAuB;QADvB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAQ;QAAU,IAAA,CAAA,KAAK,GAAL,KAAK,CAAQ;QACtC,IAAA,CAAA,WAAW,GAAX,WAAW,CAAY;IAC3C,CAAC;IAED,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,QAAM,EAAA;aAAjB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,YAAU,EAAA;aAArB;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;;;OAAA;IAEH,OAAA,MAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,QAAA,MAAA,GAAA,OAAM;AA2BnB,IAAA,QAAA;IAQE,SAAA,MAAoB,OAAe,EAAU,KAAkB,EAC3C,KAAkB;QAAlB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,EAAkB;QAAA;QADlB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAQ;QAAU,IAAA,CAAA,KAAK,GAAL,KAAK,CAAa;QAC3C,IAAA,CAAA,KAAK,GAAL,KAAK,CAAa;IACtC,CAAC;IAED,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,QAAM,EAAA;aAAjB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAED,OAAA,cAAA,CAAW,MAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAEH,OAAA,KAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,QAAA,KAAA,GAAA,MAAK","ignoreList":[0]}},
    {"offset": {"line": 3683, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3688, "column": 0}, "map": {"version":3,"file":"SymbolMap.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/SymbolMap.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Symbol map classes.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Attributes, Args, ParseMethod, ParseInput, ParseResult} from './Types.js';\nimport {Symbol, Macro} from './Symbol.js';\nimport {MapHandler} from './MapHandler.js';\n\n\n/**\n * SymbolMaps are the base components for the input parsers.\n *\n * They provide a contains method that checks if a map is applicable (contains)\n * a particular string. Implementing classes then perform the actual symbol\n * parsing, from simple regular expression test, straight forward symbol mapping\n * to transformational functionality on the parsed string.\n *\n * @interface\n */\nexport interface SymbolMap {\n\n  /**\n   * @return {string} The name of the map.\n   */\n  name: string;\n\n  /**\n   * @return {ParseMethod} The default parsing method.\n   */\n  parser: ParseMethod;\n\n  /**\n   * @param {string} symbol A symbol to parse.\n   * @return {boolean} True if the symbol map applies to the symbol.\n   */\n  contains(symbol: string): boolean;\n\n  /**\n   * @param {string} symbol A symbol to parse.\n   * @return {ParseMethod} A parse method for the symbol.\n   */\n  parserFor(symbol: string): ParseMethod;\n\n  /**\n   * @param {TexParser} env The current parser.\n   * @param {string} symbol A symbol to parse.\n   * @return {ParseResult} The parsed symbol and the rest of the string.\n   */\n  parse([env, symbol]: ParseInput): ParseResult;\n\n}\n\n/**\n * @param {ParseResult} result    The result to check\n * @return {ParseResult}          True if result was void, result otherwise\n */\nexport function parseResult(result: ParseResult): ParseResult {\n  return result === void 0 ? true : result;\n}\n\n/**\n * Abstract implementation of symbol maps.\n * @template T\n */\nexport abstract class AbstractSymbolMap<T> implements SymbolMap {\n\n  /**\n   * @constructor\n   * @implements {SymbolMap}\n   * @param {string} name Name of the mapping.\n   * @param {ParseMethod} parser The parser for the mappiong.\n   */\n  constructor(private _name: string, private _parser: ParseMethod) {\n    MapHandler.register(this);\n  }\n\n\n  /**\n   * @override\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n\n  /**\n   * @override\n   */\n  public abstract contains(symbol: string): boolean;\n\n\n  /**\n   * @override\n   */\n  public parserFor(symbol: string) {\n    return this.contains(symbol) ? this.parser : null;\n  }\n\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    let parser = this.parserFor(symbol);\n    let mapped = this.lookup(symbol);\n    return (parser && mapped) ? parseResult(parser(env, mapped as any)) : null;\n  }\n\n\n  public set parser(parser: ParseMethod) {\n    this._parser = parser;\n  }\n\n  public get parser(): ParseMethod {\n    return this._parser;\n  }\n\n\n  /**\n   * @param {string} symbol\n   * @return {T}\n   */\n  public abstract lookup(symbol: string): T;\n\n}\n\n\n\n/**\n * Regular expressions used for parsing strings.\n */\nexport class RegExpMap extends AbstractSymbolMap<string> {\n\n  /**\n   * @constructor\n   * @extends {AbstractSymbolMap}\n   * @param {string} name Name of the mapping.\n   * @param {ParseMethod} parser The parser for the mappiong.\n   * @param {RegExp} regexp The regular expression.\n   */\n  constructor(name: string, parser: ParseMethod, private _regExp: RegExp) {\n    super(name, parser);\n  }\n\n\n  /**\n   * @override\n   */\n  public contains(symbol: string) {\n    return this._regExp.test(symbol);\n  }\n\n\n  /**\n   * @override\n   */\n  public lookup(symbol: string): string {\n    return this.contains(symbol) ? symbol : null;\n  }\n\n}\n\n\n/**\n * Parse maps associate strings with parsing functionality.\n * @constructor\n * @extends {AbstractSymbolMap}\n * @template K\n */\nexport abstract class AbstractParseMap<K> extends AbstractSymbolMap<K> {\n\n  private map: Map<string, K> = new Map<string, K>();\n\n  /**\n   * @override\n   */\n  public lookup(symbol: string): K {\n    return this.map.get(symbol);\n  }\n\n  /**\n   * @override\n   */\n  public contains(symbol: string) {\n    return this.map.has(symbol);\n  }\n\n  /**\n   * Sets mapping for a symbol.\n   * @param {string} symbol The symbol to map.\n   * @param {K} object The symbols value in the mapping's codomain.\n   */\n  public add(symbol: string, object: K) {\n    this.map.set(symbol, object);\n  }\n\n  /**\n   * Removes a symbol from the map\n   * @param {string} symbol The symbol to remove\n   */\n  public remove(symbol: string) {\n    this.map.delete(symbol);\n  }\n\n}\n\n\n/**\n * Maps symbols that can all be parsed with the same method.\n *\n * @constructor\n * @extends {AbstractParseMap}\n */\nexport class CharacterMap extends AbstractParseMap<Symbol> {\n\n  /**\n   * @constructor\n   * @param {string} name Name of the mapping.\n   * @param {ParseMethod} parser The parser for the mapping.\n   * @param {JSON} json The JSON representation of the character mapping.\n   */\n  constructor(name: string, parser: ParseMethod,\n              json: {[index: string]: string | [string, Attributes]}) {\n    super(name, parser);\n    for (const key of Object.keys(json)) {\n      let value = json[key];\n      let [char, attrs] = (typeof(value) === 'string') ? [value, null] : value;\n      let character = new Symbol(key, char, attrs);\n      this.add(key, character);\n    }\n  }\n\n}\n\n\n/**\n * Maps symbols that are delimiters, that are all parsed with the same method.\n *\n * @constructor\n * @extends {CharacterMap}\n */\nexport class DelimiterMap extends CharacterMap {\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    return super.parse([env, '\\\\' + symbol]);\n  }\n\n}\n\n\n/**\n * Maps macros that all bring their own parsing method.\n *\n * @constructor\n * @extends {AbstractParseMap}\n */\nexport class MacroMap extends AbstractParseMap<Macro> {\n\n  /**\n   * @constructor\n   * @param {string} name Name of the mapping.\n   * @param {JSON} json The JSON representation of the macro map.\n   * @param {Record<string, ParseMethod>} functionMap Collection of parse\n   *     functions for the single macros.\n   */\n  constructor(name: string,\n              json: {[index: string]: string | Args[]},\n              functionMap: Record<string, ParseMethod>) {\n    super(name, null);\n    for (const key of Object.keys(json)) {\n      let value = json[key];\n      let [func, ...attrs] = (typeof(value) === 'string') ? [value] : value;\n      let character = new Macro(key, functionMap[func as string], attrs);\n      this.add(key, character);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public parserFor(symbol: string) {\n    let macro = this.lookup(symbol);\n    return macro ? macro.func : null;\n  }\n\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    let macro = this.lookup(symbol);\n    let parser = this.parserFor(symbol);\n    if (!macro || !parser) {\n      return null;\n    }\n    return parseResult(parser(env, macro.symbol, ...macro.args));\n  }\n\n}\n\n\n/**\n * Maps macros that all bring their own parsing method.\n *\n * @constructor\n * @extends {MacroMap}\n */\nexport class CommandMap extends MacroMap {\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    let macro = this.lookup(symbol);\n    let parser = this.parserFor(symbol);\n    if (!macro || !parser) {\n      return null;\n    }\n    let saveCommand = env.currentCS;\n    env.currentCS = '\\\\' + symbol;\n    let result = parser(env, '\\\\' + macro.symbol, ...macro.args);\n    env.currentCS = saveCommand;\n    return parseResult(result);\n  }\n\n}\n\n\n/**\n * Maps macros for environments. It has a general parsing method for\n * environments, i.e., one that deals with begin/end, and each environment has\n * its own parsing method returning the content.\n *\n * @constructor\n * @extends {MacroMap}\n */\nexport class EnvironmentMap extends MacroMap {\n\n  /**\n   * @constructor\n   * @param {string} name Name of the mapping.\n   * @param {ParseMethod} parser The parser for the environments.\n   * @param {JSON} json The JSON representation of the macro map.\n   * @param {Record<string, ParseMethod>} functionMap Collection of parse\n   *     functions for the single macros.\n   */\n  constructor(name: string,\n              parser: ParseMethod,\n              json: {[index: string]: string | Args[]},\n              functionMap: Record<string, ParseMethod>) {\n    super(name, json, functionMap);\n    this.parser = parser;\n  }\n\n\n  /**\n   * @override\n   */\n  public parse([env, symbol]: ParseInput) {\n    let macro = this.lookup(symbol);\n    let envParser = this.parserFor(symbol);\n    if (!macro || !envParser) {\n      return null;\n    }\n    return parseResult(this.parser(env, macro.symbol, envParser, macro.args));\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3971, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3976, "column": 0}, "map": {"version":3,"file":"BaseItems.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/base/BaseItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items for basic Tex parsing.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {MapHandler} from '../MapHandler.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport {entities} from '../../../util/Entities.js';\nimport {MmlNode, TextNode, TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMsubsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\nimport TexError from '../TexError.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {Property} from '../../../core/Tree/Node.js';\nimport StackItemFactory from '../StackItemFactory.js';\nimport {CheckType, BaseItem, StackItem, EnvList} from '../StackItem.js';\n\n\n/**\n * Initial item on the stack. It's pushed when parsing begins.\n */\nexport class StartItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, public global: EnvList) {\n    super(factory);\n  }\n\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'start';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('stop')) {\n      let node = this.toMml();\n      if (!this.global.isInner) {\n        node = this.factory.configuration.tags.finalize(node, this.env);\n      }\n      return [[this.factory.create('mml', node)], true];\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n\n/**\n * Final item on the stack. Errors will be thrown if other items than the start\n * item are still on the stack.\n */\nexport class StopItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'stop';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item indicating an open brace.\n */\nexport class OpenItem extends BaseItem {\n\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test ExtraOpenMissingClose\n    'stop': ['ExtraOpenMissingClose',\n             'Extra open brace or missing close brace']\n  });\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'open';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('close')) {\n      // @test PrimeSup\n      let mml = this.toMml();\n      const node = this.create('node', 'TeXAtom', [mml]);\n      return [[this.factory.create('mml', node)], true];\n    }\n    return super.checkItem(item);\n  }\n}\n\n\n/**\n * Item indicating a close brace. Collapses stack until an OpenItem is found.\n */\nexport class CloseItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'close';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item indicating an we are currently dealing with a prime mark.\n */\nexport class PrimeItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'prime';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    let [top0, top1] = this.Peek(2);\n    if (!NodeUtil.isType(top0, 'msubsup') || NodeUtil.isType(top0, 'msup')) {\n      // @test Prime, Double Prime\n      const node = this.create('node', 'msup', [top0, top1]);\n      return [[node, item], true];\n    }\n    NodeUtil.setChild(top0, (top0 as MmlMsubsup).sup, top1);\n    return [[top0, item], true];\n  }\n}\n\n\n/**\n * Item indicating an we are currently dealing with a sub/superscript\n * expression.\n */\nexport class SubsupItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test MissingScript Sub, MissingScript Sup\n    'stop': ['MissingScript',\n             'Missing superscript or subscript argument'],\n    // @test MissingOpenForSup\n    'sup': ['MissingOpenForSup',\n            'Missing open brace for superscript'],\n    // @test MissingOpenForSub\n    'sub': ['MissingOpenForSub',\n            'Missing open brace for subscript']\n  });\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'subsup';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType | null {\n    if (item.isKind('open') || item.isKind('left')) {\n      return BaseItem.success;\n    }\n    const top = this.First;\n    const position = this.getProperty('position') as number;\n    if (item.isKind('mml')) {\n      if (this.getProperty('primes')) {\n        if (position !== 2) {\n          // @test Prime on Sub\n          NodeUtil.setChild(top, 2, this.getProperty('primes') as MmlNode);\n        } else {\n          // @test Prime on Prime\n          NodeUtil.setProperty(this.getProperty('primes') as MmlNode, 'variantForm', true);\n          const node = this.create('node', 'mrow', [this.getProperty('primes') as MmlNode, item.First]);\n          item.First = node;\n        }\n      }\n      NodeUtil.setChild(top, position, item.First);\n      if (this.getProperty('movesupsub') != null) {\n        // @test Limits Subsup (currently does not work! Check again!)\n        NodeUtil.setProperty(top, 'movesupsub', this.getProperty('movesupsub') as Property);\n      }\n      const result = this.factory.create('mml', top);\n      return [[result], true];\n    }\n    if (super.checkItem(item)[1]) {\n      // @test Brace Superscript Error, MissingOpenForSup, MissingOpenForSub\n      const error = this.getErrors(['', 'sub', 'sup'][position]);\n      throw new TexError(error[0], error[1], ...error.splice(2));\n    }\n    return null;\n  }\n\n}\n\n\n/**\n * Item indicating an we are currently dealing with an \\\\over command.\n */\nexport class OverItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory) {\n    super(factory);\n    this.setProperty('name', '\\\\over');\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'over';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('over')) {\n      // @test Double Over\n      throw new TexError(\n        'AmbiguousUseOf', 'Ambiguous use of %1', item.getName());\n    }\n    if (item.isClose) {\n      // @test Over\n      let mml = this.create('node',\n                            'mfrac', [this.getProperty('num') as MmlNode, this.toMml(false)]);\n      if (this.getProperty('thickness') != null) {\n        // @test Choose, Above, Above with Delims\n        NodeUtil.setAttribute(mml, 'linethickness',\n                              this.getProperty('thickness') as string);\n      }\n      if (this.getProperty('open') || this.getProperty('close')) {\n        // @test Choose\n        NodeUtil.setProperty(mml, 'withDelims', true);\n        mml = ParseUtil.fixedFence(this.factory.configuration,\n                                   this.getProperty('open') as string, mml,\n                                   this.getProperty('close') as string);\n      }\n      return [[this.factory.create('mml', mml), item], true];\n    }\n    return super.checkItem(item);\n  }\n\n\n  /**\n   * @override\n   */\n  public toString() {\n    return 'over[' + this.getProperty('num') +\n      ' / ' + this.nodes.join('; ') + ']';\n  }\n\n}\n\n\n/**\n * Item pushed when a \\\\left opening delimiter has been found.\n */\nexport class LeftItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    // @test ExtraLeftMissingRight\n    'stop': ['ExtraLeftMissingRight',\n             'Extra \\\\left or missing \\\\right']\n  });\n\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'left';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    // @test Missing Right\n    if (item.isKind('right')) {\n      //\n      //  Create the fenced structure as an mrow\n      //\n      return [[this.factory.create('mml', ParseUtil.fenced(\n        this.factory.configuration,\n        this.getProperty('delim') as string, this.toMml(),\n        item.getProperty('delim') as string, '', item.getProperty('color') as string))], true];\n    }\n    if (item.isKind('middle')) {\n      //\n      //  Add the middle delimiter, with empty open and close elements around it for spacing\n      //\n      const def = {stretchy: true} as any;\n      if (item.getProperty('color')) {\n        def.mathcolor = item.getProperty('color');\n      }\n      this.Push(\n        this.create('node', 'TeXAtom', [], {texClass: TEXCLASS.CLOSE}),\n        this.create('token', 'mo', def, item.getProperty('delim')),\n        this.create('node', 'TeXAtom', [], {texClass: TEXCLASS.OPEN})\n      );\n      this.env = {};         // Since \\middle closes the group, clear the environment\n      return [[this], true]; // this will reset the environment to its initial state\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * Item pushed when a \\\\middle delimiter has been found. Stack is\n * collapsed until a corresponding LeftItem is encountered.\n */\nexport class Middle extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string, color: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n    color && this.setProperty('color', color);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'middle';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n/**\n * Item pushed when a \\\\right closing delimiter has been found. Stack is\n * collapsed until a corresponding LeftItem is encountered.\n */\nexport class RightItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: StackItemFactory, delim: string, color: string) {\n    super(factory);\n    this.setProperty('delim', delim);\n    color && this.setProperty('color', color);\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'right';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item pushed for opening an environment with \\\\begin{env}.\n */\nexport class BeginItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'begin';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      if (item.getName() !== this.getName()) {\n        // @test EnvBadEnd\n        throw new TexError('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}',\n                           this.getName(), item.getName());\n      }\n      if (!this.getProperty('end')) {\n        // @test Hfill\n        return [[this.factory.create('mml', this.toMml())], true];\n      }\n      return BaseItem.fail;  // TODO: This case could probably go!\n    }\n    if (item.isKind('stop')) {\n      // @test EnvMissingEnd Array\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n\n/**\n * Item pushed for closing an environment with \\\\end{env}. Stack is collapsed\n * until a corresponding BeginItem for 'env' is found. Error is thrown in case\n * other open environments interfere.\n */\nexport class EndItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'end';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n\n}\n\n\n/**\n * Item pushed for remembering styling information.\n */\nexport class StyleItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'style';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (!item.isClose) {\n      return super.checkItem(item);\n    }\n    // @test Style\n    const mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));\n    return [[this.factory.create('mml', mml), item], true];\n  }\n\n}\n\n\n/**\n * Item pushed for remembering positioning information.\n */\nexport class PositionItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'position';\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isClose) {\n      // @test MissingBoxFor\n      throw new TexError('MissingBoxFor', 'Missing box for %1', this.getName());\n    }\n    if (item.isFinal) {\n      let mml = item.toMml();\n      switch (this.getProperty('move')) {\n      case 'vertical':\n        // @test Raise, Lower, Raise Negative, Lower Negative\n        mml = this.create('node', 'mpadded', [mml],\n                          {height: this.getProperty('dh'),\n                           depth: this.getProperty('dd'),\n                           voffset: this.getProperty('dh')});\n        return [[this.factory.create('mml', mml)], true];\n      case 'horizontal':\n        // @test Move Left, Move Right, Move Left Negative, Move Right Negative\n        return [[this.factory.create('mml', this.getProperty('left') as MmlNode), item,\n                 this.factory.create('mml', this.getProperty('right') as MmlNode)], true];\n      }\n    }\n    return super.checkItem(item);\n  }\n}\n\n\n/**\n * Item indicating a table cell.\n */\nexport class CellItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'cell';\n  }\n\n\n  /**\n   * @override\n   */\n  get isClose() {\n    return true;\n  }\n}\n\n\n/**\n * Final item for collating Nodes.\n */\nexport class MmlItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get isFinal() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'mml';\n  }\n\n}\n\n\n/**\n * Item indicating a named function operator (e.g., \\\\sin) as been encountered.\n */\nexport class FnItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'fn';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    const top = this.First;\n    if (top) {\n      if (item.isOpen) {\n        // @test Fn Stretchy\n        return BaseItem.success;\n      }\n      if (!item.isKind('fn')) {\n        // @test Named Function\n        let mml = item.First;\n        if (!item.isKind('mml') || !mml) {\n          // @test Mathop Super\n          return [[top, item], true];\n        }\n        if ((NodeUtil.isType(mml, 'mstyle') && mml.childNodes.length &&\n             NodeUtil.isType(mml.childNodes[0].childNodes[0] as MmlNode, 'mspace')) ||\n             NodeUtil.isType(mml, 'mspace')) {\n          // @test Fn Pos Space, Fn Neg Space\n          return [[top, item], true];\n        }\n        if (NodeUtil.isEmbellished(mml)) {\n          // @test MultiInt with Limits\n          mml = NodeUtil.getCoreMO(mml);\n        }\n        const form = NodeUtil.getForm(mml);\n        if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {\n          // @test Fn Operator\n          return [[top, item], true];\n        }\n      }\n      // @test Named Function, Named Function Arg\n      const node = this.create('token', 'mo', {texClass: TEXCLASS.NONE},\n                               entities.ApplyFunction);\n      return [[top, node, item], true];\n    }\n    // @test Mathop Super, Mathop Sub\n    return super.checkItem.apply(this, arguments);\n  }\n}\n\n\n/**\n * Item indicating a \\\\not has been encountered and needs to be applied to the\n * next operator.\n */\nexport class NotItem extends BaseItem {\n\n  private remap = MapHandler.getMap('not_remap') as CharacterMap;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'not';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    let mml: TextNode | MmlNode;\n    let c: string;\n    let textNode: TextNode;\n    if (item.isKind('open') || item.isKind('left')) {\n      // @test Negation Left Paren\n      return BaseItem.success;\n    }\n    if (item.isKind('mml') &&\n        (NodeUtil.isType(item.First, 'mo') || NodeUtil.isType(item.First, 'mi') ||\n         NodeUtil.isType(item.First, 'mtext'))) {\n      mml = item.First;\n      c = NodeUtil.getText(mml as TextNode);\n      if (c.length === 1 && !NodeUtil.getProperty(mml, 'movesupsub') &&\n          NodeUtil.getChildren(mml).length === 1) {\n        if (this.remap.contains(c)) {\n          // @test Negation Simple, Negation Complex\n          textNode = this.create('text', this.remap.lookup(c).char) as TextNode;\n          NodeUtil.setChild(mml, 0, textNode);\n        } else {\n          // @test Negation Explicit\n          textNode = this.create('text', '\\u0338') as TextNode;\n          NodeUtil.appendChildren(mml, [textNode]);\n        }\n        return [[item], true];\n      }\n    }\n    // @test Negation Large\n    textNode = this.create('text', '\\u29F8') as TextNode;\n    const mtextNode = this.create('node', 'mtext', [], {}, textNode);\n    const paddedNode = this.create('node', 'mpadded', [mtextNode], {width: 0});\n    mml = this.create('node', 'TeXAtom', [paddedNode], {texClass: TEXCLASS.REL});\n    return [[mml, item], true];\n  }\n}\n\n/**\n * A StackItem that removes an mspace that follows it (for \\nonscript).\n */\nexport class NonscriptItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'nonscript';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    //\n    //  Check if the next item is an mspace (or an mspace in an mstyle) and remove it.\n    //\n    if (item.isKind('mml') && item.Size() === 1) {\n      let mml = item.First;\n      //\n      //  Space macros like \\, are wrapped with an mstyle to set scriptlevel=\"0\"\n      //    (so size is independent of level), we look at the contents of the mstyle for the mspace.\n      //\n      if (mml.isKind('mstyle') && mml.notParent) {\n        mml = NodeUtil.getChildren(NodeUtil.getChildren(mml)[0])[0];\n      }\n      if (mml.isKind('mspace')) {\n        //\n        //  If the space is in an mstyle, wrap it in an mrow so we can test its scriptlevel\n        //    in the post-filter (the mrow will be removed in the filter).  We can't test\n        //    the mstyle's scriptlevel, since it is ecxplicitly setting it to 0.\n        //\n        if (mml !== item.First) {\n          const mrow = this.create('node', 'mrow', [item.Pop()]);\n          item.Push(mrow);\n        }\n        //\n        //  Save the mspace for later post-processing.\n        //\n        this.factory.configuration.addNode('nonscript', item.First);\n      }\n    }\n    return [[item], true];\n  }\n}\n\n/**\n * Item indicating a dots command has been encountered.\n */\nexport class DotsItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'dots';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('open') || item.isKind('left')) {\n      return BaseItem.success;\n    }\n    let dots = this.getProperty('ldots') as MmlNode;\n    let top = item.First;\n    // @test Operator Dots\n    if (item.isKind('mml') && NodeUtil.isEmbellished(top)) {\n      const tclass = NodeUtil.getTexClass(NodeUtil.getCoreMO(top));\n      if (tclass === TEXCLASS.BIN || tclass === TEXCLASS.REL) {\n        dots = this.getProperty('cdots') as MmlNode;\n      }\n    }\n    return [[dots, item], true];\n  }\n}\n\n\n/**\n * Item indicating an array is assembled. It collates cells, rows and\n * information about column/row separator and framing lines.\n */\nexport class ArrayItem extends BaseItem {\n\n  /**\n   * The table as a list of rows.\n   * @type {MmlNode[]}\n   */\n  public table: MmlNode[] = [];\n\n  /**\n   * The current row as a list of cells.\n   * @type {MmlNode[]}\n   */\n  public row: MmlNode[] = [];\n\n  /**\n   * Frame specification as a list of strings.\n   * @type {string[]}\n   */\n  public frame: string[] = [];\n\n  /**\n   * Hfill value.\n   * @type {number[]}\n   */\n  public hfill: number[] = [];\n\n  /**\n   * Properties for special array definitions.\n   * @type {{[key: string]: string|number|boolean}}\n   */\n  public arraydef: {[key: string]: string | number | boolean} = {};\n\n  /**\n   * True if separators are dashed.\n   * @type {boolean}\n   */\n  public dashed: boolean = false;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'array';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  get copyEnv() {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    // @test Array Single\n    if (item.isClose && !item.isKind('over')) {\n      // @test Array Single\n      if (item.getProperty('isEntry')) {\n        // @test Array dashed column, Array solid column\n        this.EndEntry();\n        this.clearEnv();\n        return BaseItem.fail;\n      }\n      if (item.getProperty('isCR')) {\n        // @test Enclosed bottom\n        this.EndEntry();\n        this.EndRow();\n        this.clearEnv();\n        return BaseItem.fail;\n      }\n      this.EndTable();\n      this.clearEnv();\n      let newItem = this.factory.create('mml', this.createMml());\n      if (this.getProperty('requireClose')) {\n        // @test: Label\n        if (item.isKind('close')) {\n          // @test: Label\n          return [[newItem], true];\n        }\n        // @test MissingCloseBrace2\n        throw new TexError('MissingCloseBrace', 'Missing close brace');\n      }\n      return [[newItem, item], true];\n    }\n    return super.checkItem(item);\n  }\n\n  /**\n   * Create the MathML representation of the table.\n   *\n   * @return {MmlNode}\n   */\n  public createMml(): MmlNode {\n    const scriptlevel = this.arraydef['scriptlevel'];\n    delete this.arraydef['scriptlevel'];\n    let mml = this.create('node', 'mtable', this.table, this.arraydef);\n    if (scriptlevel) {\n      mml.setProperty('scriptlevel', scriptlevel);\n    }\n    if (this.frame.length === 4) {\n      // @test Enclosed frame solid, Enclosed frame dashed\n      NodeUtil.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');\n    } else if (this.frame.length) {\n      // @test Enclosed left right\n      if (this.arraydef['rowlines']) {\n        // @test Enclosed dashed row, Enclosed solid row,\n        this.arraydef['rowlines'] =\n          (this.arraydef['rowlines'] as string).replace(/none( none)+$/, 'none');\n      }\n      // @test Enclosed left right\n      NodeUtil.setAttribute(mml, 'frame', '');\n      mml = this.create('node', 'menclose', [mml], {notation: this.frame.join(' ')});\n      if ((this.arraydef['columnlines'] || 'none') !== 'none' ||\n          (this.arraydef['rowlines'] || 'none') !== 'none') {\n        // @test Enclosed dashed row, Enclosed solid row\n        // @test Enclosed dashed column, Enclosed solid column\n        NodeUtil.setAttribute(mml, 'data-padding', 0);\n      }\n    }\n    if (this.getProperty('open') || this.getProperty('close')) {\n      // @test Cross Product Formula\n      mml = ParseUtil.fenced(this.factory.configuration,\n                             this.getProperty('open') as string, mml,\n                             this.getProperty('close') as string);\n    }\n    return mml;\n  }\n\n  /**\n   * Finishes a single cell of the array.\n   */\n  public EndEntry() {\n    // @test Array1, Array2\n    const mtd = this.create('node', 'mtd', this.nodes);\n    if (this.hfill.length) {\n      if (this.hfill[0] === 0) {\n        NodeUtil.setAttribute(mtd, 'columnalign', 'right');\n      }\n      if (this.hfill[this.hfill.length - 1] === this.Size()) {\n        NodeUtil.setAttribute(\n          mtd, 'columnalign',\n          NodeUtil.getAttribute(mtd, 'columnalign') ? 'center' : 'left');\n      }\n    }\n    this.row.push(mtd);\n    this.Clear();\n    this.hfill = [];\n  }\n\n\n  /**\n   * Finishes a single row of the array.\n   */\n  public EndRow() {\n    let node: MmlNode;\n    if (this.getProperty('isNumbered') && this.row.length === 3) {\n      // @test Label, Matrix Numbered\n      this.row.unshift(this.row.pop());  // move equation number to first\n      // position\n      node = this.create('node', 'mlabeledtr', this.row);\n    } else {\n      // @test Array1, Array2\n      node = this.create('node', 'mtr', this.row);\n    }\n    this.table.push(node);\n    this.row = [];\n  }\n\n\n  /**\n   * Finishes the table layout.\n   */\n  public EndTable() {\n    if (this.Size() || this.row.length) {\n      this.EndEntry();\n      this.EndRow();\n    }\n    this.checkLines();\n  }\n\n\n  /**\n   * Finishes line layout if not already given.\n   */\n  public checkLines() {\n    if (this.arraydef['rowlines']) {\n      const lines = (this.arraydef['rowlines'] as string).split(/ /);\n      if (lines.length === this.table.length) {\n        this.frame.push('bottom');\n        lines.pop();\n        this.arraydef['rowlines'] = lines.join(' ');\n      } else if (lines.length < this.table.length - 1) {\n        this.arraydef['rowlines'] += ' none';\n      }\n    }\n    if (this.getProperty('rowspacing')) {\n      const rows = (this.arraydef['rowspacing'] as string).split(/ /);\n      while (rows.length < this.table.length) {\n        rows.push(this.getProperty('rowspacing') + 'em');\n      }\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  }\n\n  /**\n   * Adds a row-spacing to the current row (padding out the rowspacing if needed to get there).\n   *\n   * @param {string} spacing   The rowspacing to use for the current row.\n   */\n  public addRowSpacing(spacing: string) {\n    if (this.arraydef['rowspacing']) {\n      const rows = (this.arraydef['rowspacing'] as string).split(/ /);\n      if (!this.getProperty('rowspacing')) {\n        // @test Array Custom Linebreak\n        let dimem = ParseUtil.dimen2em(rows[0]);\n        this.setProperty('rowspacing', dimem);\n      }\n      const rowspacing = this.getProperty('rowspacing') as number;\n      while (rows.length < this.table.length) {\n        rows.push(ParseUtil.Em(rowspacing));\n      }\n      rows[this.table.length - 1] = ParseUtil.Em(\n        Math.max(0, rowspacing + ParseUtil.dimen2em(spacing)));\n      this.arraydef['rowspacing'] = rows.join(' ');\n    }\n  }\n\n}\n\n\n/**\n * Item dealing with equation arrays as a special case of arrays. Handles\n * tagging information according to the given tagging style.\n */\nexport class EqnArrayItem extends ArrayItem {\n\n  /**\n   * The length of the longest row.\n   */\n  public maxrow: number = 0;\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start(args[0], args[2], args[1]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'eqnarray';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    // @test Cubic Binomial\n    if (this.row.length) {\n      ParseUtil.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    const node = this.create('node', 'mtd', this.nodes);\n    this.row.push(node);\n    this.Clear();\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    // @test Cubic Binomial\n    let mtr = 'mtr';\n    let tag = this.factory.configuration.tags.getTag();\n    if (tag) {\n      this.row = [tag].concat(this.row);\n      mtr = 'mlabeledtr';\n    }\n    this.factory.configuration.tags.clearTag();\n    const node = this.create('node', mtr, this.row);\n    this.table.push(node);\n    this.row = [];\n  }\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    // @test Cubic Binomial\n    super.EndTable();\n    this.factory.configuration.tags.end();\n    //\n    // Repeat the column align and width specifications\n    //   to match the number of columns\n    //\n    this.extendArray('columnalign', this.maxrow);\n    this.extendArray('columnwidth', this.maxrow);\n    this.extendArray('columnspacing', this.maxrow - 1);\n  }\n\n  /**\n   * Extend a column specification to include a repeating set of values\n   *   so that it has enough to match the maximum row length.\n   */\n  protected extendArray(name: string, max: number) {\n    if (!this.arraydef[name]) return;\n    const repeat = (this.arraydef[name] as string).split(/ /);\n    const columns = [...repeat];\n    if (columns.length > 1) {\n      while (columns.length < max) {\n        columns.push(...repeat);\n      }\n      this.arraydef[name] = columns.slice(0, max).join(' ');\n    }\n  }\n}\n\n\n/**\n * Item dealing with simple equation environments.  Handles tagging information\n * according to the given tagging style.\n */\nexport class EquationItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start('equation', true, args[0]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'equation';\n  }\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      let mml = this.toMml();\n      let tag = this.factory.configuration.tags.getTag();\n      this.factory.configuration.tags.end();\n      return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];\n    }\n    if (item.isKind('stop')) {\n      // @test EnvMissingEnd Equation\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    return super.checkItem(item);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,8CAA4C;AAE5C,IAAA,qDAAmD;AACnD,IAAA,2DAA6E;AAE7E,IAAA,gBAAA,2CAAsC;AACtC,IAAA,iBAAA,4CAAwC;AACxC,IAAA,gBAAA,2CAAsC;AAGtC,IAAA,4CAAwE;AAMxE,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAKrC,SAAA,UAAY,OAAyB,EAAS,MAAe;QAA7D,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CACf;QAF6C,MAAA,MAAM,GAAN,MAAM,CAAS;;IAE7D,CAAC;IAMD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACxB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;aACjE;YACD,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACnD;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AAvCD,CAA+B,eAAA,QAAQ,GAuCtC;AAvCY,QAAA,SAAA,GAAA,UAAS;AA8CtB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAAtC,SAAA;;IAiBA,CAAC;IAZC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,QAAC;AAAD,CAAC,AAjBD,CAA8B,eAAA,QAAQ,GAiBrC;AAjBY,QAAA,QAAA,GAAA,SAAQ;AAuBrB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAAtC,SAAA;;IAuCA,CAAC;IAxBC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,SAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YAExB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAAC,GAAG;aAAC,CAAC,CAAC;YACnD,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACnD;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAhCgB,SAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAA,QAAQ,CAAC,MAAM,CAAC,EAAE;QAEtE,MAAM,EAAE;YAAC,uBAAuB;YACvB,yCAAyC;SAAC;KACpD,CAAC,CAAC;IA6BL,OAAA,QAAC;CAAA,AAvCD,CAA8B,eAAA,QAAQ,GAuCrC;AAvCY,QAAA,QAAA,GAAA,SAAQ;AA6CrB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;;IAiBA,CAAC;IAZC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,SAAC;AAAD,CAAC,AAjBD,CAA+B,eAAA,QAAQ,GAiBtC;AAjBY,QAAA,SAAA,GAAA,UAAS;AAuBtB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;;IAsBA,CAAC;IAjBC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC1B,IAAA,KAAA,OAAe,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAA,EAAA,EAA1B,IAAI,GAAA,EAAA,CAAA,EAAA,EAAE,IAAI,GAAA,EAAA,CAAA,EAAgB,CAAC;QAChC,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;YAEtE,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;gBAAC,IAAI;gBAAE,IAAI;aAAC,CAAC,CAAC;YACvD,OAAO;gBAAC;oBAAC,IAAI;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAC7B;QACD,cAAA,OAAQ,CAAC,QAAQ,CAAC,IAAI,EAAG,IAAmB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACxD,OAAO;YAAC;gBAAC,IAAI;gBAAE,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IAC9B,CAAC;IACH,OAAA,SAAC;AAAD,CAAC,AAtBD,CAA+B,eAAA,QAAQ,GAsBtC;AAtBY,QAAA,SAAA,GAAA,UAAS;AA6BtB,IAAA,aAAA,SAAA,MAAA;IAAgC,UAAA,YAAA,QAAQ;IAAxC,SAAA;;IA6DA,CAAC;IAzCC,OAAA,cAAA,CAAW,WAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAKM,WAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAC9C,OAAO,eAAA,QAAQ,CAAC,OAAO,CAAC;SACzB;QACD,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAW,CAAC;QACxD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;gBAC9B,IAAI,QAAQ,KAAK,CAAC,EAAE;oBAElB,cAAA,OAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAY,CAAC,CAAC;iBAClE,MAAM;oBAEL,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAY,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;oBACjF,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;wBAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAY;wBAAE,IAAI,CAAC,KAAK;qBAAC,CAAC,CAAC;oBAC9F,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;iBACnB;aACF;YACD,cAAA,OAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBAE1C,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,CAAa,CAAC,CAAC;aACrF;YACD,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC/C,OAAO;gBAAC;oBAAC,MAAM;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACzB;QACD,IAAI,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YAE5B,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;gBAAC,EAAE;gBAAE,KAAK;gBAAE,KAAK;aAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3D,MAAA,IAAA,CAAU,cAAA,OAAQ,CAAA,IAAA,CAAA,KAAA,CAAR,cAAA,OAAQ,EAAA,cAAA;gBAAA,KAAA;gBAAC,KAAK,CAAC,CAAC,CAAC;gBAAE,KAAK,CAAC,CAAC,CAAC;aAAA,EAAA,OAAK,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAA,OAAA,IAAE;SAC5D;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAtDgB,WAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAA,QAAQ,CAAC,MAAM,CAAC,EAAE;QAEtE,MAAM,EAAE;YAAC,eAAe;YACf,2CAA2C;SAAC;QAErD,KAAK,EAAE;YAAC,mBAAmB;YACnB,oCAAoC;SAAC;QAE7C,KAAK,EAAE;YAAC,mBAAmB;YACnB,kCAAkC;SAAC;KAC5C,CAAC,CAAC;IA8CL,OAAA,UAAC;CAAA,AA7DD,CAAgC,eAAA,QAAQ,GA6DvC;AA7DY,QAAA,UAAA,GAAA,WAAU;AAmEvB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAKpC,SAAA,SAAY,OAAyB;QAArC,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAEf;QADC,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;IACrC,CAAC;IAKD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAMM,SAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAEvB,MAAM,IAAI,cAAA,OAAQ,CAChB,gBAAgB,EAAE,qBAAqB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC5D;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAEhB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EACN,OAAO,EAAE;gBAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAY;gBAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aAAC,CAAC,CAAC;YACxF,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;gBAEzC,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,EACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAW,CAAC,CAAC;aAChE;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;gBAEzD,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;gBAC9C,GAAG,GAAG,eAAA,OAAS,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAW,EAAE,GAAG,EACvC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,CAAC,CAAC;aACjE;YACD,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACxD;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAMM,SAAA,SAAA,CAAA,QAAQ,GAAf;QACE,OAAO,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GACtC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;IACxC,CAAC;IAEH,OAAA,QAAC;AAAD,CAAC,AAjED,CAA8B,eAAA,QAAQ,GAiErC;AAjEY,QAAA,QAAA,GAAA,SAAQ;AAuErB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAepC,SAAA,SAAY,OAAyB,EAAE,KAAa;QAApD,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAEf;QADC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;IACnC,CAAC;IAKD,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAMM,SAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAE9B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YAIxB,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,eAAA,OAAS,CAAC,MAAM,CAClD,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,EAAE,IAAI,CAAC,KAAK,EAAE,EACjD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,CAAC,CAAC;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAC1F;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YAIzB,IAAM,GAAG,GAAG;gBAAC,QAAQ,EAAE,IAAI;YAAA,CAAQ,CAAC;YACpC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;gBAC7B,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC3C;YACD,IAAI,CAAC,IAAI,CACP,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE;gBAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,KAAK;YAAA,CAAC,CAAC,EAC9D,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAC1D,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE;gBAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,IAAI;YAAA,CAAC,CAAC,CAC9D,CAAC;YACF,IAAI,CAAC,GAAG,GAAG,CAAA,CAAE,CAAC;YACd,OAAO;gBAAC;oBAAC,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACvB;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IA9DgB,SAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAA,QAAQ,CAAC,MAAM,CAAC,EAAE;QAEtE,MAAM,EAAE;YAAC,uBAAuB;YACvB,iCAAiC;SAAC;KAC5C,CAAC,CAAC;IA4DL,OAAA,QAAC;CAAA,AArED,CAA8B,eAAA,QAAQ,GAqErC;AArEY,QAAA,QAAA,GAAA,SAAQ;AA2ErB,IAAA,SAAA,SAAA,MAAA;IAA4B,UAAA,QAAA,QAAQ;IAKlC,SAAA,OAAY,OAAyB,EAAE,KAAa,EAAE,KAAa;QAAnE,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAGf;QAFC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACjC,KAAK,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;IAC5C,CAAC;IAKD,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,OAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,MAAC;AAAD,CAAC,AA1BD,CAA4B,eAAA,QAAQ,GA0BnC;AA1BY,QAAA,MAAA,GAAA,OAAM;AAgCnB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAKrC,SAAA,UAAY,OAAyB,EAAE,KAAa,EAAE,KAAa;QAAnE,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAGf;QAFC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACjC,KAAK,IAAI,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;IAC5C,CAAC;IAKD,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,SAAC;AAAD,CAAC,AA1BD,CAA+B,eAAA,QAAQ,GA0BtC;AA1BY,QAAA,SAAA,GAAA,UAAS;AAgCtB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;;IAwCA,CAAC;IAnCC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,EAAE;gBAErC,MAAM,IAAI,cAAA,OAAQ,CAAC,WAAW,EAAE,kCAAkC,EAC/C,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aACpD;YACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;gBAE5B,OAAO;oBAAC;wBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;qBAAC;oBAAE,IAAI;iBAAC,CAAC;aAC3D;YACD,OAAO,eAAA,QAAQ,CAAC,IAAI,CAAC;SACtB;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAEvB,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,mBAAmB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC1E;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AAxCD,CAA+B,eAAA,QAAQ,GAwCtC;AAxCY,QAAA,SAAA,GAAA,UAAS;AAgDtB,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAQ;IAArC,SAAA;;IAiBA,CAAC;IAZC,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,QAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAEH,OAAA,OAAC;AAAD,CAAC,AAjBD,CAA6B,eAAA,QAAQ,GAiBpC;AAjBY,QAAA,OAAA,GAAA,QAAO;AAuBpB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;;IAqBA,CAAC;IAhBC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;SAC9B;QAED,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClF,OAAO;YAAC;gBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;gBAAE,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IACzD,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AArBD,CAA+B,eAAA,QAAQ,GAqBtC;AArBY,QAAA,SAAA,GAAA,UAAS;AA2BtB,IAAA,eAAA,SAAA,MAAA;IAAkC,UAAA,cAAA,QAAQ;IAA1C,SAAA;;IAoCA,CAAC;IA/BC,OAAA,cAAA,CAAW,aAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAMM,aAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,OAAO,EAAE;YAEhB,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,oBAAoB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC3E;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,OAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;gBAClC,KAAK,UAAU;oBAEb,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;wBAAC,GAAG;qBAAC,EACxB;wBAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBAC9B,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBAC7B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;oBAAA,CAAC,CAAC,CAAC;oBACrD,OAAO;wBAAC;4BAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC;yBAAC;wBAAE,IAAI;qBAAC,CAAC;gBACnD,KAAK,YAAY;oBAEf,OAAO;wBAAC;4BAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAY,CAAC;4BAAE,IAAI;4BACrE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY,CAAC;yBAAC;wBAAE,IAAI;qBAAC,CAAC;aACnF;SACF;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACH,OAAA,YAAC;AAAD,CAAC,AApCD,CAAkC,eAAA,QAAQ,GAoCzC;AApCY,QAAA,YAAA,GAAA,aAAY;AA0CzB,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAAtC,SAAA;;IAgBA,CAAC;IAXC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,SAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IACH,OAAA,QAAC;AAAD,CAAC,AAhBD,CAA8B,eAAA,QAAQ,GAgBrC;AAhBY,QAAA,QAAA,GAAA,SAAQ;AAsBrB,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAQ;IAArC,SAAA;;IAgBA,CAAC;IAXC,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,SAAO,EAAA;aAAlB;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAEH,OAAA,OAAC;AAAD,CAAC,AAhBD,CAA6B,eAAA,QAAQ,GAgBpC;AAhBY,QAAA,OAAA,GAAA,QAAO;AAsBpB,IAAA,SAAA,SAAA,MAAA;IAA4B,UAAA,QAAA,QAAQ;IAApC,SAAA;;IAkDA,CAAC;IA7CC,OAAA,cAAA,CAAW,OAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,OAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,GAAG,EAAE;YACP,IAAI,IAAI,CAAC,MAAM,EAAE;gBAEf,OAAO,eAAA,QAAQ,CAAC,OAAO,CAAC;aACzB;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;gBAEtB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;oBAE/B,OAAO;wBAAC;4BAAC,GAAG;4BAAE,IAAI;yBAAC;wBAAE,IAAI;qBAAC,CAAC;iBAC5B;gBACD,IAAI,AAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,MAAM,IACvD,cAAA,OAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAY,EAAE,QAAQ,CAAC,CAAC,GACtE,cAAA,OAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE;oBAEnC,OAAO;wBAAC;4BAAC,GAAG;4BAAE,IAAI;yBAAC;wBAAE,IAAI;qBAAC,CAAC;iBAC5B;gBACD,IAAI,cAAA,OAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;oBAE/B,GAAG,GAAG,cAAA,OAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;iBAC/B;gBACD,IAAM,IAAI,GAAG,cAAA,OAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,IAAI,IAAI,IAAI,IAAI;oBAAC,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;oBAAE,CAAC;iBAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;oBAE3D,OAAO;wBAAC;4BAAC,GAAG;4BAAE,IAAI;yBAAC;wBAAE,IAAI;qBAAC,CAAC;iBAC5B;aACF;YAED,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;gBAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,IAAI;YAAA,CAAC,EACxC,cAAA,QAAQ,CAAC,aAAa,CAAC,CAAC;YACjD,OAAO;gBAAC;oBAAC,GAAG;oBAAE,IAAI;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAClC;QAED,OAAO,OAAA,SAAA,CAAM,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAChD,CAAC;IACH,OAAA,MAAC;AAAD,CAAC,AAlDD,CAA4B,eAAA,QAAQ,GAkDnC;AAlDY,QAAA,MAAA,GAAA,OAAM;AAyDnB,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAQ;IAArC,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAgDC;QA9CS,MAAA,KAAK,GAAG,gBAAA,UAAU,CAAC,MAAM,CAAC,WAAW,CAAiB,CAAC;;IA8CjE,CAAC;IAzCC,OAAA,cAAA,CAAW,QAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAKM,QAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,GAAuB,CAAC;QAC5B,IAAI,CAAS,CAAC;QACd,IAAI,QAAkB,CAAC;QACvB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAE9C,OAAO,eAAA,QAAQ,CAAC,OAAO,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAClB,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IACtE,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE;YAC1C,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YACjB,CAAC,GAAG,cAAA,OAAQ,CAAC,OAAO,CAAC,GAAe,CAAC,CAAC;YACtC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,CAAC,IAC1D,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;oBAE1B,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAa,CAAC;oBACtE,cAAA,OAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;iBACrC,MAAM;oBAEL,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAa,CAAC;oBACrD,cAAA,OAAQ,CAAC,cAAc,CAAC,GAAG,EAAE;wBAAC,QAAQ;qBAAC,CAAC,CAAC;iBAC1C;gBACD,OAAO;oBAAC;wBAAC,IAAI;qBAAC;oBAAE,IAAI;iBAAC,CAAC;aACvB;SACF;QAED,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAa,CAAC;QACrD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,CAAA,CAAE,EAAE,QAAQ,CAAC,CAAC;QACjE,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,SAAS;SAAC,EAAE;YAAC,KAAK,EAAE,CAAC;QAAA,CAAC,CAAC,CAAC;QAC3E,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,UAAU;SAAC,EAAE;YAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,GAAG;QAAA,CAAC,CAAC,CAAC;QAC7E,OAAO;YAAC;gBAAC,GAAG;gBAAE,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IAC7B,CAAC;IACH,OAAA,OAAC;AAAD,CAAC,AAhDD,CAA6B,eAAA,QAAQ,GAgDpC;AAhDY,QAAA,OAAA,GAAA,QAAO;AAqDpB,IAAA,gBAAA,SAAA,MAAA;IAAmC,UAAA,eAAA,QAAQ;IAA3C,SAAA;;IA2CA,CAAC;IAtCC,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,WAAW,CAAC;QACrB,CAAC;;;OAAA;IAKM,cAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAI9B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;YAKrB,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,SAAS,EAAE;gBACzC,GAAG,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7D;YACD,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;gBAMxB,IAAI,GAAG,KAAK,IAAI,CAAC,KAAK,EAAE;oBACtB,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;wBAAC,IAAI,CAAC,GAAG,EAAE;qBAAC,CAAC,CAAC;oBACvD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjB;gBAID,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7D;SACF;QACD,OAAO;YAAC;gBAAC,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IACxB,CAAC;IACH,OAAA,aAAC;AAAD,CAAC,AA3CD,CAAmC,eAAA,QAAQ,GA2C1C;AA3CY,QAAA,aAAA,GAAA,cAAa;AAgD1B,IAAA,WAAA,SAAA,MAAA;IAA8B,UAAA,UAAA,QAAQ;IAAtC,SAAA;;IA2BA,CAAC;IAtBC,OAAA,cAAA,CAAW,SAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,MAAM,CAAC;QAChB,CAAC;;;OAAA;IAKM,SAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAC9C,OAAO,eAAA,QAAQ,CAAC,OAAO,CAAC;SACzB;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY,CAAC;QAChD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QAErB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,cAAA,OAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;YACrD,IAAM,MAAM,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,cAAA,OAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7D,IAAI,MAAM,KAAK,aAAA,QAAQ,CAAC,GAAG,IAAI,MAAM,KAAK,aAAA,QAAQ,CAAC,GAAG,EAAE;gBACtD,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY,CAAC;aAC7C;SACF;QACD,OAAO;YAAC;gBAAC,IAAI;gBAAE,IAAI;aAAC;YAAE,IAAI;SAAC,CAAC;IAC9B,CAAC;IACH,OAAA,QAAC;AAAD,CAAC,AA3BD,CAA8B,eAAA,QAAQ,GA2BrC;AA3BY,QAAA,QAAA,GAAA,SAAQ;AAkCrB,IAAA,YAAA,SAAA,MAAA;IAA+B,UAAA,WAAA,QAAQ;IAAvC,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CA6OC;QAvOQ,MAAA,KAAK,GAAc,EAAE,CAAC;QAMtB,MAAA,GAAG,GAAc,EAAE,CAAC;QAMpB,MAAA,KAAK,GAAa,EAAE,CAAC;QAMrB,MAAA,KAAK,GAAa,EAAE,CAAC;QAMrB,MAAA,QAAQ,GAA+C,CAAA,CAAE,CAAC;QAM1D,MAAA,MAAM,GAAY,KAAK,CAAC;;IAyMjC,CAAC;IApMC,OAAA,cAAA,CAAW,UAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,OAAO,CAAC;QACjB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAI,UAAA,SAAA,EAAA,SAAO,EAAA;aAAX;YACE,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAE9B,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAExC,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;gBAE/B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,OAAO,eAAA,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;gBAE5B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,OAAO,eAAA,QAAQ,CAAC,IAAI,CAAC;aACtB;YACD,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YAC3D,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE;gBAEpC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;oBAExB,OAAO;wBAAC;4BAAC,OAAO;yBAAC;wBAAE,IAAI;qBAAC,CAAC;iBAC1B;gBAED,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;aAChE;YACD,OAAO;gBAAC;oBAAC,OAAO;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAChC;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAOM,UAAA,SAAA,CAAA,SAAS,GAAhB;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnE,IAAI,WAAW,EAAE;YACf,GAAG,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;SAC7C;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAE3B,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SACvE,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAE5B,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBAE7B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GACtB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAY,CAAC,OAAO,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;aAC1E;YAED,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;YACxC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;gBAAC,GAAG;aAAC,EAAE;gBAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;YAAA,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,KAAK,MAAM,IACnD,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,KAAK,MAAM,EAAE;gBAGpD,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,EAAE,CAAC,CAAC,CAAC;aAC/C;SACF;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;YAEzD,GAAG,GAAG,eAAA,OAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAW,EAAE,GAAG,EACvC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,CAAC,CAAC;SAC7D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAKM,UAAA,SAAA,CAAA,QAAQ,GAAf;QAEE,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACrB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBACvB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;aACpD;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;gBACrD,cAAA,OAAQ,CAAC,YAAY,CACnB,GAAG,EAAE,aAAa,EAClB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;aAClE;SACF;QACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAMM,UAAA,SAAA,CAAA,MAAM,GAAb;QACE,IAAI,IAAa,CAAC;QAClB,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YAE3D,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;YAEjC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SACpD,MAAM;YAEL,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAMM,UAAA,SAAA,CAAA,QAAQ,GAAf;QACE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAMM,UAAA,SAAA,CAAA,UAAU,GAAjB;QACE,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC7B,IAAM,KAAK,GAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC/D,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1B,KAAK,CAAC,GAAG,EAAE,CAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC7C,MAAM,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC;aACtC;SACF;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;YAClC,IAAM,IAAI,GAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChE,MAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC;aAClD;YACD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9C;IACH,CAAC;IAOM,UAAA,SAAA,CAAA,aAAa,GAApB,SAAqB,OAAe;QAClC,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YAC/B,IAAM,IAAI,GAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;gBAEnC,IAAI,KAAK,GAAG,eAAA,OAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;aACvC;YACD,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAW,CAAC;YAC5D,MAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,eAAA,OAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;aACrC;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,eAAA,OAAS,CAAC,EAAE,CACxC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,GAAG,eAAA,OAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC9C;IACH,CAAC;IAEH,OAAA,SAAC;AAAD,CAAC,AA7OD,CAA+B,eAAA,QAAQ,GA6OtC;AA7OY,QAAA,SAAA,GAAA,UAAS;AAoPtB,IAAA,eAAA,SAAA,MAAA;IAAkC,UAAA,cAAA,QAAS;IAUzC,SAAA,aAAY,OAAY;QAAE,IAAA,OAAA,EAAA,CAAc;YAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;YAAd,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;QAAxC,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAEf;QARM,MAAA,MAAM,GAAW,CAAC,CAAC;QAOxB,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;IACnE,CAAC;IAMD,OAAA,cAAA,CAAI,aAAA,SAAA,EAAA,MAAI,EAAA;aAAR;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAMM,aAAA,SAAA,CAAA,QAAQ,GAAf;QAEE,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YACnB,eAAA,OAAS,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAChE;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAKM,aAAA,SAAA,CAAA,MAAM,GAAb;QACE,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;YACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;SAC/B;QAED,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACnD,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,GAAG,GAAG;gBAAC,GAAG;aAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAClC,GAAG,GAAG,YAAY,CAAC;SACpB;QACD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAKM,aAAA,SAAA,CAAA,QAAQ,GAAf;QAEE,OAAA,SAAA,CAAM,QAAQ,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAKtC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACrD,CAAC;IAMS,aAAA,SAAA,CAAA,WAAW,GAArB,SAAsB,IAAY,EAAE,GAAW;QAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO;QACjC,IAAM,MAAM,GAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1D,IAAM,OAAO,GAAA,cAAA,EAAA,EAAA,OAAO,MAAM,GAAA,MAAC,CAAC;QAC5B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,MAAO,OAAO,CAAC,MAAM,GAAG,GAAG,CAAE;gBAC3B,OAAO,CAAC,IAAI,CAAA,KAAA,CAAZ,OAAO,EAAA,cAAA,EAAA,EAAA,OAAS,MAAM,GAAA,QAAE;aACzB;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvD;IACH,CAAC;IACH,OAAA,YAAC;AAAD,CAAC,AAxFD,CAAkC,SAAS,GAwF1C;AAxFY,QAAA,YAAA,GAAA,aAAY;AA+FzB,IAAA,eAAA,SAAA,MAAA;IAAkC,UAAA,cAAA,QAAQ;IAKxC,SAAA,aAAY,OAAY;QAAE,IAAA,OAAA,EAAA,CAAc;YAAd,IAAA,KAAA,CAAc,EAAd,KAAA,UAAA,MAAc,EAAd,IAAc,CAAA;YAAd,IAAA,CAAA,KAAA,EAAA,GAAA,SAAA,CAAA,GAAA,CAAc;;QAAxC,IAAA,QACE,OAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,IAAA,IAAA,CAEf;QADC,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;IACnE,CAAC;IAMD,OAAA,cAAA,CAAI,aAAA,SAAA,EAAA,MAAI,EAAA;aAAR;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAI,aAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,aAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YACtC,OAAO;gBAAC;oBAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACpF;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAEvB,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,mBAAmB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC1E;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEH,OAAA,YAAC;AAAD,CAAC,AA1CD,CAAkC,eAAA,QAAQ,GA0CzC;AA1CY,QAAA,YAAA,GAAA,aAAY","ignoreList":[0]}},
    {"offset": {"line": 5125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5130, "column": 0}, "map": {"version":3,"file":"TexConstants.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/TexConstants.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Constant definitions for the TeX Parser. These should\n *     eventually be combined with the MathML structure.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nexport namespace TexConstant {\n\n  export const Variant = {\n    NORMAL: 'normal',\n    BOLD: 'bold',\n    ITALIC: 'italic',\n    BOLDITALIC: 'bold-italic',\n    DOUBLESTRUCK: 'double-struck',\n    FRAKTUR: 'fraktur',\n    BOLDFRAKTUR: 'bold-fraktur',\n    SCRIPT: 'script',\n    BOLDSCRIPT: 'bold-script',\n    SANSSERIF: 'sans-serif',\n    BOLDSANSSERIF: 'bold-sans-serif',\n    SANSSERIFITALIC: 'sans-serif-italic',\n    SANSSERIFBOLDITALIC: 'sans-serif-bold-italic',\n    MONOSPACE: 'monospace',\n    INITIAL: 'inital',\n    TAILED: 'tailed',\n    LOOPED: 'looped',\n    STRETCHED: 'stretched',\n    CALLIGRAPHIC: '-tex-calligraphic',\n    BOLDCALLIGRAPHIC: '-tex-bold-calligraphic',\n    OLDSTYLE: '-tex-oldstyle',\n    BOLDOLDSTYLE: '-tex-bold-oldstyle',\n    MATHITALIC: '-tex-mathit'\n  };\n\n  export const Form = {\n    PREFIX: 'prefix',\n    INFIX: 'infix',\n    POSTFIX: 'postfix'\n  };\n\n  export const LineBreak = {\n    AUTO: 'auto',\n    NEWLINE: 'newline',\n    NOBREAK: 'nobreak',\n    GOODBREAK: 'goodbreak',\n    BADBREAK: 'badbreak'\n  };\n\n  export const LineBreakStyle = {\n    BEFORE: 'before',\n    AFTER: 'after',\n    DUPLICATE: 'duplicate',\n    INFIXLINBREAKSTYLE: 'infixlinebreakstyle'\n  };\n\n  export const IndentAlign = {\n    LEFT: 'left',\n    CENTER: 'center',\n    RIGHT: 'right',\n    AUTO: 'auto',\n    ID: 'id',\n    INDENTALIGN: 'indentalign'\n  };\n\n  export const IndentShift = {\n    INDENTSHIFT: 'indentshift'\n  };\n\n  export const LineThickness = {\n    THIN: 'thin',\n    MEDIUM: 'medium',\n    THICK: 'thick'\n  };\n\n  export const Notation = {\n    LONGDIV: 'longdiv',\n    ACTUARIAL: 'actuarial',\n    PHASORANGLE: 'phasorangle',\n    RADICAL: 'radical',\n    BOX: 'box',\n    ROUNDEDBOX: 'roundedbox',\n    CIRCLE: 'circle',\n    LEFT: 'left',\n    RIGHT: 'right',\n    TOP: 'top',\n    BOTTOM: 'bottom',\n    UPDIAGONALSTRIKE: 'updiagonalstrike',\n    DOWNDIAGONALSTRIKE: 'downdiagonalstrike',\n    VERTICALSTRIKE: 'verticalstrike',\n    HORIZONTALSTRIKE: 'horizontalstrike',\n    NORTHEASTARROW: 'northeastarrow',\n    MADRUWB: 'madruwb',\n    UPDIAGONALARROW: 'updiagonalarrow'\n  };\n\n  export const Align = {\n    TOP: 'top',\n    BOTTOM: 'bottom',\n    CENTER: 'center',\n    BASELINE: 'baseline',\n    AXIS: 'axis',\n    LEFT: 'left',\n    RIGHT: 'right'\n  };\n\n  export const Lines = {\n    NONE: 'none',\n    SOLID: 'solid',\n    DASHED: 'dashed'\n  };\n\n  export const Side = {\n    LEFT: 'left',\n    RIGHT: 'right',\n    LEFTOVERLAP: 'leftoverlap',\n    RIGHTOVERLAP: 'rightoverlap'\n  };\n\n  export const Width = {\n    AUTO: 'auto',\n    FIT: 'fit'\n  };\n\n  export const Actiontype = {\n    TOGGLE: 'toggle',\n    STATUSLINE: 'statusline',\n    TOOLTIP: 'tooltip',\n    INPUT: 'input'\n  };\n\n  export const Overflow = {\n    LINBREAK: 'linebreak',\n    SCROLL: 'scroll',\n    ELIDE: 'elide',\n    TRUNCATE: 'truncate',\n    SCALE: 'scale'\n  };\n\n  export const Unit = {\n    EM: 'em',\n    EX: 'ex',\n    PX: 'px',\n    IN: 'in',\n    CM: 'cm',\n    MM: 'mm',\n    PT: 'pt',\n    PC: 'pc'\n  };\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5269, "column": 0}, "map": {"version":3,"file":"BaseMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/base/BaseMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The Basic Parse methods.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport * as sitem from './BaseItems.js';\nimport {StackItem, EnvList} from '../StackItem.js';\nimport {Macro} from '../Symbol.js';\nimport {ParseMethod} from '../Types.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport {TexConstant} from '../TexConstants.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {MmlNode, TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMsubsup} from '../../../core/MmlTree/MmlNodes/msubsup.js';\nimport {MmlMunderover} from '../../../core/MmlTree/MmlNodes/munderover.js';\nimport {Label} from '../Tags.js';\nimport {em} from '../../../util/lengths.js';\nimport {entities} from '../../../util/Entities.js';\nimport {lookup} from '../../../util/Options.js';\n\n\n// Namespace\nlet BaseMethods: Record<string, ParseMethod> = {};\n\nconst P_HEIGHT = 1.2 / .85;   // cmex10 height plus depth over .85\nconst MmlTokenAllow: {[key: string]: number} = {\n  fontfamily: 1, fontsize: 1, fontweight: 1, fontstyle: 1,\n  color: 1, background: 1,\n  id: 1, 'class': 1, href: 1, style: 1\n};\n\n\n\n/**\n * Handle LaTeX tokens.\n */\n\n/**\n * Handle {\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Open = function(parser: TexParser, _c: string) {\n  // @test Identifier Font, Prime, Prime with subscript\n  parser.Push(parser.itemFactory.create('open'));\n};\n\n/**\n * Handle }\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Close = function(parser: TexParser, _c: string) {\n  // @test Identifier Font, Prime, Prime with subscript\n  parser.Push(parser.itemFactory.create('close'));\n};\n\n\n/**\n * Handle tilde and spaces.\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Tilde = function(parser: TexParser, _c: string) {\n  // @test Tilde, Tilde2\n  parser.Push(parser.create('token', 'mtext', {}, entities.nbsp));\n};\n\n/**\n * Handling space, by doing nothing.\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Space = function(_parser: TexParser, _c: string) {};\n\n/**\n * Handle ^\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Superscript = function(parser: TexParser, _c: string) {\n  if (parser.GetNext().match(/\\d/)) {\n    // don't treat numbers as a unit\n    parser.string = parser.string.substr(0, parser.i + 1) +\n      ' ' + parser.string.substr(parser.i + 1);\n  }\n  let primes: MmlNode;\n  let base: MmlNode | void;\n  const top = parser.stack.Top();\n  if (top.isKind('prime')) {\n    // @test Prime on Prime\n    [base, primes] = top.Peek(2);\n    parser.stack.Pop();\n  } else {\n    // @test Empty base2, Square, Cube\n    base = parser.stack.Prev();\n    if (!base) {\n      // @test Empty base\n      base = parser.create('token', 'mi', {}, '');\n    }\n  }\n  const movesupsub = NodeUtil.getProperty(base, 'movesupsub');\n  let position = NodeUtil.isType(base, 'msubsup') ? (base as MmlMsubsup).sup :\n    (base as MmlMunderover).over;\n  if ((NodeUtil.isType(base, 'msubsup') && !NodeUtil.isType(base, 'msup') &&\n       NodeUtil.getChildAt(base, (base as MmlMsubsup).sup)) ||\n      (NodeUtil.isType(base, 'munderover') && !NodeUtil.isType(base, 'mover') &&\n       NodeUtil.getChildAt(base, (base as MmlMunderover).over) &&\n       !NodeUtil.getProperty(base, 'subsupOK'))) {\n    // @test Double-super-error, Double-over-error\n    throw new TexError('DoubleExponent', 'Double exponent: use braces to clarify');\n  }\n  if (!NodeUtil.isType(base, 'msubsup') || NodeUtil.isType(base, 'msup')) {\n    if (movesupsub) {\n      // @test Move Superscript, Large Operator\n      if (!NodeUtil.isType(base, 'munderover') || NodeUtil.isType(base, 'mover') ||\n          NodeUtil.getChildAt(base, (base as MmlMunderover).over)) {\n        // @test Large Operator\n        base = parser.create('node', 'munderover', [base], {movesupsub: true});\n      }\n      position = (base as MmlMunderover).over;\n    } else {\n      // @test Empty base, Empty base2, Square, Cube\n      base = parser.create('node', 'msubsup', [base]);\n      position = (base as MmlMsubsup).sup;\n    }\n  }\n  parser.Push(\n    parser.itemFactory.create('subsup', base).setProperties({\n      position: position, primes: primes, movesupsub: movesupsub\n    }) );\n};\n\n\n/**\n * Handle _\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Subscript = function(parser: TexParser, _c: string) {\n  if (parser.GetNext().match(/\\d/)) {\n    // don't treat numbers as a unit\n    parser.string =\n      parser.string.substr(0, parser.i + 1) + ' ' +\n      parser.string.substr(parser.i + 1);\n  }\n  let primes, base;\n  const top = parser.stack.Top();\n  if (top.isKind('prime')) {\n    // @test Prime on Sub\n    [base, primes] = top.Peek(2);\n    parser.stack.Pop();\n  } else {\n    base = parser.stack.Prev();\n    if (!base) {\n      // @test Empty Base Index\n      base = parser.create('token', 'mi', {}, '');\n    }\n  }\n  const movesupsub = NodeUtil.getProperty(base, 'movesupsub');\n  let position = NodeUtil.isType(base, 'msubsup') ?\n    (base as MmlMsubsup).sub : (base as MmlMunderover).under;\n  if ((NodeUtil.isType(base, 'msubsup') && !NodeUtil.isType(base, 'msup') &&\n       NodeUtil.getChildAt(base, (base as MmlMsubsup).sub)) ||\n      (NodeUtil.isType(base, 'munderover') && !NodeUtil.isType(base, 'mover') &&\n       NodeUtil.getChildAt(base, (base as MmlMunderover).under) &&\n       !NodeUtil.getProperty(base, 'subsupOK'))) {\n    // @test Double-sub-error, Double-under-error\n    throw new TexError('DoubleSubscripts', 'Double subscripts: use braces to clarify');\n  }\n  if (!NodeUtil.isType(base, 'msubsup') || NodeUtil.isType(base, 'msup')) {\n    if (movesupsub) {\n      // @test Large Operator, Move Superscript\n      if (!NodeUtil.isType(base, 'munderover') || NodeUtil.isType(base, 'mover') ||\n          NodeUtil.getChildAt(base, (base as MmlMunderover).under)) {\n        // @test Move Superscript\n        base = parser.create('node', 'munderover', [base], {movesupsub: true});\n      }\n      position = (base as MmlMunderover).under;\n    } else {\n      // @test Empty Base Index, Empty Base Index2, Index\n      base = parser.create('node', 'msubsup', [base]);\n      position = (base as MmlMsubsup).sub;\n    }\n  }\n  parser.Push(\n    parser.itemFactory.create('subsup', base).setProperties({\n      position: position, primes: primes, movesupsub: movesupsub\n    }) );\n};\n\n\n/**\n * Handle '\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Prime = function(parser: TexParser, c: string) {\n  // @test Prime\n  let base = parser.stack.Prev();\n  if (!base) {\n    // @test PrimeSup, PrePrime, Prime on Sup\n    base = parser.create('node', 'mi');\n  }\n  if (NodeUtil.isType(base, 'msubsup') && !NodeUtil.isType(base, 'msup') &&\n      NodeUtil.getChildAt(base, (base as MmlMsubsup).sup)) {\n    // @test Double Prime Error\n    throw new TexError('DoubleExponentPrime',\n                        'Prime causes double exponent: use braces to clarify');\n  }\n  let sup = '';\n  parser.i--;\n  do {\n    // @test Prime, PrimeSup, Double Prime, PrePrime\n    sup += entities.prime; parser.i++, c = parser.GetNext();\n  } while (c === '\\'' || c === entities.rsquo);\n  sup = ['', '\\u2032', '\\u2033', '\\u2034', '\\u2057'][sup.length] || sup;\n  const node = parser.create('token', 'mo', {variantForm: true}, sup);\n  parser.Push(\n    parser.itemFactory.create('prime', base, node) );\n};\n\n\n/**\n * Handle comments\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Comment = function(parser: TexParser, _c: string) {\n  while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\\n') {\n    parser.i++;\n  }\n};\n\n\n/**\n * Handle hash marks outside of definitions\n * @param {TexParser} parser The calling parser.\n * @param {string} c The parsed character.\n */\nBaseMethods.Hash = function(_parser: TexParser, _c: string) {\n  // @test Hash Error\n  throw new TexError('CantUseHash1',\n                      'You can\\'t use \\'macro parameter character #\\' in math mode');\n};\n\n\n\n/**\n *\n * Handle LaTeX Macros\n *\n */\n\n\n/**\n * Handle \\mathrm, \\mathbf, etc, allowing for multi-letter runs to be one <mi>.\n */\nBaseMethods.MathFont = function(parser: TexParser, name: string, variant: string) {\n  const text = parser.GetArgument(name);\n  let mml = new TexParser(text, {\n    ...parser.stack.env,\n    font: variant,\n    multiLetterIdentifiers: /^[a-zA-Z]+/ as any,\n    noAutoOP: true\n  }, parser.configuration).mml();\n  parser.Push(parser.create('node', 'TeXAtom', [mml]));\n};\n\n/**\n * Setting font, e.g., via \\\\rm, \\\\bf etc.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} font The font name.\n */\nBaseMethods.SetFont = function(parser: TexParser, _name: string, font: string) {\n  parser.stack.env['font'] = font;\n};\n\n/**\n * Setting style, e.g., via \\\\displaystyle, \\\\textstyle, etc.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} texStyle The tex style name: D, T, S, SS\n * @param {boolean} style True if we are in displaystyle.\n * @param {string} level The nesting level for scripts.\n */\nBaseMethods.SetStyle = function(parser: TexParser, _name: string,\n                                texStyle: string, style: boolean,\n                                level: string) {\n  parser.stack.env['style'] = texStyle;\n  parser.stack.env['level'] = level;\n  parser.Push(\n    parser.itemFactory.create('style').setProperty(\n      'styles', {displaystyle: style, scriptlevel: level}));\n};\n\n\n/**\n * Setting size of an expression, e.g., \\\\small, \\\\huge.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} size The size value.\n */\nBaseMethods.SetSize = function(parser: TexParser, _name: string, size: number) {\n  parser.stack.env['size'] = size;\n  parser.Push(\n    parser.itemFactory.create('style').setProperty('styles', {mathsize: em(size)}));\n};\n\n/**\n * Setting explicit spaces, e.g., via commata or colons.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} space The space value.\n */\nBaseMethods.Spacer = function(parser: TexParser, _name: string, space: number) {\n  // @test Positive Spacing, Negative Spacing\n  const node = parser.create('node', 'mspace', [], {width: em(space)});\n  const style = parser.create('node', 'mstyle', [node], {scriptlevel: 0});\n  parser.Push(style);\n};\n\n\n/**\n * Parses left/right fenced expressions.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.LeftRight = function(parser: TexParser, name: string) {\n  // @test Fenced, Fenced3\n  const first = name.substr(1);\n  parser.Push(parser.itemFactory.create(first, parser.GetDelimiter(name), parser.stack.env.color));\n};\n\n/**\n * Handle a named math function, e.g., \\\\sin, \\\\cos\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} id Alternative string representation of the function.\n */\nBaseMethods.NamedFn = function(parser: TexParser, name: string, id: string) {\n  // @test Named Function\n  if (!id) {\n    id = name.substr(1);\n  }\n  const mml = parser.create('token', 'mi', {texClass: TEXCLASS.OP}, id);\n  parser.Push(parser.itemFactory.create('fn', mml));\n};\n\n\n/**\n * Handle a named math operator, e.g., \\\\min, \\\\lim\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} id Alternative string representation of the operator.\n */\nBaseMethods.NamedOp = function(parser: TexParser, name: string, id: string) {\n  // @test Limit\n  if (!id) {\n    id = name.substr(1);\n  }\n  id = id.replace(/&thinsp;/, '\\u2006');\n  const mml = parser.create('token', 'mo', {\n    movablelimits: true,\n    movesupsub: true,\n    form: TexConstant.Form.PREFIX,\n    texClass: TEXCLASS.OP\n  }, id);\n  parser.Push(mml);\n};\n\n/**\n * Handle a limits command for math operators.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} limits The limits arguments.\n */\nBaseMethods.Limits = function(parser: TexParser, _name: string, limits: string) {\n  // @test Limits\n  let op = parser.stack.Prev(true);\n  // Get the texclass for the core operator.\n  if (!op || (NodeUtil.getTexClass(NodeUtil.getCoreMO(op)) !== TEXCLASS.OP &&\n              NodeUtil.getProperty(op, 'movesupsub') == null)) {\n    // @test Limits Error\n    throw new TexError('MisplacedLimits', '%1 is allowed only on operators', parser.currentCS);\n  }\n  const top = parser.stack.Top();\n  let node;\n  if (NodeUtil.isType(op, 'munderover') && !limits) {\n    // @test Limits UnderOver\n    node = parser.create('node', 'msubsup');\n    NodeUtil.copyChildren(op, node);\n    op = top.Last = node;\n  } else if (NodeUtil.isType(op, 'msubsup') && limits) {\n    // @test Limits SubSup\n    // node = parser.create('node', 'munderover', NodeUtil.getChildren(op), {});\n    // Needs to be copied, otherwise we get an error in MmlNode.appendChild!\n    node = parser.create('node', 'munderover');\n    NodeUtil.copyChildren(op, node);\n    op = top.Last = node;\n  }\n  NodeUtil.setProperty(op, 'movesupsub', limits ? true : false);\n  NodeUtil.setProperties(NodeUtil.getCoreMO(op), {'movablelimits': false});\n  if (NodeUtil.getAttribute(op, 'movablelimits') ||\n      NodeUtil.getProperty(op, 'movablelimits')) {\n    NodeUtil.setProperties(op, {'movablelimits': false});\n  }\n};\n\n\n/**\n * Handle over commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} open The open delimiter in case of a \"withdelim\" version.\n * @param {string} close The close delimiter.\n */\nBaseMethods.Over = function(parser: TexParser, name: string, open: string, close: string) {\n  // @test Over\n  const mml = parser.itemFactory.create('over').setProperty('name', parser.currentCS) ;\n  if (open || close) {\n    // @test Choose\n    mml.setProperty('open', open);\n    mml.setProperty('close', close);\n  } else if (name.match(/withdelims$/)) {\n    // @test Over With Delims, Above With Delims\n    mml.setProperty('open', parser.GetDelimiter(name));\n    mml.setProperty('close', parser.GetDelimiter(name));\n  }\n  if (name.match(/^\\\\above/)) {\n    // @test Above, Above With Delims\n    mml.setProperty('thickness', parser.GetDimen(name));\n  }\n  else if (name.match(/^\\\\atop/) || open || close) {\n    // @test Choose\n    mml.setProperty('thickness', 0);\n  }\n  parser.Push(mml);\n};\n\n/**\n * Parses a fraction.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Frac = function(parser: TexParser, name: string) {\n  // @test Frac\n  const num = parser.ParseArg(name);\n  const den = parser.ParseArg(name);\n  const node = parser.create('node', 'mfrac', [num, den]);\n  parser.Push(node);\n};\n\n/**\n * Parses a square root element.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Sqrt = function(parser: TexParser, name: string) {\n  const n = parser.GetBrackets(name);\n  let arg = parser.GetArgument(name);\n  if (arg === '\\\\frac') {\n    arg  += '{' + parser.GetArgument(arg) + '}{' + parser.GetArgument(arg) + '}';\n  }\n  let mml = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n  if (!n) {\n    // @test Square Root\n    mml = parser.create('node', 'msqrt', [mml]);\n  } else {\n    // @test General Root\n    mml = parser.create('node', 'mroot', [mml, parseRoot(parser, n)]);\n  }\n  parser.Push(mml);\n};\n\n\n// Utility\n/**\n * Parse a general root.\n * @param {TexParser} parser The calling parser.\n * @param {string} n The index of the root.\n */\nfunction parseRoot(parser: TexParser, n: string) {\n  // @test General Root, Explicit Root\n  const env = parser.stack.env;\n  const inRoot = env['inRoot'];\n  env['inRoot'] = true;\n  const newParser = new TexParser(n, env, parser.configuration);\n  let node = newParser.mml();\n  const global = newParser.stack.global;\n  if (global['leftRoot'] || global['upRoot']) {\n    // @test Tweaked Root\n    const def: EnvList = {};\n    if (global['leftRoot']) {\n      def['width'] = global['leftRoot'];\n    }\n    if (global['upRoot']) {\n      def['voffset'] = global['upRoot'];\n      def['height'] = global['upRoot'];\n    }\n    node = parser.create('node', 'mpadded', [node], def);\n  }\n  env['inRoot'] = inRoot;\n  return node;\n}\n\n\n/**\n * Parse a general root.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Root = function(parser: TexParser, name: string) {\n  const n = parser.GetUpTo(name, '\\\\of');\n  const arg = parser.ParseArg(name);\n  const node = parser.create('node', 'mroot', [arg, parseRoot(parser, n)]);\n  parser.Push(node);\n};\n\n\n/**\n * Parses a movable index element in a root, e.g. \\\\uproot, \\\\leftroot\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} id Argument which should be a string representation of an integer.\n */\nBaseMethods.MoveRoot = function(parser: TexParser, name: string, id: string) {\n  // @test Tweaked Root\n  if (!parser.stack.env['inRoot']) {\n    // @test Misplaced Move Root\n    throw new TexError('MisplacedMoveRoot', '%1 can appear only within a root', parser.currentCS);\n  }\n  if (parser.stack.global[id]) {\n    // @test Multiple Move Root\n    throw new TexError('MultipleMoveRoot', 'Multiple use of %1', parser.currentCS);\n  }\n  let n = parser.GetArgument(name);\n  if (!n.match(/-?[0-9]+/)) {\n    // @test Incorrect Move Root\n    throw new TexError('IntegerArg', 'The argument to %1 must be an integer', parser.currentCS);\n  }\n  n = (parseInt(n, 10) / 15) + 'em';\n  if (n.substr(0, 1) !== '-') {\n    n = '+' + n;\n  }\n  parser.stack.global[id] = n;\n};\n\n\n/**\n * Handle accents.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} accent The accent.\n * @param {boolean} stretchy True if accent is stretchy.\n */\nBaseMethods.Accent = function(parser: TexParser, name: string, accent: string, stretchy: boolean) {\n  // @test Vector\n  const c = parser.ParseArg(name);\n  // @test Vector Font\n  const def = {...ParseUtil.getFontDef(parser), accent: true, mathaccent: true};\n  const entity = NodeUtil.createEntity(accent);\n  const moNode = parser.create('token', 'mo', def, entity);\n  const mml = moNode;\n  NodeUtil.setAttribute(mml, 'stretchy', stretchy ? true : false);\n  // @test Vector Op, Vector\n  const mo = (NodeUtil.isEmbellished(c) ? NodeUtil.getCoreMO(c) : c);\n  if (NodeUtil.isType(mo, 'mo') || NodeUtil.getProperty(mo, 'movablelimits')) {\n    // @test Vector Op\n    NodeUtil.setProperties(mo, {'movablelimits': false});\n  }\n  const muoNode = parser.create('node', 'munderover');\n  // This is necessary to get the empty element into the children.\n  NodeUtil.setChild(muoNode, 0, c);\n  NodeUtil.setChild(muoNode, 1, null);\n  NodeUtil.setChild(muoNode, 2, mml);\n  let texAtom = parser.create('node', 'TeXAtom', [muoNode]);\n  parser.Push(texAtom);\n};\n\n\n/**\n * Handles stacked elements.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} c Character to stack.\n * @param {boolean} stack True if stacked operator.\n */\nBaseMethods.UnderOver = function(parser: TexParser, name: string, c: string, stack: boolean) {\n  const entity = NodeUtil.createEntity(c);\n  const mo = parser.create('token', 'mo', {stretchy: true, accent: true}, entity);\n  const pos = (name.charAt(1) === 'o' ? 'over' : 'under');\n  const base = parser.ParseArg(name);\n  parser.Push(ParseUtil.underOver(parser, base, mo, pos, stack));\n};\n\n\n/**\n * Handles overset.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Overset = function(parser: TexParser, name: string) {\n  // @test Overset\n  const top = parser.ParseArg(name);\n  const base = parser.ParseArg(name);\n  ParseUtil.checkMovableLimits(base);\n  if (top.isKind('mo')) {\n    NodeUtil.setAttribute(top, 'accent', false);\n  }\n  const node = parser.create('node', 'mover', [base, top]);\n  parser.Push(node);\n};\n\n\n/**\n * Handles underset.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Underset = function(parser: TexParser, name: string) {\n  // @test Underset\n  const bot = parser.ParseArg(name);\n  const base = parser.ParseArg(name);\n  ParseUtil.checkMovableLimits(base);\n  if (bot.isKind('mo')) {\n    NodeUtil.setAttribute(bot, 'accent', false);\n  }\n  const node = parser.create('node', 'munder', [base, bot], {accentunder: false});\n  parser.Push(node);\n};\n\n\n/**\n * Handles overunderset.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Overunderset = function(parser: TexParser, name: string) {\n  const top = parser.ParseArg(name);\n  const bot = parser.ParseArg(name);\n  const base = parser.ParseArg(name);\n  ParseUtil.checkMovableLimits(base);\n  if (top.isKind('mo')) {\n    NodeUtil.setAttribute(top, 'accent', false);\n  }\n  if (bot.isKind('mo')) {\n    NodeUtil.setAttribute(bot, 'accent', false);\n  }\n  const node = parser.create('node', 'munderover', [base, bot, top], {accent: false, accentunder: false});\n  parser.Push(node);\n};\n\n\n/**\n * Creates TeXAtom, when class of element is changed explicitly.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} mclass The new TeX class.\n */\nBaseMethods.TeXAtom = function(parser: TexParser, name: string, mclass: number) {\n  let def: EnvList = {texClass: mclass};\n  let mml: StackItem | MmlNode;\n  let node: MmlNode;\n  let parsed: MmlNode;\n  if (mclass === TEXCLASS.OP) {\n    def['movesupsub'] = def['movablelimits'] = true;\n    const arg = parser.GetArgument(name);\n    const match = arg.match(/^\\s*\\\\rm\\s+([a-zA-Z0-9 ]+)$/);\n    if (match) {\n      // @test Mathop\n      def['mathvariant'] = TexConstant.Variant.NORMAL;\n      node = parser.create('token', 'mi', def, match[1]);\n    } else {\n      // @test Mathop Cal\n      parsed = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n      node = parser.create('node', 'TeXAtom', [parsed], def);\n    }\n    mml = parser.itemFactory.create('fn', node);\n  } else {\n    // @test Mathrel\n    parsed = parser.ParseArg(name);\n    mml = parser.create('node', 'TeXAtom', [parsed], def);\n  }\n  parser.Push(mml);\n};\n\n\n/**\n * Creates mmltoken elements. Used in Macro substitutions.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.MmlToken = function(parser: TexParser, name: string) {\n  // @test Modulo\n  const kind = parser.GetArgument(name);\n  let attr = parser.GetBrackets(name, '').replace(/^\\s+/, '');\n  const text = parser.GetArgument(name);\n  const def: EnvList = {};\n  const keep: string[] = [];\n  let node: MmlNode;\n  try {\n    node = parser.create('node', kind);\n  } catch (e) {\n    node = null;\n  }\n  if (!node || !node.isToken) {\n    // @test Token Illegal Type, Token Wrong Type\n    throw new TexError('NotMathMLToken', '%1 is not a token element', kind);\n  }\n  while (attr !== '') {\n    const match = attr.match(/^([a-z]+)\\s*=\\s*('[^']*'|\"[^\"]*\"|[^ ,]*)\\s*,?\\s*/i);\n    if (!match) {\n      // @test Token Invalid Attribute\n      throw new TexError('InvalidMathMLAttr', 'Invalid MathML attribute: %1', attr);\n    }\n    if (!node.attributes.hasDefault(match[1]) && !MmlTokenAllow[match[1]]) {\n      // @test Token Unknown Attribute, Token Wrong Attribute\n      throw new TexError('UnknownAttrForElement',\n                          '%1 is not a recognized attribute for %2',\n                          match[1], kind);\n    }\n    let value: string | boolean = ParseUtil.MmlFilterAttribute(\n      parser, match[1], match[2].replace(/^(['\"])(.*)\\1$/, '$2'));\n    if (value) {\n      if (value.toLowerCase() === 'true') {\n        value = true;\n      }\n      else if (value.toLowerCase() === 'false') {\n        value = false;\n      }\n      def[match[1]] = value;\n      keep.push(match[1]);\n    }\n    attr = attr.substr(match[0].length);\n  }\n  if (keep.length) {\n    def['mjx-keep-attrs'] = keep.join(' ');\n  }\n  const textNode = parser.create('text', text);\n  node.appendChild(textNode);\n  NodeUtil.setProperties(node, def);\n  parser.Push(node);\n};\n\n\n/**\n * Handle strut.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Strut = function(parser: TexParser, _name: string) {\n  // @test Strut\n  const row = parser.create('node', 'mrow');\n  const padded = parser.create('node', 'mpadded', [row],\n                                                         {height: '8.6pt', depth: '3pt', width: 0});\n  parser.Push(padded);\n};\n\n/**\n * Handle phantom commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} v Vertical size.\n * @param {string} h Horizontal size.\n */\nBaseMethods.Phantom = function(parser: TexParser, name: string, v: string, h: string) {\n  // @test Phantom\n  let box = parser.create('node', 'mphantom', [parser.ParseArg(name)]);\n  if (v || h) {\n    // TEMP: Changes here\n    box = parser.create('node', 'mpadded', [box]);\n    if (h) {\n      // @test Horizontal Phantom\n      NodeUtil.setAttribute(box, 'height', 0);\n      NodeUtil.setAttribute(box, 'depth', 0);\n    }\n    if (v) {\n      // @test Vertical Phantom\n      NodeUtil.setAttribute(box, 'width', 0);\n    }\n  }\n  const atom = parser.create('node', 'TeXAtom', [box]);\n  parser.Push(atom);\n};\n\n/**\n * Handle smash.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Smash = function(parser: TexParser, name: string) {\n  // @test Smash, Smash Top, Smash Bottom\n  const bt = ParseUtil.trimSpaces(parser.GetBrackets(name, ''));\n  const smash = parser.create('node', 'mpadded', [parser.ParseArg(name)]);\n  // TEMP: Changes here:\n  switch (bt) {\n  case 'b': NodeUtil.setAttribute(smash, 'depth', 0); break;\n  case 't': NodeUtil.setAttribute(smash, 'height', 0); break;\n  default:\n    NodeUtil.setAttribute(smash, 'height', 0);\n    NodeUtil.setAttribute(smash, 'depth', 0);\n  }\n  const atom = parser.create('node', 'TeXAtom', [smash]);\n  parser.Push(atom);\n};\n\n/**\n * Handle rlap and llap commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Lap = function(parser: TexParser, name: string) {\n  // @test Llap, Rlap\n  const mml = parser.create('node', 'mpadded', [parser.ParseArg(name)], {width: 0});\n  if (name === '\\\\llap') {\n    // @test Llap\n    NodeUtil.setAttribute(mml, 'lspace', '-1width');\n  }\n  const atom = parser.create('node', 'TeXAtom', [mml]);\n  parser.Push(atom);\n};\n\n/**\n * Handle raise and lower commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.RaiseLower = function(parser: TexParser, name: string) {\n  // @test Raise, Lower, Raise Negative, Lower Negative\n  let h = parser.GetDimen(name);\n  let item =\n    parser.itemFactory.create('position').setProperties({name: parser.currentCS, move: 'vertical'}) ;\n  // TEMP: Changes here:\n  if (h.charAt(0) === '-') {\n    // @test Raise Negative, Lower Negative\n    h = h.slice(1);\n    name = name.substr(1) === 'raise' ? '\\\\lower' : '\\\\raise';\n  }\n  if (name === '\\\\lower') {\n    // @test Raise, Raise Negative\n    item.setProperty('dh', '-' + h);\n    item.setProperty('dd', '+' + h);\n  } else {\n    // @test Lower, Lower Negative\n    item.setProperty('dh', '+' + h);\n    item.setProperty('dd', '-' + h);\n  }\n  parser.Push(item);\n};\n\n\n/**\n * Handle moveleft, moveright commands\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.MoveLeftRight = function(parser: TexParser, name: string) {\n  // @test Move Left, Move Right, Move Left Negative, Move Right Negative\n  let h = parser.GetDimen(name);\n  let nh = (h.charAt(0) === '-' ? h.slice(1) : '-' + h);\n  if (name === '\\\\moveleft') {\n    let tmp = h;\n    h = nh;\n    nh = tmp;\n  }\n  parser.Push(\n    parser.itemFactory.create('position').setProperties({\n      name: parser.currentCS, move: 'horizontal',\n      left:  parser.create('node', 'mspace', [], {width: h}),\n      right: parser.create('node', 'mspace', [], {width: nh})}) );\n};\n\n\n/**\n * Handle horizontal spacing commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Hskip = function(parser: TexParser, name: string) {\n  // @test Modulo\n  const node = parser.create('node', 'mspace', [],\n                             {width: parser.GetDimen(name)});\n  parser.Push(node);\n};\n\n\n/**\n * Handle removal of spaces in script modes\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Nonscript = function(parser: TexParser, _name: string) {\n  parser.Push(parser.itemFactory.create('nonscript'));\n};\n\n\n/**\n * Handle Rule and Space command\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} style The style of the rule spacer.\n */\nBaseMethods.Rule = function(parser: TexParser, name: string, style: string) {\n  // @test Rule 3D, Space 3D\n  const w = parser.GetDimen(name),\n  h = parser.GetDimen(name),\n  d = parser.GetDimen(name);\n  let def: EnvList = {width: w, height: h, depth: d};\n  if (style !== 'blank') {\n    def['mathbackground'] = (parser.stack.env['color'] || 'black');\n  }\n  const node = parser.create('node', 'mspace', [], def);\n  parser.Push(node);\n};\n\n\n/**\n * Handle rule command.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.rule = function(parser: TexParser, name: string) {\n  // @test Rule 2D\n  const v = parser.GetBrackets(name),\n  w = parser.GetDimen(name),\n  h = parser.GetDimen(name);\n  let mml = parser.create('node', 'mspace', [], {\n    width: w, height: h,\n    mathbackground: (parser.stack.env['color'] || 'black') });\n  if (v) {\n    mml = parser.create('node', 'mpadded', [mml], {voffset: v});\n    if (v.match(/^\\-/)) {\n      NodeUtil.setAttribute(mml, 'height', v);\n      NodeUtil.setAttribute(mml, 'depth', '+' + v.substr(1));\n    } else {\n      NodeUtil.setAttribute(mml, 'height', '+' + v);\n    }\n  }\n  parser.Push(mml);\n};\n\n/**\n * Handle big command sequences, e.g., \\\\big, \\\\Bigg.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} mclass The TeX class of the element.\n * @param {number} size The em size.\n */\nBaseMethods.MakeBig = function(parser: TexParser, name: string, mclass: number, size: number) {\n  // @test Choose, Over With Delims, Above With Delims\n  size *= P_HEIGHT;\n  let sizeStr = String(size).replace(/(\\.\\d\\d\\d).+/, '$1') + 'em';\n  const delim = parser.GetDelimiter(name, true);\n  const mo = parser.create('token', 'mo', {\n    minsize: sizeStr, maxsize: sizeStr,\n    fence: true, stretchy: true, symmetric: true\n  }, delim);\n  const node = parser.create('node', 'TeXAtom', [mo], {texClass: mclass});\n  parser.Push(node);\n};\n\n\n/**\n * Handle buildrel command.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.BuildRel = function(parser: TexParser, name: string) {\n  // @test BuildRel, BuildRel Expression\n  const top = parser.ParseUpTo(name, '\\\\over');\n  const bot = parser.ParseArg(name);\n  const node = parser.create('node', 'munderover');\n  // This is necessary to get the empty element into the children.\n  NodeUtil.setChild(node, 0, bot);\n  NodeUtil.setChild(node, 1, null);\n  NodeUtil.setChild(node, 2, top);\n  const atom = parser.create('node', 'TeXAtom', [node], {texClass: TEXCLASS.REL});\n  parser.Push(atom);\n};\n\n\n/**\n * Handle horizontal boxes.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} style Box style.\n * @param {string} font The mathvariant to use\n */\nBaseMethods.HBox = function(parser: TexParser, name: string, style: string, font?: string) {\n  // @test Hbox\n  parser.PushAll(ParseUtil.internalMath(parser, parser.GetArgument(name), style, font));\n};\n\n/**\n * Handle framed boxes.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.FBox = function(parser: TexParser, name: string) {\n  // @test Fbox\n  const internal = ParseUtil.internalMath(parser, parser.GetArgument(name));\n  const node = parser.create('node', 'menclose', internal, {notation: 'box'});\n  parser.Push(node);\n};\n\n/**\n * Handle framed boxes with options.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.FrameBox = function(parser: TexParser, name: string) {\n  const width = parser.GetBrackets(name);\n  const pos = parser.GetBrackets(name) || 'c';\n  let mml = ParseUtil.internalMath(parser, parser.GetArgument(name));\n  if (width) {\n    mml = [parser.create('node', 'mpadded', mml, {\n      width,\n      'data-align': lookup(pos, {l: 'left', r: 'right'}, 'center')\n    })];\n  }\n  const node = parser.create('node', 'TeXAtom',\n                             [parser.create('node', 'menclose', mml, {notation: 'box'})],\n                             {texClass: TEXCLASS.ORD});\n  parser.Push(node);\n};\n\n\n/**\n * Handle \\\\not.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Not = function(parser: TexParser, _name: string) {\n  // @test Negation Simple, Negation Complex, Negation Explicit,\n  //       Negation Large\n  parser.Push(parser.itemFactory.create('not'));\n};\n\n\n/**\n * Handle dots.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Dots = function(parser: TexParser, _name: string) {\n  // @test Operator Dots\n  const ldotsEntity = NodeUtil.createEntity('2026');\n  const cdotsEntity = NodeUtil.createEntity('22EF');\n  const ldots = parser.create('token', 'mo', {stretchy: false}, ldotsEntity);\n  const cdots = parser.create('token', 'mo', {stretchy: false}, cdotsEntity);\n  parser.Push(\n    parser.itemFactory.create('dots').setProperties({\n      ldots: ldots,\n      cdots: cdots\n    }) );\n};\n\n\n/**\n * Handle small matrix environments.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} open Opening fence.\n * @param {string} close Closing fence.\n * @param {string} align Column alignment.\n * @param {string} spacing Column spacing.\n * @param {string} vspacing Row spacing.\n * @param {string} style Display or text style.\n * @param {boolean} cases Is it a cases environment.\n * @param {boolean} numbered Is it a numbered environment.\n */\nBaseMethods.Matrix = function(parser: TexParser, _name: string,\n                              open: string, close: string, align: string,\n                              spacing: string, vspacing: string, style: string,\n                              cases: boolean, numbered: boolean) {\n  const c = parser.GetNext();\n  if (c === '') {\n    // @test Matrix Error\n    throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n  }\n  if (c === '{') {\n    // @test Matrix Braces, Matrix Columns, Matrix Rows.\n    parser.i++;\n  } else {\n    // @test Matrix Arg\n    parser.string = c + '}' + parser.string.slice(parser.i + 1);\n    parser.i = 0;\n  }\n  // @test Matrix Braces, Matrix Columns, Matrix Rows.\n  const array = parser.itemFactory.create('array').setProperty('requireClose', true) as sitem.ArrayItem;\n  array.arraydef = {\n    rowspacing: (vspacing || '4pt'),\n    columnspacing: (spacing || '1em')\n  };\n  if (cases) {\n    // @test Matrix Cases\n    array.setProperty('isCases', true);\n  }\n  if (numbered) {\n    // @test Matrix Numbered\n    array.setProperty('isNumbered', true);\n    array.arraydef.side = numbered;\n  }\n  if (open || close) {\n    // @test Matrix Parens, Matrix Parens Subscript, Matrix Cases\n    array.setProperty('open', open);\n    array.setProperty('close', close);\n  }\n  if (style === 'D') {\n    // @test Matrix Numbered\n    array.arraydef.displaystyle = true;\n  }\n  if (align != null) {\n    // @test Matrix Cases, Matrix Numbered\n    array.arraydef.columnalign = align;\n  }\n  parser.Push(array);\n};\n\n\n/**\n * Handle array entry.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Entry = function(parser: TexParser, name: string) {\n  // @test Label, Array, Cross Product Formula\n  parser.Push(parser.itemFactory.create('cell').setProperties({isEntry: true, name: name}));\n  const top = parser.stack.Top();\n  const env = top.getProperty('casesEnv') as string;\n  const cases = top.getProperty('isCases');\n  if (!cases && !env) return;\n  //\n  //  Make second column be in \\text{...} (unless it is already\n  //  in a \\text{...}, for backward compatibility).\n  //\n  const str = parser.string;\n  let braces = 0, close = -1, i = parser.i, m = str.length;\n  const end = (env ? new RegExp(`^\\\\\\\\end\\\\s*\\\\{${env.replace(/\\*/, '\\\\*')}\\\\}`) : null);\n  //\n  //  Look through the string character by character...\n  //\n  while (i < m) {\n    const c = str.charAt(i);\n    if (c === '{') {\n      //\n      //  Increase the nested brace count and go on\n      //\n      braces++;\n      i++;\n    } else if (c === '}') {\n      //\n      //  If there are too many close braces, just end (we will get an\n      //    error message later when the rest of the string is parsed)\n      //  Otherwise\n      //    decrease the nested brace count,\n      //    if it is now zero and we haven't already marked the end of the\n      //      first brace group, record the position (use to check for \\text{} later)\n      //    go on to the next character.\n      //\n      if (braces === 0) {\n        m = 0;\n      } else {\n        braces--;\n        if (braces === 0 && close < 0) {\n          close = i - parser.i;\n        }\n        i++;\n      }\n    } else if (c === '&' && braces === 0) {\n      //\n      //  Extra alignment tabs are not allowed in cases\n      //\n      // @test ExtraAlignTab\n      throw new TexError('ExtraAlignTab', 'Extra alignment tab in \\\\cases text');\n    } else if (c === '\\\\') {\n      //\n      //  If the macro is \\cr or \\\\, end the search, otherwise skip the macro\n      //  (multi-letter names don't matter, as we will skip the rest of the\n      //   characters in the main loop)\n      //\n      const rest = str.substr(i);\n      if (rest.match(/^((\\\\cr)[^a-zA-Z]|\\\\\\\\)/) || (end && rest.match(end))) {\n        m = 0;\n      } else {\n        i += 2;\n      }\n    } else {\n      //\n      //  Go on to the next character\n      //\n      i++;\n    }\n  }\n  //\n  //  Check if the second column text is already in \\text{};\n  //  If not, process the second column as text and continue parsing from there,\n  //    (otherwise process the second column as normal, since it is in \\text{}\n  //\n  const text = str.substr(parser.i, i - parser.i);\n  if (!text.match(/^\\s*\\\\text[^a-zA-Z]/) || close !== text.replace(/\\s+$/, '').length - 1) {\n    const internal = ParseUtil.internalMath(parser, ParseUtil.trimSpaces(text), 0);\n    parser.PushAll(internal);\n    parser.i = i;\n  }\n};\n\n/**\n * Handle newline in array.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.Cr = function(parser: TexParser, name: string) {\n  // @test Cr Linebreak, Misplaced Cr\n  parser.Push(\n    parser.itemFactory.create('cell').setProperties({isCR: true, name: name}));\n};\n\n\n/**\n * Handle newline outside array.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean} nobrackets Flag indicating if newline is followed by\n *     brackets.\n */\nBaseMethods.CrLaTeX = function(parser: TexParser, name: string, nobrackets: boolean = false) {\n  let n: string;\n  if (!nobrackets) {\n    // TODO: spaces before * and [ are not allowed in AMS environments like align, but\n    //       should be allowed in array and eqnarray.  This distinction should be honored here.\n    if (parser.string.charAt(parser.i) === '*') {  // The * controls page breaking, so ignore it\n      parser.i++;\n    }\n    if (parser.string.charAt(parser.i) === '[') {\n      let dim = parser.GetBrackets(name, '');\n      let [value, unit, ] = ParseUtil.matchDimen(dim);\n      // @test Custom Linebreak\n      if (dim && !value) {\n        // @test Dimension Error\n        throw new TexError('BracketMustBeDimension',\n                           'Bracket argument to %1 must be a dimension', parser.currentCS);\n      }\n      n = value + unit;\n    }\n  }\n  parser.Push(\n    parser.itemFactory.create('cell').setProperties({isCR: true, name: name, linebreak: true})\n  );\n  const top = parser.stack.Top();\n  let node: MmlNode;\n  if (top instanceof sitem.ArrayItem) {\n    // @test Array\n    if (n) {\n      top.addRowSpacing(n);\n    }\n  } else {\n    if (n) {\n      // @test Custom Linebreak\n      node = parser.create('node', 'mspace', [], {depth: n});\n      parser.Push(node);\n    }\n    // @test Linebreak\n    node = parser.create('node', 'mspace', [], {linebreak: TexConstant.LineBreak.NEWLINE});\n    parser.Push(node);\n  }\n};\n\n/**\n * Handle horizontal lines in arrays.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} style Style of the line. E.g., dashed.\n */\nBaseMethods.HLine = function(parser: TexParser, _name: string, style: string) {\n  if (style == null) {\n    style = 'solid';\n  }\n  const top = parser.stack.Top();\n  if (!(top instanceof sitem.ArrayItem) || top.Size()) {\n    // @test Misplaced hline\n    throw new TexError('Misplaced', 'Misplaced %1', parser.currentCS);\n  }\n  if (!top.table.length) {\n    // @test Enclosed top, Enclosed top bottom\n    top.frame.push('top');\n  } else {\n    // @test Enclosed bottom, Enclosed top bottom\n    const lines = (top.arraydef['rowlines'] ? (top.arraydef['rowlines'] as string).split(/ /) : []);\n    while (lines.length < top.table.length) {\n      lines.push('none');\n    }\n    lines[top.table.length - 1] = style;\n    top.arraydef['rowlines'] = lines.join(' ');\n  }\n};\n\n\n/**\n * Handle hfill commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.HFill = function(parser: TexParser, _name: string) {\n  const top = parser.stack.Top();\n  if (top instanceof sitem.ArrayItem) {\n    // @test Hfill\n    top.hfill.push(top.Size());\n  } else {\n    // @test UnsupportedHFill\n    throw new TexError('UnsupportedHFill', 'Unsupported use of %1', parser.currentCS);\n  }\n};\n\n\n/**\n *   LaTeX environments\n */\n\n/**\n * Handle begin and end environments. This is a macro method.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.BeginEnd = function(parser: TexParser, name: string) {\n  // @test Array1, Array2, Array Test\n  let env = parser.GetArgument(name);\n  if (env.match(/\\\\/i)) {\n    // @test InvalidEnv\n    throw new TexError('InvalidEnv', 'Invalid environment name \\'%1\\'', env);\n  }\n  let macro = parser.configuration.handlers.get('environment').lookup(env) as Macro;\n  if (macro && name === '\\\\end') {\n    // If the first argument is true, we have some sort of user defined\n    // environment. Otherwise we have a standard LaTeX environment that is\n    // handled with begin and end items.\n    if (!macro.args[0]) {\n      const mml = parser.itemFactory.create('end').setProperty('name', env);\n      parser.Push(mml);\n      return;\n    }\n    // Remember the user defined environment we are closing.\n    parser.stack.env['closing'] = env;\n  }\n  ParseUtil.checkMaxMacros(parser, false);\n  parser.parse('environment', [parser, env]);\n};\n\n\n/**\n * Handle array environment.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {string} open Opening fence.\n * @param {string} close Closing fence.\n * @param {string} align Column alignment.\n * @param {string} spacing Column spacing.\n * @param {string} vspacing Row spacing.\n * @param {string} style Display or text style.\n * @param {boolean} raggedHeight Does the height need to be adjusted?\n */\nBaseMethods.Array = function(parser: TexParser, begin: StackItem,\n                             open: string, close: string, align: string,\n                             spacing: string, vspacing: string, style: string,\n                             raggedHeight: boolean) {\n  if (!align) {\n    // @test Array Single\n    align = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n  }\n  let lines = ('c' + align).replace(/[^clr|:]/g, '').replace(/[^|:]([|:])+/g, '$1');\n  align = align.replace(/[^clr]/g, '').split('').join(' ');\n  align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');\n  const array = parser.itemFactory.create('array') as sitem.ArrayItem;\n  array.arraydef = {\n    columnalign: align,\n    columnspacing: (spacing || '1em'),\n    rowspacing: (vspacing || '4pt')\n  };\n  if (lines.match(/[|:]/)) {\n    // @test Enclosed left right\n    if (lines.charAt(0).match(/[|:]/)) {\n      // @test Enclosed left right, Enclosed left\n      array.frame.push('left');\n      array.dashed = lines.charAt(0) === ':';\n    }\n    if (lines.charAt(lines.length - 1).match(/[|:]/)) {\n      // @test Enclosed left right, Enclosed right\n      array.frame.push('right');\n    }\n    // @test Enclosed left right\n    lines = lines.substr(1, lines.length - 2);\n    array.arraydef.columnlines =\n      lines.split('').join(' ').replace(/[^|: ]/g, 'none').replace(/\\|/g, 'solid').replace(/:/g, 'dashed');\n  }\n  if (open)  {\n    // @test Cross Product\n    array.setProperty('open', parser.convertDelimiter(open));\n  }\n  if (close) {\n    // @test Cross Product\n    array.setProperty('close', parser.convertDelimiter(close));\n  }\n  if ((style || '').charAt(1) === '\\'') {\n    array.arraydef['data-cramped'] = true;\n    style = style.charAt(0);\n  }\n  if (style === 'D') {\n    // TODO: This case never seems to occur! No test.\n    array.arraydef['displaystyle'] = true;\n  }\n  else if (style) {\n    // @test Subarray, Small Matrix\n    array.arraydef['displaystyle'] = false;\n  }\n  if (style === 'S') {\n    // @test Subarray, Small Matrix\n    array.arraydef['scriptlevel'] = 1;\n  }\n  if (raggedHeight)  {\n    // @test Subarray, Small Matrix\n    array.arraydef['useHeight'] = false;\n  }\n  parser.Push(begin);\n  return array;\n};\n\n\n/**\n * Handle aligned arrays.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n */\nBaseMethods.AlignedArray = function(parser: TexParser, begin: StackItem) {\n  // @test Array1, Array2, Array Test\n  const align = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n  let item = BaseMethods.Array(parser, begin);\n  return ParseUtil.setArrayAlign(item as sitem.ArrayItem, align);\n};\n\n\n/**\n * Handle equation environment.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered True if environment is numbered.\n */\nBaseMethods.Equation = function (parser: TexParser, begin: StackItem, numbered: boolean) {\n  parser.Push(begin);\n  ParseUtil.checkEqnEnv(parser);\n  return parser.itemFactory.create('equation', numbered).\n    setProperty('name', begin.getName());\n};\n\n\n/**\n * Handle eqnarray.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered True if environment is numbered.\n * @param {boolean} taggable True if taggable.\n * @param {string} align Alignment string.\n * @param {string} spacing Spacing between columns.\n */\nBaseMethods.EqnArray = function(parser: TexParser, begin: StackItem,\n                                numbered: boolean, taggable: boolean,\n                                align: string, spacing: string) {\n  // @test The Lorenz Equations, Maxwell's Equations, Cubic Binomial\n  parser.Push(begin);\n  if (taggable) {\n    ParseUtil.checkEqnEnv(parser);\n  }\n  align = align.replace(/[^clr]/g, '').split('').join(' ');\n  align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');\n  let newItem = parser.itemFactory.create('eqnarray', begin.getName(),\n                                          numbered, taggable, parser.stack.global) as sitem.ArrayItem;\n  newItem.arraydef = {\n    displaystyle: true,\n    columnalign: align,\n    columnspacing: (spacing || '1em'),\n    rowspacing: '3pt',\n    side: parser.options['tagSide'],\n    minlabelspacing: parser.options['tagIndent']\n  };\n  return newItem;\n};\n\n\n/**\n * Handles no tag commands.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.HandleNoTag = function(parser: TexParser, _name: string) {\n  parser.tags.notag();\n};\n\n\n/**\n * Record a label name for a tag\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.HandleLabel = function(parser: TexParser, name: string) {\n  // @test Label, Label Empty\n  let label = parser.GetArgument(name);\n  if (label === '') {\n    // @test Label Empty\n    return;\n  }\n  if (!parser.tags.refUpdate) {\n    // @test Label, Ref, Ref Unknown\n    if (parser.tags.label) {\n      // @test Double Label Error\n      throw new TexError('MultipleCommand', 'Multiple %1', parser.currentCS);\n    }\n    parser.tags.label = label;\n    if ((parser.tags.allLabels[label] || parser.tags.labels[label]) && !parser.options['ignoreDuplicateLabels']) {\n      // @ Duplicate Label Error\n      throw new TexError('MultipleLabel', 'Label \\'%1\\' multiply defined', label);\n    }\n    // TODO: This should be set in the tags structure!\n    parser.tags.labels[label] = new Label(); // will be replaced by tag value later\n  }\n};\n\n\n/**\n * Handle a label reference.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean} eqref True if formatted as eqref.\n */\nBaseMethods.HandleRef = function(parser: TexParser, name: string, eqref: boolean) {\n  // @test Ref, Ref Unknown, Eqref, Ref Default, Ref Named\n  let label = parser.GetArgument(name);\n  let ref = parser.tags.allLabels[label] || parser.tags.labels[label];\n  if (!ref) {\n    // @test Ref Unknown\n    if (!parser.tags.refUpdate) {\n      parser.tags.redo = true;\n    }\n    ref = new Label();\n  }\n  let tag = ref.tag;\n  if (eqref) {\n    // @test Eqref\n    tag = parser.tags.formatTag(tag);\n  }\n  let node = parser.create('node', 'mrow', ParseUtil.internalMath(parser, tag), {\n    href: parser.tags.formatUrl(ref.id, parser.options.baseURL), 'class': 'MathJax_ref'\n  });\n  parser.Push(node);\n};\n\n\n\n/**\n * Macros\n */\nBaseMethods.Macro = function(parser: TexParser, name: string,\n                             macro: string, argcount: number,\n                             def?: string) {\n  if (argcount) {\n    const args: string[] = [];\n    if (def != null) {\n      const optional = parser.GetBrackets(name);\n      args.push(optional == null ? def : optional);\n    }\n    for (let i = args.length; i < argcount; i++) {\n      args.push(parser.GetArgument(name));\n    }\n    macro = ParseUtil.substituteArgs(parser, args, macro);\n  }\n  parser.string = ParseUtil.addArgs(parser, macro, parser.string.slice(parser.i));\n  parser.i = 0;\n  ParseUtil.checkMaxMacros(parser);\n};\n\n\n/**\n * Handle MathChoice for elements whose exact size/style properties can only be\n * determined after the expression has been parsed.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nBaseMethods.MathChoice = function(parser: TexParser, name: string) {\n  const D  = parser.ParseArg(name);\n  const T  = parser.ParseArg(name);\n  const S  = parser.ParseArg(name);\n  const SS = parser.ParseArg(name);\n  parser.Push(parser.create('node', 'MathChoice', [D, T, S, SS]));\n};\n\n\nexport default BaseMethods;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,QAAA,wCAAwC;AAIxC,IAAA,gBAAA,2CAAsC;AACtC,IAAA,gBAAA,2CAAsC;AACtC,IAAA,iBAAA,4CAAwC;AACxC,IAAA,kDAA+C;AAC/C,IAAA,iBAAA,4CAAwC;AACxC,IAAA,2DAAmE;AAGnE,IAAA,kCAAiC;AACjC,IAAA,mDAA4C;AAC5C,IAAA,qDAAmD;AACnD,IAAA,mDAAgD;AAIhD,IAAI,WAAW,GAAgC,CAAA,CAAE,CAAC;AAElD,IAAM,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;AAC3B,IAAM,aAAa,GAA4B;IAC7C,UAAU,EAAE,CAAC;IAAE,QAAQ,EAAE,CAAC;IAAE,UAAU,EAAE,CAAC;IAAE,SAAS,EAAE,CAAC;IACvD,KAAK,EAAE,CAAC;IAAE,UAAU,EAAE,CAAC;IACvB,EAAE,EAAE,CAAC;IAAE,OAAO,EAAE,CAAC;IAAE,IAAI,EAAE,CAAC;IAAE,KAAK,EAAE,CAAC;CACrC,CAAC;AAaF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,EAAU;IAEvD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC;AAOF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,EAAU;IAExD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC;AAQF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,EAAU;IAExD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,CAAA,CAAE,EAAE,cAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC;AAOF,WAAW,CAAC,KAAK,GAAG,SAAS,OAAkB,EAAE,EAAU,GAAG,CAAC,CAAC;AAOhE,WAAW,CAAC,WAAW,GAAG,SAAS,MAAiB,EAAE,EAAU;;IAC9D,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAEhC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GACnD,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAC5C;IACD,IAAI,MAAe,CAAC;IACpB,IAAI,IAAoB,CAAC;IACzB,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC/B,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;QAEvB,KAAA,OAAiB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAA,EAAA,EAA3B,IAAI,GAAA,EAAA,CAAA,EAAA,EAAE,MAAM,GAAA,EAAA,CAAA,EAAA,CAAgB;QAC7B,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;KACpB,MAAM;QAEL,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,EAAE;YAET,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,CAAA,CAAE,EAAE,EAAE,CAAC,CAAC;SAC7C;KACF;IACD,IAAM,UAAU,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC5D,IAAI,QAAQ,GAAG,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAE,IAAmB,CAAC,GAAG,CAAC,CAAC,CACzE,IAAsB,CAAC,IAAI,CAAC;IAC/B,IAAI,AAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAClE,cAAA,OAAQ,CAAC,UAAU,CAAC,IAAI,EAAG,IAAmB,CAAC,GAAG,CAAC,CAAC,GACpD,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IACtE,cAAA,OAAQ,CAAC,UAAU,CAAC,IAAI,EAAG,IAAsB,CAAC,IAAI,CAAC,IACvD,CAAC,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAE;QAE7C,MAAM,IAAI,cAAA,OAAQ,CAAC,gBAAgB,EAAE,wCAAwC,CAAC,CAAC;KAChF;IACD,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;QACtE,IAAI,UAAU,EAAE;YAEd,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IACtE,cAAA,OAAQ,CAAC,UAAU,CAAC,IAAI,EAAG,IAAsB,CAAC,IAAI,CAAC,EAAE;gBAE3D,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE;oBAAC,IAAI;iBAAC,EAAE;oBAAC,UAAU,EAAE,IAAI;gBAAA,CAAC,CAAC,CAAC;aACxE;YACD,QAAQ,GAAI,IAAsB,CAAC,IAAI,CAAC;SACzC,MAAM;YAEL,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAAC,IAAI;aAAC,CAAC,CAAC;YAChD,QAAQ,GAAI,IAAmB,CAAC,GAAG,CAAC;SACrC;KACF;IACD,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,aAAa,CAAC;QACtD,QAAQ,EAAE,QAAQ;QAAE,MAAM,EAAE,MAAM;QAAE,UAAU,EAAE,UAAU;KAC3D,CAAC,CAAE,CAAC;AACT,CAAC,CAAC;AAQF,WAAW,CAAC,SAAS,GAAG,SAAS,MAAiB,EAAE,EAAU;;IAC5D,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAEhC,MAAM,CAAC,MAAM,GACX,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAC3C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KACtC;IACD,IAAI,MAAM,EAAE,IAAI,CAAC;IACjB,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC/B,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;QAEvB,KAAA,OAAiB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAA,EAAA,EAA3B,IAAI,GAAA,EAAA,CAAA,EAAA,EAAE,MAAM,GAAA,EAAA,CAAA,EAAA,CAAgB;QAC7B,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;KACpB,MAAM;QACL,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,EAAE;YAET,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,CAAA,CAAE,EAAE,EAAE,CAAC,CAAC;SAC7C;KACF;IACD,IAAM,UAAU,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC5D,IAAI,QAAQ,GAAG,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAC9C,IAAmB,CAAC,GAAG,CAAC,CAAC,CAAE,IAAsB,CAAC,KAAK,CAAC;IAC3D,IAAI,AAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAClE,cAAA,OAAQ,CAAC,UAAU,CAAC,IAAI,EAAG,IAAmB,CAAC,GAAG,CAAC,CAAC,GACpD,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IACtE,cAAA,OAAQ,CAAC,UAAU,CAAC,IAAI,EAAG,IAAsB,CAAC,KAAK,CAAC,IACxD,CAAC,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAE;QAE7C,MAAM,IAAI,cAAA,OAAQ,CAAC,kBAAkB,EAAE,0CAA0C,CAAC,CAAC;KACpF;IACD,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE;QACtE,IAAI,UAAU,EAAE;YAEd,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IACtE,cAAA,OAAQ,CAAC,UAAU,CAAC,IAAI,EAAG,IAAsB,CAAC,KAAK,CAAC,EAAE;gBAE5D,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE;oBAAC,IAAI;iBAAC,EAAE;oBAAC,UAAU,EAAE,IAAI;gBAAA,CAAC,CAAC,CAAC;aACxE;YACD,QAAQ,GAAI,IAAsB,CAAC,KAAK,CAAC;SAC1C,MAAM;YAEL,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAAC,IAAI;aAAC,CAAC,CAAC;YAChD,QAAQ,GAAI,IAAmB,CAAC,GAAG,CAAC;SACrC;KACF;IACD,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,aAAa,CAAC;QACtD,QAAQ,EAAE,QAAQ;QAAE,MAAM,EAAE,MAAM;QAAE,UAAU,EAAE,UAAU;KAC3D,CAAC,CAAE,CAAC;AACT,CAAC,CAAC;AAQF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,CAAS;IAEvD,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC/B,IAAI,CAAC,IAAI,EAAE;QAET,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KACpC;IACD,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,cAAA,OAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAClE,cAAA,OAAQ,CAAC,UAAU,CAAC,IAAI,EAAG,IAAmB,CAAC,GAAG,CAAC,EAAE;QAEvD,MAAM,IAAI,cAAA,OAAQ,CAAC,qBAAqB,EACpB,qDAAqD,CAAC,CAAC;KAC5E;IACD,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,CAAC,EAAE,CAAC;IACX,GAAG;QAED,GAAG,IAAI,cAAA,QAAQ,CAAC,KAAK,CAAC;QAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;KACzD,OAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,cAAA,QAAQ,CAAC,KAAK,CAAE;IAC7C,GAAG,GAAG;QAAC,EAAE;QAAE,QAAQ;QAAE,QAAQ;QAAE,QAAQ;QAAE,QAAQ;KAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC;IACtE,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;QAAC,WAAW,EAAE,IAAI;IAAA,CAAC,EAAE,GAAG,CAAC,CAAC;IACpE,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAAE,CAAC;AACrD,CAAC,CAAC;AAQF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,EAAU;IAC1D,MAAO,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAE;QACjF,MAAM,CAAC,CAAC,EAAE,CAAC;KACZ;AACH,CAAC,CAAC;AAQF,WAAW,CAAC,IAAI,GAAG,SAAS,OAAkB,EAAE,EAAU;IAExD,MAAM,IAAI,cAAA,OAAQ,CAAC,cAAc,EACb,6DAA6D,CAAC,CAAC;AACrF,CAAC,CAAC;AAcF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,OAAe;IAC9E,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,IAAI,GAAG,GAAG,IAAI,eAAA,OAAS,CAAC,IAAI,EAAA,SAAA,SAAA,CAAA,GACvB,MAAM,CAAC,KAAK,CAAC,GAAG,GAAA;QACnB,IAAI,EAAE,OAAO;QACb,sBAAsB,EAAE,YAAmB;QAC3C,QAAQ,EAAE,IAAI;IAAA,IACb,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;IAC/B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,GAAG;KAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC;AAQF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,KAAa,EAAE,IAAY;IAC3E,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;AAClC,CAAC,CAAC;AAUF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,KAAa,EAChC,QAAgB,EAAE,KAAc,EAChC,KAAa;IAC3C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC;IACrC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IAClC,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAC5C,QAAQ,EAAE;QAAC,YAAY,EAAE,KAAK;QAAE,WAAW,EAAE,KAAK;IAAA,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC;AASF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,KAAa,EAAE,IAAY;IAC3E,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IAChC,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE;QAAC,QAAQ,EAAE,CAAA,GAAA,aAAA,EAAE,EAAC,IAAI,CAAC;IAAA,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC;AAQF,WAAW,CAAC,MAAM,GAAG,SAAS,MAAiB,EAAE,KAAa,EAAE,KAAa;IAE3E,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;QAAC,KAAK,EAAE,CAAA,GAAA,aAAA,EAAE,EAAC,KAAK,CAAC;IAAA,CAAC,CAAC,CAAC;IACrE,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;QAAC,IAAI;KAAC,EAAE;QAAC,WAAW,EAAE,CAAC;IAAA,CAAC,CAAC,CAAC;IACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,CAAC,CAAC;AAQF,WAAW,CAAC,SAAS,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE9D,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AACnG,CAAC,CAAC;AAQF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,EAAU;IAExE,IAAI,CAAC,EAAE,EAAE;QACP,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KACrB;IACD,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;QAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,EAAE;IAAA,CAAC,EAAE,EAAE,CAAC,CAAC;IACtE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC;AASF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,EAAU;IAExE,IAAI,CAAC,EAAE,EAAE;QACP,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KACrB;IACD,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACtC,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;QACvC,aAAa,EAAE,IAAI;QACnB,UAAU,EAAE,IAAI;QAChB,IAAI,EAAE,kBAAA,WAAW,CAAC,IAAI,CAAC,MAAM;QAC7B,QAAQ,EAAE,aAAA,QAAQ,CAAC,EAAE;KACtB,EAAE,EAAE,CAAC,CAAC;IACP,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC;AAQF,WAAW,CAAC,MAAM,GAAG,SAAS,MAAiB,EAAE,KAAa,EAAE,MAAc;IAE5E,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEjC,IAAI,CAAC,EAAE,IAAI,AAAC,cAAA,OAAQ,CAAC,WAAW,CAAC,cAAA,OAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,KAAK,aAAA,QAAQ,CAAC,EAAE,IAC5D,cAAA,OAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,YAAY,CAAC,IAAI,IAAI,CAAC,CAAE;QAE3D,MAAM,IAAI,cAAA,OAAQ,CAAC,iBAAiB,EAAE,iCAAiC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KAC5F;IACD,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC/B,IAAI,IAAI,CAAC;IACT,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE;QAEhD,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACxC,cAAA,OAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAChC,EAAE,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;KACtB,MAAM,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,IAAI,MAAM,EAAE;QAInD,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAC3C,cAAA,OAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAChC,EAAE,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;KACtB;IACD,cAAA,OAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC9D,cAAA,OAAQ,CAAC,aAAa,CAAC,cAAA,OAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;QAAC,eAAe,EAAE,KAAK;IAAA,CAAC,CAAC,CAAC;IACzE,IAAI,cAAA,OAAQ,CAAC,YAAY,CAAC,EAAE,EAAE,eAAe,CAAC,IAC1C,cAAA,OAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,eAAe,CAAC,EAAE;QAC7C,cAAA,OAAQ,CAAC,aAAa,CAAC,EAAE,EAAE;YAAC,eAAe,EAAE,KAAK;QAAA,CAAC,CAAC,CAAC;KACtD;AACH,CAAC,CAAC;AAUF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,IAAY,EAAE,KAAa;IAEtF,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,CAAC,CAAE;IACrF,IAAI,IAAI,IAAI,KAAK,EAAE;QAEjB,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9B,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACjC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;QAEpC,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KACrD;IACD,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;QAE1B,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;KACrD,MACI,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,KAAK,EAAE;QAE/C,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;KACjC;IACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC;AAOF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY;IAEzD,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE;QAAC,GAAG;QAAE,GAAG;KAAC,CAAC,CAAC;IACxD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAOF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY;IACzD,IAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,GAAG,KAAK,QAAQ,EAAE;QACpB,GAAG,IAAK,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KAC9E;IACD,IAAI,GAAG,GAAG,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3E,IAAI,CAAC,CAAC,EAAE;QAEN,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE;YAAC,GAAG;SAAC,CAAC,CAAC;KAC7C,MAAM;QAEL,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE;YAAC,GAAG;YAAE,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;SAAC,CAAC,CAAC;KACnE;IACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC;AASF,SAAS,SAAS,CAAC,MAAiB,EAAE,CAAS;IAE7C,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;IAC7B,IAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7B,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;IACrB,IAAM,SAAS,GAAG,IAAI,eAAA,OAAS,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;IAC9D,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;IAC3B,IAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC;IACtC,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;QAE1C,IAAM,GAAG,GAAY,CAAA,CAAE,CAAC;QACxB,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE;YACtB,GAAG,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;SACnC;QACD,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;YACpB,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClC,GAAG,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;SAClC;QACD,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,IAAI;SAAC,EAAE,GAAG,CAAC,CAAC;KACtD;IACD,GAAG,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;IACvB,OAAO,IAAI,CAAC;AACd,CAAC;AAQD,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY;IACzD,IAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACvC,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE;QAAC,GAAG;QAAE,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;KAAC,CAAC,CAAC;IACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AASF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,EAAU;IAEzE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;QAE/B,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAAE,kCAAkC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KAC/F;IACD,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;QAE3B,MAAM,IAAI,cAAA,OAAQ,CAAC,kBAAkB,EAAE,oBAAoB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KAChF;IACD,IAAI,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;QAExB,MAAM,IAAI,cAAA,OAAQ,CAAC,YAAY,EAAE,uCAAuC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KAC7F;IACD,CAAC,GAAG,AAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,EAAG,IAAI,CAAC;IAClC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;QAC1B,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;KACb;IACD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAC9B,CAAC,CAAC;AAUF,WAAW,CAAC,MAAM,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,MAAc,EAAE,QAAiB;IAE9F,IAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAEhC,IAAM,GAAG,GAAA,SAAA,SAAA,CAAA,GAAO,eAAA,OAAS,CAAC,UAAU,CAAC,MAAM,CAAC,GAAA;QAAE,MAAM,EAAE,IAAI;QAAE,UAAU,EAAE,IAAI;IAAA,EAAC,CAAC;IAC9E,IAAM,MAAM,GAAG,cAAA,OAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;IACzD,IAAM,GAAG,GAAG,MAAM,CAAC;IACnB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAEhE,IAAM,EAAE,GAAG,AAAC,cAAA,OAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAA,OAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,cAAA,OAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,eAAe,CAAC,EAAE;QAE1E,cAAA,OAAQ,CAAC,aAAa,CAAC,EAAE,EAAE;YAAC,eAAe,EAAE,KAAK;QAAA,CAAC,CAAC,CAAC;KACtD;IACD,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAEpD,cAAA,OAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,cAAA,OAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACpC,cAAA,OAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACnC,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,OAAO;KAAC,CAAC,CAAC;IAC1D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACvB,CAAC,CAAC;AAUF,WAAW,CAAC,SAAS,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,CAAS,EAAE,KAAc;IACzF,IAAM,MAAM,GAAG,cAAA,OAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACxC,IAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;QAAC,QAAQ,EAAE,IAAI;QAAE,MAAM,EAAE,IAAI;IAAA,CAAC,EAAE,MAAM,CAAC,CAAC;IAChF,IAAM,GAAG,GAAG,AAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;IACxD,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,MAAM,CAAC,IAAI,CAAC,eAAA,OAAS,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC;AAQF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE5D,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,eAAA,OAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QACpB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KAC7C;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE;QAAC,IAAI;QAAE,GAAG;KAAC,CAAC,CAAC;IACzD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAQF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE7D,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,eAAA,OAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QACpB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KAC7C;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;QAAC,IAAI;QAAE,GAAG;KAAC,EAAE;QAAC,WAAW,EAAE,KAAK;IAAA,CAAC,CAAC,CAAC;IAChF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAQF,WAAW,CAAC,YAAY,GAAG,SAAS,MAAiB,EAAE,IAAY;IACjE,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,eAAA,OAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QACpB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KAC7C;IACD,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QACpB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KAC7C;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE;QAAC,IAAI;QAAE,GAAG;QAAE,GAAG;KAAC,EAAE;QAAC,MAAM,EAAE,KAAK;QAAE,WAAW,EAAE,KAAK;IAAA,CAAC,CAAC,CAAC;IACxG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AASF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,MAAc;IAC5E,IAAI,GAAG,GAAY;QAAC,QAAQ,EAAE,MAAM;IAAA,CAAC,CAAC;IACtC,IAAI,GAAwB,CAAC;IAC7B,IAAI,IAAa,CAAC;IAClB,IAAI,MAAe,CAAC;IACpB,IAAI,MAAM,KAAK,aAAA,QAAQ,CAAC,EAAE,EAAE;QAC1B,GAAG,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;QAChD,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACvD,IAAI,KAAK,EAAE;YAET,GAAG,CAAC,aAAa,CAAC,GAAG,kBAAA,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;YAChD,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACpD,MAAM;YAEL,MAAM,GAAG,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;YAC1E,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAAC,MAAM;aAAC,EAAE,GAAG,CAAC,CAAC;SACxD;QACD,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7C,MAAM;QAEL,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/B,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,MAAM;SAAC,EAAE,GAAG,CAAC,CAAC;KACvD;IACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC;AAQF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE7D,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,IAAI,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC5D,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,IAAM,GAAG,GAAY,CAAA,CAAE,CAAC;IACxB,IAAM,IAAI,GAAa,EAAE,CAAC;IAC1B,IAAI,IAAa,CAAC;IAClB,IAAI;QACF,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KACpC,CAAC,OAAO,CAAC,EAAE;QACV,IAAI,GAAG,IAAI,CAAC;KACb;IACD,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;QAE1B,MAAM,IAAI,cAAA,OAAQ,CAAC,gBAAgB,EAAE,2BAA2B,EAAE,IAAI,CAAC,CAAC;KACzE;IACD,MAAO,IAAI,KAAK,EAAE,CAAE;QAClB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,mDAAmD,CAAC,CAAC;QAC9E,IAAI,CAAC,KAAK,EAAE;YAEV,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAAE,8BAA8B,EAAE,IAAI,CAAC,CAAC;SAC/E;QACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;YAErE,MAAM,IAAI,cAAA,OAAQ,CAAC,uBAAuB,EACtB,yCAAyC,EACzC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SACrC;QACD,IAAI,KAAK,GAAqB,eAAA,OAAS,CAAC,kBAAkB,CACxD,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC;QAC9D,IAAI,KAAK,EAAE;YACT,IAAI,KAAK,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;gBAClC,KAAK,GAAG,IAAI,CAAC;aACd,MACI,IAAI,KAAK,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;gBACxC,KAAK,GAAG,KAAK,CAAC;aACf;YACD,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACrB;QACD,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;KACrC;IACD,IAAI,IAAI,CAAC,MAAM,EAAE;QACf,GAAG,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACxC;IACD,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC3B,cAAA,OAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAQF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,KAAa;IAE3D,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,GAAG;KAAC,EACE;QAAC,MAAM,EAAE,OAAO;QAAE,KAAK,EAAE,KAAK;QAAE,KAAK,EAAE,CAAC;IAAA,CAAC,CAAC,CAAC;IAClG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtB,CAAC,CAAC;AASF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,CAAS,EAAE,CAAS;IAElF,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;QAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;KAAC,CAAC,CAAC;IACrE,IAAI,CAAC,IAAI,CAAC,EAAE;QAEV,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,GAAG;SAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,EAAE;YAEL,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YACxC,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,EAAE;YAEL,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;SACxC;KACF;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,GAAG;KAAC,CAAC,CAAC;IACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAOF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE1D,IAAM,EAAE,GAAG,eAAA,OAAS,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9D,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;KAAC,CAAC,CAAC;IAExE,OAAQ,EAAE,EAAE;QACZ,KAAK,GAAG;YAAE,cAAA,OAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YAAC,MAAM;QAC1D,KAAK,GAAG;YAAE,cAAA,OAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YAAC,MAAM;QAC3D;YACE,cAAA,OAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC1C,cAAA,OAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;KAC1C;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,KAAK;KAAC,CAAC,CAAC;IACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAOF,WAAW,CAAC,GAAG,GAAG,SAAS,MAAiB,EAAE,IAAY;IAExD,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;KAAC,EAAE;QAAC,KAAK,EAAE,CAAC;IAAA,CAAC,CAAC,CAAC;IAClF,IAAI,IAAI,KAAK,QAAQ,EAAE;QAErB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;KACjD;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,GAAG;KAAC,CAAC,CAAC;IACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAOF,WAAW,CAAC,UAAU,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE/D,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,IAAI,GACN,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;QAAC,IAAI,EAAE,MAAM,CAAC,SAAS;QAAE,IAAI,EAAE,UAAU;IAAA,CAAC,CAAC,CAAE;IAEnG,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAEvB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;KAC3D;IACD,IAAI,IAAI,KAAK,SAAS,EAAE;QAEtB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;KACjC,MAAM;QAEL,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;KACjC;IACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAQF,WAAW,CAAC,aAAa,GAAG,SAAS,MAAiB,EAAE,IAAY;IAElE,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,EAAE,GAAG,AAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtD,IAAI,IAAI,KAAK,YAAY,EAAE;QACzB,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,CAAC,GAAG,EAAE,CAAC;QACP,EAAE,GAAG,GAAG,CAAC;KACV;IACD,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC;QAClD,IAAI,EAAE,MAAM,CAAC,SAAS;QAAE,IAAI,EAAE,YAAY;QAC1C,IAAI,EAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;YAAC,KAAK,EAAE,CAAC;QAAA,CAAC,CAAC;QACtD,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;YAAC,KAAK,EAAE,EAAE;QAAA,CAAC,CAAC;KAAC,CAAC,CAAE,CAAC;AAClE,CAAC,CAAC;AAQF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE1D,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EACpB;QAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IAAA,CAAC,CAAC,CAAC;IAC3D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAQF,WAAW,CAAC,SAAS,GAAG,SAAS,MAAiB,EAAE,KAAa;IAC/D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC;AASF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,KAAa;IAExE,IAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC/B,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EACzB,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1B,IAAI,GAAG,GAAY;QAAC,KAAK,EAAE,CAAC;QAAE,MAAM,EAAE,CAAC;QAAE,KAAK,EAAE,CAAC;IAAA,CAAC,CAAC;IACnD,IAAI,KAAK,KAAK,OAAO,EAAE;QACrB,GAAG,CAAC,gBAAgB,CAAC,GAAG,AAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC;KAChE;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAQF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY;IAEzD,IAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAClC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EACzB,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1B,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;QAC5C,KAAK,EAAE,CAAC;QAAE,MAAM,EAAE,CAAC;QACnB,cAAc,EAAE,AAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;KAAE,CAAC,CAAC;IAC5D,IAAI,CAAC,EAAE;QACL,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,GAAG;SAAC,EAAE;YAAC,OAAO,EAAE,CAAC;QAAA,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAClB,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YACxC,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACxD,MAAM;YACL,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;SAC/C;KACF;IACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC,CAAC;AASF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,MAAc,EAAE,IAAY;IAE1F,IAAI,IAAI,QAAQ,CAAC;IACjB,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC;IAChE,IAAM,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9C,IAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;QACtC,OAAO,EAAE,OAAO;QAAE,OAAO,EAAE,OAAO;QAClC,KAAK,EAAE,IAAI;QAAE,QAAQ,EAAE,IAAI;QAAE,SAAS,EAAE,IAAI;KAC7C,EAAE,KAAK,CAAC,CAAC;IACV,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,EAAE;KAAC,EAAE;QAAC,QAAQ,EAAE,MAAM;IAAA,CAAC,CAAC,CAAC;IACxE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAQF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE7D,IAAM,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC7C,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAEjD,cAAA,OAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAChC,cAAA,OAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACjC,cAAA,OAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAChC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,IAAI;KAAC,EAAE;QAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,GAAG;IAAA,CAAC,CAAC,CAAC;IAChF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAUF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,KAAa,EAAE,IAAa;IAEvF,MAAM,CAAC,OAAO,CAAC,eAAA,OAAS,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC;AAOF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY;IAEzD,IAAM,QAAQ,GAAG,eAAA,OAAS,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1E,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE;QAAC,QAAQ,EAAE,KAAK;IAAA,CAAC,CAAC,CAAC;IAC5E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAOF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,IAAY;IAC7D,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACvC,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;IAC5C,IAAI,GAAG,GAAG,eAAA,OAAS,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE,IAAI,KAAK,EAAE;QACT,GAAG,GAAG;YAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE;gBAC3C,KAAK,EAAA,KAAA;gBACL,YAAY,EAAE,CAAA,GAAA,aAAA,MAAM,EAAC,GAAG,EAAE;oBAAC,CAAC,EAAE,MAAM;oBAAE,CAAC,EAAE,OAAO;gBAAA,CAAC,EAAE,QAAQ,CAAC;aAC7D,CAAC;SAAC,CAAC;KACL;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EACjB;QAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE;YAAC,QAAQ,EAAE,KAAK;QAAA,CAAC,CAAC;KAAC,EAC3D;QAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,GAAG;IAAA,CAAC,CAAC,CAAC;IACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAQF,WAAW,CAAC,GAAG,GAAG,SAAS,MAAiB,EAAE,KAAa;IAGzD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC;AAQF,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,KAAa;IAE1D,IAAM,WAAW,GAAG,cAAA,OAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAClD,IAAM,WAAW,GAAG,cAAA,OAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAClD,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;QAAC,QAAQ,EAAE,KAAK;IAAA,CAAC,EAAE,WAAW,CAAC,CAAC;IAC3E,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;QAAC,QAAQ,EAAE,KAAK;IAAA,CAAC,EAAE,WAAW,CAAC,CAAC;IAC3E,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC;QAC9C,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,KAAK;KACb,CAAC,CAAE,CAAC;AACT,CAAC,CAAC;AAgBF,WAAW,CAAC,MAAM,GAAG,SAAS,MAAiB,EAAE,KAAa,EAChC,IAAY,EAAE,KAAa,EAAE,KAAa,EAC1C,OAAe,EAAE,QAAgB,EAAE,KAAa,EAChD,KAAc,EAAE,QAAiB;IAC7D,IAAM,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;IAC3B,IAAI,CAAC,KAAK,EAAE,EAAE;QAEZ,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,yBAAyB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KAClF;IACD,IAAI,CAAC,KAAK,GAAG,EAAE;QAEb,MAAM,CAAC,CAAC,EAAE,CAAC;KACZ,MAAM;QAEL,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5D,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;KACd;IAED,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAoB,CAAC;IACtG,KAAK,CAAC,QAAQ,GAAG;QACf,UAAU,EAAE,AAAC,QAAQ,IAAI,KAAK,CAAC;QAC/B,aAAa,EAAE,AAAC,OAAO,IAAI,KAAK,CAAC;KAClC,CAAC;IACF,IAAI,KAAK,EAAE;QAET,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;KACpC;IACD,IAAI,QAAQ,EAAE;QAEZ,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACtC,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;KAChC;IACD,IAAI,IAAI,IAAI,KAAK,EAAE;QAEjB,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChC,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACnC;IACD,IAAI,KAAK,KAAK,GAAG,EAAE;QAEjB,KAAK,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;KACpC;IACD,IAAI,KAAK,IAAI,IAAI,EAAE;QAEjB,KAAK,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;KACpC;IACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,CAAC,CAAC;AAQF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE1D,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC;QAAC,OAAO,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;IAAA,CAAC,CAAC,CAAC,CAAC;IAC1F,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC/B,IAAM,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,UAAU,CAAW,CAAC;IAClD,IAAM,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACzC,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE,OAAO;IAK3B,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAC1B,IAAI,MAAM,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IACzD,IAAM,GAAG,GAAG,AAAC,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,kBAAA,MAAA,CAAkB,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,EAAA,MAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAIvF,MAAO,CAAC,GAAG,CAAC,CAAE;QACZ,IAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,EAAE;YAIb,MAAM,EAAE,CAAC;YACT,CAAC,EAAE,CAAC;SACL,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;YAUpB,IAAI,MAAM,KAAK,CAAC,EAAE;gBAChB,CAAC,GAAG,CAAC,CAAC;aACP,MAAM;gBACL,MAAM,EAAE,CAAC;gBACT,IAAI,MAAM,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;oBAC7B,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;iBACtB;gBACD,CAAC,EAAE,CAAC;aACL;SACF,MAAM,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,KAAK,CAAC,EAAE;YAKpC,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,qCAAqC,CAAC,CAAC;SAC5E,MAAM,IAAI,CAAC,KAAK,IAAI,EAAE;YAMrB,IAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,IAAI,AAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAE;gBACrE,CAAC,GAAG,CAAC,CAAC;aACP,MAAM;gBACL,CAAC,IAAI,CAAC,CAAC;aACR;SACF,MAAM;YAIL,CAAC,EAAE,CAAC;SACL;KACF;IAMD,IAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;QACvF,IAAM,QAAQ,GAAG,eAAA,OAAS,CAAC,YAAY,CAAC,MAAM,EAAE,eAAA,OAAS,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/E,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;KACd;AACH,CAAC,CAAC;AAOF,WAAW,CAAC,EAAE,GAAG,SAAS,MAAiB,EAAE,IAAY;IAEvD,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC;QAAC,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;IAAA,CAAC,CAAC,CAAC,CAAC;AAC/E,CAAC,CAAC;AAUF,WAAW,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,UAA2B;IAA3B,IAAA,eAAA,KAAA,GAAA;QAAA,aAAA,KAA2B;IAAA;IACzF,IAAI,CAAS,CAAC;IACd,IAAI,CAAC,UAAU,EAAE;QAGf,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAC1C,MAAM,CAAC,CAAC,EAAE,CAAC;SACZ;QACD,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAC1C,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YACnC,IAAA,KAAA,OAAkB,eAAA,OAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAAA,EAAA,EAA1C,KAAK,GAAA,EAAA,CAAA,EAAA,EAAE,IAAI,GAAA,EAAA,CAAA,EAA+B,CAAC;YAEhD,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE;gBAEjB,MAAM,IAAI,cAAA,OAAQ,CAAC,wBAAwB,EACxB,4CAA4C,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;aACpF;YACD,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;SAClB;KACF;IACD,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC;QAAC,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,SAAS,EAAE,IAAI;IAAA,CAAC,CAAC,CAC3F,CAAC;IACF,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC/B,IAAI,IAAa,CAAC;IAClB,IAAI,GAAG,YAAY,KAAK,CAAC,SAAS,EAAE;QAElC,IAAI,CAAC,EAAE;YACL,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;SACtB;KACF,MAAM;QACL,IAAI,CAAC,EAAE;YAEL,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;gBAAC,KAAK,EAAE,CAAC;YAAA,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnB;QAED,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;YAAC,SAAS,EAAE,kBAAA,WAAW,CAAC,SAAS,CAAC,OAAO;QAAA,CAAC,CAAC,CAAC;QACvF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnB;AACH,CAAC,CAAC;AAQF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,KAAa,EAAE,KAAa;IAC1E,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,KAAK,GAAG,OAAO,CAAC;KACjB;IACD,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC/B,IAAI,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE;QAEnD,MAAM,IAAI,cAAA,OAAQ,CAAC,WAAW,EAAE,cAAc,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KACnE;IACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE;QAErB,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACvB,MAAM;QAEL,IAAM,KAAK,GAAG,AAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAE,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAChG,MAAO,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAE;YACtC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACpB;QACD,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;QACpC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5C;AACH,CAAC,CAAC;AAQF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,KAAa;IAC3D,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC/B,IAAI,GAAG,YAAY,KAAK,CAAC,SAAS,EAAE;QAElC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;KAC5B,MAAM;QAEL,MAAM,IAAI,cAAA,OAAQ,CAAC,kBAAkB,EAAE,uBAAuB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;KACnF;AACH,CAAC,CAAC;AAYF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,IAAY;IAE7D,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QAEpB,MAAM,IAAI,cAAA,OAAQ,CAAC,YAAY,EAAE,iCAAiC,EAAE,GAAG,CAAC,CAAC;KAC1E;IACD,IAAI,KAAK,GAAG,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,GAAG,CAAU,CAAC;IAClF,IAAI,KAAK,IAAI,IAAI,KAAK,OAAO,EAAE;QAI7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YAClB,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO;SACR;QAED,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;KACnC;IACD,eAAA,OAAS,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACxC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE;QAAC,MAAM;QAAE,GAAG;KAAC,CAAC,CAAC;AAC7C,CAAC,CAAC;AAeF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,KAAgB,EACnC,IAAY,EAAE,KAAa,EAAE,KAAa,EAC1C,OAAe,EAAE,QAAgB,EAAE,KAAa,EAChD,YAAqB;IAChD,IAAI,CAAC,KAAK,EAAE;QAEV,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,UAAU,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC;KAChE;IACD,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IAClF,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACnF,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAoB,CAAC;IACpE,KAAK,CAAC,QAAQ,GAAG;QACf,WAAW,EAAE,KAAK;QAClB,aAAa,EAAE,AAAC,OAAO,IAAI,KAAK,CAAC;QACjC,UAAU,EAAE,AAAC,QAAQ,IAAI,KAAK,CAAC;KAChC,CAAC;IACF,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;QAEvB,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YAEjC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzB,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;SACxC;QACD,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YAEhD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC3B;QAED,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1C,KAAK,CAAC,QAAQ,CAAC,WAAW,GACxB,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACxG;IACD,IAAI,IAAI,EAAG;QAET,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;KAC1D;IACD,IAAI,KAAK,EAAE;QAET,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC5D;IACD,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;QACpC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QACtC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KACzB;IACD,IAAI,KAAK,KAAK,GAAG,EAAE;QAEjB,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;KACvC,MACI,IAAI,KAAK,EAAE;QAEd,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;KACxC;IACD,IAAI,KAAK,KAAK,GAAG,EAAE;QAEjB,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;KACnC;IACD,IAAI,YAAY,EAAG;QAEjB,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;KACrC;IACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAQF,WAAW,CAAC,YAAY,GAAG,SAAS,MAAiB,EAAE,KAAgB;IAErE,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,UAAU,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,CAAC;IACrE,IAAI,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC5C,OAAO,eAAA,OAAS,CAAC,aAAa,CAAC,IAAuB,EAAE,KAAK,CAAC,CAAC;AACjE,CAAC,CAAC;AASF,WAAW,CAAC,QAAQ,GAAG,SAAU,MAAiB,EAAE,KAAgB,EAAE,QAAiB;IACrF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,eAAA,OAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC9B,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CACpD,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;AACzC,CAAC,CAAC;AAYF,WAAW,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,KAAgB,EACnC,QAAiB,EAAE,QAAiB,EACpC,KAAa,EAAE,OAAe;IAE5D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnB,IAAI,QAAQ,EAAE;QACZ,eAAA,OAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC/B;IACD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACnF,IAAI,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,EAAE,EAC3B,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAoB,CAAC;IACpG,OAAO,CAAC,QAAQ,GAAG;QACjB,YAAY,EAAE,IAAI;QAClB,WAAW,EAAE,KAAK;QAClB,aAAa,EAAE,AAAC,OAAO,IAAI,KAAK,CAAC;QACjC,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QAC/B,eAAe,EAAE,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC;KAC7C,CAAC;IACF,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAQF,WAAW,CAAC,WAAW,GAAG,SAAS,MAAiB,EAAE,KAAa;IACjE,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AACtB,CAAC,CAAC;AAQF,WAAW,CAAC,WAAW,GAAG,SAAS,MAAiB,EAAE,IAAY;IAEhE,IAAI,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,KAAK,KAAK,EAAE,EAAE;QAEhB,OAAO;KACR;IACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;QAE1B,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE;YAErB,MAAM,IAAI,cAAA,OAAQ,CAAC,iBAAiB,EAAE,aAAa,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;SACxE;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE;YAE3G,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,+BAA+B,EAAE,KAAK,CAAC,CAAC;SAC7E;QAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,UAAA,KAAK,EAAE,CAAC;KACzC;AACH,CAAC,CAAC;AASF,WAAW,CAAC,SAAS,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,KAAc;IAE9E,IAAI,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpE,IAAI,CAAC,GAAG,EAAE;QAER,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;YAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACzB;QACD,GAAG,GAAG,IAAI,UAAA,KAAK,EAAE,CAAC;KACnB;IACD,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;IAClB,IAAI,KAAK,EAAE;QAET,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAClC;IACD,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,eAAA,OAAS,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;QAC5E,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;QAAE,OAAO,EAAE,aAAa;KACpF,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC,CAAC;AAOF,WAAW,CAAC,KAAK,GAAG,SAAS,MAAiB,EAAE,IAAY,EAC/B,KAAa,EAAE,QAAgB,EAC/B,GAAY;IACvC,IAAI,QAAQ,EAAE;QACZ,IAAM,IAAI,GAAa,EAAE,CAAC;QAC1B,IAAI,GAAG,IAAI,IAAI,EAAE;YACf,IAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;SAC9C;QACD,IAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAE;YAC3C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;SACrC;QACD,KAAK,GAAG,eAAA,OAAS,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KACvD;IACD,MAAM,CAAC,MAAM,GAAG,eAAA,OAAS,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,eAAA,OAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACnC,CAAC,CAAC;AASF,WAAW,CAAC,UAAU,GAAG,SAAS,MAAiB,EAAE,IAAY;IAC/D,IAAM,CAAC,GAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjC,IAAM,CAAC,GAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjC,IAAM,CAAC,GAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjC,IAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE;QAAC,CAAC;QAAE,CAAC;QAAE,CAAC;QAAE,EAAE;KAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC;AAGF,QAAA,OAAA,GAAe,WAAW,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6395, "column": 0}, "map": {"version":3,"file":"ParseMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ParseMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Base methods for TeX Parsing.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Symbol} from './Symbol.js';\nimport TexParser from './TexParser.js';\nimport NodeUtil from './NodeUtil.js';\nimport {TexConstant} from './TexConstants.js';\nimport {MmlNode} from '../../core/MmlTree/MmlNode.js';\nimport ParseUtil from './ParseUtil.js';\n\n\nnamespace ParseMethods {\n\n  /**\n   * Handle a variable (a single letter or multi-letter if allowed).\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} c The letter to transform into an mi.\n   */\n  export function variable(parser: TexParser, c: string) {\n    // @test Identifier Font\n    const def = ParseUtil.getFontDef(parser);\n    const env = parser.stack.env;\n    if (env.multiLetterIdentifiers && env.font !== '') {\n      c = parser.string.substr(parser.i - 1).match(env.multiLetterIdentifiers as any as RegExp)[0];\n      parser.i += c.length - 1;\n      if (def.mathvariant === TexConstant.Variant.NORMAL && env.noAutoOP && c.length > 1) {\n        def.autoOP = false;\n      }\n    }\n    // @test Identifier\n    const node = parser.create('token', 'mi', def, c);\n    parser.Push(node);\n  }\n\n\n  /**\n   * Handle a number (a sequence of digits, with decimal separator, etc.).\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} c The first character of a number than can be parsed with\n   *     the digits pattern.\n   */\n  export function digit(parser: TexParser, c: string) {\n    let mml: MmlNode;\n    const pattern = parser.configuration.options['digits'];\n    const n = parser.string.slice(parser.i - 1).match(pattern);\n    // @test Integer Font\n    const def = ParseUtil.getFontDef(parser);\n    if (n) {\n      // @test Integer, Number, Decimal (European)\n      mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));\n      parser.i += n[0].length - 1;\n    } else {\n      // @test Decimal Point, Decimal Point European\n      mml = parser.create('token', 'mo', def, c);\n    }\n    parser.Push(mml);\n  }\n\n  /**\n   * Lookup a control-sequence and process it.\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} c The string '\\'.\n   */\n  export function controlSequence(parser: TexParser, _c: string) {\n    const name = parser.GetCS();\n    parser.parse('macro', [parser, name]);\n  }\n\n\n  /**\n   * Handle normal mathchar (as an mi).\n   * @param {TexParser} parser The current tex parser.\n   * @param {Symbol} mchar The parsed symbol.\n   */\n  export function mathchar0mi(parser: TexParser, mchar: Symbol) {\n    const def = mchar.attributes || {mathvariant: TexConstant.Variant.ITALIC};\n    // @test Greek\n    const node = parser.create('token', 'mi', def, mchar.char);\n    parser.Push(node);\n  }\n\n  /**\n   * Handle normal mathchar (as an mo).\n   * @param {TexParser} parser The current tex parser.\n   * @param {Symbol} mchar The parsed symbol.\n   */\n  export function mathchar0mo(parser: TexParser, mchar: Symbol) {\n    const def = mchar.attributes || {};\n    def['stretchy'] = false;\n    // @test Large Set\n    const node = parser.create('token', 'mo', def, mchar.char);\n    NodeUtil.setProperty(node, 'fixStretchy', true);\n    parser.configuration.addNode('fixStretchy', node);\n    // PROBLEM: Attributes stop working when Char7 are explicitly set.\n    parser.Push(node);\n  }\n\n  /**\n   * Handle mathchar in current family.\n   * @param {TexParser} parser The current tex parser.\n   * @param {Symbol} mchar The parsed symbol.\n   */\n  export function mathchar7(parser: TexParser, mchar: Symbol) {\n    const def = mchar.attributes || {mathvariant: TexConstant.Variant.NORMAL};\n    if (parser.stack.env['font']) {\n      // @test MathChar7 Single Font\n      def['mathvariant'] = parser.stack.env['font'];\n    }\n    // @test MathChar7 Single, MathChar7 Operator, MathChar7 Multi\n    const node = parser.create('token', 'mi', def, mchar.char);\n    parser.Push(node);\n  }\n\n  /**\n   * Handle delimiter.\n   * @param {TexParser} parser The current tex parser.\n   * @param {Symbol} delim The parsed delimiter symbol.\n   */\n  export function delimiter(parser: TexParser, delim: Symbol) {\n    let def = delim.attributes || {};\n    // @test Fenced2, Delimiter (AMS)\n    def = Object.assign({fence: false, stretchy: false}, def);\n    const node = parser.create('token', 'mo', def, delim.char);\n    parser.Push(node);\n  }\n\n\n  /**\n   * Parse an environment.\n   * @param {TexParser} parser The current tex parser.\n   * @param {string} env The name of the environment.\n   * @param {Function} func The parse method for the environment.\n   * @param {any[]} args A list of additional arguments.\n   */\n  export function environment(parser: TexParser, env: string, func: Function, args: any[]) {\n    const end = args[0];\n    let mml = parser.itemFactory.create('begin').setProperties({name: env, end: end});\n    mml = func(parser, mml, ...args.slice(1));\n    parser.Push(mml);\n  }\n\n}\n\nexport default ParseMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6531, "column": 0}, "map": {"version":3,"file":"BaseMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/base/BaseMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Base mappings for TeX Parsing.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport *  as sm from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport BaseMethods from './BaseMethods.js';\nimport ParseMethods from '../ParseMethods.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MATHSPACE, em} from '../../../util/lengths.js';\n\n\n/**\n * Letter pattern for parsing identifiers and operators.\n */\nnew sm.RegExpMap('letter', ParseMethods.variable, /[a-z]/i);\n\n\n/**\n * Digit pattern for parsing numbers.\n */\nnew sm.RegExpMap('digit', ParseMethods.digit, /[0-9.,]/);\n\n\n/**\n * Pattern for spotting start of commands.\n */\nnew sm.RegExpMap('command', ParseMethods.controlSequence, /^\\\\/ );\n\n\n/**\n * Treatment of special characters in LaTeX.\n */\nnew sm.MacroMap('special', {\n\n  // This is now handled with a RegExp!\n  // '\\\\':  'ControlSequence',\n\n  '{':   'Open',\n  '}':   'Close',\n  '~':   'Tilde',\n  '^':   'Superscript',\n  '_':   'Subscript',\n  ' ':   'Space',\n  '\\t':  'Space',\n  '\\r':  'Space',\n  '\\n':  'Space',\n  '\\'':  'Prime',\n  '%':   'Comment',\n  '&':   'Entry',\n  '#':   'Hash',\n  '\\u00A0': 'Space',\n  '\\u2019': 'Prime'\n}, BaseMethods);\n\n\n/**\n * Macros for identifiers.\n */\nnew sm.CharacterMap('mathchar0mi', ParseMethods.mathchar0mi, {\n  // Lower-case greek\n  alpha:        '\\u03B1',\n  beta:         '\\u03B2',\n  gamma:        '\\u03B3',\n  delta:        '\\u03B4',\n  epsilon:      '\\u03F5',\n  zeta:         '\\u03B6',\n  eta:          '\\u03B7',\n  theta:        '\\u03B8',\n  iota:         '\\u03B9',\n  kappa:        '\\u03BA',\n  lambda:       '\\u03BB',\n  mu:           '\\u03BC',\n  nu:           '\\u03BD',\n  xi:           '\\u03BE',\n  omicron:      '\\u03BF', // added for completeness\n  pi:           '\\u03C0',\n  rho:          '\\u03C1',\n  sigma:        '\\u03C3',\n  tau:          '\\u03C4',\n  upsilon:      '\\u03C5',\n  phi:          '\\u03D5',\n  chi:          '\\u03C7',\n  psi:          '\\u03C8',\n  omega:        '\\u03C9',\n  varepsilon:   '\\u03B5',\n  vartheta:     '\\u03D1',\n  varpi:        '\\u03D6',\n  varrho:       '\\u03F1',\n  varsigma:     '\\u03C2',\n  varphi:       '\\u03C6',\n\n  // Ord symbols\n  S:            ['\\u00A7', {mathvariant: TexConstant.Variant.NORMAL}],\n  aleph:        ['\\u2135', {mathvariant: TexConstant.Variant.NORMAL}],\n  hbar:         ['\\u210F', {variantForm: true}],\n  imath:        '\\u0131',\n  jmath:        '\\u0237',\n  ell:          '\\u2113',\n  wp:           ['\\u2118', {mathvariant: TexConstant.Variant.NORMAL}],\n  Re:           ['\\u211C', {mathvariant: TexConstant.Variant.NORMAL}],\n  Im:           ['\\u2111', {mathvariant: TexConstant.Variant.NORMAL}],\n  partial:      ['\\u2202', {mathvariant: TexConstant.Variant.ITALIC}],\n  infty:        ['\\u221E', {mathvariant: TexConstant.Variant.NORMAL}],\n  prime:        ['\\u2032', {variantForm: true}],\n  emptyset:     ['\\u2205', {mathvariant: TexConstant.Variant.NORMAL}],\n  nabla:        ['\\u2207', {mathvariant: TexConstant.Variant.NORMAL}],\n  top:          ['\\u22A4', {mathvariant: TexConstant.Variant.NORMAL}],\n  bot:          ['\\u22A5', {mathvariant: TexConstant.Variant.NORMAL}],\n  angle:        ['\\u2220', {mathvariant: TexConstant.Variant.NORMAL}],\n  triangle:     ['\\u25B3', {mathvariant: TexConstant.Variant.NORMAL}],\n  backslash:    ['\\u2216', {mathvariant: TexConstant.Variant.NORMAL}],\n  forall:       ['\\u2200', {mathvariant: TexConstant.Variant.NORMAL}],\n  exists:       ['\\u2203', {mathvariant: TexConstant.Variant.NORMAL}],\n  neg:          ['\\u00AC', {mathvariant: TexConstant.Variant.NORMAL}],\n  lnot:         ['\\u00AC', {mathvariant: TexConstant.Variant.NORMAL}],\n  flat:         ['\\u266D', {mathvariant: TexConstant.Variant.NORMAL}],\n  natural:      ['\\u266E', {mathvariant: TexConstant.Variant.NORMAL}],\n  sharp:        ['\\u266F', {mathvariant: TexConstant.Variant.NORMAL}],\n  clubsuit:     ['\\u2663', {mathvariant: TexConstant.Variant.NORMAL}],\n  diamondsuit:  ['\\u2662', {mathvariant: TexConstant.Variant.NORMAL}],\n  heartsuit:    ['\\u2661', {mathvariant: TexConstant.Variant.NORMAL}],\n  spadesuit:    ['\\u2660', {mathvariant: TexConstant.Variant.NORMAL}]\n});\n\n\n/**\n * Macros for operators.\n */\nnew sm.CharacterMap('mathchar0mo', ParseMethods.mathchar0mo, {\n  surd:         '\\u221A',\n\n  // big ops\n  coprod:       ['\\u2210', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigvee:       ['\\u22C1', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigwedge:     ['\\u22C0', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  biguplus:     ['\\u2A04', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigcap:       ['\\u22C2', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigcup:       ['\\u22C3', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  'int':        ['\\u222B', {texClass: TEXCLASS.OP}],\n  intop:        ['\\u222B', {texClass: TEXCLASS.OP,\n                            movesupsub: true, movablelimits: true}],\n  iint:         ['\\u222C', {texClass: TEXCLASS.OP}],\n  iiint:        ['\\u222D', {texClass: TEXCLASS.OP}],\n  prod:         ['\\u220F', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  sum:          ['\\u2211', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigotimes:    ['\\u2A02', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigoplus:     ['\\u2A01', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  bigodot:      ['\\u2A00', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  oint:         ['\\u222E', {texClass: TEXCLASS.OP}],\n  bigsqcup:     ['\\u2A06', {texClass: TEXCLASS.OP,\n                            movesupsub: true}],\n  smallint:     ['\\u222B', {largeop: false}],\n\n  // binary operations\n  triangleleft:      '\\u25C3',\n  triangleright:     '\\u25B9',\n  bigtriangleup:     '\\u25B3',\n  bigtriangledown:   '\\u25BD',\n  wedge:        '\\u2227',\n  land:         '\\u2227',\n  vee:          '\\u2228',\n  lor:          '\\u2228',\n  cap:          '\\u2229',\n  cup:          '\\u222A',\n  ddagger:      '\\u2021',\n  dagger:       '\\u2020',\n  sqcap:        '\\u2293',\n  sqcup:        '\\u2294',\n  uplus:        '\\u228E',\n  amalg:        '\\u2A3F',\n  diamond:      '\\u22C4',\n  bullet:       '\\u2219',\n  wr:           '\\u2240',\n  div:          '\\u00F7',\n  divsymbol:    '\\u00F7',\n  odot:         ['\\u2299', {largeop: false}],\n  oslash:       ['\\u2298', {largeop: false}],\n  otimes:       ['\\u2297', {largeop: false}],\n  ominus:       ['\\u2296', {largeop: false}],\n  oplus:        ['\\u2295', {largeop: false}],\n  mp:           '\\u2213',\n  pm:           '\\u00B1',\n  circ:         '\\u2218',\n  bigcirc:      '\\u25EF',\n  setminus:     '\\u2216',\n  cdot:         '\\u22C5',\n  ast:          '\\u2217',\n  times:        '\\u00D7',\n  star:         '\\u22C6',\n\n\n  // Relations\n  propto:       '\\u221D',\n  sqsubseteq:   '\\u2291',\n  sqsupseteq:   '\\u2292',\n  parallel:     '\\u2225',\n  mid:          '\\u2223',\n  dashv:        '\\u22A3',\n  vdash:        '\\u22A2',\n  leq:          '\\u2264',\n  le:           '\\u2264',\n  geq:          '\\u2265',\n  ge:           '\\u2265',\n  lt:           '\\u003C',\n  gt:           '\\u003E',\n  succ:         '\\u227B',\n  prec:         '\\u227A',\n  approx:       '\\u2248',\n  succeq:       '\\u2AB0',  // or '227C',\n  preceq:       '\\u2AAF',  // or '227D',\n  supset:       '\\u2283',\n  subset:       '\\u2282',\n  supseteq:     '\\u2287',\n  subseteq:     '\\u2286',\n  'in':         '\\u2208',\n  ni:           '\\u220B',\n  notin:        '\\u2209',\n  owns:         '\\u220B',\n  gg:           '\\u226B',\n  ll:           '\\u226A',\n  sim:          '\\u223C',\n  simeq:        '\\u2243',\n  perp:         '\\u22A5',\n  equiv:        '\\u2261',\n  asymp:        '\\u224D',\n  smile:        '\\u2323',\n  frown:        '\\u2322',\n  ne:           '\\u2260',\n  neq:          '\\u2260',\n  cong:         '\\u2245',\n  doteq:        '\\u2250',\n  bowtie:       '\\u22C8',\n  models:       '\\u22A8',\n\n  notChar:      '\\u29F8',\n\n\n  // Arrows\n  Leftrightarrow:     '\\u21D4',\n  Leftarrow:          '\\u21D0',\n  Rightarrow:         '\\u21D2',\n  leftrightarrow:     '\\u2194',\n  leftarrow:          '\\u2190',\n  gets:               '\\u2190',\n  rightarrow:         '\\u2192',\n  to:                ['\\u2192', {accent: false}],\n  mapsto:             '\\u21A6',\n  leftharpoonup:      '\\u21BC',\n  leftharpoondown:    '\\u21BD',\n  rightharpoonup:     '\\u21C0',\n  rightharpoondown:   '\\u21C1',\n  nearrow:            '\\u2197',\n  searrow:            '\\u2198',\n  nwarrow:            '\\u2196',\n  swarrow:            '\\u2199',\n  rightleftharpoons:  '\\u21CC',\n  hookrightarrow:     '\\u21AA',\n  hookleftarrow:      '\\u21A9',\n  longleftarrow:      '\\u27F5',\n  Longleftarrow:      '\\u27F8',\n  longrightarrow:     '\\u27F6',\n  Longrightarrow:     '\\u27F9',\n  Longleftrightarrow: '\\u27FA',\n  longleftrightarrow: '\\u27F7',\n  longmapsto:         '\\u27FC',\n\n\n  // Misc.\n  ldots:            '\\u2026',\n  cdots:            '\\u22EF',\n  vdots:            '\\u22EE',\n  ddots:            '\\u22F1',\n  dotsc:            '\\u2026',  // dots with commas\n  dotsb:            '\\u22EF',  // dots with binary ops and relations\n  dotsm:            '\\u22EF',  // dots with multiplication\n  dotsi:            '\\u22EF',  // dots with integrals\n  dotso:            '\\u2026',  // other dots\n\n  ldotp:            ['\\u002E', {texClass: TEXCLASS.PUNCT}],\n  cdotp:            ['\\u22C5', {texClass: TEXCLASS.PUNCT}],\n  colon:            ['\\u003A', {texClass: TEXCLASS.PUNCT}]\n});\n\n\n/**\n * Macros for special characters and identifiers.\n */\nnew sm.CharacterMap('mathchar7', ParseMethods.mathchar7, {\n  Gamma:        '\\u0393',\n  Delta:        '\\u0394',\n  Theta:        '\\u0398',\n  Lambda:       '\\u039B',\n  Xi:           '\\u039E',\n  Pi:           '\\u03A0',\n  Sigma:        '\\u03A3',\n  Upsilon:      '\\u03A5',\n  Phi:          '\\u03A6',\n  Psi:          '\\u03A8',\n  Omega:        '\\u03A9',\n\n  '_':          '\\u005F',\n  '#':          '\\u0023',\n  '$':          '\\u0024',\n  '%':          '\\u0025',\n  '&':          '\\u0026',\n  And:          '\\u0026'\n});\n\n\n/**\n * Macros for delimiters.\n */\nnew sm.DelimiterMap('delimiter', ParseMethods.delimiter, {\n  '(':                '(',\n  ')':                ')',\n  '[':                '[',\n  ']':                ']',\n  '<':                '\\u27E8',\n  '>':                '\\u27E9',\n  '\\\\lt':             '\\u27E8',\n  '\\\\gt':             '\\u27E9',\n  '/':                '/',\n  '|':                ['|', {texClass: TEXCLASS.ORD}],\n  '.':                '',\n  '\\\\\\\\':             '\\\\',\n  '\\\\lmoustache':     '\\u23B0',  // non-standard\n  '\\\\rmoustache':     '\\u23B1',  // non-standard\n  '\\\\lgroup':         '\\u27EE',  // non-standard\n  '\\\\rgroup':         '\\u27EF',  // non-standard\n  '\\\\arrowvert':      '\\u23D0',\n  '\\\\Arrowvert':      '\\u2016',\n  '\\\\bracevert':      '\\u23AA',  // non-standard\n  '\\\\Vert':           ['\\u2016', {texClass: TEXCLASS.ORD}],\n  '\\\\|':              ['\\u2016', {texClass: TEXCLASS.ORD}],\n  '\\\\vert':           ['|', {texClass: TEXCLASS.ORD}],\n  '\\\\uparrow':        '\\u2191',\n  '\\\\downarrow':      '\\u2193',\n  '\\\\updownarrow':    '\\u2195',\n  '\\\\Uparrow':        '\\u21D1',\n  '\\\\Downarrow':      '\\u21D3',\n  '\\\\Updownarrow':    '\\u21D5',\n  '\\\\backslash':      '\\\\',\n  '\\\\rangle':         '\\u27E9',\n  '\\\\langle':         '\\u27E8',\n  '\\\\rbrace':         '}',\n  '\\\\lbrace':         '{',\n  '\\\\}':              '}',\n  '\\\\{':              '{',\n  '\\\\rceil':          '\\u2309',\n  '\\\\lceil':          '\\u2308',\n  '\\\\rfloor':         '\\u230B',\n  '\\\\lfloor':         '\\u230A',\n  '\\\\lbrack':         '[',\n  '\\\\rbrack':         ']'\n});\n\n\n/**\n * Macros for LaTeX commands.\n */\nnew sm.CommandMap('macros', {\n  displaystyle:      ['SetStyle', 'D', true, 0],\n  textstyle:         ['SetStyle', 'T', false, 0],\n  scriptstyle:       ['SetStyle', 'S', false, 1],\n  scriptscriptstyle: ['SetStyle', 'SS', false, 2],\n\n  rm:                ['SetFont', TexConstant.Variant.NORMAL],\n  mit:               ['SetFont', TexConstant.Variant.ITALIC],\n  oldstyle:          ['SetFont', TexConstant.Variant.OLDSTYLE],\n  cal:               ['SetFont', TexConstant.Variant.CALLIGRAPHIC],\n  it:                ['SetFont', TexConstant.Variant.MATHITALIC], // needs special handling\n  bf:                ['SetFont', TexConstant.Variant.BOLD],\n  bbFont:            ['SetFont', TexConstant.Variant.DOUBLESTRUCK],\n  scr:               ['SetFont', TexConstant.Variant.SCRIPT],\n  frak:              ['SetFont', TexConstant.Variant.FRAKTUR],\n  sf:                ['SetFont', TexConstant.Variant.SANSSERIF],\n  tt:                ['SetFont', TexConstant.Variant.MONOSPACE],\n\n  mathrm:            ['MathFont', TexConstant.Variant.NORMAL],\n  mathup:            ['MathFont', TexConstant.Variant.NORMAL],\n  mathnormal:        ['MathFont', ''],\n  mathbf:            ['MathFont', TexConstant.Variant.BOLD],\n  mathbfup:          ['MathFont', TexConstant.Variant.BOLD],\n  mathit:            ['MathFont', TexConstant.Variant.MATHITALIC],\n  mathbfit:          ['MathFont', TexConstant.Variant.BOLDITALIC],\n  mathbb:            ['MathFont', TexConstant.Variant.DOUBLESTRUCK],\n  Bbb:               ['MathFont', TexConstant.Variant.DOUBLESTRUCK],\n  mathfrak:          ['MathFont', TexConstant.Variant.FRAKTUR],\n  mathbffrak:        ['MathFont', TexConstant.Variant.BOLDFRAKTUR],\n  mathscr:           ['MathFont', TexConstant.Variant.SCRIPT],\n  mathbfscr:         ['MathFont', TexConstant.Variant.BOLDSCRIPT],\n  mathsf:            ['MathFont', TexConstant.Variant.SANSSERIF],\n  mathsfup:          ['MathFont', TexConstant.Variant.SANSSERIF],\n  mathbfsf:          ['MathFont', TexConstant.Variant.BOLDSANSSERIF],\n  mathbfsfup:        ['MathFont', TexConstant.Variant.BOLDSANSSERIF],\n  mathsfit:          ['MathFont', TexConstant.Variant.SANSSERIFITALIC],\n  mathbfsfit:        ['MathFont', TexConstant.Variant.SANSSERIFBOLDITALIC],\n  mathtt:            ['MathFont', TexConstant.Variant.MONOSPACE],\n  mathcal:           ['MathFont', TexConstant.Variant.CALLIGRAPHIC],\n  mathbfcal:         ['MathFont', TexConstant.Variant.BOLDCALLIGRAPHIC],\n\n  symrm:             ['MathFont', TexConstant.Variant.NORMAL],\n  symup:             ['MathFont', TexConstant.Variant.NORMAL],\n  symnormal:         ['MathFont', ''],\n  symbf:             ['MathFont', TexConstant.Variant.BOLD],\n  symbfup:           ['MathFont', TexConstant.Variant.BOLD],\n  symit:             ['MathFont', TexConstant.Variant.ITALIC],\n  symbfit:           ['MathFont', TexConstant.Variant.BOLDITALIC],\n  symbb:             ['MathFont', TexConstant.Variant.DOUBLESTRUCK],\n  symfrak:           ['MathFont', TexConstant.Variant.FRAKTUR],\n  symbffrak:         ['MathFont', TexConstant.Variant.BOLDFRAKTUR],\n  symscr:            ['MathFont', TexConstant.Variant.SCRIPT],\n  symbfscr:          ['MathFont', TexConstant.Variant.BOLDSCRIPT],\n  symsf:             ['MathFont', TexConstant.Variant.SANSSERIF],\n  symsfup:           ['MathFont', TexConstant.Variant.SANSSERIF],\n  symbfsf:           ['MathFont', TexConstant.Variant.BOLDSANSSERIF],\n  symbfsfup:         ['MathFont', TexConstant.Variant.BOLDSANSSERIF],\n  symsfit:           ['MathFont', TexConstant.Variant.SANSSERIFITALIC],\n  symbfsfit:         ['MathFont', TexConstant.Variant.SANSSERIFBOLDITALIC],\n  symtt:             ['MathFont', TexConstant.Variant.MONOSPACE],\n  symcal:            ['MathFont', TexConstant.Variant.CALLIGRAPHIC],\n  symbfcal:          ['MathFont', TexConstant.Variant.BOLDCALLIGRAPHIC],\n\n  textrm:            ['HBox', null, TexConstant.Variant.NORMAL],\n  textup:            ['HBox', null, TexConstant.Variant.NORMAL],\n  textnormal:        ['HBox'],\n  textit:            ['HBox', null, TexConstant.Variant.ITALIC],\n  textbf:            ['HBox', null, TexConstant.Variant.BOLD],\n  textsf:            ['HBox', null, TexConstant.Variant.SANSSERIF],\n  texttt:            ['HBox', null, TexConstant.Variant.MONOSPACE],\n\n  tiny:              ['SetSize', 0.5],\n  Tiny:              ['SetSize', 0.6],  // non-standard\n  scriptsize:        ['SetSize', 0.7],\n  small:             ['SetSize', 0.85],\n  normalsize:        ['SetSize', 1.0],\n  large:             ['SetSize', 1.2],\n  Large:             ['SetSize', 1.44],\n  LARGE:             ['SetSize', 1.73],\n  huge:              ['SetSize', 2.07],\n  Huge:              ['SetSize', 2.49],\n\n  arcsin:             'NamedFn',\n  arccos:             'NamedFn',\n  arctan:             'NamedFn',\n  arg:                'NamedFn',\n  cos:                'NamedFn',\n  cosh:               'NamedFn',\n  cot:                'NamedFn',\n  coth:               'NamedFn',\n  csc:                'NamedFn',\n  deg:                'NamedFn',\n  det:                'NamedOp',\n  dim:                'NamedFn',\n  exp:                'NamedFn',\n  gcd:                'NamedOp',\n  hom:                'NamedFn',\n  inf:                'NamedOp',\n  ker:                'NamedFn',\n  lg:                 'NamedFn',\n  lim:                'NamedOp',\n  liminf:            ['NamedOp', 'lim&thinsp;inf'],\n  limsup:            ['NamedOp', 'lim&thinsp;sup'],\n  ln:                 'NamedFn',\n  log:                'NamedFn',\n  max:                'NamedOp',\n  min:                'NamedOp',\n  Pr:                 'NamedOp',\n  sec:                'NamedFn',\n  sin:                'NamedFn',\n  sinh:               'NamedFn',\n  sup:                'NamedOp',\n  tan:                'NamedFn',\n  tanh:               'NamedFn',\n\n  limits:            ['Limits', 1],\n  nolimits:          ['Limits', 0],\n\n  overline:            ['UnderOver', '2015'],\n  underline:           ['UnderOver', '2015'],\n  overbrace:           ['UnderOver', '23DE', 1],\n  underbrace:          ['UnderOver', '23DF', 1],\n  overparen:           ['UnderOver', '23DC'],\n  underparen:          ['UnderOver', '23DD'],\n  overrightarrow:      ['UnderOver', '2192'],\n  underrightarrow:     ['UnderOver', '2192'],\n  overleftarrow:       ['UnderOver', '2190'],\n  underleftarrow:      ['UnderOver', '2190'],\n  overleftrightarrow:  ['UnderOver', '2194'],\n  underleftrightarrow: ['UnderOver', '2194'],\n\n  overset:            'Overset',\n  underset:           'Underset',\n  overunderset:       'Overunderset',\n  stackrel:           ['Macro', '\\\\mathrel{\\\\mathop{#2}\\\\limits^{#1}}', 2],\n  stackbin:           ['Macro', '\\\\mathbin{\\\\mathop{#2}\\\\limits^{#1}}', 2],\n\n  over:               'Over',\n  overwithdelims:     'Over',\n  atop:               'Over',\n  atopwithdelims:     'Over',\n  above:              'Over',\n  abovewithdelims:    'Over',\n  brace:             ['Over', '{', '}'],\n  brack:             ['Over', '[', ']'],\n  choose:            ['Over', '(', ')'],\n\n  frac:               'Frac',\n  sqrt:               'Sqrt',\n  root:               'Root',\n  uproot:            ['MoveRoot', 'upRoot'],\n  leftroot:          ['MoveRoot', 'leftRoot'],\n\n  left:               'LeftRight',\n  right:              'LeftRight',\n  middle:             'LeftRight',\n\n  llap:               'Lap',\n  rlap:               'Lap',\n  raise:              'RaiseLower',\n  lower:              'RaiseLower',\n  moveleft:           'MoveLeftRight',\n  moveright:          'MoveLeftRight',\n\n  ',':               ['Spacer', MATHSPACE.thinmathspace],\n  ':':               ['Spacer', MATHSPACE.mediummathspace],\n  '>':               ['Spacer', MATHSPACE.mediummathspace],\n  ';':               ['Spacer', MATHSPACE.thickmathspace],\n  '!':               ['Spacer', MATHSPACE.negativethinmathspace],\n  enspace:           ['Spacer', .5],\n  quad:              ['Spacer', 1],\n  qquad:             ['Spacer', 2],\n  thinspace:         ['Spacer', MATHSPACE.thinmathspace],\n  negthinspace:      ['Spacer', MATHSPACE.negativethinmathspace],\n\n  hskip:              'Hskip',\n  hspace:             'Hskip',\n  kern:               'Hskip',\n  mskip:              'Hskip',\n  mspace:             'Hskip',\n  mkern:              'Hskip',\n  rule:               'rule',\n  Rule:              ['Rule'],\n  Space:             ['Rule', 'blank'],\n  nonscript:          'Nonscript',\n\n  big:               ['MakeBig', TEXCLASS.ORD, 0.85],\n  Big:               ['MakeBig', TEXCLASS.ORD, 1.15],\n  bigg:              ['MakeBig', TEXCLASS.ORD, 1.45],\n  Bigg:              ['MakeBig', TEXCLASS.ORD, 1.75],\n  bigl:              ['MakeBig', TEXCLASS.OPEN, 0.85],\n  Bigl:              ['MakeBig', TEXCLASS.OPEN, 1.15],\n  biggl:             ['MakeBig', TEXCLASS.OPEN, 1.45],\n  Biggl:             ['MakeBig', TEXCLASS.OPEN, 1.75],\n  bigr:              ['MakeBig', TEXCLASS.CLOSE, 0.85],\n  Bigr:              ['MakeBig', TEXCLASS.CLOSE, 1.15],\n  biggr:             ['MakeBig', TEXCLASS.CLOSE, 1.45],\n  Biggr:             ['MakeBig', TEXCLASS.CLOSE, 1.75],\n  bigm:              ['MakeBig', TEXCLASS.REL, 0.85],\n  Bigm:              ['MakeBig', TEXCLASS.REL, 1.15],\n  biggm:             ['MakeBig', TEXCLASS.REL, 1.45],\n  Biggm:             ['MakeBig', TEXCLASS.REL, 1.75],\n\n  mathord:           ['TeXAtom', TEXCLASS.ORD],\n  mathop:            ['TeXAtom', TEXCLASS.OP],\n  mathopen:          ['TeXAtom', TEXCLASS.OPEN],\n  mathclose:         ['TeXAtom', TEXCLASS.CLOSE],\n  mathbin:           ['TeXAtom', TEXCLASS.BIN],\n  mathrel:           ['TeXAtom', TEXCLASS.REL],\n  mathpunct:         ['TeXAtom', TEXCLASS.PUNCT],\n  mathinner:         ['TeXAtom', TEXCLASS.INNER],\n\n  vcenter:           ['TeXAtom', TEXCLASS.VCENTER],\n\n  buildrel:           'BuildRel',\n\n  hbox:               ['HBox', 0],\n  text:               'HBox',\n  mbox:               ['HBox', 0],\n  fbox:               'FBox',\n  boxed:              ['Macro', '\\\\fbox{$\\\\displaystyle{#1}$}', 1],\n  framebox:           'FrameBox',\n\n  strut:              'Strut',\n  mathstrut:         ['Macro', '\\\\vphantom{(}'],\n  phantom:            'Phantom',\n  vphantom:          ['Phantom', 1, 0],\n  hphantom:          ['Phantom', 0, 1],\n  smash:              'Smash',\n\n  acute:             ['Accent', '00B4'],  // or 0301 or 02CA\n  grave:             ['Accent', '0060'],  // or 0300 or 02CB\n  ddot:              ['Accent', '00A8'],  // or 0308\n  tilde:             ['Accent', '007E'],  // or 0303 or 02DC\n  bar:               ['Accent', '00AF'],  // or 0304 or 02C9\n  breve:             ['Accent', '02D8'],  // or 0306\n  check:             ['Accent', '02C7'],  // or 030C\n  hat:               ['Accent', '005E'],  // or 0302 or 02C6\n  vec:               ['Accent', '2192'],  // or 20D7\n  dot:               ['Accent', '02D9'],  // or 0307\n  widetilde:         ['Accent', '007E', 1], // or 0303 or 02DC\n  widehat:           ['Accent', '005E', 1], // or 0302 or 02C6\n\n  matrix:             'Matrix',\n  array:              'Matrix',\n  pmatrix:           ['Matrix', '(', ')'],\n  cases:             ['Matrix', '{', '', 'left left', null, '.1em', null,\n                      true],\n  eqalign:           ['Matrix', null, null, 'right left',\n                      em(MATHSPACE.thickmathspace), '.5em', 'D'],\n  displaylines:      ['Matrix', null, null, 'center', null, '.5em', 'D'],\n  cr:                 'Cr',\n  '\\\\':               'CrLaTeX',\n  newline:           ['CrLaTeX', true],\n  hline:             ['HLine', 'solid'],\n  hdashline:         ['HLine', 'dashed'],\n  //      noalign:            'HandleNoAlign',\n  eqalignno:         ['Matrix', null, null, 'right left',\n                      em(MATHSPACE.thickmathspace), '.5em', 'D', null,\n                      'right'],\n  leqalignno:        ['Matrix', null, null, 'right left',\n                      em(MATHSPACE.thickmathspace), '.5em', 'D', null,\n                      'left'],\n  hfill:              'HFill',\n  hfil:               'HFill',   // \\hfil treated as \\hfill for now\n  hfilll:             'HFill',   // \\hfilll treated as \\hfill for now\n\n  //  TeX substitution macros\n  bmod:              ['Macro', '\\\\mmlToken{mo}[lspace=\"thickmathspace\"' +\n                      ' rspace=\"thickmathspace\"]{mod}'],\n  pmod:              ['Macro', '\\\\pod{\\\\mmlToken{mi}{mod}\\\\kern 6mu #1}', 1],\n  mod:               ['Macro', '\\\\mathchoice{\\\\kern18mu}{\\\\kern12mu}' +\n                      '{\\\\kern12mu}{\\\\kern12mu}\\\\mmlToken{mi}{mod}\\\\,\\\\,#1',\n                      1],\n  pod:               ['Macro', '\\\\mathchoice{\\\\kern18mu}{\\\\kern8mu}' +\n                      '{\\\\kern8mu}{\\\\kern8mu}(#1)', 1],\n  iff:               ['Macro', '\\\\;\\\\Longleftrightarrow\\\\;'],\n  skew:              ['Macro', '{{#2{#3\\\\mkern#1mu}\\\\mkern-#1mu}{}}', 3],\n\n  pmb:               ['Macro', '\\\\rlap{#1}\\\\kern1px{#1}', 1],\n  TeX:               ['Macro', 'T\\\\kern-.14em\\\\lower.5ex{E}\\\\kern-.115em X'],\n  LaTeX:             ['Macro', 'L\\\\kern-.325em\\\\raise.21em' +\n                      '{\\\\scriptstyle{A}}\\\\kern-.17em\\\\TeX'],\n  ' ':               ['Macro', '\\\\text{ }'],\n\n  //  Specially handled\n  not:                'Not',\n  dots:               'Dots',\n  space:              'Tilde',\n  '\\u00A0':           'Tilde',\n\n\n  //  LaTeX\n  begin:              'BeginEnd',\n  end:                'BeginEnd',\n\n  label:              'HandleLabel',\n  ref:                'HandleRef',\n  nonumber:           'HandleNoTag',\n\n  // Internal use:\n  mathchoice:         'MathChoice',\n  mmlToken:           'MmlToken'\n}, BaseMethods);\n\n\n/**\n * Macros for LaTeX environments.\n */\nnew sm.EnvironmentMap('environment', ParseMethods.environment, {\n  array:         ['AlignedArray'],\n  equation:      ['Equation', null, true],\n  eqnarray:      ['EqnArray', null, true, true, 'rcl',\n                  ParseUtil.cols(0, MATHSPACE.thickmathspace), '.5em']\n}, BaseMethods);\n\n\n/**\n * Mapping for negated operators.\n */\nnew sm.CharacterMap('not_remap', null, {\n  '\\u2190': '\\u219A',\n  '\\u2192': '\\u219B',\n  '\\u2194': '\\u21AE',\n  '\\u21D0': '\\u21CD',\n  '\\u21D2': '\\u21CF',\n  '\\u21D4': '\\u21CE',\n  '\\u2208': '\\u2209',\n  '\\u220B': '\\u220C',\n  '\\u2223': '\\u2224',\n  '\\u2225': '\\u2226',\n  '\\u223C': '\\u2241',\n  '\\u007E': '\\u2241',\n  '\\u2243': '\\u2244',\n  '\\u2245': '\\u2247',\n  '\\u2248': '\\u2249',\n  '\\u224D': '\\u226D',\n  '\\u003D': '\\u2260',\n  '\\u2261': '\\u2262',\n  '\\u003C': '\\u226E',\n  '\\u003E': '\\u226F',\n  '\\u2264': '\\u2270',\n  '\\u2265': '\\u2271',\n  '\\u2272': '\\u2274',\n  '\\u2273': '\\u2275',\n  '\\u2276': '\\u2278',\n  '\\u2277': '\\u2279',\n  '\\u227A': '\\u2280',\n  '\\u227B': '\\u2281',\n  '\\u2282': '\\u2284',\n  '\\u2283': '\\u2285',\n  '\\u2286': '\\u2288',\n  '\\u2287': '\\u2289',\n  '\\u22A2': '\\u22AC',\n  '\\u22A8': '\\u22AD',\n  '\\u22A9': '\\u22AE',\n  '\\u22AB': '\\u22AF',\n  '\\u227C': '\\u22E0',\n  '\\u227D': '\\u22E1',\n  '\\u2291': '\\u22E2',\n  '\\u2292': '\\u22E3',\n  '\\u22B2': '\\u22EA',\n  '\\u22B3': '\\u22EB',\n  '\\u22B4': '\\u22EC',\n  '\\u22B5': '\\u22ED',\n  '\\u2203': '\\u2204'\n});\n"],"names":[],"mappings":"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Q;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,QAAQ;CACnB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8081, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8086, "column": 0}, "map": {"version":3,"file":"BaseConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/base/BaseConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration for the Base LaTeX parser.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {MapHandler} from '../MapHandler.js';\nimport TexError from '../TexError.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexParser from '../TexParser.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport * as bitem from './BaseItems.js';\nimport {AbstractTags} from '../Tags.js';\nimport './BaseMappings.js';\nimport {getRange} from '../../../core/MmlTree/OperatorDictionary.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport ParseOptions from '../ParseOptions.js';\n\n/**\n * Remapping some ASCII characters to their Unicode operator equivalent.\n */\nnew CharacterMap('remap', null, {\n  '-':   '\\u2212',\n  '*':   '\\u2217',\n  '`':   '\\u2018'   // map ` to back quote\n});\n\n\n/**\n * Default handling of characters (as <mo> elements).\n * @param {TexParser} parser The calling parser.\n * @param {string} char The character to parse.\n */\nexport function Other(parser: TexParser, char: string) {\n  const font = parser.stack.env['font'];\n  let def = font ?\n    // @test Other Font\n    {mathvariant: parser.stack.env['font']} : {};\n  const remap = (MapHandler.getMap('remap') as CharacterMap).lookup(char);\n  const range = getRange(char);\n  const type = (range ? range[3] : 'mo');\n  // @test Other\n  // @test Other Remap\n  let mo = parser.create('token', type, def, (remap ? remap.char : char));\n  range[4] && mo.attributes.set('mathvariant', range[4]);\n  if (type === 'mo') {\n    NodeUtil.setProperty(mo, 'fixStretchy', true);\n    parser.configuration.addNode('fixStretchy', mo);\n  }\n  parser.Push(mo);\n}\n\n\n/**\n * Handle undefined control sequence.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nfunction csUndefined(_parser: TexParser, name: string) {\n  // @test Undefined-CS\n  throw new TexError('UndefinedControlSequence',\n                      'Undefined control sequence %1', '\\\\' + name);\n}\n\n\n/**\n * Handle undefined environments.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nfunction envUndefined(_parser: TexParser, env: string) {\n  // @test Undefined-Env\n  throw new TexError('UnknownEnv', 'Unknown environment \\'%1\\'', env);\n}\n\n/**\n * Filter for removing spacing following \\nonscript\n * @param{ParseOptions} data The active tex parser.\n */\nfunction filterNonscript({data}: {data: ParseOptions}) {\n  for (const mml of data.getList('nonscript')) {\n    //\n    //  This is the list of mspace elements or mrow > mstyle > mspace\n    //    that followed \\nonscript macros to be tested for removal.\n    //\n    if (mml.attributes.get('scriptlevel') > 0) {\n      //\n      //  The mspace needs to be removed, since we are in a script style.\n      //  Remove it from the DOM and from the list of mspace elements.\n      //\n      const parent = mml.parent;\n      parent.childNodes.splice(parent.childIndex(mml), 1);\n      data.removeFromList(mml.kind, [mml]);\n      //\n      //  If it is an mrow > mstyle > mspace, then we have just\n      //    removed the mrow from its list, and must remove\n      //    the mstyle and mspace from their lists as well.\n      //\n      if (mml.isKind('mrow')) {\n        const mstyle = mml.childNodes[0] as MmlNode;\n        data.removeFromList('mstyle', [mstyle]);\n        data.removeFromList('mspace', mstyle.childNodes[0].childNodes as MmlNode[]);\n      }\n    } else if (mml.isKind('mrow')) {\n      //\n      // This is an mrow > mstyle > mspace  but we're not in a script\n      //   style, so remove the mrow that we had added in the NonscriptItem.\n      //\n      mml.parent.replaceChild(mml.childNodes[0], mml);\n      data.removeFromList('mrow', [mml]);\n    }\n  }\n}\n\n\n/**\n * @constructor\n * @extends {AbstractTags}\n */\nexport class BaseTags extends AbstractTags { }\n\n\n/**\n * The base configuration.\n * @type {Configuration}\n */\nexport const BaseConfiguration: Configuration = Configuration.create(\n  'base',  {\n    handler: {\n      character: ['command', 'special', 'letter', 'digit'],\n      delimiter: ['delimiter'],\n      // Note, that the position of the delimiters here is important!\n      macro: ['delimiter', 'macros', 'mathchar0mi', 'mathchar0mo', 'mathchar7'],\n      environment: ['environment']\n    },\n    fallback: {\n      character: Other,\n      macro: csUndefined,\n      environment: envUndefined\n    },\n    items: {\n      // BaseItems\n      [bitem.StartItem.prototype.kind]: bitem.StartItem,\n      [bitem.StopItem.prototype.kind]: bitem.StopItem,\n      [bitem.OpenItem.prototype.kind]: bitem.OpenItem,\n      [bitem.CloseItem.prototype.kind]: bitem.CloseItem,\n      [bitem.PrimeItem.prototype.kind]: bitem.PrimeItem,\n      [bitem.SubsupItem.prototype.kind]: bitem.SubsupItem,\n      [bitem.OverItem.prototype.kind]: bitem.OverItem,\n      [bitem.LeftItem.prototype.kind]: bitem.LeftItem,\n      [bitem.Middle.prototype.kind]: bitem.Middle,\n      [bitem.RightItem.prototype.kind]: bitem.RightItem,\n      [bitem.BeginItem.prototype.kind]: bitem.BeginItem,\n      [bitem.EndItem.prototype.kind]: bitem.EndItem,\n      [bitem.StyleItem.prototype.kind]: bitem.StyleItem,\n      [bitem.PositionItem.prototype.kind]: bitem.PositionItem,\n      [bitem.CellItem.prototype.kind]: bitem.CellItem,\n      [bitem.MmlItem.prototype.kind]: bitem.MmlItem,\n      [bitem.FnItem.prototype.kind]: bitem.FnItem,\n      [bitem.NotItem.prototype.kind]: bitem.NotItem,\n      [bitem.NonscriptItem.prototype.kind]: bitem.NonscriptItem,\n      [bitem.DotsItem.prototype.kind]: bitem.DotsItem,\n      [bitem.ArrayItem.prototype.kind]: bitem.ArrayItem,\n      [bitem.EqnArrayItem.prototype.kind]: bitem.EqnArrayItem,\n      [bitem.EquationItem.prototype.kind]: bitem.EquationItem\n    },\n    options: {\n      maxMacros: 1000,\n      baseURL: (typeof(document) === 'undefined' ||\n                document.getElementsByTagName('base').length === 0) ?\n                '' : String(document.location).replace(/#.*$/, '')\n    },\n    tags: {\n      base: BaseTags\n    },\n    postprocessors: [[filterNonscript, -4]]\n  }\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8294, "column": 0}, "map": {"version":3,"file":"tex.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Implements the TeX InputJax object\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport {AbstractInputJax} from '../core/InputJax.js';\nimport {userOptions, separateOptions, OptionList} from '../util/Options.js';\nimport {MathDocument} from '../core/MathDocument.js';\nimport {MathItem} from '../core/MathItem.js';\nimport {MmlNode} from '../core/MmlTree/MmlNode.js';\nimport {MmlFactory} from '../core/MmlTree/MmlFactory.js';\n\nimport {FindTeX} from './tex/FindTeX.js';\n\nimport FilterUtil from './tex/FilterUtil.js';\nimport NodeUtil from './tex/NodeUtil.js';\nimport TexParser from './tex/TexParser.js';\nimport TexError from './tex/TexError.js';\nimport ParseOptions from './tex/ParseOptions.js';\nimport {TagsFactory} from './tex/Tags.js';\nimport {ParserConfiguration} from './tex/Configuration.js';\n// Import base as it is the default package loaded.\nimport './tex/base/BaseConfiguration.js';\n\n\n/*****************************************************************/\n/*\n *  Implements the TeX class (extends AbstractInputJax)\n */\n\n/**\n * @template N  The HTMLElement node class\n * @template T  The Text node class\n * @template D  The Document class\n */\nexport class TeX<N, T, D> extends AbstractInputJax<N, T, D> {\n\n  /**\n   * Name of input jax.\n   * @type {string}\n   */\n  public static NAME: string = 'TeX';\n\n  /**\n   * Default options for the jax.\n   * @type {OptionList}\n   */\n  public static OPTIONS: OptionList = {\n    ...AbstractInputJax.OPTIONS,\n    FindTeX: null,\n    packages: ['base'],\n    // Digit pattern to match numbers.\n    digits: /^(?:[0-9]+(?:\\{,\\}[0-9]{3})*(?:\\.[0-9]*)?|\\.[0-9]+)/,\n    // Maximum size of TeX string to process.\n    maxBuffer: 5 * 1024,\n    formatError: (jax: TeX<any, any, any>, err: TexError) => jax.formatError(err)\n  };\n\n  /**\n   * The FindTeX instance used for locating TeX in strings\n   */\n  protected findTeX: FindTeX<N, T, D>;\n\n  /**\n   * The configuration of the TeX jax.\n   * @type {ParserConfiguration}\n   */\n  protected configuration: ParserConfiguration;\n\n  /**\n   * The LaTeX code that is parsed.\n   * @type {string}\n   */\n  protected latex: string;\n\n  /**\n   * The Math node that results from parsing.\n   * @type {MmlNode}\n   */\n  protected mathNode: MmlNode;\n\n  private _parseOptions: ParseOptions;\n\n  /**\n   * Initialises the configurations.\n   * @param {string[]} packages Names of packages.\n   * @return {Configuration} The configuration object.\n   */\n  protected static configure(packages: (string | [string, number])[]): ParserConfiguration {\n    let configuration = new ParserConfiguration(packages, ['tex']);\n    configuration.init();\n    return configuration;\n  }\n\n\n  /**\n   * Initialises the Tags factory. Add tagging structures from packages and set\n   * tagging to given default.\n   * @param {ParseOptions} options The parse options.\n   * @param {Configuration} configuration The configuration.\n   */\n  protected static tags(options: ParseOptions, configuration: ParserConfiguration) {\n    TagsFactory.addTags(configuration.tags);\n    TagsFactory.setDefault(options.options.tags);\n    options.tags = TagsFactory.getDefault();\n    options.tags.configuration = options;\n  }\n\n\n  /**\n   * @override\n   */\n  constructor(options: OptionList = {}) {\n    const [rest, tex, find] = separateOptions(options, TeX.OPTIONS, FindTeX.OPTIONS);\n    super(tex);\n    this.findTeX = this.options['FindTeX'] || new FindTeX(find);\n    const packages = this.options.packages;\n    const configuration = this.configuration = TeX.configure(packages);\n    const parseOptions = this._parseOptions =\n      new ParseOptions(configuration, [this.options, TagsFactory.OPTIONS]);\n    userOptions(parseOptions.options, rest);\n    configuration.config(this);\n    TeX.tags(parseOptions, configuration);\n    this.postFilters.add(FilterUtil.cleanSubSup, -6);\n    this.postFilters.add(FilterUtil.setInherited, -5);\n    this.postFilters.add(FilterUtil.moveLimits, -4);\n    this.postFilters.add(FilterUtil.cleanStretchy, -3);\n    this.postFilters.add(FilterUtil.cleanAttributes, -2);\n    this.postFilters.add(FilterUtil.combineRelations, -1);\n  }\n\n  /**\n   * @override\n   */\n  public setMmlFactory(mmlFactory: MmlFactory) {\n    super.setMmlFactory(mmlFactory);\n    this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);\n  }\n\n\n  /**\n   * @return {ParseOptions} The parse options that configure this JaX instance.\n   */\n  public get parseOptions(): ParseOptions {\n    return this._parseOptions;\n  }\n\n  /**\n   * @override\n   */\n  public reset(tag: number = 0) {\n    this.parseOptions.tags.reset(tag);\n  }\n\n\n  /**\n   * @override\n   */\n  public compile(math: MathItem<N, T, D>, document: MathDocument<N, T, D>): MmlNode {\n    this.parseOptions.clear();\n    this.executeFilters(this.preFilters, math, document, this.parseOptions);\n    let display = math.display;\n    this.latex = math.math;\n    let node: MmlNode;\n    this.parseOptions.tags.startEquation(math);\n    let globalEnv;\n    try {\n      let parser = new TexParser(this.latex,\n                                 {display: display, isInner: false},\n                                 this.parseOptions);\n      node = parser.mml();\n      globalEnv = parser.stack.global;\n    } catch (err) {\n      if (!(err instanceof TexError)) {\n        throw err;\n      }\n      this.parseOptions.error = true;\n      node = this.options.formatError(this, err);\n    }\n    node = this.parseOptions.nodeFactory.create('node', 'math', [node]);\n    if (globalEnv?.indentalign) {\n      NodeUtil.setAttribute(node, 'indentalign', globalEnv.indentalign);\n    }\n    if (display) {\n      NodeUtil.setAttribute(node, 'display', 'block');\n    }\n    this.parseOptions.tags.finishEquation(math);\n    this.parseOptions.root = node;\n    this.executeFilters(this.postFilters, math, document, this.parseOptions);\n    this.mathNode = this.parseOptions.root;\n    return this.mathNode;\n  }\n\n\n  /**\n   * @override\n   */\n  public findMath(strings: string[]) {\n    return this.findTeX.findMath(strings);\n  }\n\n  /**\n   * Default formatter for error messages:\n   *   wrap an error into a node for output.\n   * @param {TeXError} err The TexError.\n   * @return {Node} The merror node.\n   */\n  public formatError(err: TexError): MmlNode {\n    let message = err.message.replace(/\\n.*/, '');\n    return this.parseOptions.nodeFactory.create(\n      'error', message, err.id, this.latex);\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8480, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8485, "column": 0}, "map": {"version":3,"file":"ActionConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/action/ActionConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the action package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport BaseMethods from '../base/BaseMethods.js';\n\n\n// Namespace\nexport let ActionMethods: Record<string, ParseMethod> = {};\n\nActionMethods.Macro = BaseMethods.Macro;\n\n/**\n * Implement \\toggle {math1} {math2} ... \\endtoggle\n *    (as an <maction actiontype=\"toggle\">)\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nActionMethods.Toggle = function(parser: TexParser, name: string) {\n  const children = [];\n  let arg;\n  while ((arg = parser.GetArgument(name)) !== '\\\\endtoggle') {\n    children.push(\n      new TexParser(arg, parser.stack.env, parser.configuration).mml());\n  }\n  parser.Push(\n    parser.create('node', 'maction', children, {actiontype: 'toggle'}));\n};\n\n\n/**\n * Implement \\mathtip{math}{tip}\n *   (an an <maction actiontype=\"tooltip\">)\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nActionMethods.Mathtip = function(parser: TexParser, name: string) {\n  const arg = parser.ParseArg(name);\n  const tip = parser.ParseArg(name);\n  parser.Push(\n    parser.create('node', 'maction', [arg, tip], {actiontype: 'tooltip'}));\n};\n\n\nnew CommandMap('action-macros', {\n  toggle:  'Toggle',\n  mathtip: 'Mathtip',\n  texttip: ['Macro', '\\\\mathtip{#1}{\\\\text{#2}}', 2]\n}, ActionMethods);\n\n\nexport const ActionConfiguration = Configuration.create(\n  'action', {handler: {macro: ['action-macros']}}\n);\n"],"names":[],"mappings":";;;;;;;;;;AAwBA,IAAA,oDAAkD;AAClD,IAAA,iBAAA,4CAAwC;AACxC,IAAA,4CAA2C;AAE3C,IAAA,mBAAA,mDAAiD;AAItC,QAAA,aAAa,GAAgC,CAAA,CAAE,CAAC;AAE3D,QAAA,aAAa,CAAC,KAAK,GAAG,iBAAA,OAAW,CAAC,KAAK,CAAC;AAQxC,QAAA,aAAa,CAAC,MAAM,GAAG,SAAS,MAAiB,EAAE,IAAY;IAC7D,IAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,IAAI,GAAG,CAAC;IACR,MAAO,CAAC,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,aAAa,CAAE;QACzD,QAAQ,CAAC,IAAI,CACX,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;KACrE;IACD,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE;QAAC,UAAU,EAAE,QAAQ;IAAA,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC;AASF,QAAA,aAAa,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY;IAC9D,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,GAAG;QAAE,GAAG;KAAC,EAAE;QAAC,UAAU,EAAE,SAAS;IAAA,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC;AAGF,IAAI,eAAA,UAAU,CAAC,eAAe,EAAE;IAC9B,MAAM,EAAG,QAAQ;IACjB,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE;QAAC,OAAO;QAAE,2BAA2B;QAAE,CAAC;KAAC;CACnD,EAAE,QAAA,aAAa,CAAC,CAAC;AAGL,QAAA,mBAAmB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACrD,QAAQ,EAAE;IAAC,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,eAAe;SAAC;IAAA,CAAC;AAAA,CAAC,CAChD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8542, "column": 0}, "map": {"version":3,"file":"AmsItems.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ams/AmsItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview StackItems needed for parsing AMS math commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {ArrayItem, EqnArrayItem} from '../base/BaseItems.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexError from '../TexError.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\n\n/**\n * Item dealing with multiline environments as a special case of arrays. Note,\n * that all other AMS equation environments (e.g., align, split) can be handled\n * by the regular EqnArrayItem class.\n *\n * Handles tagging information according to the given tagging style.\n */\nexport class MultlineItem extends ArrayItem {\n\n  /**\n   * @override\n   */\n  constructor(factory: any, ...args: any[]) {\n    super(factory);\n    this.factory.configuration.tags.start('multline', true, args[0]);\n  }\n\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'multline';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    if (this.table.length) {\n      ParseUtil.fixInitialMO(this.factory.configuration, this.nodes);\n    }\n    const shove = this.getProperty('shove');\n    const mtd = this.create('node',\n                            'mtd', this.nodes, shove ? {columnalign: shove} : {});\n    this.setProperty('shove', null);\n    this.row.push(mtd);\n    this.Clear();\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    if (this.row.length !== 1) {\n      // @test MultlineRowsOneCol\n      throw new TexError(\n        'MultlineRowsOneCol',\n        'The rows within the %1 environment must have exactly one column',\n        'multline');\n    }\n    let row = this.create('node', 'mtr', this.row);\n    this.table.push(row);\n    this.row = [];\n  }\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    super.EndTable();\n    if (this.table.length) {\n      let m = this.table.length - 1, label = -1;\n      if (!NodeUtil.getAttribute(\n        NodeUtil.getChildren(this.table[0])[0], 'columnalign')) {\n        NodeUtil.setAttribute(NodeUtil.getChildren(this.table[0])[0],\n                              'columnalign', TexConstant.Align.LEFT);\n      }\n      if (!NodeUtil.getAttribute(\n        NodeUtil.getChildren(this.table[m])[0], 'columnalign')) {\n        NodeUtil.setAttribute(NodeUtil.getChildren(this.table[m])[0],\n                              'columnalign', TexConstant.Align.RIGHT);\n      }\n      let tag = this.factory.configuration.tags.getTag();\n      if (tag) {\n        label = (this.arraydef.side === TexConstant.Align.LEFT ? 0 : this.table.length - 1);\n        const mtr = this.table[label];\n        const mlabel = this.create('node', 'mlabeledtr',\n                                   [tag].concat(NodeUtil.getChildren(mtr)));\n        NodeUtil.copyAttributes(mtr, mlabel);\n        this.table[label] = mlabel;\n      }\n    }\n    this.factory.configuration.tags.end();\n  }\n}\n\n/**\n * StackItem for handling flalign, xalignat, and xxalignat environments.\n */\nexport class FlalignItem extends EqnArrayItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'flalign';\n  }\n\n\n  /**\n   * @override\n   */\n  constructor(factory: any, public name: string, public numbered: boolean,\n              public padded: boolean, public center: boolean) {\n    super(factory);\n    this.factory.configuration.tags.start(name, numbered, numbered);\n  }\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    super.EndEntry();\n    const n = this.getProperty('xalignat') as number;\n    if (!n) return;\n    if (this.row.length > n) {\n      throw new TexError('XalignOverflow', 'Extra %1 in row of %2', '&', this.name);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    let cell: MmlNode;\n    let row = this.row;\n    //\n    //  For xalignat and xxalignat, pad the row to the expected number if it is too short.\n    //\n    const n = this.getProperty('xalignat') as number;\n    while (row.length < n) {\n      row.push(this.create('node', 'mtd'));\n    }\n    //\n    //  Insert padding cells between pairs of entries, as needed for \"fit\" columns,\n    //    and include initial and end cells if that is needed.\n    //\n    this.row = [];\n    if (this.padded) {\n      this.row.push(this.create('node', 'mtd'));\n    }\n    while ((cell = row.shift())) {\n      this.row.push(cell);\n      cell = row.shift();\n      if (cell) this.row.push(cell);\n      if (row.length || this.padded) {\n        this.row.push(this.create('node', 'mtd'));\n      }\n    }\n    //\n    if (this.row.length > this.maxrow) {\n      this.maxrow = this.row.length;\n    }\n    super.EndRow();\n    //\n    // For full-width environments with labels that aren't supposed to take up space,\n    //   move the label into a zero-width mpadded element that laps in the proper direction.\n    //\n    const mtr = this.table[this.table.length - 1];\n    if (this.getProperty('zeroWidthLabel') && mtr.isKind('mlabeledtr')) {\n      const mtd = NodeUtil.getChildren(mtr)[0];\n      const side = this.factory.configuration.options['tagSide'];\n      const def = {width: 0, ...(side === 'right' ? {lspace: '-1width'} : {})};\n      const mpadded = this.create('node', 'mpadded', NodeUtil.getChildren(mtd), def);\n      mtd.setChildren([mpadded]);\n    }\n  }\n\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    super.EndTable();\n    if (this.center) {\n      //\n      //  If there is only one equation (one pair):\n      //    Don't make it 100%, and don't change the indentalign.\n      //\n      if (this.maxrow <= 2) {\n        const def = this.arraydef;\n        delete def.width;\n        delete this.global.indentalign;\n      }\n    }\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8728, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8733, "column": 0}, "map": {"version":3,"file":"AmsMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ams/AmsMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview The AMS Parse methods.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {StackItem} from '../StackItem.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\nimport ParseMethods from '../ParseMethods.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {TexConstant} from '../TexConstants.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {Macro} from '../Symbol.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ArrayItem} from '../base/BaseItems.js';\nimport {FlalignItem} from './AmsItems.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMunderover} from '../../../core/MmlTree/MmlNodes/munderover.js';\nimport {MmlNode, AbstractMmlTokenNode} from '../../../core/MmlTree/MmlNode.js';\n\n\n// Namespace\nexport const AmsMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Handle AMS array environments.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered Environment numbered.\n * @param {boolean} taggable Environment taggable (e.g., align* is taggable,\n *     split is not).\n * @param {string} align Column alignment.\n * @param {string} spacing Column spacing.\n * @param {string} style Display style indicator.\n */\nAmsMethods.AmsEqnArray = function(parser: TexParser, begin: StackItem,\n                                      numbered: boolean, taggable: boolean,\n                                      align: string, spacing: string,\n                                      style: string) {\n  // @test Aligned, Gathered\n  const args = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n  const array = BaseMethods.EqnArray(parser, begin, numbered, taggable, align, spacing, style);\n  return ParseUtil.setArrayAlign(array as ArrayItem, args);\n};\n\n\n/**\n * Handle AMS  alignat environments.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered Environment numbered.\n * @param {boolean} taggable Environment taggable (e.g., align* is taggable,\n *     split is not).\n */\nAmsMethods.AlignAt = function(parser: TexParser, begin: StackItem,\n                              numbered: boolean, taggable: boolean) {\n  const name = begin.getName();\n  let n, valign, align = '', spacing = [];\n  if (!taggable) {\n    // @test Alignedat\n    valign = parser.GetBrackets('\\\\begin{' + name + '}');\n  }\n  n = parser.GetArgument('\\\\begin{' + name + '}');\n  if (n.match(/[^0-9]/)) {\n    // @test PositiveIntegerArg\n    throw new TexError('PositiveIntegerArg',\n                        'Argument to %1 must me a positive integer',\n                        '\\\\begin{' + name + '}');\n  }\n  let count = parseInt(n, 10);\n  while (count > 0) {\n    align  += 'rl';\n    spacing.push('0em 0em');\n    count--;\n  }\n  let spaceStr = spacing.join(' ');\n  if (taggable) {\n    // @test Alignat, Alignat Star\n    return AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);\n  }\n  // @test Alignedat\n  let array = AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);\n  return ParseUtil.setArrayAlign(array as ArrayItem, valign);\n};\n\n\n/**\n * Implements multline environment (mostly handled through STACKITEM below)\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n * @param {boolean} numbered Environment numbered.\n */\nAmsMethods.Multline = function (parser: TexParser, begin: StackItem, numbered: boolean) {\n  // @test Shove*, Multline\n  parser.Push(begin);\n  ParseUtil.checkEqnEnv(parser);\n  const item = parser.itemFactory.create('multline', numbered, parser.stack) as ArrayItem;\n  item.arraydef = {\n    displaystyle: true,\n    rowspacing: '.5em',\n    columnspacing: '100%',\n    width: parser.options.ams['multlineWidth'],\n    side: parser.options['tagSide'],\n    minlabelspacing: parser.options['tagIndent'],\n    framespacing: parser.options.ams['multlineIndent'] + ' 0',\n    frame: '',   // Use frame spacing with no actual frame\n    'data-width-includes-label': true // take label space out of 100% width\n  };\n  return item;\n};\n\n\n/**\n * Generate an align at environment.\n * @param {TexParser} parser The current TeX parser.\n * @param {StackItem} begin The begin stackitem.\n * @param {boolean} numbered Is this a numbered array.\n * @param {boolean} padded Is it padded.\n */\nAmsMethods.XalignAt = function(parser: TexParser, begin: StackItem,\n                                  numbered: boolean, padded: boolean) {\n  let n = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n  if (n.match(/[^0-9]/)) {\n    throw new TexError('PositiveIntegerArg',\n                       'Argument to %1 must me a positive integer',\n                       '\\\\begin{' + begin.getName() + '}');\n  }\n  const align = (padded ? 'crl' : 'rlc');\n  const width = (padded ? 'fit auto auto' : 'auto auto fit');\n  const item = AmsMethods.FlalignArray(parser, begin, numbered, padded, false, align, width, true) as FlalignItem;\n  item.setProperty('xalignat', 2 * parseInt(n));\n  return item;\n};\n\n\n/**\n * Generate an flalign environment.\n * @param {TexParser} parser The current TeX parser.\n * @param {StackItem} begin The begin stackitem.\n * @param {boolean} numbered Is this a numbered array.\n * @param {boolean} padded Is it padded.\n * @param {boolean} center Is it centered.\n * @param {string} align The horizontal alignment for columns\n * @param {string} width The column widths of the table\n * @param {boolean} zeroWidthLabel True if the label should be in llap/rlap\n */\nAmsMethods.FlalignArray = function(parser: TexParser, begin: StackItem, numbered: boolean,\n                                  padded: boolean, center: boolean, align: string,\n                                  width: string, zeroWidthLabel: boolean = false) {\n  parser.Push(begin);\n  ParseUtil.checkEqnEnv(parser);\n  align = align\n    .split('')\n    .join(' ')\n    .replace(/r/g, 'right')\n    .replace(/l/g, 'left')\n    .replace(/c/g, 'center');\n  const item = parser.itemFactory.create(\n    'flalign', begin.getName(), numbered, padded, center, parser.stack) as FlalignItem;\n  item.arraydef = {\n    width: '100%',\n    displaystyle: true,\n    columnalign: align,\n    columnspacing: '0em',\n    columnwidth: width,\n    rowspacing: '3pt',\n    side: parser.options['tagSide'],\n    minlabelspacing: (zeroWidthLabel ? '0' : parser.options['tagIndent']),\n    'data-width-includes-label': true,\n  };\n  item.setProperty('zeroWidthLabel', zeroWidthLabel);\n  return item;\n};\n\n\nexport const NEW_OPS = 'ams-declare-ops';\n\n/**\n * Handle DeclareMathOperator.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.HandleDeclareOp =  function (parser: TexParser, name: string) {\n  let star = (parser.GetStar() ? '*' : '');\n  let cs = ParseUtil.trimSpaces(parser.GetArgument(name));\n  if (cs.charAt(0) === '\\\\') {\n    cs = cs.substr(1);\n  }\n  let op = parser.GetArgument(name);\n  (parser.configuration.handlers.retrieve(NEW_OPS) as CommandMap).\n    add(cs, new Macro(cs, AmsMethods.Macro, [`\\\\operatorname${star}{${op}}`]));\n};\n\n\n/**\n * Handle operatorname.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.HandleOperatorName = function(parser: TexParser, name: string) {\n  // @test Operatorname\n  const star = parser.GetStar();\n  //\n  //  Parse the argument using operator letters and grouping multiple letters.\n  //\n  let op = ParseUtil.trimSpaces(parser.GetArgument(name));\n  let mml = new TexParser(op, {\n    ...parser.stack.env,\n    font: TexConstant.Variant.NORMAL,\n    multiLetterIdentifiers: /^[-*a-z]+/i as any,\n    operatorLetters: true\n  }, parser.configuration).mml();\n  //\n  //  If we get something other than a single mi, wrap in a TeXAtom.\n  //\n  if (!mml.isKind('mi')) {\n    mml = parser.create('node', 'TeXAtom', [mml]);\n  }\n  //\n  //  Mark the limit properties and the TeX class.\n  //\n  NodeUtil.setProperties(mml, {movesupsub: star, movablelimits: true, texClass: TEXCLASS.OP});\n  //\n  //  Skip a following \\limits macro if not a starred operator\n  //\n  if (!star) {\n    const c = parser.GetNext(), i = parser.i;\n    if (c === '\\\\' && ++parser.i && parser.GetCS() !== 'limits') {\n      parser.i = i;\n    }\n  }\n  //\n  parser.Push(mml);\n};\n\n/**\n * Handle sideset.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.SideSet = function (parser: TexParser, name: string) {\n  //\n  //  Get the pre- and post-scripts, and any extra material from the arguments\n  //\n  const [preScripts, preRest] = splitSideSet(parser.ParseArg(name));\n  const [postScripts, postRest] = splitSideSet(parser.ParseArg(name));\n  const base = parser.ParseArg(name);\n  let mml = base;\n  //\n  //  If there are pre-scripts...\n  //\n  if (preScripts) {\n    //\n    //  If there is other material...\n    //\n    if (preRest) {\n      //\n      //  Replace the empty base of the prescripts with a phantom element of the\n      //    original base, with width 0 (but still of the correct height and depth).\n      //    so the scripts will be at the right heights.\n      //\n      preScripts.replaceChild(\n        parser.create('node', 'mphantom', [\n          parser.create('node', 'mpadded', [ParseUtil.copyNode(base, parser)], {width: 0})\n        ]),\n        NodeUtil.getChildAt(preScripts, 0)\n      );\n    } else {\n      //\n      //  If there is no extra meterial, make a mmultiscripts element\n      //\n      mml = parser.create('node', 'mmultiscripts', [base]);\n      //\n      //  Add any postscripts\n      //\n      if (postScripts) {\n        NodeUtil.appendChildren(mml, [\n          NodeUtil.getChildAt(postScripts, 1) || parser.create('node', 'none'),\n          NodeUtil.getChildAt(postScripts, 2) || parser.create('node', 'none')\n        ]);\n      }\n      //\n      //  Add the prescripts (left aligned)\n      //\n      NodeUtil.setProperty(mml, 'scriptalign', 'left');\n      NodeUtil.appendChildren(mml, [\n        parser.create('node', 'mprescripts'),\n        NodeUtil.getChildAt(preScripts, 1) || parser.create('node', 'none'),\n        NodeUtil.getChildAt(preScripts, 2) || parser.create('node', 'none')\n      ]);\n    }\n  }\n  //\n  //  If there are postscripts and we didn't make a mmultiscript element above...\n  //\n  if (postScripts && mml === base) {\n    //\n    //  Replace the emtpy base with actual base, and use that as the mml\n    //\n    postScripts.replaceChild(base, NodeUtil.getChildAt(postScripts, 0));\n    mml = postScripts;\n  }\n  //\n  //  Put the needed pieces into a TeXAtom of class OP.\n  //  Note that the postScripts are in the mml element,\n  //    either as part of the mmultiscripts node, or the\n  //    msubsup with the base inserted into it.\n  //\n  const mrow = parser.create('node', 'TeXAtom', [], {texClass: TEXCLASS.OP, movesupsub: true, movablelimits: true});\n  if (preRest) {\n    preScripts && mrow.appendChild(preScripts);\n    mrow.appendChild(preRest);\n  }\n  mrow.appendChild(mml);\n  postRest && mrow.appendChild(postRest);\n  parser.Push(mrow);\n};\n\n/**\n * Utility for breaking the \\sideset scripts from any other material.\n * @param {MmlNode} mml The node to check.\n * @return {[MmlNode, MmlNode]} The msubsup with the scripts together with any extra nodes.\n */\nfunction splitSideSet(mml: MmlNode): [MmlNode, MmlNode] {\n    if (!mml || (mml.isInferred && mml.childNodes.length === 0)) return [null, null];\n    if (mml.isKind('msubsup') && checkSideSetBase(mml)) return [mml, null];\n    const child = NodeUtil.getChildAt(mml, 0);\n    if (!(mml.isInferred && child && checkSideSetBase(child))) return [null, mml];\n    mml.childNodes.splice(0, 1); // remove first child\n    return [child, mml];\n}\n\n/**\n * Utility for checking if a \\sideset argument has scripts with an empty base.\n * @param {MmlNode} mml The node to check.\n * @return {boolean} True if the base is not and empty mi element.\n */\nfunction checkSideSetBase(mml: MmlNode): boolean {\n  const base = mml.childNodes[0];\n  return base && base.isKind('mi') && (base as AbstractMmlTokenNode).getText() === '';\n}\n\n\n/**\n * Handle extra letters in \\operatorname (- and *), default to normal otherwise.\n * @param {TexParser} parser The calling parser.\n * @param {string} c The letter being checked\n */\nAmsMethods.operatorLetter = function (parser: TexParser, c: string) {\n  return parser.stack.env.operatorLetters ? ParseMethods.variable(parser, c) : false;\n};\n\n\n/**\n * Handle multi integral signs.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} integral The actual integral sign.\n */\nAmsMethods.MultiIntegral = function(parser: TexParser, name: string,\n                                    integral: string) {\n  let next = parser.GetNext();\n  if (next === '\\\\') {\n    // @test MultiInt with Command\n    let i = parser.i;\n    next = parser.GetArgument(name);\n    parser.i = i;\n    if (next === '\\\\limits') {\n      if (name === '\\\\idotsint') {\n       // @test MultiInt with Limits\n        integral = '\\\\!\\\\!\\\\mathop{\\\\,\\\\,' + integral + '}';\n      }\n      else {\n        // Question: This is not used anymore?\n        integral = '\\\\!\\\\!\\\\!\\\\mathop{\\\\,\\\\,\\\\,' + integral + '}';\n      }\n    }\n  }\n  // @test MultiInt, MultiInt in Context\n  parser.string = integral + ' ' + parser.string.slice(parser.i);\n  parser.i = 0;\n};\n\n\n/**\n *  Handle stretchable arrows.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} chr The arrow character in hex code.\n * @param {number} l Left width.\n * @param {number} r Right width.\n */\nAmsMethods.xArrow = function(parser: TexParser, name: string,\n                             chr: number, l: number, r: number) {\n  let def = {width: '+' + ParseUtil.Em((l + r) / 18), lspace: ParseUtil.Em(l / 18)};\n  let bot = parser.GetBrackets(name);\n  let first = parser.ParseArg(name);\n  let dstrut = parser.create('node', 'mspace', [], {depth: '.25em'});\n  let arrow = parser.create('token',\n    'mo', {stretchy: true, texClass: TEXCLASS.REL}, String.fromCodePoint(chr));\n  arrow = parser.create('node', 'mstyle', [arrow], {scriptlevel: 0});\n  let mml = parser.create('node', 'munderover', [arrow]) as MmlMunderover;\n  let mpadded = parser.create('node', 'mpadded', [first, dstrut], def);\n  NodeUtil.setAttribute(mpadded, 'voffset', '-.2em');\n  NodeUtil.setAttribute(mpadded, 'height', '-.2em');\n  NodeUtil.setChild(mml, mml.over, mpadded);\n  if (bot) {\n    // @test Above Below Left Arrow, Above Below Right Arrow\n    let bottom = new TexParser(bot, parser.stack.env, parser.configuration).mml();\n    let bstrut = parser.create('node', 'mspace', [], {height: '.75em'});\n    mpadded = parser.create('node', 'mpadded', [bottom, bstrut], def);\n    NodeUtil.setAttribute(mpadded, 'voffset', '.15em');\n    NodeUtil.setAttribute(mpadded, 'depth', '-.15em');\n    NodeUtil.setChild(mml, mml.under, mpadded);\n  }\n  // @test Above Left Arrow, Above Right Arrow, Above Left Arrow in Context,\n  //       Above Right Arrow in Context\n  NodeUtil.setProperty(mml, 'subsupOK', true);\n  parser.Push(mml);\n};\n\n\n/**\n * Record presence of \\shoveleft and \\shoveright\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} shove The shove value.\n */\nAmsMethods.HandleShove = function(parser: TexParser, _name: string,\n                                  shove: string) {\n  let top = parser.stack.Top();\n  // @test Shove (Left|Right) (Top|Middle|Bottom)\n  if (top.kind !== 'multline') {\n    // @test Shove Error Environment\n    throw new TexError('CommandOnlyAllowedInEnv',\n                        '%1 only allowed in %2 environment',\n                        parser.currentCS, 'multline');\n  }\n  if (top.Size()) {\n    // @test Shove Error (Top|Middle|Bottom)\n    throw new TexError('CommandAtTheBeginingOfLine',\n                        '%1 must come at the beginning of the line', parser.currentCS);\n  }\n  top.setProperty('shove', shove);\n};\n\n\n/**\n * Handle \\cfrac\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.CFrac = function(parser: TexParser, name: string) {\n  let lr  = ParseUtil.trimSpaces(parser.GetBrackets(name, ''));\n  let num = parser.GetArgument(name);\n  let den = parser.GetArgument(name);\n  let lrMap: {[key: string]: string} = {\n    l: TexConstant.Align.LEFT, r: TexConstant.Align.RIGHT, '': ''};\n  let numNode = new TexParser('\\\\strut\\\\textstyle{' + num + '}',\n                              parser.stack.env, parser.configuration).mml();\n  let denNode = new TexParser('\\\\strut\\\\textstyle{' + den + '}',\n                              parser.stack.env, parser.configuration).mml();\n  let frac = parser.create('node', 'mfrac', [numNode, denNode]);\n  lr = lrMap[lr];\n  if (lr == null) {\n    // @test Center Fraction Error\n    throw new TexError('IllegalAlign', 'Illegal alignment specified in %1', parser.currentCS);\n  }\n  if (lr) {\n    // @test Right Fraction, Left Fraction\n    NodeUtil.setProperties(frac, {numalign: lr, denomalign: lr});\n  }\n  // @test Center Fraction\n  parser.Push(frac);\n};\n\n\n/**\n * Implement AMS generalized fraction.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} left Left delimiter.\n * @param {string} right Right delimiter.\n * @param {string} thick Line thickness.\n * @param {string} style Math style.\n */\nAmsMethods.Genfrac = function(parser: TexParser, name: string, left: string,\n                              right: string, thick: string, style: string) {\n  if (left  == null) { // @test Genfrac\n    left = parser.GetDelimiterArg(name);\n  }\n  if (right == null) { // @test Genfrac\n    right = parser.GetDelimiterArg(name);\n  }\n  if (thick == null) { // @test Genfrac\n    thick = parser.GetArgument(name);\n  }\n  if (style == null) { // @test Genfrac\n    style = ParseUtil.trimSpaces(parser.GetArgument(name));\n  }\n  let num = parser.ParseArg(name);\n  let den = parser.ParseArg(name);\n  let frac = parser.create('node', 'mfrac', [num, den]);\n  if (thick !== '') {\n    // @test Normal Binomial, Text Binomial, Display Binomial\n    NodeUtil.setAttribute(frac, 'linethickness', thick);\n  }\n  if (left || right) {\n    // @test Normal Binomial, Text Binomial, Display Binomial\n    NodeUtil.setProperty(frac, 'withDelims', true);\n    frac = ParseUtil.fixedFence(parser.configuration, left, frac, right);\n  }\n  if (style !== '') {\n    let styleDigit = parseInt(style, 10);\n    let styleAlpha = ['D', 'T', 'S', 'SS'][styleDigit];\n    if (styleAlpha == null) {\n      // @test Genfrac Error\n      throw new TexError('BadMathStyleFor', 'Bad math style for %1', parser.currentCS);\n    }\n    frac = parser.create('node', 'mstyle', [frac]);\n    if (styleAlpha === 'D') {\n      // @test Display Fraction, Display Sub Fraction, Display Binomial,\n      //       Display Sub Binomial\n      NodeUtil.setProperties(frac, {displaystyle: true, scriptlevel: 0});\n    }\n    else {\n      // @test Text Fraction, Text Sub Fraction, Text Binomial,\n      //       Text Sub Binomial\n      NodeUtil.setProperties(frac, {displaystyle: false,\n                                      scriptlevel: styleDigit - 1});\n    }\n  }\n  // @test Text Fraction, Normal Sub Binomial, Normal Binomial\n  parser.Push(frac);\n};\n\n\n\n/**\n * Add the tag to the environment (to be added to the table row later).\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsMethods.HandleTag = function(parser: TexParser, name: string) {\n  if (!parser.tags.currentTag.taggable && parser.tags.env) {\n    // @test Illegal Tag Error\n    throw new TexError('CommandNotAllowedInEnv',\n                        '%1 not allowed in %2 environment',\n                        parser.currentCS, parser.tags.env);\n  }\n  if (parser.tags.currentTag.tag) {\n    // @test Double Tag Error\n    throw new TexError('MultipleCommand', 'Multiple %1', parser.currentCS);\n  }\n  let star = parser.GetStar();\n  let tagId = ParseUtil.trimSpaces(parser.GetArgument(name));\n  parser.tags.tag(tagId, star);\n};\n\n\nAmsMethods.HandleNoTag = BaseMethods.HandleNoTag;\n\nAmsMethods.HandleRef = BaseMethods.HandleRef;\n\nAmsMethods.Macro = BaseMethods.Macro;\n\nAmsMethods.Accent = BaseMethods.Accent;\n\nAmsMethods.Tilde = BaseMethods.Tilde;\n\nAmsMethods.Array = BaseMethods.Array;\n\nAmsMethods.Spacer = BaseMethods.Spacer;\n\nAmsMethods.NamedOp = BaseMethods.NamedOp;\n\nAmsMethods.EqnArray = BaseMethods.EqnArray;\n\nAmsMethods.Equation = BaseMethods.Equation;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9153, "column": 0}, "map": {"version":3,"file":"AmsMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ams/AmsMappings.ts"],"sourcesContent":["\n/*************************************************************\n *\n *  Copyright (c) 2017-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing of the AMS math package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {AmsMethods} from './AmsMethods.js';\nimport *  as sm from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport ParseMethods from '../ParseMethods.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {MATHSPACE} from '../../../util/lengths.js';\n\n\n/**\n * Operators from the AMS Math package.\n */\nnew sm.CharacterMap('AMSmath-mathchar0mo', ParseMethods.mathchar0mo, {\n  iiiint:     ['\\u2A0C', {texClass: TEXCLASS.OP}]\n});\n\n/**\n * Extra characters that are letters in \\operatorname\n */\nnew sm.RegExpMap('AMSmath-operatorLetter', AmsMethods.operatorLetter, /[-*]/i);\n\n/**\n * Macros from the AMS Math package.\n */\nnew sm.CommandMap('AMSmath-macros', {\n  mathring:   ['Accent', '02DA'],  // or 0x30A\n  nobreakspace: 'Tilde',\n  negmedspace:    ['Spacer', MATHSPACE.negativemediummathspace],\n  negthickspace:  ['Spacer', MATHSPACE.negativethickmathspace],\n\n  idotsint:   ['MultiIntegral', '\\\\int\\\\cdots\\\\int'],\n\n  dddot:      ['Accent', '20DB'],\n  ddddot:     ['Accent', '20DC'],\n\n  sideset:     'SideSet',\n\n  boxed:      ['Macro', '\\\\fbox{$\\\\displaystyle{#1}$}', 1],\n\n  tag:         'HandleTag',\n  notag:       'HandleNoTag',\n  eqref:       ['HandleRef', true],\n\n  substack:   ['Macro', '\\\\begin{subarray}{c}#1\\\\end{subarray}', 1],\n\n  injlim:     ['NamedOp', 'inj&thinsp;lim'],\n  projlim:    ['NamedOp', 'proj&thinsp;lim'],\n  varliminf:  ['Macro', '\\\\mathop{\\\\underline{\\\\mmlToken{mi}{lim}}}'],\n  varlimsup:  ['Macro', '\\\\mathop{\\\\overline{\\\\mmlToken{mi}{lim}}}'],\n  varinjlim:  ['Macro', '\\\\mathop{\\\\underrightarrow{\\\\mmlToken{mi}{lim}}}'],\n  varprojlim: ['Macro', '\\\\mathop{\\\\underleftarrow{\\\\mmlToken{mi}{lim}}}'],\n\n  DeclareMathOperator: 'HandleDeclareOp',\n  operatorname:        'HandleOperatorName',\n\n  genfrac:     'Genfrac',\n  frac:       ['Genfrac', '', '', '', ''],\n  tfrac:      ['Genfrac', '', '', '', '1'],\n  dfrac:      ['Genfrac', '', '', '', '0'],\n  binom:      ['Genfrac', '(', ')', '0', ''],\n  tbinom:     ['Genfrac', '(', ')', '0', '1'],\n  dbinom:     ['Genfrac', '(', ')', '0', '0'],\n\n  cfrac:       'CFrac',\n\n  shoveleft:  ['HandleShove', TexConstant.Align.LEFT],\n  shoveright: ['HandleShove', TexConstant.Align.RIGHT],\n\n  xrightarrow: ['xArrow', 0x2192, 5, 10],\n  xleftarrow:  ['xArrow', 0x2190, 10, 5]\n}, AmsMethods);\n\n\n/**\n * Environments from the AMS Math package.\n */\nnew sm.EnvironmentMap('AMSmath-environment', ParseMethods.environment, {\n  'equation*':   ['Equation', null, false],\n  'eqnarray*':   ['EqnArray', null, false, true, 'rcl',\n                  ParseUtil.cols(0, MATHSPACE.thickmathspace), '.5em'],\n  align:         ['EqnArray', null, true, true,  'rl',  ParseUtil.cols(0, 2)],\n  'align*':      ['EqnArray', null, false, true, 'rl',  ParseUtil.cols(0, 2)],\n  multline:      ['Multline', null, true],\n  'multline*':   ['Multline', null, false],\n  split:         ['EqnArray', null, false, false, 'rl', ParseUtil.cols(0)],\n  gather:        ['EqnArray', null, true, true,  'c'],\n  'gather*':     ['EqnArray', null, false, true, 'c'],\n\n  alignat:       ['AlignAt', null, true, true],\n  'alignat*':    ['AlignAt', null, false, true],\n  alignedat:     ['AlignAt', null, false, false],\n\n  aligned:       ['AmsEqnArray', null, null, null, 'rl', ParseUtil.cols(0, 2), '.5em', 'D'],\n  gathered:      ['AmsEqnArray', null, null, null, 'c', null, '.5em', 'D'],\n\n  xalignat:      ['XalignAt', null, true, true],\n  'xalignat*':   ['XalignAt', null, false, true],\n  xxalignat:     ['XalignAt', null, false, false],\n  flalign:       ['FlalignArray', null, true, false, true, 'rlc', 'auto auto fit'],\n  'flalign*':    ['FlalignArray', null, false, false, true, 'rlc', 'auto auto fit'],\n\n  subarray:      ['Array', null, null, null, null, ParseUtil.cols(0), '0.1em', 'S', 1],\n  smallmatrix:   ['Array', null, null, null, 'c', ParseUtil.cols(1 / 3),\n                  '.2em', 'S', 1],\n  matrix:       ['Array', null, null, null, 'c'],\n  pmatrix:      ['Array', null, '(', ')', 'c'],\n  bmatrix:      ['Array', null, '[', ']', 'c'],\n  Bmatrix:      ['Array', null, '\\\\{', '\\\\}', 'c'],\n  vmatrix:      ['Array', null, '\\\\vert', '\\\\vert', 'c'],\n  Vmatrix:      ['Array', null, '\\\\Vert', '\\\\Vert', 'c'],\n  cases:        ['Array', null, '\\\\{', '.', 'll', null, '.2em', 'T']\n}, AmsMethods);\n\n\n/**\n * Delimiters from the AMS Math package.\n */\nnew sm.DelimiterMap('AMSmath-delimiter', ParseMethods.delimiter, {\n  '\\\\lvert':     ['\\u007C', {texClass: TEXCLASS.OPEN}],\n  '\\\\rvert':     ['\\u007C', {texClass: TEXCLASS.CLOSE}],\n  '\\\\lVert':     ['\\u2016', {texClass: TEXCLASS.OPEN}],\n  '\\\\rVert':     ['\\u2016', {texClass: TEXCLASS.CLOSE}]\n});\n\n\n/**\n * Identifiers from the AMS Symbols package.\n */\nnew sm.CharacterMap('AMSsymbols-mathchar0mi', ParseMethods.mathchar0mi, {\n  // Lowercase Greek letters\n  digamma:                '\\u03DD',\n  varkappa:               '\\u03F0',\n\n  // Uppercase Greek letters\n  varGamma:               ['\\u0393', {mathvariant: TexConstant.Variant.ITALIC}],\n  varDelta:               ['\\u0394', {mathvariant: TexConstant.Variant.ITALIC}],\n  varTheta:               ['\\u0398', {mathvariant: TexConstant.Variant.ITALIC}],\n  varLambda:              ['\\u039B', {mathvariant: TexConstant.Variant.ITALIC}],\n  varXi:                  ['\\u039E', {mathvariant: TexConstant.Variant.ITALIC}],\n  varPi:                  ['\\u03A0', {mathvariant: TexConstant.Variant.ITALIC}],\n  varSigma:               ['\\u03A3', {mathvariant: TexConstant.Variant.ITALIC}],\n  varUpsilon:             ['\\u03A5', {mathvariant: TexConstant.Variant.ITALIC}],\n  varPhi:                 ['\\u03A6', {mathvariant: TexConstant.Variant.ITALIC}],\n  varPsi:                 ['\\u03A8', {mathvariant: TexConstant.Variant.ITALIC}],\n  varOmega:               ['\\u03A9', {mathvariant: TexConstant.Variant.ITALIC}],\n\n  // Hebrew letters\n  beth:                   '\\u2136',\n  gimel:                  '\\u2137',\n  daleth:                 '\\u2138',\n\n  // Miscellaneous symbols\n  //    hbar:                   '\\u0127',  // in TeX/jax.js\n  backprime:              ['\\u2035', {variantForm: true}],\n  hslash:                 '\\u210F',\n  varnothing:             ['\\u2205', {variantForm: true}],\n  blacktriangle:          '\\u25B4',\n  triangledown:           ['\\u25BD', {variantForm: true}],\n  blacktriangledown:      '\\u25BE',\n  square:                 '\\u25FB',\n  Box:                    '\\u25FB',\n  blacksquare:            '\\u25FC',\n  lozenge:                '\\u25CA',\n  Diamond:                '\\u25CA',\n  blacklozenge:           '\\u29EB',\n  circledS:               ['\\u24C8', {mathvariant: TexConstant.Variant.NORMAL}],\n  bigstar:                '\\u2605',\n  //    angle:                  '\\u2220',  // in TeX/jax.js\n  sphericalangle:         '\\u2222',\n  measuredangle:          '\\u2221',\n  nexists:                '\\u2204',\n  complement:             '\\u2201',\n  mho:                    '\\u2127',\n  eth:                    ['\\u00F0', {mathvariant: TexConstant.Variant.NORMAL}],\n  Finv:                   '\\u2132',\n  diagup:                 '\\u2571',\n  Game:                   '\\u2141',\n  diagdown:               '\\u2572',\n  Bbbk:                   ['\\u006B',\n                           {mathvariant: TexConstant.Variant.DOUBLESTRUCK}],\n\n  yen:                    '\\u00A5',\n  circledR:               '\\u00AE',\n  checkmark:              '\\u2713',\n  maltese:                '\\u2720'\n});\n\n\n/**\n * Operators from the AMS Symbols package.\n */\nnew sm.CharacterMap('AMSsymbols-mathchar0mo', ParseMethods.mathchar0mo, {\n  // Binary operators\n  dotplus:                '\\u2214',\n  ltimes:                 '\\u22C9',\n  smallsetminus:          ['\\u2216', {variantForm: true}],\n  rtimes:                 '\\u22CA',\n  Cap:                    '\\u22D2',\n  doublecap:              '\\u22D2',\n  leftthreetimes:         '\\u22CB',\n  Cup:                    '\\u22D3',\n  doublecup:              '\\u22D3',\n  rightthreetimes:        '\\u22CC',\n  barwedge:               '\\u22BC',\n  curlywedge:             '\\u22CF',\n  veebar:                 '\\u22BB',\n  curlyvee:               '\\u22CE',\n  doublebarwedge:         '\\u2A5E',\n  boxminus:               '\\u229F',\n  circleddash:            '\\u229D',\n  boxtimes:               '\\u22A0',\n  circledast:             '\\u229B',\n  boxdot:                 '\\u22A1',\n  circledcirc:            '\\u229A',\n  boxplus:                '\\u229E',\n  centerdot:              ['\\u22C5', {variantForm: true}],\n  divideontimes:          '\\u22C7',\n  intercal:               '\\u22BA',\n\n  // Binary relations\n  leqq:                   '\\u2266',\n  geqq:                   '\\u2267',\n  leqslant:               '\\u2A7D',\n  geqslant:               '\\u2A7E',\n  eqslantless:            '\\u2A95',\n  eqslantgtr:             '\\u2A96',\n  lesssim:                '\\u2272',\n  gtrsim:                 '\\u2273',\n  lessapprox:             '\\u2A85',\n  gtrapprox:              '\\u2A86',\n  approxeq:               '\\u224A',\n  lessdot:                '\\u22D6',\n  gtrdot:                 '\\u22D7',\n  lll:                    '\\u22D8',\n  llless:                 '\\u22D8',\n  ggg:                    '\\u22D9',\n  gggtr:                  '\\u22D9',\n  lessgtr:                '\\u2276',\n  gtrless:                '\\u2277',\n  lesseqgtr:              '\\u22DA',\n  gtreqless:              '\\u22DB',\n  lesseqqgtr:             '\\u2A8B',\n  gtreqqless:             '\\u2A8C',\n  doteqdot:               '\\u2251',\n  Doteq:                  '\\u2251',\n  eqcirc:                 '\\u2256',\n  risingdotseq:           '\\u2253',\n  circeq:                 '\\u2257',\n  fallingdotseq:          '\\u2252',\n  triangleq:              '\\u225C',\n  backsim:                '\\u223D',\n  thicksim:               ['\\u223C', {variantForm: true}],\n  backsimeq:              '\\u22CD',\n  thickapprox:            ['\\u2248', {variantForm: true}],\n  subseteqq:              '\\u2AC5',\n  supseteqq:              '\\u2AC6',\n  Subset:                 '\\u22D0',\n  Supset:                 '\\u22D1',\n  sqsubset:               '\\u228F',\n  sqsupset:               '\\u2290',\n  preccurlyeq:            '\\u227C',\n  succcurlyeq:            '\\u227D',\n  curlyeqprec:            '\\u22DE',\n  curlyeqsucc:            '\\u22DF',\n  precsim:                '\\u227E',\n  succsim:                '\\u227F',\n  precapprox:             '\\u2AB7',\n  succapprox:             '\\u2AB8',\n  vartriangleleft:        '\\u22B2',\n  lhd:                    '\\u22B2',\n  vartriangleright:       '\\u22B3',\n  rhd:                    '\\u22B3',\n  trianglelefteq:         '\\u22B4',\n  unlhd:                  '\\u22B4',\n  trianglerighteq:        '\\u22B5',\n  unrhd:                  '\\u22B5',\n  vDash:                  ['\\u22A8', {variantForm: true}],\n  Vdash:                  '\\u22A9',\n  Vvdash:                 '\\u22AA',\n  smallsmile:             ['\\u2323', {variantForm: true}],\n  shortmid:               ['\\u2223', {variantForm: true}],\n  smallfrown:             ['\\u2322', {variantForm: true}],\n  shortparallel:          ['\\u2225', {variantForm: true}],\n  bumpeq:                 '\\u224F',\n  between:                '\\u226C',\n  Bumpeq:                 '\\u224E',\n  pitchfork:              '\\u22D4',\n  varpropto:              ['\\u221D', {variantForm: true}],\n  backepsilon:            '\\u220D',\n  blacktriangleleft:      '\\u25C2',\n  blacktriangleright:     '\\u25B8',\n  therefore:              '\\u2234',\n  because:                '\\u2235',\n  eqsim:                  '\\u2242',\n  vartriangle:            ['\\u25B3', {variantForm: true}],\n  Join:                   '\\u22C8',\n\n  // Negated relations\n  nless:                  '\\u226E',\n  ngtr:                   '\\u226F',\n  nleq:                   '\\u2270',\n  ngeq:                   '\\u2271',\n  nleqslant:              ['\\u2A87', {variantForm: true}],\n  ngeqslant:              ['\\u2A88', {variantForm: true}],\n  nleqq:                  ['\\u2270', {variantForm: true}],\n  ngeqq:                  ['\\u2271', {variantForm: true}],\n  lneq:                   '\\u2A87',\n  gneq:                   '\\u2A88',\n  lneqq:                  '\\u2268',\n  gneqq:                  '\\u2269',\n  lvertneqq:              ['\\u2268', {variantForm: true}],\n  gvertneqq:              ['\\u2269', {variantForm: true}],\n  lnsim:                  '\\u22E6',\n  gnsim:                  '\\u22E7',\n  lnapprox:               '\\u2A89',\n  gnapprox:               '\\u2A8A',\n  nprec:                  '\\u2280',\n  nsucc:                  '\\u2281',\n  npreceq:                ['\\u22E0', {variantForm: true}],\n  nsucceq:                ['\\u22E1', {variantForm: true}],\n  precneqq:               '\\u2AB5',\n  succneqq:               '\\u2AB6',\n  precnsim:               '\\u22E8',\n  succnsim:               '\\u22E9',\n  precnapprox:            '\\u2AB9',\n  succnapprox:            '\\u2ABA',\n  nsim:                   '\\u2241',\n  ncong:                  '\\u2247',\n  nshortmid:              ['\\u2224', {variantForm: true}],\n  nshortparallel:         ['\\u2226', {variantForm: true}],\n  nmid:                   '\\u2224',\n  nparallel:              '\\u2226',\n  nvdash:                 '\\u22AC',\n  nvDash:                 '\\u22AD',\n  nVdash:                 '\\u22AE',\n  nVDash:                 '\\u22AF',\n  ntriangleleft:          '\\u22EA',\n  ntriangleright:         '\\u22EB',\n  ntrianglelefteq:        '\\u22EC',\n  ntrianglerighteq:       '\\u22ED',\n  nsubseteq:              '\\u2288',\n  nsupseteq:              '\\u2289',\n  nsubseteqq:             ['\\u2288', {variantForm: true}],\n  nsupseteqq:             ['\\u2289', {variantForm: true}],\n  subsetneq:              '\\u228A',\n  supsetneq:              '\\u228B',\n  varsubsetneq:           ['\\u228A', {variantForm: true}],\n  varsupsetneq:           ['\\u228B', {variantForm: true}],\n  subsetneqq:             '\\u2ACB',\n  supsetneqq:             '\\u2ACC',\n  varsubsetneqq:          ['\\u2ACB', {variantForm: true}],\n  varsupsetneqq:          ['\\u2ACC', {variantForm: true}],\n\n\n  // Arrows\n  leftleftarrows:         '\\u21C7',\n  rightrightarrows:       '\\u21C9',\n  leftrightarrows:        '\\u21C6',\n  rightleftarrows:        '\\u21C4',\n  Lleftarrow:             '\\u21DA',\n  Rrightarrow:            '\\u21DB',\n  twoheadleftarrow:       '\\u219E',\n  twoheadrightarrow:      '\\u21A0',\n  leftarrowtail:          '\\u21A2',\n  rightarrowtail:         '\\u21A3',\n  looparrowleft:          '\\u21AB',\n  looparrowright:         '\\u21AC',\n  leftrightharpoons:      '\\u21CB',\n  rightleftharpoons:      ['\\u21CC', {variantForm: true}],\n  curvearrowleft:         '\\u21B6',\n  curvearrowright:        '\\u21B7',\n  circlearrowleft:        '\\u21BA',\n  circlearrowright:       '\\u21BB',\n  Lsh:                    '\\u21B0',\n  Rsh:                    '\\u21B1',\n  upuparrows:             '\\u21C8',\n  downdownarrows:         '\\u21CA',\n  upharpoonleft:          '\\u21BF',\n  upharpoonright:         '\\u21BE',\n  downharpoonleft:        '\\u21C3',\n  restriction:            '\\u21BE',\n  multimap:               '\\u22B8',\n  downharpoonright:       '\\u21C2',\n  leftrightsquigarrow:    '\\u21AD',\n  rightsquigarrow:        '\\u21DD',\n  leadsto:                '\\u21DD',\n  dashrightarrow:         '\\u21E2',\n  dashleftarrow:          '\\u21E0',\n\n  // Negated arrows\n  nleftarrow:             '\\u219A',\n  nrightarrow:            '\\u219B',\n  nLeftarrow:             '\\u21CD',\n  nRightarrow:            '\\u21CF',\n  nleftrightarrow:        '\\u21AE',\n  nLeftrightarrow:        '\\u21CE'\n});\n\n\n/**\n * Delimiters from the AMS Symbols package.\n */\nnew sm.DelimiterMap('AMSsymbols-delimiter', ParseMethods.delimiter, {\n  // corners\n  '\\\\ulcorner':           '\\u231C',\n  '\\\\urcorner':           '\\u231D',\n  '\\\\llcorner':           '\\u231E',\n  '\\\\lrcorner':           '\\u231F'\n});\n\n\n/**\n * Macros from the AMS Symbols package.\n */\nnew sm.CommandMap('AMSsymbols-macros', {\n  implies:    ['Macro', '\\\\;\\\\Longrightarrow\\\\;'],\n  impliedby:  ['Macro', '\\\\;\\\\Longleftarrow\\\\;']\n}, AmsMethods);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10067, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10072, "column": 0}, "map": {"version":3,"file":"AmsConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/ams/AmsConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the AMS package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {MultlineItem, FlalignItem} from './AmsItems.js';\nimport {AbstractTags} from '../Tags.js';\nimport {NEW_OPS} from './AmsMethods.js';\nimport './AmsMappings.js';\nimport {CommandMap} from '../SymbolMap.js';\n\n\n/**\n * Standard AMS style tagging.\n * @constructor\n * @extends {AbstractTags}\n */\nexport class AmsTags extends AbstractTags { }\n\n\n/**\n * Init method for AMS package.\n * @param {ParserConfiguration} config The current configuration.\n */\nlet init = function(config: ParserConfiguration) {\n  new CommandMap(NEW_OPS, {}, {});\n  config.append(Configuration.local({handler: {macro: [NEW_OPS]},\n                                    priority: -1}));\n};\n\nexport const AmsConfiguration = Configuration.create(\n  'ams', {\n    handler: {\n      character: ['AMSmath-operatorLetter'],\n      delimiter: ['AMSsymbols-delimiter', 'AMSmath-delimiter'],\n      macro: ['AMSsymbols-mathchar0mi', 'AMSsymbols-mathchar0mo',\n              'AMSsymbols-delimiter', 'AMSsymbols-macros',\n              'AMSmath-mathchar0mo', 'AMSmath-macros', 'AMSmath-delimiter'],\n      environment: ['AMSmath-environment']\n    },\n    items: {\n      [MultlineItem.prototype.kind]: MultlineItem,\n      [FlalignItem.prototype.kind]: FlalignItem,\n    },\n    tags: {'ams': AmsTags},\n    init: init,\n    config: (_config: ParserConfiguration, jax: any)  => {\n      //\n      //  Move multlineWidth from old location to ams block (remove in next version)\n      //\n      if (jax.parseOptions.options.multlineWidth) {\n        jax.parseOptions.options.ams.multlineWidth = jax.parseOptions.options.multlineWidth;\n      }\n      delete jax.parseOptions.options.multlineWidth;\n    },\n    options: {\n      multlineWidth: '',\n      ams: {\n        multlineWidth: '100%',  // The width to use for multline environments.\n        multlineIndent: '1em',  // The margin to use on both sides of multline environments.\n      }\n    }\n  }\n);\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,oDAAuE;AACvE,IAAA,yCAAwD;AACxD,IAAA,kCAAwC;AACxC,IAAA,6CAAwC;;AAExC,IAAA,4CAA2C;AAQ3C,IAAA,UAAA,SAAA,MAAA;IAA6B,UAAA,SAAA,QAAY;IAAzC,SAAA;;IAA4C,CAAC;IAAD,OAAA,OAAC;AAAD,CAAC,AAA7C,CAA6B,UAAA,YAAY,GAAI;AAAhC,QAAA,OAAA,GAAA,QAAO;AAOpB,IAAI,IAAI,GAAG,SAAS,MAA2B;IAC7C,IAAI,eAAA,UAAU,CAAC,gBAAA,OAAO,EAAE,CAAA,CAAE,EAAE,CAAA,CAAE,CAAC,CAAC;IAChC,MAAM,CAAC,MAAM,CAAC,mBAAA,aAAa,CAAC,KAAK,CAAC;QAAC,OAAO,EAAE;YAAC,KAAK,EAAE;gBAAC,gBAAA,OAAO;aAAC;QAAA,CAAC;QAC5B,QAAQ,EAAE,CAAC,CAAC;IAAA,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC;AAEW,QAAA,gBAAgB,GAAG,mBAAA,aAAa,CAAC,MAAM,CAClD,KAAK,EAAE;IACL,OAAO,EAAE;QACP,SAAS,EAAE;YAAC,wBAAwB;SAAC;QACrC,SAAS,EAAE;YAAC,sBAAsB;YAAE,mBAAmB;SAAC;QACxD,KAAK,EAAE;YAAC,wBAAwB;YAAE,wBAAwB;YAClD,sBAAsB;YAAE,mBAAmB;YAC3C,qBAAqB;YAAE,gBAAgB;YAAE,mBAAmB;SAAC;QACrE,WAAW,EAAE;YAAC,qBAAqB;SAAC;KACrC;IACD,KAAK,EAAA,CAAA,KAAA,CAAA,GACH,EAAA,CAAC,cAAA,YAAY,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,cAAA,YAAY,EAC3C,EAAA,CAAC,cAAA,WAAW,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,cAAA,WAAW,KAC1C;IACD,IAAI,EAAE;QAAC,KAAK,EAAE,OAAO;IAAA,CAAC;IACtB,IAAI,EAAE,IAAI;IACV,MAAM,EAAE,SAAC,OAA4B,EAAE,GAAQ;QAI7C,IAAI,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE;YAC1C,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;SACrF;QACD,OAAO,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC;IAChD,CAAC;IACD,OAAO,EAAE;QACP,aAAa,EAAE,EAAE;QACjB,GAAG,EAAE;YACH,aAAa,EAAE,MAAM;YACrB,cAAc,EAAE,KAAK;SACtB;KACF;CACF,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10169, "column": 0}, "map": {"version":3,"file":"AmsCdMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/amscd/AmsCdMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Methods for the AMScd package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport TexParser from '../TexParser.js';\nimport {ParseMethod} from '../Types.js';\nimport {StackItem, EnvList} from '../StackItem.js';\nimport {ArrayItem} from '../base/BaseItems.js';\nimport {Other} from '../base/BaseConfiguration.js';\nimport {MmlMunderover} from '../../../core/MmlTree/MmlNodes/munderover.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport NodeUtil from '../NodeUtil.js';\n\n\n// Namespace\nlet AmsCdMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Handles CD environment for commutative diagrams.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The opening stackitem.\n */\nAmsCdMethods.CD = function(parser: TexParser, begin: StackItem) {\n  parser.Push(begin);\n  let item = parser.itemFactory.create('array') as ArrayItem;\n  let options = parser.configuration.options.amscd;\n  item.setProperties({\n    minw: parser.stack.env.CD_minw || options.harrowsize,\n    minh: parser.stack.env.CD_minh || options.varrowsize\n  });\n  item.arraydef = {\n      columnalign: 'center',\n      columnspacing: options.colspace,\n      rowspacing: options.rowspace,\n      displaystyle: true\n  };\n  return item;\n};\n\n\n/**\n * Converts arrows.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsCdMethods.arrow = function(parser: TexParser, name: string) {\n  let c = parser.string.charAt(parser.i);\n  if (!c.match(/[><VA.|=]/)) {\n    return Other(parser, name);\n  } else {\n    parser.i++;\n  }\n  let first = parser.stack.Top();\n  if (!first.isKind('array') || first.Size()) {\n    AmsCdMethods.cell(parser, name);\n    first = parser.stack.Top();\n  }\n  let top = first as ArrayItem;\n  //\n  //  Add enough cells to place the arrow correctly\n  //\n  let arrowRow = ((top.table.length % 2) === 1);\n  let n = (top.row.length + (arrowRow ? 0 : 1)) % 2;\n  while (n) {\n    AmsCdMethods.cell(parser, name);\n    n--;\n  }\n\n  let mml;\n  let hdef = {minsize: top.getProperty('minw'), stretchy: true},\n  vdef = {minsize: top.getProperty('minh'),\n          stretchy: true, symmetric: true, lspace: 0, rspace: 0};\n\n  if (c === '.') {\n  } else if (c === '|') {\n    mml = parser.create('token', 'mo',  vdef, '\\u2225');\n  } else if (c === '=') {\n    mml = parser.create('token', 'mo', hdef, '=');\n  } else {\n    //\n    //  for @>>> @<<< @VVV and @AAA, get the arrow and labels\n    //\n    // TODO: cleanup!\n    let arrow: string = ({\n      '>': '\\u2192', '<': '\\u2190', 'V': '\\u2193', 'A': '\\u2191'} as {[key: string]: string}) [c];\n    let a = parser.GetUpTo(name + c, c);\n    let b = parser.GetUpTo(name + c, c);\n    if (c === '>' || c === '<') {\n      //\n      //  Lay out horizontal arrows with munderover if it has labels\n      //\n      mml = parser.create('token', 'mo', hdef, arrow);\n      if (!a) {\n        a = '\\\\kern ' + top.getProperty('minw');\n      } // minsize needs work\n      if (a || b) {\n        let pad: EnvList = {width: '+.67em', lspace: '.33em'};\n        mml = parser.create('node', 'munderover', [mml]) as MmlMunderover;\n        if (a) {\n          let nodeA = new TexParser(a, parser.stack.env, parser.configuration).mml();\n          let mpadded = parser.create('node', 'mpadded', [nodeA], pad);\n          NodeUtil.setAttribute(mpadded, 'voffset', '.1em');\n          NodeUtil.setChild(mml, mml.over, mpadded);\n        }\n        if (b) {\n          let nodeB = new TexParser(b, parser.stack.env, parser.configuration).mml();\n          NodeUtil.setChild(mml, mml.under, parser.create('node', 'mpadded', [nodeB], pad));\n        }\n        if (parser.configuration.options.amscd.hideHorizontalLabels) {\n          mml = parser.create('node', 'mpadded', mml, {depth: 0, height: '.67em'});\n        }\n      }\n    } else {\n      //\n      //  Lay out vertical arrows with mrow if there are labels\n      //\n      let arrowNode = parser.create('token', 'mo', vdef, arrow);\n      mml = arrowNode;\n      if (a || b) {\n        mml = parser.create('node', 'mrow');\n        if (a) {\n          NodeUtil.appendChildren(\n            mml, [new TexParser('\\\\scriptstyle\\\\llap{' + a + '}', parser.stack.env, parser.configuration).mml()]);\n        }\n        arrowNode.texClass = TEXCLASS.ORD;\n        NodeUtil.appendChildren(mml, [arrowNode]);\n        if (b) {\n          NodeUtil.appendChildren(mml, [new TexParser('\\\\scriptstyle\\\\rlap{' + b + '}',\n                                                      parser.stack.env, parser.configuration).mml()]);\n        }\n      }\n    }\n  }\n  if (mml) {\n    parser.Push(mml);\n  }\n  AmsCdMethods.cell(parser, name);\n};\n\n\n/**\n * Converts a cell in the diagram.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsCdMethods.cell = function(parser: TexParser, name: string) {\n  let top = parser.stack.Top() as ArrayItem;\n  if ((top.table || []).length % 2 === 0 && (top.row || []).length === 0) {\n    //\n    // Add a strut to the first cell in even rows to get\n    // better spacing of arrow rows.\n    //\n    parser.Push(parser.create('node', 'mpadded', [], {height: '8.5pt', depth: '2pt'}));\n  }\n  parser.Push(parser.itemFactory.create('cell').setProperties({isEntry: true, name: name}));\n};\n\n\n/**\n * Sets minimal width for arrows.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsCdMethods.minCDarrowwidth = function(parser: TexParser, name: string) {\n  parser.stack.env.CD_minw = parser.GetDimen(name);\n};\n\n\n/**\n * Sets minimal height for arrows.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nAmsCdMethods.minCDarrowheight = function(parser: TexParser, name: string) {\n  parser.stack.env.CD_minh = parser.GetDimen(name);\n};\n\n\nexport default AmsCdMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10328, "column": 0}, "map": {"version":3,"file":"AmsCdMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/amscd/AmsCdMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Symbol mappings for the AMScd package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport * as sm from '../SymbolMap.js';\nimport ParseMethods from '../ParseMethods.js';\nimport AmsCdMethods from './AmsCdMethods.js';\n\n\nnew sm.EnvironmentMap('amscd_environment', ParseMethods.environment,\n                      {CD: 'CD'}, AmsCdMethods);\n\nnew sm.CommandMap('amscd_macros', {\n  minCDarrowwidth: 'minCDarrowwidth',\n  minCDarrowheight: 'minCDarrowheight',\n}, AmsCdMethods);\n\nnew sm.MacroMap('amscd_special', {'@': 'arrow'}, AmsCdMethods);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,KAAA,yCAAsC;AACtC,IAAA,oBAAA,+CAA8C;AAC9C,IAAA,oBAAA,8CAA6C;AAG7C,IAAI,EAAE,CAAC,cAAc,CAAC,mBAAmB,EAAE,kBAAA,OAAY,CAAC,WAAW,EAC7C;IAAC,EAAE,EAAE,IAAI;AAAA,CAAC,EAAE,kBAAA,OAAY,CAAC,CAAC;AAEhD,IAAI,EAAE,CAAC,UAAU,CAAC,cAAc,EAAE;IAChC,eAAe,EAAE,iBAAiB;IAClC,gBAAgB,EAAE,kBAAkB;CACrC,EAAE,kBAAA,OAAY,CAAC,CAAC;AAEjB,IAAI,EAAE,CAAC,QAAQ,CAAC,eAAe,EAAE;IAAC,GAAG,EAAE,OAAO;AAAA,CAAC,EAAE,kBAAA,OAAY,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10388, "column": 0}, "map": {"version":3,"file":"AmsCdConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/amscd/AmsCdConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the AMScd package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport './AmsCdMappings.js';\n\n\nexport const AmsCdConfiguration = Configuration.create(\n  'amscd', {\n    handler: {\n      character: ['amscd_special'],\n      macro: ['amscd_macros'],\n      environment: ['amscd_environment']\n    },\n    options: {\n      amscd: {\n        colspace: '5pt',\n        rowspace: '5pt',\n        harrowsize: '2.75em',\n        varrowsize: '1.75em',\n        hideHorizontalLabels: false\n      }\n    }\n  }\n);\n"],"names":[],"mappings":";;;;;AAwBA,IAAA,oDAAkD;;AAIrC,QAAA,kBAAkB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACpD,OAAO,EAAE;IACP,OAAO,EAAE;QACP,SAAS,EAAE;YAAC,eAAe;SAAC;QAC5B,KAAK,EAAE;YAAC,cAAc;SAAC;QACvB,WAAW,EAAE;YAAC,mBAAmB;SAAC;KACnC;IACD,OAAO,EAAE;QACP,KAAK,EAAE;YACL,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,QAAQ;YACpB,UAAU,EAAE,QAAQ;YACpB,oBAAoB,EAAE,KAAK;SAC5B;KACF;CACF,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10422, "column": 0}, "map": {"version":3,"file":"BboxConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/bbox/BboxConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the bbox package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\n\n\n// Namespace\nexport let BboxMethods: Record<string, ParseMethod> = {};\n\n/**\n * Implements MathJax Bbox macro to pad and colorize background boxes.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nBboxMethods.BBox = function(parser: TexParser, name: string) {\n  const bbox = parser.GetBrackets(name, '');\n  let math = parser.ParseArg(name);\n  const parts = bbox.split(/,/);\n  let def, background, style;\n  for (let i = 0, m = parts.length; i < m; i++) {\n    const part = parts[i].trim();\n    const match = part.match(/^(\\.\\d+|\\d+(\\.\\d*)?)(pt|em|ex|mu|px|in|cm|mm)$/);\n    if (match) {\n      // @test Bbox-Padding\n      if (def) {\n        // @test Bbox-Padding-Error\n        throw new TexError('MultipleBBoxProperty', '%1 specified twice in %2', 'Padding', name);\n      }\n      const pad = BBoxPadding(match[1] + match[3]);\n      if (pad) {\n        // @test Bbox-Padding\n        def = {\n          height: '+' + pad,\n          depth: '+' + pad,\n          lspace: pad,\n          width: '+' + (2 * parseInt(match[1], 10)) + match[3]\n        };\n      }\n    } else if (part.match(/^([a-z0-9]+|\\#[0-9a-f]{6}|\\#[0-9a-f]{3})$/i)) {\n      // @test Bbox-Background\n      if (background) {\n        // @test Bbox-Background-Error\n        throw new TexError('MultipleBBoxProperty', '%1 specified twice in %2',\n                           'Background', name);\n      }\n      background = part;\n    } else if (part.match(/^[-a-z]+:/i)) {\n      // @test Bbox-Frame\n      if (style) {\n        // @test Bbox-Frame-Error\n        throw new TexError('MultipleBBoxProperty', '%1 specified twice in %2',\n                           'Style', name);\n      }\n      style = BBoxStyle(part);\n    } else if (part !== '') {\n      // @test Bbox-General-Error\n      throw new TexError(\n        'InvalidBBoxProperty',\n        '\"%1\" doesn\\'t look like a color, a padding dimension, or a style',\n        part);\n    }\n  }\n  if (def) {\n    // @test Bbox-Padding\n    math = parser.create('node', 'mpadded', [math], def);\n  }\n  if (background || style) {\n    def = {};\n    if (background) {\n      // @test Bbox-Background\n      Object.assign(def, {mathbackground: background});\n    }\n    if (style) {\n      // @test Bbox-Frame\n      Object.assign(def, {style: style});\n    }\n    math = parser.create('node', 'mstyle', [math], def);\n  }\n  parser.Push(math);\n};\n\n\n// Dummy methods. Need to be made Safe with security check.\nlet BBoxStyle = function(styles: string) {\n  return styles;\n};\n\nlet BBoxPadding = function(pad: string) {\n  return pad;\n};\n\n\nnew CommandMap('bbox', {bbox: 'BBox'}, BboxMethods);\n\n\nexport const BboxConfiguration = Configuration.create(\n  'bbox', {handler: {macro: ['bbox']}}\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10515, "column": 0}, "map": {"version":3,"file":"BoldsymbolConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/boldsymbol/BoldsymbolConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the boldsymbol package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {Configuration} from '../Configuration.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexParser from '../TexParser.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport {NodeFactory} from '../NodeFactory.js';\nimport ParseOptions from '../ParseOptions.js';\n\nlet BOLDVARIANT: {[key: string]: string} = {};\nBOLDVARIANT[TexConstant.Variant.NORMAL] = TexConstant.Variant.BOLD;\nBOLDVARIANT[TexConstant.Variant.ITALIC]    = TexConstant.Variant.BOLDITALIC;\nBOLDVARIANT[TexConstant.Variant.FRAKTUR]   = TexConstant.Variant.BOLDFRAKTUR;\nBOLDVARIANT[TexConstant.Variant.SCRIPT]    = TexConstant.Variant.BOLDSCRIPT;\nBOLDVARIANT[TexConstant.Variant.SANSSERIF] = TexConstant.Variant.BOLDSANSSERIF;\nBOLDVARIANT['-tex-calligraphic']   = '-tex-bold-calligraphic';\nBOLDVARIANT['-tex-oldstyle']       = '-tex-bold-oldstyle';\nBOLDVARIANT['-tex-mathit']         = TexConstant.Variant.BOLDITALIC;\n\n\n// Namespace\nexport let BoldsymbolMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Parse function for boldsymbol macro.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the macro.\n */\nBoldsymbolMethods.Boldsymbol = function(parser: TexParser, name: string) {\n  let boldsymbol = parser.stack.env['boldsymbol'];\n  parser.stack.env['boldsymbol'] = true;\n  let mml = parser.ParseArg(name);\n  parser.stack.env['boldsymbol'] = boldsymbol;\n  parser.Push(mml);\n};\n\n\nnew CommandMap('boldsymbol', {boldsymbol: 'Boldsymbol'}, BoldsymbolMethods);\n\n\n/**\n * Creates token nodes in bold font if possible.\n * @param {NodeFactory} factory The current node factory.\n * @param {string} kind The type of token node to create.\n * @param {any} def Properties for the node.\n * @param {string} text The text content.\n * @return {MmlNode} The generated token node.\n */\nexport function createBoldToken(factory: NodeFactory, kind: string,\n                                def: any, text: string): MmlNode  {\n  let token = NodeFactory.createToken(factory, kind, def, text);\n  if (kind !== 'mtext' &&\n      factory.configuration.parser.stack.env['boldsymbol']) {\n    NodeUtil.setProperty(token, 'fixBold', true);\n    factory.configuration.addNode('fixBold', token);\n  }\n  return token;\n}\n\n\n/**\n * Postprocessor to rewrite token nodes to bold font, if possible.\n * @param {ParseOptions} data The parse options.\n */\nexport function rewriteBoldTokens(arg: {data: ParseOptions}) {\n  for (let node of arg.data.getList('fixBold')) {\n    if (NodeUtil.getProperty(node, 'fixBold')) {\n      let variant = NodeUtil.getAttribute(node, 'mathvariant') as string;\n      if (variant == null) {\n        NodeUtil.setAttribute(node, 'mathvariant', TexConstant.Variant.BOLD);\n      } else {\n        NodeUtil.setAttribute(node,\n                              'mathvariant', BOLDVARIANT[variant] || variant);\n      }\n      NodeUtil.removeProperties(node, 'fixBold');\n    }\n  }\n}\n\n\nexport const BoldsymbolConfiguration = Configuration.create(\n    'boldsymbol', {\n        handler: {macro: ['boldsymbol']},\n        nodes: {'token': createBoldToken},\n        postprocessors: [rewriteBoldTokens]\n    }\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10614, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10619, "column": 0}, "map": {"version":3,"file":"BraketItems.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/braket/BraketItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items for parsing the braket package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {CheckType, BaseItem, StackItem} from '../StackItem.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport ParseUtil from '../ParseUtil.js';\n\n\n/**\n * A bra-ket command. Collates elements from the opening brace to the closing\n * brace, adding bars to a given maximal number (e.g., only one in case of\n * set). To finalise it adds the surrounding angle brackets or braces.\n */\nexport class BraketItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'braket';\n  }\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('close')) {\n      return [[this.factory.create('mml', this.toMml())], true];\n    }\n    if (item.isKind('mml')) {\n      this.Push(item.toMml());\n      if (this.getProperty('single')) {\n        return [[this.toMml()], true];\n      }\n      return BaseItem.fail;\n    }\n    return super.checkItem(item);\n  }\n\n\n  /**\n   * @override\n   */\n  public toMml() {\n    let inner = super.toMml();\n    let open = this.getProperty('open') as string;\n    let close = this.getProperty('close') as string;\n    if (this.getProperty('stretchy')) {\n      return ParseUtil.fenced(this.factory.configuration, open, inner, close);\n    }\n    let attrs = {fence: true, stretchy: false, symmetric: true, texClass: TEXCLASS.OPEN};\n    let openNode = this.create('token', 'mo', attrs, open);\n    attrs.texClass = TEXCLASS.CLOSE;\n    let closeNode = this.create('token', 'mo', attrs, close);\n    let mrow = this.create('node', 'mrow', [openNode, inner, closeNode],\n                         {open: open, close: close, texClass: TEXCLASS.INNER});\n    return mrow;\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,4CAA+D;AAC/D,IAAA,2DAA0D;AAC1D,IAAA,iBAAA,4CAAwC;AAQxC,IAAA,aAAA,SAAA,MAAA;IAAgC,UAAA,YAAA,QAAQ;IAAxC,SAAA;;IAqDA,CAAC;IAhDC,OAAA,cAAA,CAAI,WAAA,SAAA,EAAA,MAAI,EAAA;aAAR;YACE,OAAO,QAAQ,CAAC;QAClB,CAAC;;;OAAA;IAKD,OAAA,cAAA,CAAI,WAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAKM,WAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACxB,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAC3D;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YACxB,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;gBAC9B,OAAO;oBAAC;wBAAC,IAAI,CAAC,KAAK,EAAE;qBAAC;oBAAE,IAAI;iBAAC,CAAC;aAC/B;YACD,OAAO,eAAA,QAAQ,CAAC,IAAI,CAAC;SACtB;QACD,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAMM,WAAA,SAAA,CAAA,KAAK,GAAZ;QACE,IAAI,KAAK,GAAG,OAAA,SAAA,CAAM,KAAK,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAW,CAAC;QAC9C,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAW,CAAC;QAChD,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE;YAChC,OAAO,eAAA,OAAS,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACzE;QACD,IAAI,KAAK,GAAG;YAAC,KAAK,EAAE,IAAI;YAAE,QAAQ,EAAE,KAAK;YAAE,SAAS,EAAE,IAAI;YAAE,QAAQ,EAAE,aAAA,QAAQ,CAAC,IAAI;QAAA,CAAC,CAAC;QACrF,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACvD,KAAK,CAAC,QAAQ,GAAG,aAAA,QAAQ,CAAC,KAAK,CAAC;QAChC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACzD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;YAAC,QAAQ;YAAE,KAAK;YAAE,SAAS;SAAC,EAC9C;YAAC,IAAI,EAAE,IAAI;YAAE,KAAK,EAAE,KAAK;YAAE,QAAQ,EAAE,aAAA,QAAQ,CAAC,KAAK;QAAA,CAAC,CAAC,CAAC;QAC3E,OAAO,IAAI,CAAC;IACd,CAAC;IAEH,OAAA,UAAC;AAAD,CAAC,AArDD,CAAgC,eAAA,QAAQ,GAqDvC;AArDY,QAAA,UAAA,GAAA,WAAU","ignoreList":[0]}},
    {"offset": {"line": 10724, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10729, "column": 0}, "map": {"version":3,"file":"BraketMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/braket/BraketMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Methods for TeX parsing of the braket package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {ParseMethod} from '../Types.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport TexError from '../TexError.js';\n\n\nlet BraketMethods: Record<string, ParseMethod> = {};\n\nBraketMethods.Macro = BaseMethods.Macro;\n\n\n/**\n * Generate a bra-ket expression.\n * @param {TexParser} parser The current TeX parser.\n * @param {string} name Name of the current control sequence.\n * @param {string} open Opening delimiter.\n * @param {string} close Closing delimiter.\n * @param {boolean} stretchy Is it stretchy.\n * @param {number} barmax Maximum number of bars allowed.\n */\nBraketMethods.Braket = function(parser: TexParser, _name: string,\n                                open: string, close: string,\n                                stretchy: boolean, barmax: number) {\n  let next = parser.GetNext();\n  if (next === '') {\n    throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n  }\n  let single = true;\n  if (next === '{') {\n    parser.i++;\n    single = false;\n  }\n  parser.Push(\n    parser.itemFactory.create('braket')\n      .setProperties({barmax: barmax, barcount: 0, open: open,\n                      close: close, stretchy: stretchy, single: single}));\n};\n\n\n/**\n * Generate a bar. If inside a bra-ket expressions it's handled accordingly.\n * @param {TexParser} parser The current TeX parser.\n * @param {string} name Name of the current control sequence.\n */\nBraketMethods.Bar = function(parser: TexParser, name: string) {\n  let c = name === '|' ? '|' : '\\u2225';\n  let top = parser.stack.Top();\n  if (top.kind !== 'braket' ||\n      top.getProperty('barcount') >= top.getProperty('barmax')) {\n    let mml = parser.create('token', 'mo', {texClass: TEXCLASS.ORD, stretchy: false}, c);\n    parser.Push(mml);\n    return;\n  }\n  if (c === '|' && parser.GetNext() === '|') {\n    parser.i++;\n    c = '\\u2225';\n  }\n  let stretchy = top.getProperty('stretchy');\n  if (!stretchy) {\n    let node = parser.create('token', 'mo', {stretchy: false, braketbar: true}, c);\n    parser.Push(node);\n    return;\n  }\n  let node = parser.create('node', 'TeXAtom', [], {texClass: TEXCLASS.CLOSE});\n  parser.Push(node);\n  top.setProperty('barcount', top.getProperty('barcount') as number + 1);\n  node = parser.create('token', 'mo', {stretchy: true, braketbar: true}, c);\n  parser.Push(node);\n  node = parser.create('node', 'TeXAtom', [], {texClass: TEXCLASS.OPEN});\n  parser.Push(node);\n};\n\n\nexport default BraketMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10807, "column": 0}, "map": {"version":3,"file":"BraketMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/braket/BraketMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing of the braket package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {CommandMap, MacroMap} from '../SymbolMap.js';\nimport BraketMethods from './BraketMethods.js';\n\n\n/**\n * Macros for braket package.\n */\nnew CommandMap('Braket-macros', {\n  bra: ['Macro', '{\\\\langle {#1} \\\\vert}', 1],\n  ket: ['Macro', '{\\\\vert {#1} \\\\rangle}', 1],\n  braket: ['Braket', '\\u27E8', '\\u27E9', false, Infinity],\n  'set': ['Braket', '{', '}', false, 1],\n  Bra: ['Macro', '{\\\\left\\\\langle {#1} \\\\right\\\\vert}', 1],\n  Ket: ['Macro', '{\\\\left\\\\vert {#1} \\\\right\\\\rangle}', 1],\n  Braket: ['Braket', '\\u27E8', '\\u27E9', true, Infinity],\n  Set: ['Braket', '{', '}', true, 1],\n  // Not part of the LaTeX package:\n  ketbra: ['Macro', '{\\\\vert {#1} \\\\rangle\\\\langle {#2} \\\\vert}', 2],\n  Ketbra: ['Macro', '{\\\\left\\\\vert {#1} \\\\right\\\\rangle\\\\left\\\\langle {#2} \\\\right\\\\vert}', 2],\n  // Treatment of bar.\n  '|': 'Bar'\n}, BraketMethods);\n\n\n/**\n * Character map for braket package.\n */\nnew MacroMap('Braket-characters', {\n  '|': 'Bar'\n}, BraketMethods);\n\n\n"],"names":[],"mappings":";;;;;;;;;AAwBA,IAAA,4CAAqD;AACrD,IAAA,qBAAA,+CAA+C;AAM/C,IAAI,eAAA,UAAU,CAAC,eAAe,EAAE;IAC9B,GAAG,EAAE;QAAC,OAAO;QAAE,wBAAwB;QAAE,CAAC;KAAC;IAC3C,GAAG,EAAE;QAAC,OAAO;QAAE,wBAAwB;QAAE,CAAC;KAAC;IAC3C,MAAM,EAAE;QAAC,QAAQ;QAAE,QAAQ;QAAE,QAAQ;QAAE,KAAK;QAAE,QAAQ;KAAC;IACvD,KAAK,EAAE;QAAC,QAAQ;QAAE,GAAG;QAAE,GAAG;QAAE,KAAK;QAAE,CAAC;KAAC;IACrC,GAAG,EAAE;QAAC,OAAO;QAAE,qCAAqC;QAAE,CAAC;KAAC;IACxD,GAAG,EAAE;QAAC,OAAO;QAAE,qCAAqC;QAAE,CAAC;KAAC;IACxD,MAAM,EAAE;QAAC,QAAQ;QAAE,QAAQ;QAAE,QAAQ;QAAE,IAAI;QAAE,QAAQ;KAAC;IACtD,GAAG,EAAE;QAAC,QAAQ;QAAE,GAAG;QAAE,GAAG;QAAE,IAAI;QAAE,CAAC;KAAC;IAElC,MAAM,EAAE;QAAC,OAAO;QAAE,4CAA4C;QAAE,CAAC;KAAC;IAClE,MAAM,EAAE;QAAC,OAAO;QAAE,sEAAsE;QAAE,CAAC;KAAC;IAE5F,GAAG,EAAE,KAAK;CACX,EAAE,mBAAA,OAAa,CAAC,CAAC;AAMlB,IAAI,eAAA,QAAQ,CAAC,mBAAmB,EAAE;IAChC,GAAG,EAAE,KAAK;CACX,EAAE,mBAAA,OAAa,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10882, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10887, "column": 0}, "map": {"version":3,"file":"BraketConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/braket/BraketConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Braket package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {BraketItem} from './BraketItems.js';\nimport './BraketMappings.js';\n\n\nexport const BraketConfiguration = Configuration.create(\n  'braket', {\n    handler: {\n      character: ['Braket-characters'],\n      macro: ['Braket-macros']\n    },\n    items: {\n      [BraketItem.prototype.kind]: BraketItem,\n    }\n  }\n);\n\n\n"],"names":[],"mappings":";;;;;;AAwBA,IAAA,oDAAkD;AAClD,IAAA,+CAA4C;;AAI/B,QAAA,mBAAmB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACrD,QAAQ,EAAE;IACR,OAAO,EAAE;QACP,SAAS,EAAE;YAAC,mBAAmB;SAAC;QAChC,KAAK,EAAE;YAAC,eAAe;SAAC;KACzB;IACD,KAAK,EAAA,CAAA,KAAA,CAAA,GACH,EAAA,CAAC,iBAAA,UAAU,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,iBAAA,UAAU,KACxC;CACF,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10907, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10912, "column": 0}, "map": {"version":3,"file":"BussproofsUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Postfilter utility for the Bussproofs package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport ParseOptions from '../ParseOptions.js';\nimport NodeUtil from '../NodeUtil.js';\nimport ParseUtil from '../ParseUtil.js';\n\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {Property} from '../../../core/Tree/Node.js';\nimport {MathItem} from '../../../core/MathItem.js';\nimport {MathDocument} from '../../../core/MathDocument.js';\n\n\ntype MATHITEM = MathItem<any, any, any>;\ntype MATHDOCUMENT = MathDocument<any, any, any>;\n\ntype FilterData = {math: MATHITEM, document: MATHDOCUMENT, data: ParseOptions};\n\n/**\n *  Global constants local to the module. They instantiate an output jax for\n *  bounding box computation.\n */\nlet doc: MATHDOCUMENT = null;\nlet item: MATHITEM = null;\n\n\n/**\n * Get the bounding box of a node.\n * @param {MmlNode} node The target node.\n */\nlet getBBox = function(node: MmlNode) {\n  item.root = node;\n    let {w: width} = (doc.outputJax as any).getBBox(item, doc);\n  return width;\n};\n\n\n/**\n * Get the actual table that represents the inference rule, i.e., the rule\n * without the label. We ignore preceding elements or spaces.\n *\n * @param {MmlNode} node The out node representing the inference.\n * @return {MmlNode} The actual table representing the inference rule.\n */\nlet getRule = function(node: MmlNode): MmlNode {\n  let i = 0;\n  while (node && !NodeUtil.isType(node, 'mtable')) {\n    if (NodeUtil.isType(node, 'text')) {\n      return null;\n    }\n    if (NodeUtil.isType(node, 'mrow')) {\n      node = node.childNodes[0] as MmlNode;\n      i = 0;\n      continue;\n    }\n    node = node.parent.childNodes[i] as MmlNode;\n    i++;\n  }\n  return node;\n};\n\n\n/*******************************\n * Convenience methods for retrieving bits of the proof tree.\n */\n\n/**\n * Gets premises of an inference rule.\n * @param {MmlNode} rule The rule.\n * @param {string} direction Up or down.\n * @return {MmlNode} The premisses.\n */\nlet getPremises = function(rule: MmlNode, direction: string): MmlNode {\n  return rule.childNodes[direction === 'up' ? 1 : 0].childNodes[0].\n    childNodes[0].childNodes[0].childNodes[0] as MmlNode;\n};\n\n\n/**\n * Gets nth premise.\n * @param {MmlNode} premises The premises.\n * @param {number} n Number of premise to get.\n * @return {MmlNode} The nth premise.\n */\nlet getPremise = function(premises: MmlNode, n: number): MmlNode {\n  return premises.childNodes[n].childNodes[0].childNodes[0] as MmlNode;\n};\n\n\n/**\n * Gets first premise.\n * @param {MmlNode} premises The premises.\n * @return {MmlNode} The first premise.\n */\nlet firstPremise = function(premises: MmlNode): MmlNode {\n  return getPremise(premises, 0) as MmlNode;\n};\n\n\n/**\n * Gets last premise.\n * @param {MmlNode} premises The premises.\n * @return {MmlNode} The last premise.\n */\nlet lastPremise = function(premises: MmlNode): MmlNode {\n  return getPremise(premises, premises.childNodes.length - 1);\n};\n\n\n/**\n * Get conclusion in an inference rule.\n * @param {MmlNode} rule The rule.\n * @param {string} direction Up or down.\n * @return {MmlNode} The conclusion.\n */\nlet getConclusion = function(rule: MmlNode, direction: string): MmlNode {\n  return rule.childNodes[direction === 'up' ? 0 : 1].childNodes[0].childNodes[0].childNodes[0] as MmlNode;\n};\n\n\n/**\n * Gets the actual column element in an inference rule. I.e., digs down through\n * row, padding and space elements.\n * @param {MmlNode} inf The rule.\n * @return {MmlNode} The mtd element.\n */\nlet getColumn = function(inf: MmlNode): MmlNode {\n  while (inf && !NodeUtil.isType(inf, 'mtd')) {\n    inf = inf.parent as MmlNode;\n  }\n  return inf;\n};\n\n\n/**\n * Gets the next sibling of an inference rule.\n * @param {MmlNode} inf The inference rule.\n * @return {MmlNode} The next sibling.\n */\nlet nextSibling = function(inf: MmlNode): MmlNode {\n  return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) + 1] as MmlNode;\n};\n\n\n/**\n * Gets the previous sibling of an inference rule.\n * @param {MmlNode} inf The inference rule.\n * @return {MmlNode} The previous sibling.\n */\n// @ts-ignore\nlet previousSibling = function(inf: MmlNode): MmlNode {\n  return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) - 1] as MmlNode;\n};\n\n\n/**\n * Get the parent inference rule.\n * @param {MmlNode} inf The inference rule.\n * @return {MmlNode} Its parent.\n */\nlet getParentInf = function(inf: MmlNode): MmlNode {\n  while (inf && getProperty(inf, 'inference') == null) {\n    inf = inf.parent as MmlNode;\n  }\n  return inf;\n};\n\n\n// Computes bbox spaces\n//\n//\n\n/**\n * Computes spacing left or right of an inference rule. In the case of\n * right: right space + right label\n * left: left space + left label\n * @param {MmlNode} inf The overall proof tree.\n * @param {MmlNode} rule The particular inference rule.\n * @param {boolean = false} right True for right, o/w left.\n * @return {number} The spacing next to the rule.\n */\nlet getSpaces = function(inf: MmlNode, rule: MmlNode, right: boolean = false): number {\n  let result = 0;\n  if (inf === rule) {\n    return result;\n  }\n  if (inf !== rule.parent) {\n    let children = inf.childNodes as MmlNode[];\n    let index = right ? children.length - 1 : 0;\n    if (NodeUtil.isType(children[index], 'mspace')) {\n      result += getBBox(children[index]);\n    }\n    inf = rule.parent;\n  }\n  if (inf === rule) {\n    return result;\n  }\n  let children = inf.childNodes as MmlNode[];\n  let index = right ? children.length - 1 : 0;\n  if (children[index] !== rule) {\n    result += getBBox(children[index]);\n  }\n  return result;\n};\n\n\n// - Get rule T from Wrapper W.\n// - Get conclusion C in T.\n// - w: Preceding/following space/label.\n// - (x - y)/2: Distance from left boundary to middle of C.\n/**\n * Computes an space adjustment value to move the inference rule.\n * @param {MmlNode} inf The inference rule.\n * @param {boolean = false} right True if adjustments are on the right.\n * @return {number} The adjustment value.\n */\nlet adjustValue = function(inf: MmlNode, right: boolean = false): number {\n  let rule = getRule(inf);\n  let conc = getConclusion(rule, getProperty(rule, 'inferenceRule') as string);\n  // TODO:  Here we have to improve sequent adjustment!\n  let w = getSpaces(inf, rule, right);\n  let x = getBBox(rule);\n  let y = getBBox(conc);\n  return w + ((x - y) / 2);\n};\n\n\n/**\n * Adds (positive or negative) space in the column containing the inference rule.\n * @param {ParseOptions} config The parser configuration.\n * @param {MmlNode} inf The inference rule to place.\n * @param {number} space The space to be added.\n * @param {boolean = false} right True if adjustment is on the right.\n */\nlet addSpace = function(config: ParseOptions, inf: MmlNode,\n                        space: number, right: boolean = false) {\n  if (getProperty(inf, 'inferenceRule') ||\n      getProperty(inf, 'labelledRule')) {\n    const mrow = config.nodeFactory.create('node', 'mrow');\n    inf.parent.replaceChild(mrow, inf);\n    mrow.setChildren([inf]);\n    moveProperties(inf, mrow);\n    inf = mrow;\n  }\n  // TODO: Simplify below as we now have a definite mrow.\n  const index = right ? inf.childNodes.length - 1 : 0;\n  let mspace = inf.childNodes[index] as MmlNode;\n  if (NodeUtil.isType(mspace, 'mspace')) {\n    NodeUtil.setAttribute(\n      mspace, 'width',\n      ParseUtil.Em(ParseUtil.dimen2em(\n        NodeUtil.getAttribute(mspace, 'width') as string) + space));\n    return;\n  }\n  mspace = config.nodeFactory.create('node', 'mspace', [],\n                                     {width: ParseUtil.Em(space)});\n  if (right) {\n    inf.appendChild(mspace);\n    return;\n  }\n  mspace.parent = inf;\n  inf.childNodes.unshift(mspace);\n};\n\n\n/**\n * Propagates properties up the tree.\n * @param {MmlNode} src The source node.\n * @param {MmlNode} dest The destination node.\n */\nlet moveProperties = function(src: MmlNode, dest: MmlNode) {\n  let props = ['inference', 'proof', 'maxAdjust', 'labelledRule'];\n  props.forEach(x => {\n    let value = getProperty(src, x);\n    if (value != null) {\n      setProperty(dest, x, value);\n      removeProperty(src, x);\n    }\n  });\n};\n\n\n\n/********************************\n * The following methods deal with sequents. There are still issues with the\n * spatial layout, though.\n */\n// Sequents look like this: table row 3 cells\n// The table has the 'sequent' property.\n// The row is the node that is actually saved in the config object.\n/**\n * Method to adjust sequent positioning after the tree is computed.\n * @param {ParseOptions} config Parser configuration options.\n */\nlet adjustSequents = function(config: ParseOptions) {\n  let sequents = config.nodeLists['sequent'];\n  if (!sequents) {\n    return;\n  }\n  for (let i = sequents.length - 1, seq; seq = sequents[i]; i--) {\n    if (getProperty(seq, 'sequentProcessed')) {\n      removeProperty(seq, 'sequentProcessed');\n      continue;\n    }\n    let collect = [];\n    let inf = getParentInf(seq);\n    if (getProperty(inf, 'inference') !== 1) {\n      continue;\n    }\n    collect.push(seq);\n    while (getProperty(inf, 'inference') === 1) {\n      // In case we have a table with a label.\n      inf = getRule(inf);\n      let premise = firstPremise(getPremises(inf, getProperty(inf, 'inferenceRule') as string));\n      let sequent = (getProperty(premise, 'inferenceRule')) ?\n        // If the first premise is an inference rule, check the conclusions for a sequent.\n        getConclusion(premise, getProperty(premise, 'inferenceRule') as string) :\n        // Otherwise it is a hyp and we have to check the formula itself.\n        premise;\n      if (getProperty(sequent, 'sequent')) {\n        seq = sequent.childNodes[0] as MmlNode;\n        collect.push(seq);\n        setProperty(seq, 'sequentProcessed', true);\n      }\n      inf = premise;\n    }\n    adjustSequentPairwise(config, collect);\n  }\n};\n\n\n/**\n * Add spaces to the sequents where necessary.\n * @param {ParseOptions} config Parser configuration options.\n * @param {MmlNode} sequent The sequent inference rule.\n * @param {number} position Position of formula to adjust (0 or 2).\n * @param {string} direction Left or right of the turnstyle.\n * @param {number} width The space to add to the formulas.\n */\nconst addSequentSpace = function(config: ParseOptions, sequent: MmlNode,\n                                 position: number, direction: string, width: number) {\n  let mspace = config.nodeFactory.create('node', 'mspace', [],\n                                         {width: ParseUtil.Em(width)});\n  if (direction === 'left') {\n    let row = sequent.childNodes[position].childNodes[0] as MmlNode;\n    mspace.parent = row;\n    row.childNodes.unshift(mspace);\n  } else {\n    sequent.childNodes[position].appendChild(mspace);\n  }\n  setProperty(sequent.parent, 'sequentAdjust_' + direction, width);\n};\n\n\n/**\n * Adjusts the sequent positioning for a list of inference rules by pairwise\n * adjusting the width of formulas in sequents. I.e.,\n *    A,B |- C\n * ------------\n *    A |- B,C\n *\n * will be adjusted to\n *\n *    A, B |- C\n * ----------------\n *       A |- B,C\n *\n * @param {ParseOptions} config Parser configuration options.\n * @param {MmlNode[]} sequents The list of sequents.\n */\nconst adjustSequentPairwise = function(config: ParseOptions, sequents: MmlNode[]) {\n  let top = sequents.pop();\n  while (sequents.length) {\n    let bottom = sequents.pop();\n    let [left, right] = compareSequents(top, bottom);\n    if (getProperty(top.parent, 'axiom')) {\n      addSequentSpace(config, left < 0 ? top : bottom, 0, 'left', Math.abs(left));\n      addSequentSpace(config, right < 0 ? top : bottom, 2, 'right', Math.abs(right));\n    }\n    top = bottom;\n  }\n};\n\n\n/**\n * Compares the top and bottom sequent of a inference rule\n * Top:     A |- B\n *        ----------\n * Bottom:  C |- D\n *\n * @param {MmlNode} top Top sequent.\n * @param {MmlNode} bottom Bottom sequent.\n * @return {[number, number]} The delta for left and right side of the sequents.\n */\nconst compareSequents = function(top: MmlNode, bottom: MmlNode): [number, number] {\n  const tr = getBBox(top.childNodes[2] as MmlNode);\n  const br = getBBox(bottom.childNodes[2] as MmlNode);\n  const tl = getBBox(top.childNodes[0] as MmlNode);\n  const bl = getBBox(bottom.childNodes[0] as MmlNode);\n  // Deltas\n  const dl = tl - bl;\n  const dr = tr - br;\n  return [dl, dr];\n};\n\n// For every inference rule we adjust the width of ruler by subtracting and\n// adding suitable spaces around the rule. The algorithm in detail.\n//\n// Notions that we need:\n//\n//\n// * Inference: The inference consisting either of an inference rule or a\n//              structure containing the rule plus 0 - 2 labels and spacing\n//              elements.  s l{0,1} t r{0,1} s', m,n \\in IN_0\n//\n//              Technically this is realised as nested rows, if the spaces\n//              and/or labels exist:\n//              mr s mr l t r /mr s' /mr\n//\n// * InferenceRule: The rule without the labels and spacing.\n//\n// * Conclusion: The element forming the conclusion of the rule. In\n//               downwards inferences this is the final row of the table.\n//\n// * Premises: The premises of the rule. In downwards inferences this is the\n//             first row of the rule. Note that this is a rule itself,\n//             with one column for each premise and an empty column\n//             inbetween.\n//\n// * |x|: Width of bounding box of element x.\n//\n// Left adjustment:\n//\n// * For the given inference I:\n//    + compute rule R of I\n//    + compute premises P of I\n//    + compute premise P_f, P_l as first and last premise of I\n//\n// * If P_f is an inference rule:\n//    + compute adjust value a_f for wrapper W_f of P_f\n//    + add -a_f space to wrapper W_f\n//    + add  a_f space to wrapper W\n//\n// * If P_l is an inference rule:\n//   + compute adjust value a_l for wrapper W_l of P_l\n//   + if I has (right) label L: a_l = a_l + |L|\n//   + add -a_l space to P_l\n//   + a_l = max(a_l, A_I), where A_I is saved ajust value in the\n//     \"maxAdjust\" attribute of I.\n//\n//   + Case I is proof: Add a_l space to inf. (Correct after proof.)\n//   + Case I has sibling: Add a_l space to sibling.  (Correct after column.)\n//   + Otherwise: Propagate a_l by\n//                ++ find direct parent infererence rule I'\n//                ++ Set A_{I'} = a_l.\n//\n/**\n * Implements the above algorithm.\n * @param {FilterData} arg The parser configuration and mathitem to filter.\n */\nexport let balanceRules = function(arg: FilterData) {\n  item = new arg.document.options.MathItem('', null, arg.math.display);\n  let config = arg.data;\n  adjustSequents(config);\n  let inferences = config.nodeLists['inference'] || [];\n  for (let inf of inferences) {\n    let isProof = getProperty(inf, 'proof');\n    // This currently only works with downwards rules.\n    let rule = getRule(inf);\n    let premises = getPremises(rule, getProperty(rule, 'inferenceRule') as string);\n    let premiseF = firstPremise(premises);\n    if (getProperty(premiseF, 'inference')) {\n      let adjust = adjustValue(premiseF);\n      if (adjust) {\n        addSpace(config, premiseF, -adjust);\n        let w = getSpaces(inf, rule, false);\n        addSpace(config, inf, adjust - w);\n      }\n    }\n    // Right adjust:\n    let premiseL = lastPremise(premises);\n    if (getProperty(premiseL, 'inference') == null) {\n      continue;\n    }\n    let adjust = adjustValue(premiseL, true);\n    addSpace(config, premiseL, -adjust, true);\n    let w = getSpaces(inf, rule, true);\n    let maxAdjust = getProperty(inf, 'maxAdjust') as number;\n    if (maxAdjust != null) {\n      adjust = Math.max(adjust, maxAdjust);\n    }\n    let column: MmlNode;\n    if (isProof || !(column = getColumn(inf))) {\n      // After the tree we add a space with the accumulated max value.\n      // If the element is not in a column, we know we have some noise and the\n      // proof is an mrow around the final inference.\n      addSpace(config,\n               // in case the rule has been moved into an mrow in Left Adjust.\n               getProperty(inf, 'proof') ? inf : inf.parent, adjust - w, true);\n      continue;\n    }\n    let sibling = nextSibling(column);\n    if (sibling) {\n      // If there is a next column, it is the empty one and we make it wider by\n      // the accumulated max value.\n      const pos = config.nodeFactory.create('node', 'mspace', [],\n                                            {width: adjust - w + 'em'});\n      sibling.appendChild(pos);\n      inf.removeProperty('maxAdjust');\n      continue;\n    }\n    let parentRule = getParentInf(column);\n    if (!parentRule) {\n      continue;\n    }\n    // We are currently in rightmost inference, so we propagate the max\n    // correction value up in the tree.\n    adjust = getProperty(parentRule, 'maxAdjust') ?\n      Math.max(getProperty(parentRule, 'maxAdjust') as number, adjust) : adjust;\n    setProperty(parentRule, 'maxAdjust', adjust);\n  }\n};\n\n\n/**\n * Facilities for semantically relevant properties. These are used by SRE and\n * are always prefixed with bspr_.\n */\nlet property_prefix = 'bspr_';\nlet blacklistedProperties = {\n  [property_prefix + 'maxAdjust']: true\n};\n\n\n/**\n * Sets a bussproofs property used for postprocessing and to convey\n * semantics. Uses the bspr prefix.\n * @param {MmlNode} node The node.\n * @param {string} property The property to set.\n * @param {Property} value Its value.\n */\nexport let setProperty = function(node: MmlNode, property: string, value: Property) {\n  NodeUtil.setProperty(node, property_prefix + property, value);\n};\n\n\n/**\n * Gets a bussproofs property.\n * @param {MmlNode} node The node.\n * @param {string} property The property to retrieve.\n * @return {Property} The property object.\n */\nexport let getProperty = function(node: MmlNode, property: string): Property {\n  return NodeUtil.getProperty(node, property_prefix + property);\n};\n\n\n/**\n * Removes a bussproofs property.\n * @param {MmlNode} node\n * @param {string} property\n */\nexport let removeProperty = function(node: MmlNode, property: string) {\n  node.removeProperty(property_prefix + property);\n};\n\n\n/**\n * Postprocessor that adds properties as attributes to the nodes, unless they\n * are blacklisted.\n * @param {FilterData} arg The object to post-process.\n */\nexport let makeBsprAttributes = function(arg: FilterData) {\n  arg.data.root.walkTree((mml: MmlNode, _data?: any) => {\n    let attr: string[] = [];\n    mml.getPropertyNames().forEach(x => {\n      if (!blacklistedProperties[x] && x.match(RegExp('^' + property_prefix))) {\n        attr.push(x + ':' + mml.getProperty(x));\n      }\n    });\n    if (attr.length) {\n      NodeUtil.setAttribute(mml, 'semantics', attr.join(';'));\n    }\n  });\n};\n\n/**\n * Preprocessor that sets the document and jax for bounding box computations\n * @param {FilterData} arg The object to pre-process.\n */\nexport let saveDocument = function (arg: FilterData) {\n  doc = arg.document;\n  if (!('getBBox' in doc.outputJax)) {\n    throw Error('The bussproofs extension requires an output jax with a getBBox() method');\n  }\n};\n\n/**\n * Clear the document when we are done\n * @param {FilterData} arg The object to pre-process.\n */\nexport let clearDocument = function (_arg: FilterData) {\n  doc = null;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11272, "column": 0}, "map": {"version":3,"file":"BussproofsItems.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Items for TeX parsing of bussproofs.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport TexError from '../TexError.js';\nimport {BaseItem, CheckType, StackItem} from '../StackItem.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport Stack from '../Stack.js';\nimport * as BussproofsUtil from './BussproofsUtil.js';\n\n\nexport class ProofTreeItem extends BaseItem {\n\n\n  /**\n   * The current left label.\n   * @type {MmlNode[]}\n   */\n  public leftLabel: MmlNode[] = null;\n\n  /**\n   * The current right label.\n   * @type {MmlNode[]}\n   */\n  public rigthLabel: MmlNode[] = null;\n\n  private innerStack: Stack = new Stack(this.factory, {}, true);\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'proofTree';\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end') && item.getName() === 'prooftree') {\n      let node = this.toMml();\n      BussproofsUtil.setProperty(node, 'proof', true);\n      return [[this.factory.create('mml', node), item], true];\n    }\n    if (item.isKind('stop')) {\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    this.innerStack.Push(item);\n    return BaseItem.fail;\n  }\n\n\n  /**\n   * @override\n   */\n  public toMml() {\n    const tree = super.toMml();\n    const start = this.innerStack.Top();\n    if (start.isKind('start') && !start.Size()) {\n      return tree;\n    }\n    this.innerStack.Push(this.factory.create('stop'));\n    let prefix = this.innerStack.Top().toMml();\n    return this.create('node', 'mrow', [prefix, tree], {});\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,gBAAA,2CAAsC;AACtC,IAAA,4CAA+D;AAE/D,IAAA,aAAA,wCAAgC;AAChC,IAAA,iBAAA,6CAAsD;AAGtD,IAAA,gBAAA,SAAA,MAAA;IAAmC,UAAA,eAAA,QAAQ;IAA3C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAuDC;QAhDQ,MAAA,SAAS,GAAc,IAAI,CAAC;QAM5B,MAAA,UAAU,GAAc,IAAI,CAAC;QAE5B,MAAA,UAAU,GAAU,IAAI,WAAA,OAAK,CAAC,KAAI,CAAC,OAAO,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,CAAC;;IAwChE,CAAC;IAnCC,OAAA,cAAA,CAAW,cAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,WAAW,CAAC;QACrB,CAAC;;;OAAA;IAMM,cAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,WAAW,EAAE;YACxD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACxB,cAAc,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;YAChD,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;oBAAE,IAAI;iBAAC;gBAAE,IAAI;aAAC,CAAC;SACzD;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YACvB,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,mBAAmB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC1E;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,OAAO,eAAA,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC;IAMM,cAAA,SAAA,CAAA,KAAK,GAAZ;QACE,IAAM,IAAI,GAAG,OAAA,SAAA,CAAM,KAAK,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QACpC,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;YAC1C,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QAClD,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;QAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;YAAC,MAAM;YAAE,IAAI;SAAC,EAAE,CAAA,CAAE,CAAC,CAAC;IACzD,CAAC;IACH,OAAA,aAAC;AAAD,CAAC,AAvDD,CAAmC,eAAA,QAAQ,GAuD1C;AAvDY,QAAA,aAAA,GAAA,cAAa","ignoreList":[0]}},
    {"offset": {"line": 11389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11394, "column": 0}, "map": {"version":3,"file":"BussproofsMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for the bussproofs package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {StackItem} from '../StackItem.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport * as BussproofsUtil from './BussproofsUtil.js';\n\n\n// Namespace\nlet BussproofsMethods: Record<string, ParseMethod> = {};\n\n/**\n * Implements the proof tree environment.\n * @param {TexParser} parser The current parser.\n * @param {StackItem} begin The opening element of the environment.\n * @return {StackItem} The proof tree stackitem.\n */\n// TODO: Error handling if we have leftover elements or elements are not in the\n// required order.\nBussproofsMethods.Prooftree = function(parser: TexParser, begin: StackItem): StackItem {\n  parser.Push(begin);\n  // TODO: Check if opening a proof tree is legal.\n  let newItem = parser.itemFactory.create('proofTree').\n    setProperties({name: begin.getName(),\n                   line: 'solid', currentLine: 'solid', rootAtTop: false});\n  // parser.Push(item);\n  return newItem;\n};\n\n\n/**\n * Implements the Axiom command.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n */\nBussproofsMethods.Axiom = function(parser: TexParser, name: string) {\n  let top = parser.stack.Top();\n  // TODO: Label error\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  let content = paddedContent(parser, parser.GetArgument(name));\n  BussproofsUtil.setProperty(content, 'axiom', true);\n  top.Push(content);\n};\n\n\n/**\n * Pads content of an inference rule.\n * @param {TexParser} parser The calling parser.\n * @param {string} content The content to be padded.\n * @return {MmlNode} The mrow element with padded content.\n */\nconst paddedContent = function(parser: TexParser, content: string): MmlNode {\n  // Add padding on either site.\n  let nodes = ParseUtil.internalMath(parser, ParseUtil.trimSpaces(content), 0);\n  if (!nodes[0].childNodes[0].childNodes.length) {\n    return parser.create('node', 'mrow', []);\n  }\n  let lpad = parser.create('node', 'mspace', [], {width: '.5ex'});\n  let rpad = parser.create('node', 'mspace', [], {width: '.5ex'});\n  return parser.create('node', 'mrow', [lpad, ...nodes, rpad]);\n};\n\n\n/**\n * Implements the Inference rule commands.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {number} n Number of premises for this inference rule.\n */\nBussproofsMethods.Inference = function(parser: TexParser, name: string, n: number) {\n  let top = parser.stack.Top();\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  if (top.Size() < n) {\n    throw new TexError('BadProofTree', 'Proof tree badly specified.');\n  }\n  const rootAtTop = top.getProperty('rootAtTop') as boolean;\n  const childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;\n  let children: MmlNode[] = [];\n  do {\n    if (children.length) {\n      children.unshift(parser.create('node', 'mtd', [], {}));\n    }\n    children.unshift(\n      parser.create('node', 'mtd', [top.Pop()],\n                    {'rowalign': (rootAtTop ? 'top' : 'bottom')}));\n    n--;\n  } while (n > 0);\n  let row = parser.create('node', 'mtr', children, {});\n  let table = parser.create('node', 'mtable', [row], {framespacing: '0 0'});\n  let conclusion = paddedContent(parser, parser.GetArgument(name));\n  let style = top.getProperty('currentLine') as string;\n  if (style !== top.getProperty('line')) {\n    top.setProperty('currentLine', top.getProperty('line'));\n  }\n  let rule = createRule(\n    parser, table, [conclusion], top.getProperty('left') as MmlNode,\n    top.getProperty('right') as MmlNode, style, rootAtTop);\n  top.setProperty('left', null);\n  top.setProperty('right', null);\n  BussproofsUtil.setProperty(rule, 'inference', childCount);\n  parser.configuration.addNode('inference', rule);\n  top.Push(rule);\n};\n\n\n/**\n * Creates a ND style inference rule.\n * @param {TexParser} parser The calling parser.\n * @param {MmlNode} premise The premise (a single table).\n * @param {MmlNode[]} conclusions Elements that are combined into the conclusion.\n * @param {MmlNode|null} left The left label if it exists.\n * @param {MmlNode|null} right The right label if it exists.\n * @param {string} style Style of inference rule line.\n * @param {boolean} rootAtTop Direction of inference rule: true for root at top.\n */\nfunction createRule(parser: TexParser, premise: MmlNode,\n                    conclusions: MmlNode[], left: MmlNode | null,\n                    right: MmlNode | null, style: string,\n                    rootAtTop: boolean) {\n  const upper = parser.create(\n    'node', 'mtr', [parser.create('node', 'mtd', [premise], {})], {});\n  const lower = parser.create(\n    'node', 'mtr', [parser.create('node', 'mtd', conclusions, {})], {});\n  let rule = parser.create('node', 'mtable', rootAtTop ? [lower, upper] : [upper, lower],\n                           {align: 'top 2', rowlines: style, framespacing: '0 0'});\n  BussproofsUtil.setProperty(rule, 'inferenceRule', rootAtTop ? 'up' : 'down');\n  let leftLabel, rightLabel;\n  if (left) {\n    leftLabel = parser.create(\n      'node', 'mpadded', [left],\n      {height: '+.5em', width: '+.5em', voffset: '-.15em'});\n    BussproofsUtil.setProperty(leftLabel, 'prooflabel', 'left');\n  }\n  if (right) {\n    rightLabel = parser.create(\n      'node', 'mpadded', [right],\n      {height: '+.5em', width: '+.5em', voffset: '-.15em'});\n    BussproofsUtil.setProperty(rightLabel, 'prooflabel', 'right');\n  }\n  let children, label;\n  if (left && right) {\n    children = [leftLabel, rule, rightLabel];\n    label = 'both';\n  } else if (left) {\n    children = [leftLabel, rule];\n    label = 'left';\n  } else if (right) {\n    children = [rule, rightLabel];\n    label = 'right';\n  } else {\n    return rule;\n  }\n  rule = parser.create('node', 'mrow', children);\n  BussproofsUtil.setProperty(rule, 'labelledRule', label);\n  return rule;\n}\n\n\n/**\n * Implements the label command.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {string} side The side of the label.\n */\nBussproofsMethods.Label = function(parser: TexParser, name: string, side: string) {\n  let top = parser.stack.Top();\n  // Label error\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  let content = ParseUtil.internalMath(parser, parser.GetArgument(name), 0);\n  let label = (content.length > 1) ?\n    parser.create('node', 'mrow', content, {}) : content[0];\n  top.setProperty(side, label);\n};\n\n\n/**\n * Sets line style for inference rules.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {string} style The line style to set.\n * @param {boolean} always Set as permanent style.\n */\nBussproofsMethods.SetLine = function(parser: TexParser, _name: string, style: string, always: boolean) {\n  let top = parser.stack.Top();\n  // Label error\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  top.setProperty('currentLine', style);\n  if (always) {\n    top.setProperty('line', style);\n  }\n};\n\n\n/**\n * Implements commands indicating where the root of the proof tree is.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {string} where If true root is at top, otherwise at bottom.\n */\nBussproofsMethods.RootAtTop = function(parser: TexParser, _name: string, where: boolean) {\n  let top = parser.stack.Top();\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  top.setProperty('rootAtTop', where);\n};\n\n\n/**\n * Implements Axiom command for sequents.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n */\nBussproofsMethods.AxiomF = function(parser: TexParser, name: string) {\n  let top = parser.stack.Top();\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  let line = parseFCenterLine(parser, name);\n  BussproofsUtil.setProperty(line, 'axiom', true);\n  top.Push(line);\n};\n\n\n/**\n * Parses a line with a sequent (i.e., one containing \\\\fcenter).\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the calling command.\n * @return {MmlNode} The parsed line.\n */\nfunction parseFCenterLine(parser: TexParser, name: string): MmlNode {\n  let dollar = parser.GetNext();\n  if (dollar !== '$') {\n    throw new TexError('IllegalUseOfCommand',\n                       'Use of %1 does not match it\\'s definition.', name);\n  }\n  parser.i++;\n  let axiom = parser.GetUpTo(name, '$');\n  if (axiom.indexOf('\\\\fCenter') === -1) {\n    throw new TexError('IllegalUseOfCommand',\n                       'Missing \\\\fCenter in %1.', name);\n  }\n  // Check for fCenter and throw error?\n  let [prem, conc] = axiom.split('\\\\fCenter');\n  let premise = (new TexParser(prem, parser.stack.env, parser.configuration)).mml();\n  let conclusion = (new TexParser(conc, parser.stack.env, parser.configuration)).mml();\n  let fcenter = (new TexParser('\\\\fCenter', parser.stack.env, parser.configuration)).mml();\n  const left = parser.create('node', 'mtd', [premise], {});\n  const middle = parser.create('node', 'mtd', [fcenter], {});\n  const right = parser.create('node', 'mtd', [conclusion], {});\n  const row = parser.create('node', 'mtr', [left, middle, right], {});\n  const table = parser.create('node', 'mtable', [row], {columnspacing: '.5ex', columnalign: 'center 2'});\n  BussproofsUtil.setProperty(table, 'sequent', true);\n  parser.configuration.addNode('sequent', row);\n  return table;\n}\n\n\n/**\n * Placeholder for Fcenter macro that can be overwritten with renewcommand.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n */\nBussproofsMethods.FCenter = function(_parser: TexParser, _name: string) { };\n\n\n/**\n * Implements inference rules for sequents.\n * @param {TexParser} parser The current parser.\n * @param {string} name The name of the command.\n * @param {number} n Number of premises for this inference rule.\n */\nBussproofsMethods.InferenceF = function(parser: TexParser, name: string, n: number) {\n  let top = parser.stack.Top();\n  if (top.kind !== 'proofTree') {\n    throw new TexError('IllegalProofCommand',\n                       'Proof commands only allowed in prooftree environment.');\n  }\n  if (top.Size() < n) {\n    throw new TexError('BadProofTree', 'Proof tree badly specified.');\n  }\n  const rootAtTop = top.getProperty('rootAtTop') as boolean;\n  const childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;\n  let children: MmlNode[] = [];\n  do {\n    if (children.length) {\n      children.unshift(parser.create('node', 'mtd', [], {}));\n    }\n    children.unshift(\n      parser.create('node', 'mtd', [top.Pop()],\n                    {'rowalign': (rootAtTop ? 'top' : 'bottom')}));\n    n--;\n  } while (n > 0);\n  let row = parser.create('node', 'mtr', children, {});\n  let table = parser.create('node', 'mtable', [row], {framespacing: '0 0'});\n\n  let conclusion = parseFCenterLine(parser, name); // TODO: Padding\n  let style = top.getProperty('currentLine') as string;\n  if (style !== top.getProperty('line')) {\n    top.setProperty('currentLine', top.getProperty('line'));\n  }\n  let rule = createRule(\n    parser, table, [conclusion], top.getProperty('left') as MmlNode,\n    top.getProperty('right') as MmlNode, style, rootAtTop);\n  top.setProperty('left', null);\n  top.setProperty('right', null);\n  BussproofsUtil.setProperty(rule, 'inference', childCount);\n  parser.configuration.addNode('inference', rule);\n  top.Push(rule);\n};\n\nexport default BussproofsMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11738, "column": 0}, "map": {"version":3,"file":"BussproofsMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for Bussproofs package commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport BussproofsMethods from './BussproofsMethods.js';\nimport ParseMethods from '../ParseMethods.js';\nimport {CommandMap, EnvironmentMap} from '../SymbolMap.js';\n\n\n/**\n * Macros for bussproofs etc.\n */\nnew CommandMap('Bussproofs-macros', {\n  AxiomC:           'Axiom',\n  UnaryInfC:        ['Inference', 1],\n  BinaryInfC:       ['Inference', 2],\n  TrinaryInfC:      ['Inference', 3],\n  QuaternaryInfC:   ['Inference', 4],\n  QuinaryInfC:      ['Inference', 5],\n  RightLabel:       ['Label', 'right'],\n  LeftLabel:        ['Label', 'left'],\n  // Abbreviations are automatically enabled\n  AXC:              'Axiom',\n  UIC:              ['Inference', 1],\n  BIC:              ['Inference', 2],\n  TIC:              ['Inference', 3],\n  RL:               ['Label', 'right'],\n  LL:               ['Label', 'left'],\n\n  noLine:           ['SetLine', 'none', false],\n  singleLine:       ['SetLine', 'solid', false],\n  solidLine:        ['SetLine', 'solid', false],\n  dashedLine:       ['SetLine', 'dashed', false],\n  // Not yet implemented in CSS!\n  // doubleLine:       ['SetLine', 'double', false],\n  // dottedLine:       ['SetLine', 'dotted', false],\n\n  alwaysNoLine:           ['SetLine', 'none', true],\n  alwaysSingleLine:       ['SetLine', 'solid', true],\n  alwaysSolidLine:        ['SetLine', 'solid', true],\n  alwaysDashedLine:       ['SetLine', 'dashed', true],\n  // Not yet implemented in CSS!\n  // alwaysDoubleLine:       ['SetLine', 'double', true],\n  // alwaysDottedLine:       ['SetLine', 'dotted', true],\n\n  rootAtTop: ['RootAtTop', true],\n  alwaysRootAtTop: ['RootAtTop', true],\n\n  rootAtBottom: ['RootAtTop', false],\n  alwaysRootAtBottom: ['RootAtTop', false],\n  // TODO: always commands should be persistent.\n\n  fCenter:         'FCenter',\n  Axiom:           'AxiomF',\n  UnaryInf:        ['InferenceF', 1],\n  BinaryInf:        ['InferenceF', 2],\n  TrinaryInf:        ['InferenceF', 3],\n  QuaternaryInf:        ['InferenceF', 4],\n  QuinaryInf:        ['InferenceF', 5]\n}, BussproofsMethods);\n\n\nnew EnvironmentMap('Bussproofs-environments', ParseMethods.environment, {\n  prooftree:        ['Prooftree', null, false]\n}, BussproofsMethods);\n"],"names":[],"mappings":";;;;;;;;;AAwBA,IAAA,yBAAA,mDAAuD;AACvD,IAAA,oBAAA,+CAA8C;AAC9C,IAAA,4CAA2D;AAM3D,IAAI,eAAA,UAAU,CAAC,mBAAmB,EAAE;IAClC,MAAM,EAAY,OAAO;IACzB,SAAS,EAAS;QAAC,WAAW;QAAE,CAAC;KAAC;IAClC,UAAU,EAAQ;QAAC,WAAW;QAAE,CAAC;KAAC;IAClC,WAAW,EAAO;QAAC,WAAW;QAAE,CAAC;KAAC;IAClC,cAAc,EAAI;QAAC,WAAW;QAAE,CAAC;KAAC;IAClC,WAAW,EAAO;QAAC,WAAW;QAAE,CAAC;KAAC;IAClC,UAAU,EAAQ;QAAC,OAAO;QAAE,OAAO;KAAC;IACpC,SAAS,EAAS;QAAC,OAAO;QAAE,MAAM;KAAC;IAEnC,GAAG,EAAe,OAAO;IACzB,GAAG,EAAe;QAAC,WAAW;QAAE,CAAC;KAAC;IAClC,GAAG,EAAe;QAAC,WAAW;QAAE,CAAC;KAAC;IAClC,GAAG,EAAe;QAAC,WAAW;QAAE,CAAC;KAAC;IAClC,EAAE,EAAgB;QAAC,OAAO;QAAE,OAAO;KAAC;IACpC,EAAE,EAAgB;QAAC,OAAO;QAAE,MAAM;KAAC;IAEnC,MAAM,EAAY;QAAC,SAAS;QAAE,MAAM;QAAE,KAAK;KAAC;IAC5C,UAAU,EAAQ;QAAC,SAAS;QAAE,OAAO;QAAE,KAAK;KAAC;IAC7C,SAAS,EAAS;QAAC,SAAS;QAAE,OAAO;QAAE,KAAK;KAAC;IAC7C,UAAU,EAAQ;QAAC,SAAS;QAAE,QAAQ;QAAE,KAAK;KAAC;IAK9C,YAAY,EAAY;QAAC,SAAS;QAAE,MAAM;QAAE,IAAI;KAAC;IACjD,gBAAgB,EAAQ;QAAC,SAAS;QAAE,OAAO;QAAE,IAAI;KAAC;IAClD,eAAe,EAAS;QAAC,SAAS;QAAE,OAAO;QAAE,IAAI;KAAC;IAClD,gBAAgB,EAAQ;QAAC,SAAS;QAAE,QAAQ;QAAE,IAAI;KAAC;IAKnD,SAAS,EAAE;QAAC,WAAW;QAAE,IAAI;KAAC;IAC9B,eAAe,EAAE;QAAC,WAAW;QAAE,IAAI;KAAC;IAEpC,YAAY,EAAE;QAAC,WAAW;QAAE,KAAK;KAAC;IAClC,kBAAkB,EAAE;QAAC,WAAW;QAAE,KAAK;KAAC;IAGxC,OAAO,EAAU,SAAS;IAC1B,KAAK,EAAY,QAAQ;IACzB,QAAQ,EAAS;QAAC,YAAY;QAAE,CAAC;KAAC;IAClC,SAAS,EAAS;QAAC,YAAY;QAAE,CAAC;KAAC;IACnC,UAAU,EAAS;QAAC,YAAY;QAAE,CAAC;KAAC;IACpC,aAAa,EAAS;QAAC,YAAY;QAAE,CAAC;KAAC;IACvC,UAAU,EAAS;QAAC,YAAY;QAAE,CAAC;KAAC;CACrC,EAAE,uBAAA,OAAiB,CAAC,CAAC;AAGtB,IAAI,eAAA,cAAc,CAAC,yBAAyB,EAAE,kBAAA,OAAY,CAAC,WAAW,EAAE;IACtE,SAAS,EAAS;QAAC,WAAW;QAAE,IAAI;QAAE,KAAK;KAAC;CAC7C,EAAE,uBAAA,OAAiB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11887, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11892, "column": 0}, "map": {"version":3,"file":"BussproofsConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/bussproofs/BussproofsConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Bussproofs package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {ProofTreeItem} from './BussproofsItems.js';\nimport {saveDocument, clearDocument, balanceRules, makeBsprAttributes} from './BussproofsUtil.js';\nimport './BussproofsMappings.js';\n\n\nexport const BussproofsConfiguration = Configuration.create(\n  'bussproofs', {\n    handler: {\n      macro: ['Bussproofs-macros'],\n      environment: ['Bussproofs-environments']\n    },\n    items: {\n      [ProofTreeItem.prototype.kind]: ProofTreeItem,\n    },\n    preprocessors: [\n      [saveDocument, 1]\n    ],\n    postprocessors: [\n      [clearDocument, 3],\n      [makeBsprAttributes, 2],\n      [balanceRules, 1]\n    ]\n  }\n);\n"],"names":[],"mappings":";;;;;;AAwBA,IAAA,oDAAkD;AAClD,IAAA,uDAAmD;AACnD,IAAA,qDAAkG;;AAIrF,QAAA,uBAAuB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACzD,YAAY,EAAE;IACZ,OAAO,EAAE;QACP,KAAK,EAAE;YAAC,mBAAmB;SAAC;QAC5B,WAAW,EAAE;YAAC,yBAAyB;SAAC;KACzC;IACD,KAAK,EAAA,CAAA,KAAA,CAAA,GACH,EAAA,CAAC,qBAAA,aAAa,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,qBAAA,aAAa,KAC9C;IACD,aAAa,EAAE;QACb;YAAC,oBAAA,YAAY;YAAE,CAAC;SAAC;KAClB;IACD,cAAc,EAAE;QACd;YAAC,oBAAA,aAAa;YAAE,CAAC;SAAC;QAClB;YAAC,oBAAA,kBAAkB;YAAE,CAAC;SAAC;QACvB;YAAC,oBAAA,YAAY;YAAE,CAAC;SAAC;KAClB;CACF,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11933, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11938, "column": 0}, "map": {"version":3,"file":"EncloseConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/enclose/EncloseConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the enclose package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\n\n\n/**\n * The attributes allowed in \\enclose{notation}[attributes]{math}\n * @type {{[key: string]: number}}\n */\nexport const ENCLOSE_OPTIONS: {[key: string]: number} = {\n  'data-arrowhead': 1,\n  color: 1,\n  mathcolor: 1,\n  background: 1,\n  mathbackground: 1,\n  'data-padding': 1,\n  'data-thickness': 1\n};\n\n\n// Namespace\nexport let EncloseMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Implements \\enclose{notation}[attr]{math}\n * (create <menclose notation=\"notation\">math</menclose>)\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nEncloseMethods.Enclose = function(parser: TexParser, name: string) {\n  let notation = parser.GetArgument(name).replace(/,/g, ' ');\n  const attr = parser.GetBrackets(name, '');\n  const math = parser.ParseArg(name);\n  const def = ParseUtil.keyvalOptions(attr, ENCLOSE_OPTIONS);\n  def.notation = notation;\n  parser.Push(parser.create('node', 'menclose', [math], def));\n};\n\n\nnew CommandMap('enclose', {enclose: 'Enclose'}, EncloseMethods);\n\n\nexport const EncloseConfiguration = Configuration.create(\n  'enclose', {handler: {macro: ['enclose']}}\n);\n\n\n"],"names":[],"mappings":";;;;;;;;;;AAwBA,IAAA,oDAAkD;AAElD,IAAA,4CAA2C;AAE3C,IAAA,iBAAA,4CAAwC;AAO3B,QAAA,eAAe,GAA4B;IACtD,gBAAgB,EAAE,CAAC;IACnB,KAAK,EAAE,CAAC;IACR,SAAS,EAAE,CAAC;IACZ,UAAU,EAAE,CAAC;IACb,cAAc,EAAE,CAAC;IACjB,cAAc,EAAE,CAAC;IACjB,gBAAgB,EAAE,CAAC;CACpB,CAAC;AAIS,QAAA,cAAc,GAAgC,CAAA,CAAE,CAAC;AAS5D,QAAA,cAAc,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY;IAC/D,IAAI,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC3D,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,IAAM,GAAG,GAAG,eAAA,OAAS,CAAC,aAAa,CAAC,IAAI,EAAE,QAAA,eAAe,CAAC,CAAC;IAC3D,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;QAAC,IAAI;KAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC;AAGF,IAAI,eAAA,UAAU,CAAC,SAAS,EAAE;IAAC,OAAO,EAAE,SAAS;AAAA,CAAC,EAAE,QAAA,cAAc,CAAC,CAAC;AAGnD,QAAA,oBAAoB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACtD,SAAS,EAAE;IAAC,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,SAAS;SAAC;IAAA,CAAC;AAAA,CAAC,CAC3C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11986, "column": 0}, "map": {"version":3,"file":"CancelConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/cancel/CancelConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the cancel package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {ENCLOSE_OPTIONS} from '../enclose/EncloseConfiguration.js';\n\n\n// Namespace\nexport let CancelMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Parse function for cancel macros of the form \\(b|x)?cancel[attributes]{math}\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n * @param {string} notation The type of cancel notation to use.\n */\nCancelMethods.Cancel = function(parser: TexParser, name: string, notation: string) {\n  const attr = parser.GetBrackets(name, '');\n  const math = parser.ParseArg(name);\n  const def = ParseUtil.keyvalOptions(attr, ENCLOSE_OPTIONS);\n  def['notation'] = notation;\n  parser.Push(parser.create('node', 'menclose', [math], def));\n};\n\n\n/**\n * Parse function implementing \\cancelto{value}[attributes]{math}\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\n\nCancelMethods.CancelTo = function(parser: TexParser, name: string) {\n  const attr = parser.GetBrackets(name, '');\n  let value = parser.ParseArg(name);\n  const math = parser.ParseArg(name);\n  const def = ParseUtil.keyvalOptions(attr, ENCLOSE_OPTIONS);\n  def ['notation'] = [TexConstant.Notation.UPDIAGONALSTRIKE,\n                      TexConstant.Notation.UPDIAGONALARROW,\n                      TexConstant.Notation.NORTHEASTARROW].join(' ');\n  value = parser.create('node', 'mpadded', [value],\n                        {depth: '-.1em', height: '+.1em', voffset: '.1em'});\n  parser.Push(parser.create('node', 'msup',\n                            [parser.create('node', 'menclose', [math], def), value]));\n};\n\n\nnew CommandMap('cancel', {\n  cancel:   ['Cancel', TexConstant.Notation.UPDIAGONALSTRIKE],\n  bcancel:  ['Cancel', TexConstant.Notation.DOWNDIAGONALSTRIKE],\n  xcancel:  ['Cancel', TexConstant.Notation.UPDIAGONALSTRIKE + ' ' +\n             TexConstant.Notation.DOWNDIAGONALSTRIKE],\n  cancelto: 'CancelTo'\n}, CancelMethods);\n\n\nexport const CancelConfiguration = Configuration.create(\n  'cancel', {handler: {macro: ['cancel']}}\n);\n\n\n"],"names":[],"mappings":";;;;;;;;;;AAwBA,IAAA,oDAAkD;AAElD,IAAA,kDAA+C;AAC/C,IAAA,4CAA2C;AAE3C,IAAA,iBAAA,4CAAwC;AACxC,IAAA,0EAAmE;AAIxD,QAAA,aAAa,GAAgC,CAAA,CAAE,CAAC;AAS3D,QAAA,aAAa,CAAC,MAAM,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,QAAgB;IAC/E,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,IAAM,GAAG,GAAG,eAAA,OAAS,CAAC,aAAa,CAAC,IAAI,EAAE,0BAAA,eAAe,CAAC,CAAC;IAC3D,GAAG,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;IAC3B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;QAAC,IAAI;KAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC;AASF,QAAA,aAAa,CAAC,QAAQ,GAAG,SAAS,MAAiB,EAAE,IAAY;IAC/D,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC1C,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,IAAM,GAAG,GAAG,eAAA,OAAS,CAAC,aAAa,CAAC,IAAI,EAAE,0BAAA,eAAe,CAAC,CAAC;IAC3D,GAAG,CAAE,UAAU,CAAC,GAAG;QAAC,kBAAA,WAAW,CAAC,QAAQ,CAAC,gBAAgB;QACrC,kBAAA,WAAW,CAAC,QAAQ,CAAC,eAAe;QACpC,kBAAA,WAAW,CAAC,QAAQ,CAAC,cAAc;KAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnE,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;QAAC,KAAK;KAAC,EAC1B;QAAC,KAAK,EAAE,OAAO;QAAE,MAAM,EAAE,OAAO;QAAE,OAAO,EAAE,MAAM;IAAA,CAAC,CAAC,CAAC;IAC1E,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EACd;QAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;YAAC,IAAI;SAAC,EAAE,GAAG,CAAC;QAAE,KAAK;KAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC;AAGF,IAAI,eAAA,UAAU,CAAC,QAAQ,EAAE;IACvB,MAAM,EAAI;QAAC,QAAQ;QAAE,kBAAA,WAAW,CAAC,QAAQ,CAAC,gBAAgB;KAAC;IAC3D,OAAO,EAAG;QAAC,QAAQ;QAAE,kBAAA,WAAW,CAAC,QAAQ,CAAC,kBAAkB;KAAC;IAC7D,OAAO,EAAG;QAAC,QAAQ;QAAE,kBAAA,WAAW,CAAC,QAAQ,CAAC,gBAAgB,GAAG,GAAG,GACrD,kBAAA,WAAW,CAAC,QAAQ,CAAC,kBAAkB;KAAC;IACnD,QAAQ,EAAE,UAAU;CACrB,EAAE,QAAA,aAAa,CAAC,CAAC;AAGL,QAAA,mBAAmB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACrD,QAAQ,EAAE;IAAC,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,QAAQ;SAAC;IAAA,CAAC;AAAA,CAAC,CACzC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12057, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12062, "column": 0}, "map": {"version":3,"file":"EmpheqUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/empheq/EmpheqUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Utilities file for the empheq package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\n\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\nimport {EnvList} from '../StackItem.js';\nimport {AbstractTags} from '../Tags.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {MmlMtable} from '../../../core/MmlTree/MmlNodes/mtable.js';\nimport {MmlMtd} from '../../../core/MmlTree/MmlNodes/mtd.js';\nimport {EmpheqBeginItem} from './EmpheqConfiguration.js';\n\nexport const EmpheqUtil = {\n\n  /**\n   * Create the needed envinronment and process it by the give function.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} env         The environment to create.\n   * @param {Function} func      A function to process the environment.\n   * @param {any[]} args         The arguments for func.\n   */\n  environment(parser: TexParser, env: string, func: Function, args: any[]) {\n    const name = args[0];\n    const item = parser.itemFactory.create(name + '-begin').setProperties({name: env, end: name});\n    parser.Push(func(parser, item, ...args.slice(1)));\n  },\n\n  /**\n   * Parse an options string.\n   *\n   * @param {string} text                   The string to parse.\n   * @param {{[key:string]:number} allowed  Object containing options to allow\n   * @return {EnvList}                      The parsed keys\n   */\n  splitOptions(text: string, allowed: {[key: string]: number} = null): EnvList {\n    return ParseUtil.keyvalOptions(text, allowed, true);\n  },\n\n  /**\n   * Find the number of columns in the table.\n   *\n   * @param {MmlMtable} table   The table whose columns to count.\n   * @return {number}           The number of columns in the table.\n   */\n  columnCount(table: MmlMtable): number {\n    let m = 0;\n    for (const row of table.childNodes) {\n      const n = row.childNodes.length - (row.isKind('mlabeledtr') ? 1 : 0);\n      if (n > m) m = n;\n    }\n    return m;\n  },\n\n  /**\n   * Create an mpadded element with no height and depth, but whose\n   *   content is the given TeX code with a phantom that is the height and\n   *   depth of the given table.\n   *\n   * @param {string} tex        The TeX code to put in the box.\n   * @param {MmlTable} table    The table used to size the box.\n   * @param {TexParser} parser  The active tex parser.\n   * @param {string} env        The name of the current environment.\n   * @return {MmlNode}          The mpadded element.\n   */\n  cellBlock(tex: string, table: MmlMtable, parser: TexParser, env: string): MmlNode {\n    const mpadded = parser.create('node', 'mpadded', [], {height: 0, depth: 0, voffset: '-1height'});\n    const result = new TexParser(tex, parser.stack.env, parser.configuration);\n    const mml = result.mml();\n    if (env && result.configuration.tags.label) {\n      (result.configuration.tags.currentTag as any).env = env;\n      (result.configuration.tags as AbstractTags).getTag(true);\n    }\n    for (const child of (mml.isInferred ? mml.childNodes : [mml])) {\n      mpadded.appendChild(child);\n    }\n    mpadded.appendChild(parser.create('node', 'mphantom', [\n      parser.create('node', 'mpadded', [table], {width: 0})\n    ]));\n    return mpadded;\n  },\n\n  /**\n   * Make a copy of the table with only the first row and create a phantom element\n   *   that has its height and depth.\n   *\n   * @param {MmlMtable} original   The original table.\n   * @param {TexParser} parser     The active tex parser.\n   * @return {MmlNode}             The resulting mphantom element.\n   */\n  topRowTable(original: MmlMtable, parser: TexParser): MmlNode {\n    const table = ParseUtil.copyNode(original, parser);\n    table.setChildren(table.childNodes.slice(0, 1));\n    table.attributes.set('align', 'baseline 1');\n    return original.factory.create('mphantom', {}, [parser.create('node', 'mpadded', [table],  {width: 0})]);\n  },\n\n  /**\n   * Add an mpadded element that has zero height and depth but whose content is\n   *   the cell block for the given TeX code followed by a struct the size of the top row.\n   *\n   * @param {MmlMtd} mtd         The mtd to add content to.\n   * @param {string} tex         The TeX string to put into the cell.\n   * @param {MmlMtable} table    The reference table used for its various heights.\n   * @param {TexParser} parser   The active tex parser.\n   * @param {srting} env         The current environment.\n   */\n  rowspanCell(mtd: MmlMtd, tex: string, table: MmlMtable, parser: TexParser, env: string) {\n    mtd.appendChild(\n      parser.create('node', 'mpadded', [\n        this.cellBlock(tex, ParseUtil.copyNode(table, parser), parser, env),\n        this.topRowTable(table, parser)\n      ], {height: 0, depth: 0, voffset: 'height'})\n    );\n  },\n\n  /**\n   * Add something on the left of the original table.\n   *\n   * @param {MmlMtable} table     The table to modify.\n   * @param {MmlMtable} original  The original table.\n   * @param {string} left         The TeX code to add to the left.\n   * @param {TexParser} parser    The active tex parser.\n   * @param {string} env          The current environment.\n   */\n  left(table: MmlMtable, original: MmlMtable, left: string, parser: TexParser, env: string = '') {\n    table.attributes.set('columnalign', 'right ' + (table.attributes.get('columnalign') || ''));\n    table.attributes.set('columnspacing', '0em ' + (table.attributes.get('columnspacing') || ''));\n    let mtd;\n    for (const row of table.childNodes.slice(0).reverse()) {\n      mtd = parser.create('node', 'mtd');\n      row.childNodes.unshift(mtd);\n      mtd.parent = row;\n      if (row.isKind('mlabeledtr')) {\n        row.childNodes[0] = row.childNodes[1];\n        row.childNodes[1] = mtd;\n      }\n    }\n    this.rowspanCell(mtd, left, original, parser, env);\n  },\n\n  /**\n   * Add something on the right of the original table.\n   *\n   * @param {MmlMtable} table     The table to modify.\n   * @param {MmlMtable} original  The original table.\n   * @param {string} right        The TeX code to add to the right.\n   * @param {TexParser} parser    The active tex parser.\n   * @param {string} env          The current environment.\n   */\n  right(table: MmlMtable, original: MmlMtable, right: string, parser: TexParser, env: string = '') {\n    if (table.childNodes.length === 0) {\n      table.appendChild(parser.create('node', 'mtr'));\n    }\n    const m = EmpheqUtil.columnCount(table);\n    const row = table.childNodes[0];\n    while (row.childNodes.length < m) row.appendChild(parser.create('node', 'mtd'));\n    const mtd = row.appendChild(parser.create('node', 'mtd')) as MmlMtd;\n    EmpheqUtil.rowspanCell(mtd, right, original, parser, env);\n    table.attributes.set(\n      'columnalign',\n      (table.attributes.get('columnalign') as string || '').split(/ /).slice(0, m).join(' ') + ' left'\n    );\n    table.attributes.set(\n      'columnspacing',\n      (table.attributes.get('columnspacing') as string || '').split(/ /).slice(0, m - 1).join(' ') + ' 0em'\n    );\n  },\n\n  /**\n   * Add the left- and right-hand material to the table.\n   */\n  adjustTable(empheq: EmpheqBeginItem, parser: TexParser) {\n    const left = empheq.getProperty('left');\n    const right = empheq.getProperty('right');\n    if (left || right) {\n      const table = empheq.Last;\n      const original = ParseUtil.copyNode(table, parser);\n      if (left) this.left(table, original, left, parser);\n      if (right) this.right(table, original, right, parser);\n    }\n  },\n\n  /**\n   * The environments allowed to be used in the empheq environment.\n   */\n  allowEnv: {\n    equation: true,\n    align: true,\n    gather: true,\n    flalign: true,\n    alignat: true,\n    multline: true\n  },\n\n  /**\n   * Checks to see if the given environment is one of the allowed ones.\n   *\n   * @param {string} env   The environment to check.\n   * @return {boolean}     True if the environment is allowed.\n   */\n  checkEnv(env: string): boolean {\n    return this.allowEnv.hasOwnProperty(env.replace(/\\*$/, '')) || false;\n  }\n\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12287, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12292, "column": 0}, "map": {"version":3,"file":"CasesConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/cases/CasesConfiguration.ts"],"sourcesContent":["import {Configuration} from '../Configuration.js';\nimport {EnvironmentMap, MacroMap} from '../SymbolMap.js';\nimport ParseUtil from '../ParseUtil.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {BeginItem, EqnArrayItem} from '../base/BaseItems.js';\nimport {AmsTags} from '../ams/AmsConfiguration.js';\nimport {StackItem, CheckType} from '../StackItem.js';\nimport {MmlMtable} from '../../../core/MmlTree/MmlNodes/mtable.js';\nimport {EmpheqUtil} from '../empheq/EmpheqUtil.js';\n\n/**\n * The StackItem for the numcases environment.\n */\nexport class CasesBeginItem extends BeginItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'cases-begin';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem) {\n    if (item.isKind('end') && item.getName() === this.getName()) {\n      if (this.getProperty('end')) {\n        this.setProperty('end', false);\n        return [[], true] as CheckType;\n      }\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * A tagging class for the subnumcases environment.\n */\nexport class CasesTags extends AmsTags {\n\n  /**\n   * The counter for the subnumber.\n   */\n  protected subcounter = 0;\n\n  /**\n   * @override\n   */\n  public start(env: string, taggable: boolean, defaultTags: boolean) {\n    this.subcounter = 0;\n    super.start(env, taggable, defaultTags);\n  }\n\n  /**\n   * @override\n   */\n  public autoTag() {\n    if (this.currentTag.tag != null) return;\n    if (this.currentTag.env === 'subnumcases') {\n      if (this.subcounter === 0) this.counter++;\n      this.subcounter++;\n      this.tag(this.formatNumber(this.counter, this.subcounter), false);\n    } else {\n      if (this.subcounter === 0 || this.currentTag.env !== 'numcases-left') this.counter++;\n      this.tag(this.formatNumber(this.counter), false);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public formatNumber(n: number, m: number = null) {\n    return n.toString() + (m === null ? '' : String.fromCharCode(0x60 + m));\n  }\n\n}\n\nexport const CasesMethods = {\n\n  /**\n   * Implements the numcases environment.\n   *\n   * @param {TexParser} texparser   The active tex parser.\n   * @param {CasesBeginItem} begin  The environment begin item.\n   */\n  NumCases(parser: TexParser, begin: CasesBeginItem) {\n    if (parser.stack.env.closing === begin.getName()) {\n      delete parser.stack.env.closing;\n      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName())); // finish eqnarray\n      const cases = parser.stack.Top();\n      const table = cases.Last as MmlMtable;\n      const original = ParseUtil.copyNode(table, parser) as MmlMtable;\n      const left = cases.getProperty('left');\n      EmpheqUtil.left(table, original, left + '\\\\empheqlbrace\\\\,', parser, 'numcases-left');\n      parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));\n      return null;\n    } else {\n      const left = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n      begin.setProperty('left', left);\n      const array = BaseMethods.EqnArray(parser, begin, true, true, 'll', ) as EqnArrayItem;\n      array.arraydef.displaystyle = false;\n      array.arraydef.rowspacing = '.2em';\n      array.setProperty('numCases', true);\n      parser.Push(begin);\n      return array;\n    }\n  },\n\n  /**\n   * Replacement for & in cases environment.\n   */\n  Entry(parser: TexParser, name: string) {\n    if (!parser.stack.Top().getProperty('numCases')) {\n      return BaseMethods.Entry(parser, name);\n    }\n    parser.Push(parser.itemFactory.create('cell').setProperties({isEntry: true, name: name}));\n    //\n    //  Make second column be in \\text{...}\n    //\n    const tex = parser.string;\n    let braces = 0, i = parser.i, m = tex.length;\n    //\n    //  Look through the string character by character...\n    //\n    while (i < m) {\n      const c = tex.charAt(i);\n      if (c === '{') {\n        //\n        //  Increase the nested brace count and go on\n        //\n        braces++;\n        i++;\n      } else if (c === '}') {\n        //\n        //  If there are too many close braces, just end (we will get an\n        //    error message later when the rest of the string is parsed)\n        //  Otherwise\n        //    decrease the nested brace count,\n        //    go on to the next character.\n        //\n        if (braces === 0) {\n          break;\n        } else {\n          braces--;\n          i++;\n        }\n      } else if (c === '&' && braces === 0) {\n        //\n        //  Extra alignment tabs are not allowed in cases\n        //\n        throw new TexError('ExtraCasesAlignTab', 'Extra alignment tab in text for numcase environment');\n      } else if (c === '\\\\' && braces === 0) {\n        //\n        //  If the macro is \\cr or \\\\, end the search, otherwise skip the macro\n        //  (multi-letter names don't matter, as we will skip the rest of the\n        //   characters in the main loop)\n        //\n        const cs = (tex.slice(i + 1).match(/^[a-z]+|./i) || [])[0];\n        if (cs === '\\\\' || cs === 'cr' || cs === 'end' || cs === 'label') {\n          break;\n        } else {\n          i += cs.length;\n        }\n      } else {\n        //\n        //  Go on to the next character\n        //\n        i++;\n      }\n    }\n    //\n    //  Process the second column as text and continue parsing from there,\n    //\n    const text = tex.substr(parser.i, i - parser.i).replace(/^\\s*/, '');\n    parser.PushAll(ParseUtil.internalMath(parser, text, 0));\n    parser.i = i;\n  }\n\n};\n\n/**\n * The environments for this package\n */\nnew EnvironmentMap('cases-env', EmpheqUtil.environment, {\n  numcases: ['NumCases', 'cases'],\n  subnumcases: ['NumCases', 'cases']\n}, CasesMethods);\n\n/**\n * The macros for this package\n */\nnew MacroMap('cases-macros', {\n  '&': 'Entry'\n}, CasesMethods);\n\n//\n//  Define the package for our new environment\n//\nexport const CasesConfiguration = Configuration.create('cases', {\n  handler: {\n    environment: ['cases-env'],\n    character: ['cases-macros']\n  },\n  items: {\n    [CasesBeginItem.prototype.kind]: CasesBeginItem\n  },\n  tags: {'cases': CasesTags}\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12484, "column": 0}, "map": {"version":3,"file":"CenternotConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/centernot/CenternotConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the centernot package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport ParseOptions from '../ParseOptions.js';\nimport TexParser from '../TexParser.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport BaseMethods from '../base/BaseMethods.js';\n\nnew CommandMap('centernot', {\n  centerOver: 'CenterOver',\n  centernot: ['Macro', '\\\\centerOver{#1}{{\\u29F8}}', 1]\n}, {\n  /**\n   * Implements \\centerOver{base}{symbol}\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the macro being processed.\n   */\n  CenterOver(parser: TexParser, name: string) {\n    const arg = '{' + parser.GetArgument(name) + '}';\n    const over = parser.ParseArg(name);\n    const base = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n    let mml = parser.create('node', 'TeXAtom', [\n      new TexParser(arg, parser.stack.env, parser.configuration).mml(),\n      parser.create('node', 'mpadded', [\n        parser.create('node', 'mpadded', [over], {width: 0, lspace: '-.5width'}),\n        parser.create('node', 'mphantom', [base])\n      ], {width: 0, lspace: '-.5width'})\n    ]);\n    parser.configuration.addNode('centerOver', base);\n    parser.Push(mml);\n  },\n  Macro: BaseMethods.Macro\n});\n\n/**\n * Filter to copy texClass to the surrounding TeXAtom so that the negated\n *   item has the same class of the base.\n *\n * @param {ParseOptions} data   The active tex parser.\n */\nexport function filterCenterOver({data}: {data: ParseOptions}) {\n  for (const base of data.getList('centerOver')) {\n    const texClass = NodeUtil.getTexClass(base.childNodes[0].childNodes[0] as MmlNode);\n    if (texClass !== null) {\n      NodeUtil.setProperties(base.parent.parent.parent.parent.parent.parent, {texClass});\n    }\n  }\n}\n\n\nexport const CenternotConfiguration = Configuration.create(\n  'centernot', {\n    handler: {macro: ['centernot']},\n    postprocessors: [filterCenterOver]\n  }\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,oDAAkD;AAElD,IAAA,iBAAA,4CAAwC;AACxC,IAAA,gBAAA,2CAAsC;AACtC,IAAA,4CAA2C;AAE3C,IAAA,mBAAA,mDAAiD;AAEjD,IAAI,eAAA,UAAU,CAAC,WAAW,EAAE;IAC1B,UAAU,EAAE,YAAY;IACxB,SAAS,EAAE;QAAC,OAAO;QAAE,4BAA4B;QAAE,CAAC;KAAC;CACtD,EAAE;IAOD,UAAU,EAAV,SAAW,MAAiB,EAAE,IAAY;QACxC,IAAM,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QACjD,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnC,IAAM,IAAI,GAAG,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YACzC,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE;YAChE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;oBAAC,IAAI;iBAAC,EAAE;oBAAC,KAAK,EAAE,CAAC;oBAAE,MAAM,EAAE,UAAU;gBAAA,CAAC,CAAC;gBACxE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;oBAAC,IAAI;iBAAC,CAAC;aAC1C,EAAE;gBAAC,KAAK,EAAE,CAAC;gBAAE,MAAM,EAAE,UAAU;YAAA,CAAC,CAAC;SACnC,CAAC,CAAC;QACH,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IACD,KAAK,EAAE,iBAAA,OAAW,CAAC,KAAK;CACzB,CAAC,CAAC;AAQH,SAAgB,gBAAgB,CAAC,EAA4B;;QAA3B,IAAI,GAAA,GAAA,IAAA;;QACpC,IAAmB,IAAA,KAAA,SAAA,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;YAA1C,IAAM,IAAI,GAAA,GAAA,KAAA;YACb,IAAM,QAAQ,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAY,CAAC,CAAC;YACnF,IAAI,QAAQ,KAAK,IAAI,EAAE;gBACrB,cAAA,OAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;oBAAC,QAAQ,EAAA,QAAA;gBAAA,CAAC,CAAC,CAAC;aACpF;SACF;;;;;;;;;;;;AACH,CAAC;AAPD,QAAA,gBAAA,GAAA,iBAOC;AAGY,QAAA,sBAAsB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACxD,WAAW,EAAE;IACX,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,WAAW;SAAC;IAAA,CAAC;IAC/B,cAAc,EAAE;QAAC,gBAAgB;KAAC;CACnC,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 12583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12588, "column": 0}, "map": {"version":3,"file":"ColorMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/color/ColorMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 Omar Al-Ithawi and The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Parse methods and helper functtions for the color package.\n *\n * @author i@omardo.com (Omar Al-Ithawi)\n */\n\n\nimport NodeUtil from '../NodeUtil.js';\nimport {ParseMethod} from '../Types.js';\nimport {PropertyList} from '../../../core/Tree/Node.js';\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\n\nimport {ColorModel} from './ColorUtil.js';\n\n\n/**\n * Build PropertyList from padding value.\n *\n * @param {string} colorPadding: Padding for \\colorbox and \\fcolorbox.\n * @return {PropertyList} The padding properties.\n */\nfunction padding(colorPadding: string): PropertyList {\n  const pad = `+${colorPadding}`;\n  const unit = colorPadding.replace(/^.*?([a-z]*)$/, '$1');\n  const pad2 = 2 * parseFloat(pad);\n  return {\n    width: `+${pad2}${unit}`,\n    height: pad,\n    depth: pad,\n    lspace: colorPadding,\n  };\n}\n\n\nexport const ColorMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Override \\color macro definition.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.Color = function (parser: TexParser, name: string) {\n  const model = parser.GetBrackets(name, '');\n  const colorDef = parser.GetArgument(name);\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n  const color = colorModel.getColor(model, colorDef);\n\n  const style = parser.itemFactory.create('style')\n    .setProperties({styles: { mathcolor: color }});\n  parser.stack.env['color'] = color;\n\n  parser.Push(style);\n};\n\n\n/**\n * Define the \\textcolor macro.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.TextColor = function (parser: TexParser, name: string) {\n  const model = parser.GetBrackets(name, '');\n  const colorDef = parser.GetArgument(name);\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n  const color = colorModel.getColor(model, colorDef);\n  const old = parser.stack.env['color'];\n\n  parser.stack.env['color'] = color;\n  const math = parser.ParseArg(name);\n\n  if (old) {\n    parser.stack.env['color'] = old;\n  } else {\n    delete parser.stack.env['color'];\n  }\n\n  const node = parser.create('node', 'mstyle', [math], {mathcolor: color});\n  parser.Push(node);\n};\n\n/**\n * Define the \\definecolor macro.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.DefineColor = function (parser: TexParser, name: string) {\n  const cname = parser.GetArgument(name);\n  const model = parser.GetArgument(name);\n  const def = parser.GetArgument(name);\n\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n  colorModel.defineColor(model, cname, def);\n};\n\n/**\n * Produce a text box with a colored background: `\\colorbox`.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.ColorBox = function (parser: TexParser, name: string) {\n  const cname = parser.GetArgument(name);\n  const math = ParseUtil.internalMath(parser, parser.GetArgument(name));\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n\n  const node = parser.create('node', 'mpadded', math, {\n    mathbackground: colorModel.getColor('named', cname)\n  });\n\n  NodeUtil.setProperties(node, padding(parser.options.color.padding));\n  parser.Push(node);\n};\n\n/**\n * Produce a framed text box with a colored background: `\\fcolorbox`.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the control sequence.\n */\nColorMethods.FColorBox = function (parser: TexParser, name: string) {\n  const fname = parser.GetArgument(name);\n  const cname = parser.GetArgument(name);\n  const math = ParseUtil.internalMath(parser, parser.GetArgument(name));\n  const options = parser.options.color;\n  const colorModel: ColorModel = parser.configuration.packageData.get('color').model;\n\n  const node = parser.create('node', 'mpadded', math, {\n    mathbackground: colorModel.getColor('named', cname),\n    style: `border: ${options.borderWidth} solid ${colorModel.getColor('named', fname)}`\n  });\n\n  NodeUtil.setProperties(node, padding(options.padding));\n  parser.Push(node);\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12675, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12680, "column": 0}, "map": {"version":3,"file":"ColorConstants.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/color/ColorConstants.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 Omar Al-Ithawi and The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Constants file for the color package.\n *\n * @author i@omardo.com (Omar Al-Ithawi)\n */\n\nexport const COLORS: Map<string, string> = new Map<string, string>([\n  ['Apricot', '#FBB982'],\n  ['Aquamarine', '#00B5BE'],\n  ['Bittersweet', '#C04F17'],\n  ['Black', '#221E1F'],\n  ['Blue', '#2D2F92'],\n  ['BlueGreen', '#00B3B8'],\n  ['BlueViolet', '#473992'],\n  ['BrickRed', '#B6321C'],\n  ['Brown', '#792500'],\n  ['BurntOrange', '#F7921D'],\n  ['CadetBlue', '#74729A'],\n  ['CarnationPink', '#F282B4'],\n  ['Cerulean', '#00A2E3'],\n  ['CornflowerBlue', '#41B0E4'],\n  ['Cyan', '#00AEEF'],\n  ['Dandelion', '#FDBC42'],\n  ['DarkOrchid', '#A4538A'],\n  ['Emerald', '#00A99D'],\n  ['ForestGreen', '#009B55'],\n  ['Fuchsia', '#8C368C'],\n  ['Goldenrod', '#FFDF42'],\n  ['Gray', '#949698'],\n  ['Green', '#00A64F'],\n  ['GreenYellow', '#DFE674'],\n  ['JungleGreen', '#00A99A'],\n  ['Lavender', '#F49EC4'],\n  ['LimeGreen', '#8DC73E'],\n  ['Magenta', '#EC008C'],\n  ['Mahogany', '#A9341F'],\n  ['Maroon', '#AF3235'],\n  ['Melon', '#F89E7B'],\n  ['MidnightBlue', '#006795'],\n  ['Mulberry', '#A93C93'],\n  ['NavyBlue', '#006EB8'],\n  ['OliveGreen', '#3C8031'],\n  ['Orange', '#F58137'],\n  ['OrangeRed', '#ED135A'],\n  ['Orchid', '#AF72B0'],\n  ['Peach', '#F7965A'],\n  ['Periwinkle', '#7977B8'],\n  ['PineGreen', '#008B72'],\n  ['Plum', '#92268F'],\n  ['ProcessBlue', '#00B0F0'],\n  ['Purple', '#99479B'],\n  ['RawSienna', '#974006'],\n  ['Red', '#ED1B23'],\n  ['RedOrange', '#F26035'],\n  ['RedViolet', '#A1246B'],\n  ['Rhodamine', '#EF559F'],\n  ['RoyalBlue', '#0071BC'],\n  ['RoyalPurple', '#613F99'],\n  ['RubineRed', '#ED017D'],\n  ['Salmon', '#F69289'],\n  ['SeaGreen', '#3FBC9D'],\n  ['Sepia', '#671800'],\n  ['SkyBlue', '#46C5DD'],\n  ['SpringGreen', '#C6DC67'],\n  ['Tan', '#DA9D76'],\n  ['TealBlue', '#00AEB3'],\n  ['Thistle', '#D883B7'],\n  ['Turquoise', '#00B4CE'],\n  ['Violet', '#58429B'],\n  ['VioletRed', '#EF58A0'],\n  ['White', '#FFFFFF'],\n  ['WildStrawberry', '#EE2967'],\n  ['Yellow', '#FFF200'],\n  ['YellowGreen', '#98CC70'],\n  ['YellowOrange', '#FAA21A'],\n]);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12964, "column": 0}, "map": {"version":3,"file":"ColorUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/color/ColorUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 Omar Al-Ithawi and The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Utility functions and classes for the color package.\n *\n * @author i@omardo.com (Omar Al-Ithawi)\n */\n\n\nimport TexError from '../TexError.js';\nimport {COLORS} from './ColorConstants.js';\n\ntype ColorModelProcessor = (def: string) => string;\nconst ColorModelProcessors: Map<string, ColorModelProcessor> = new Map<string, ColorModelProcessor>();\n\n\nexport class ColorModel {\n\n  /**\n   * User defined colors.\n   *\n   * This variable is local to the parser, so two parsers in the same\n   * JavaScript thread can have two different sets of user-defined colors.\n   */\n  private userColors: Map<string, string> = new Map<string, string>();\n\n  /**\n   * Converts a color model from string representation to its CSS format `#44ff00`\n   *\n   * @param {string} model The coloring model type: `rgb` `RGB` or `gray`.\n   * @param {string} def The color definition: `0.5,0,1`, `128,0,255`, `0.5`.\n   * @return {string} The color definition in CSS format e.g. `#44ff00`.\n   */\n  private normalizeColor(model: string, def: string): string {\n    if (!model || model === 'named') {\n      // Allow to define colors directly by using the CSS format e.g. `#888`\n      return def;\n    }\n\n    if (ColorModelProcessors.has(model)) {\n      const modelProcessor = ColorModelProcessors.get(model);\n      return modelProcessor(def);\n    }\n\n    throw new TexError('UndefinedColorModel', 'Color model \\'%1\\' not defined', model);\n  }\n\n  /**\n   * Look up a color based on its model and definition.\n   *\n   * @param {string} model The coloring model type: `named`, `rgb` `RGB` or `gray`.\n   * @param {string} def The color definition: `red, `0.5,0,1`, `128,0,255`, `0.5`.\n   * @return {string} The color definition in CSS format e.g. `#44ff00`.\n   */\n  public getColor(model: string, def: string): string {\n    if (!model || model === 'named') {\n      return this.getColorByName(def);\n    }\n\n    return this.normalizeColor(model, def);\n  }\n\n  /**\n   * Get a named color.\n   *\n   * @param {string} name The color name e.g. `darkblue`.\n   * @return {string} The color definition in CSS format e.g. `#44ff00`.\n   *\n   * To retain backward compatilbity with MathJax v2 this method returns\n   * unknown as-is, this is useful for both passing through CSS format colors like `#ff0`,\n   * or even standard CSS color names that this plugin is unaware of.\n   *\n   * In TeX format, this would help to let `\\textcolor{#f80}{\\text{Orange}}` show an\n   * orange word.\n   */\n  private getColorByName(name: string): string {\n    if (this.userColors.has(name)) {\n      return this.userColors.get(name);\n    }\n\n    if (COLORS.has(name)) {\n      return COLORS.get(name);\n    }\n\n    // Pass the color name as-is to CSS\n    return name;\n  }\n\n  /**\n   * Create a new user-defined color.\n   *\n   * This color is local to the parser, so another MathJax parser won't be poluted.\n   *\n   * @param {string} model The coloring model type: e.g. `rgb`, `RGB` or `gray`.\n   * @param {string} name The color name: `darkblue`.\n   * @param {string} def The color definition in the color model format: `128,0,255`.\n   */\n  public defineColor(model: string, name: string, def: string) {\n    const normalized = this.normalizeColor(model, def);\n    this.userColors.set(name, normalized);\n  }\n}\n\n\n/**\n * Get an rgb color.\n *\n * @param {OptionList} parserOptions The parser options object.\n * @param {string} rgb The color definition in rgb: `0.5,0,1`.\n * @return {string} The color definition in CSS format e.g. `#44ff00`.\n */\nColorModelProcessors.set('rgb', function (rgb: string): string {\n  const rgbParts: string[] = rgb.trim().split(/\\s*,\\s*/);\n  let RGB: string = '#';\n\n  if (rgbParts.length !== 3) {\n    throw new TexError('ModelArg1', 'Color values for the %1 model require 3 numbers', 'rgb');\n  }\n\n  for (const rgbPart of rgbParts) {\n    if (!rgbPart.match(/^(\\d+(\\.\\d*)?|\\.\\d+)$/)) {\n      throw new TexError('InvalidDecimalNumber', 'Invalid decimal number');\n    }\n\n    const n = parseFloat(rgbPart);\n    if (n < 0 || n > 1) {\n      throw new TexError('ModelArg2',\n                         'Color values for the %1 model must be between %2 and %3',\n                         'rgb', '0', '1');\n    }\n\n    let pn = Math.floor(n * 255).toString(16);\n    if (pn.length < 2) {\n      pn = '0' + pn;\n    }\n\n    RGB += pn;\n  }\n\n  return RGB;\n});\n\n/**\n * Get an RGB color.\n *\n * @param {OptionList} parserOptions The parser options object.\n * @param {string} rgb The color definition in RGB: `128,0,255`.\n * @return {string} The color definition in CSS format e.g. `#44ff00`.\n */\nColorModelProcessors.set('RGB', function (rgb: string): string {\n  const rgbParts: string[] = rgb.trim().split(/\\s*,\\s*/);\n  let RGB = '#';\n\n  if (rgbParts.length !== 3) {\n    throw new TexError('ModelArg1', 'Color values for the %1 model require 3 numbers', 'RGB');\n  }\n\n  for (const rgbPart of rgbParts) {\n    if (!rgbPart.match(/^\\d+$/)) {\n      throw new TexError('InvalidNumber', 'Invalid number');\n    }\n\n    const n = parseInt(rgbPart);\n    if (n > 255) {\n      throw new TexError('ModelArg2',\n                         'Color values for the %1 model must be between %2 and %3',\n                         'RGB', '0', '255');\n    }\n\n    let pn = n.toString(16);\n    if (pn.length < 2) {\n      pn = '0' + pn;\n    }\n    RGB += pn;\n  }\n  return RGB;\n});\n\n/**\n * Get a gray-scale value.\n *\n * @param {OptionList} parserOptions The parser options object.\n * @param {string} gray The color definition in RGB: `0.5`.\n * @return {string} The color definition in CSS format e.g. `#808080`.\n */\nColorModelProcessors.set('gray', function (gray: string): string {\n  if (!gray.match(/^\\s*(\\d+(\\.\\d*)?|\\.\\d+)\\s*$/)) {\n    throw new TexError('InvalidDecimalNumber', 'Invalid decimal number');\n  }\n\n  const n: number = parseFloat(gray);\n  if (n < 0 || n > 1) {\n    throw new TexError('ModelArg2',\n                       'Color values for the %1 model must be between %2 and %3',\n                       'gray', '0', '1');\n  }\n  let pn = Math.floor(n * 255).toString(16);\n  if (pn.length < 2) {\n    pn = '0' + pn;\n  }\n\n  return `#${pn}${pn}${pn}`;\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13118, "column": 0}, "map": {"version":3,"file":"ColorConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/color/ColorConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 Omar Al-Ithawi and The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Configuration file for the color package.\n *\n * @author i@omardo.com (Omar Al-Ithawi)\n */\n\n\nimport {CommandMap} from '../SymbolMap.js';\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {ColorMethods} from './ColorMethods.js';\nimport {ColorModel} from './ColorUtil.js';\nimport {TeX} from '../../tex.js';\n\n/**\n * The color macros\n */\nnew CommandMap('color', {\n  color: 'Color',\n  textcolor: 'TextColor',\n  definecolor: 'DefineColor',\n  colorbox: 'ColorBox',\n  fcolorbox: 'FColorBox'\n}, ColorMethods);\n\n/**\n * Config method for Color package.\n *\n * @param {Configuration} config The current configuration.\n * @param {TeX} jax              The TeX jax having that configuration\n */\nconst config = function(_config: ParserConfiguration, jax: TeX<any, any, any>) {\n  jax.parseOptions.packageData.set('color', {model: new ColorModel()});\n};\n\n/**\n * The configuration for the color macros\n */\nexport const ColorConfiguration = Configuration.create(\n  'color', {\n    handler: {\n      macro: ['color'],\n    },\n    options: {\n      color: {\n        padding: '5px',\n        borderWidth: '2px'\n      }\n    },\n    config: config\n  }\n);\n"],"names":[],"mappings":";;;;;AAwBA,IAAA,4CAA2C;AAC3C,IAAA,oDAAuE;AACvE,IAAA,iDAA+C;AAC/C,IAAA,2CAA0C;AAM1C,IAAI,eAAA,UAAU,CAAC,OAAO,EAAE;IACtB,KAAK,EAAE,OAAO;IACd,SAAS,EAAE,WAAW;IACtB,WAAW,EAAE,aAAa;IAC1B,QAAQ,EAAE,UAAU;IACpB,SAAS,EAAE,WAAW;CACvB,EAAE,kBAAA,YAAY,CAAC,CAAC;AAQjB,IAAM,MAAM,GAAG,SAAS,OAA4B,EAAE,GAAuB;IAC3E,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE;QAAC,KAAK,EAAE,IAAI,eAAA,UAAU,EAAE;IAAA,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC;AAKW,QAAA,kBAAkB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACpD,OAAO,EAAE;IACP,OAAO,EAAE;QACP,KAAK,EAAE;YAAC,OAAO;SAAC;KACjB;IACD,OAAO,EAAE;QACP,KAAK,EAAE;YACL,OAAO,EAAE,KAAK;YACd,WAAW,EAAE,KAAK;SACnB;KACF;IACD,MAAM,EAAE,MAAM;CACf,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13158, "column": 0}, "map": {"version":3,"file":"ColorV2Configuration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/colorv2/ColorV2Configuration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview Configuration file for the v2-compatible color package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {CommandMap} from '../SymbolMap.js';\nimport {Configuration} from '../Configuration.js';\nimport {ParseMethod} from '../Types.js';\nimport TexParser from '../TexParser.js';\n\nexport const ColorV2Methods: Record<string, ParseMethod> = {\n\n  /**\n   * Implements the v2 color macro\n   *\n   * @param {TexParser} parser The calling parser.\n   * @param {string} name The macro name.\n   */\n  Color(parser: TexParser, name: string) {\n    // @test Color Frac\n    const color = parser.GetArgument(name);\n    const old = parser.stack.env['color'];\n    parser.stack.env['color'] = color;\n    const math = parser.ParseArg(name);\n    if (old) {\n      parser.stack.env['color'] = old;\n    } else {\n      delete parser.stack.env['color'];\n    }\n    const node = parser.create('node', 'mstyle', [math], {mathcolor: color});\n    parser.Push(node);\n  }\n\n};\n\n/**\n * The color macros\n */\nnew CommandMap('colorv2', {color: 'Color'}, ColorV2Methods);\n\n/**\n * The configuration for the color macros\n */\nexport const ColorConfiguration = Configuration.create(\n  'colorv2', {handler: {macro: ['colorv2']}}\n);\n"],"names":[],"mappings":";;;;;AAuBA,IAAA,4CAA2C;AAC3C,IAAA,oDAAkD;AAIrC,QAAA,cAAc,GAAgC;IAQzD,KAAK,EAAL,SAAM,MAAiB,EAAE,IAAY;QAEnC,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;QAClC,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,GAAG,EAAE;YACP,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;SACjC,MAAM;YACL,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SAClC;QACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;YAAC,IAAI;SAAC,EAAE;YAAC,SAAS,EAAE,KAAK;QAAA,CAAC,CAAC,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;CAEF,CAAC;AAKF,IAAI,eAAA,UAAU,CAAC,SAAS,EAAE;IAAC,KAAK,EAAE,OAAO;AAAA,CAAC,EAAE,QAAA,cAAc,CAAC,CAAC;AAK/C,QAAA,kBAAkB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACpD,SAAS,EAAE;IAAC,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,SAAS;SAAC;IAAA,CAAC;AAAA,CAAC,CAC3C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13199, "column": 0}, "map": {"version":3,"file":"ColortblConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/colortbl/ColortblConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview    Configuration file for the colortbl package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {ArrayItem} from '../base/BaseItems.js';\nimport {Configuration, ParserConfiguration, ConfigurationHandler} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\nimport {TeX} from '../../tex.js';\n\n/**\n * Information about table colors.\n */\nexport interface ColorData {\n  cell: string;\n  row: string;\n  col: string[];\n}\n\n//\n//  Sublcass the ArrayItem to handle colored entries\n//\nexport class ColorArrayItem extends ArrayItem {\n  /**\n   *  Store current color for cell, row, and columns.\n   */\n  public color: ColorData = {\n    cell: '',\n    row: '',\n    col: []\n  };\n\n  /**\n   * True if any cell is colored (we will make sure the edge cells are full sized).\n   */\n  public hasColor: boolean = false;\n\n  /**\n   * @override\n   */\n  public EndEntry() {\n    super.EndEntry();\n    const cell = this.row[this.row.length - 1];\n    const color = this.color.cell || this.color.row || this.color.col[this.row.length - 1];\n    if (color) {\n      cell.attributes.set('mathbackground', color);\n      this.color.cell = '';\n      this.hasColor = true;\n    }\n  }\n\n  /**\n   * @override\n   */\n  public EndRow() {\n    super.EndRow();\n    this.color.row = '';\n  }\n\n  /**\n   * @override\n   */\n  public createMml() {\n    //\n    // If there is any color in the array, give it an empty frame,\n    //   if there isn't one already.  This will make sure the color\n    //   in edge cells extends past their contents.\n    //\n    const mml = super.createMml();\n    let table = (mml.isKind('mrow') ? mml.childNodes[1] : mml) as MmlNode;\n    if (table.isKind('menclose')) {\n      table = table.childNodes[0].childNodes[0] as MmlNode;\n    }\n    if (this.hasColor && table.attributes.get('frame') === 'none') {\n      table.attributes.set('frame', '');\n    }\n    return mml;\n  }\n\n}\n\n//\n//  Define macros for table coloring.\n//\nnew CommandMap('colortbl', {\n  cellcolor: ['TableColor', 'cell'],\n  rowcolor:  ['TableColor', 'row'],\n  columncolor: ['TableColor', 'col']\n}, {\n  /**\n   * Add color to a column, row, or cell.\n   *\n   * @param {TexParser} parser       The active TeX parser\n   * @param {string} name            The name of the macro that is being processed\n   * @param {keyof ColorData} type   The type (col, row, cell) of color being added\n   */\n  TableColor(parser: TexParser, name: string, type: keyof ColorData) {\n    const lookup = parser.configuration.packageData.get('color').model;  // use the color extension's color model\n    const model = parser.GetBrackets(name, '');\n    const color = lookup.getColor(model, parser.GetArgument(name));\n    //\n    // Check that we are in a colorable array.\n    //\n    const top = parser.stack.Top() as ColorArrayItem;\n    if (!(top instanceof ColorArrayItem)) {\n      throw new TexError('UnsupportedTableColor', 'Unsupported use of %1', parser.currentCS);\n    }\n    //\n    //  Check the position of the macro and save the color.\n    //\n    if (type === 'col') {\n      if (top.table.length) {\n        throw new TexError('ColumnColorNotTop', '%1 must be in the top row', name);\n      }\n      top.color.col[top.row.length] = color;\n      //\n      // Ignore the left and right overlap options.\n      //\n      if (parser.GetBrackets(name, '')) {\n        parser.GetBrackets(name, '');\n      }\n    } else {\n      top.color[type] = color;\n      if (type === 'row' && (top.Size() || top.row.length)) {\n        throw new TexError('RowColorNotFirst', '%1 must be at the beginning of a row', name);\n      }\n    }\n  }\n});\n\n/**\n * The configuration function for colortbl.\n *\n * @param {ParserConfiguration} config   The configuration being used.\n * @param {Tex} jax                      The TeX jax using this configuration.\n */\nconst config = function (config: ParserConfiguration, jax: TeX<any, any, any>) {\n  //\n  //  Make sure color is configured.  (It doesn't have to be included in tex.packages.)\n  //\n  if (!jax.parseOptions.packageData.has('color')) {\n    ConfigurationHandler.get('color').config(config, jax);\n  }\n};\n\n//\n//  Create the color-table configuration.\n//\nexport const ColortblConfiguration = Configuration.create('colortbl', {\n  handler: {macro: ['colortbl']},\n  items: {'array': ColorArrayItem},  // overrides original array class\n  priority: 10,                      // make sure we are processed after the base package (to override its array)\n  config: [config, 10]               // make sure we configure after the color package, if it is used.\n});\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,iDAA+C;AAC/C,IAAA,oDAA6F;AAC7F,IAAA,4CAA2C;AAE3C,IAAA,gBAAA,2CAAsC;AAiBtC,IAAA,iBAAA,SAAA,MAAA;IAAoC,UAAA,gBAAA,QAAS;IAA7C,SAAA;QAAA,IAAA,QAAA,WAAA,QAAA,OAAA,KAAA,CAAA,IAAA,EAAA,cAAA,IAAA,CAyDC;QArDQ,MAAA,KAAK,GAAc;YACxB,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;SACR,CAAC;QAKK,MAAA,QAAQ,GAAY,KAAK,CAAC;;IA4CnC,CAAC;IAvCQ,eAAA,SAAA,CAAA,QAAQ,GAAf;QACE,OAAA,SAAA,CAAM,QAAQ,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;QACjB,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC3C,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACvF,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;IACH,CAAC;IAKM,eAAA,SAAA,CAAA,MAAM,GAAb;QACE,OAAA,SAAA,CAAM,MAAM,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;IACtB,CAAC;IAKM,eAAA,SAAA,CAAA,SAAS,GAAhB;QAME,IAAM,GAAG,GAAG,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,CAAE,CAAC;QAC9B,IAAI,KAAK,GAAG,AAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAY,CAAC;QACtE,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;YAC5B,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAY,CAAC;SACtD;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,MAAM,EAAE;YAC7D,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;SACnC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAEH,OAAA,cAAC;AAAD,CAAC,AAzDD,CAAoC,eAAA,SAAS,GAyD5C;AAzDY,QAAA,cAAA,GAAA,eAAc;AA8D3B,IAAI,eAAA,UAAU,CAAC,UAAU,EAAE;IACzB,SAAS,EAAE;QAAC,YAAY;QAAE,MAAM;KAAC;IACjC,QAAQ,EAAG;QAAC,YAAY;QAAE,KAAK;KAAC;IAChC,WAAW,EAAE;QAAC,YAAY;QAAE,KAAK;KAAC;CACnC,EAAE;IAQD,UAAU,EAAV,SAAW,MAAiB,EAAE,IAAY,EAAE,IAAqB;QAC/D,IAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;QACnE,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC3C,IAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QAI/D,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAoB,CAAC;QACjD,IAAI,CAAC,CAAC,GAAG,YAAY,cAAc,CAAC,EAAE;YACpC,MAAM,IAAI,cAAA,OAAQ,CAAC,uBAAuB,EAAE,uBAAuB,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;SACxF;QAID,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE;gBACpB,MAAM,IAAI,cAAA,OAAQ,CAAC,mBAAmB,EAAE,2BAA2B,EAAE,IAAI,CAAC,CAAC;aAC5E;YACD,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;YAItC,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;gBAChC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aAC9B;SACF,MAAM;YACL,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACxB,IAAI,IAAI,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACpD,MAAM,IAAI,cAAA,OAAQ,CAAC,kBAAkB,EAAE,sCAAsC,EAAE,IAAI,CAAC,CAAC;aACtF;SACF;IACH,CAAC;CACF,CAAC,CAAC;AAQH,IAAM,MAAM,GAAG,SAAU,MAA2B,EAAE,GAAuB;IAI3E,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;QAC9C,mBAAA,oBAAoB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KACvD;AACH,CAAC,CAAC;AAKW,QAAA,qBAAqB,GAAG,mBAAA,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE;IACpE,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,UAAU;SAAC;IAAA,CAAC;IAC9B,KAAK,EAAE;QAAC,OAAO,EAAE,cAAc;IAAA,CAAC;IAChC,QAAQ,EAAE,EAAE;IACZ,MAAM,EAAE;QAAC,MAAM;QAAE,EAAE;KAAC;CACrB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 13331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13336, "column": 0}, "map": {"version":3,"file":"NewcommandUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandUtil.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Utility functions for the newcommand package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport ParseUtil from '../ParseUtil.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport {Macro, Symbol} from '../Symbol.js';\nimport {Args, Attributes, ParseMethod} from '../Types.js';\nimport * as sm from '../SymbolMap.js';\n\n\nnamespace NewcommandUtil {\n\n  /**\n   * Transforms the attributes of a symbol into the arguments of a macro. E.g.,\n   * Symbol('ell', 'l', {mathvariant: \"italic\"}) is turned into Macro arguments:\n   * ['ell', 'l', 'mathvariant', 'italic'].\n   *\n   * @param {string} name The command name for the symbol.\n   * @param {Symbol} symbol The symbol associated with name.\n   * @return {Args[]} Arguments for a macro.\n   */\n  export function disassembleSymbol(name: string, symbol: Symbol): Args[] {\n    let newArgs = [name, symbol.char] as Args[];\n    // @test Let Relet, Let Let, Let Circular Macro\n    if (symbol.attributes) {\n      // @test Let Relet\n      for (let key in symbol.attributes) {\n        newArgs.push(key);\n        newArgs.push(symbol.attributes[key] as Args);\n      }\n    }\n    return newArgs;\n  }\n\n\n  /**\n   * Assembles a symbol from a list of macro arguments. This is the inverse\n   * method of the one above.\n   *\n   * @param {Args[]} args The arguments of the macro.\n   * @return {Symbol} The Symbol generated from the arguments..\n   */\n  export function assembleSymbol(args: Args[]): Symbol {\n    // @test Let Relet, Let Let, Let Circular Macro\n    let name = args[0] as string;\n    let char = args[1] as string;\n    let attrs: Attributes = {};\n    for (let i = 2; i < args.length; i = i + 2) {\n      // @test Let Relet\n      attrs[args[i] as string] = args[i + 1];\n    }\n    return new Symbol(name, char, attrs);\n  }\n\n  /**\n   * Get the next CS name or give an error.\n   * @param {TexParser} parser The calling parser.\n   * @param {string} cmd The string starting with a control sequence.\n   * @return {string} The control sequence.\n   */\n  export function GetCSname(parser: TexParser, cmd: string): string {\n    // @test Def ReDef, Let Bar, Let Brace Equal\n    let c = parser.GetNext();\n    if (c !== '\\\\') {\n      // @test No CS\n      throw new TexError('MissingCS',\n                          '%1 must be followed by a control sequence', cmd);\n    }\n    let cs = ParseUtil.trimSpaces(parser.GetArgument(cmd));\n    return cs.substr(1);\n  }\n\n  /**\n   * Get a control sequence name as an argument (doesn't require the backslash)\n   * @param {TexParser} parser The calling parser.\n   * @param {string} name The macro that is getting the name.\n   * @return {string} The control sequence.\n   */\n  export function GetCsNameArgument(parser: TexParser, name: string): string {\n    let cs = ParseUtil.trimSpaces(parser.GetArgument(name));\n    if (cs.charAt(0) === '\\\\') {\n      // @test Newcommand Simple\n      cs = cs.substr(1);\n    }\n    if (!cs.match(/^(.|[a-z]+)$/i)) {\n      // @test Illegal CS\n      throw new TexError('IllegalControlSequenceName',\n                         'Illegal control sequence name for %1', name);\n    }\n    return cs;\n  }\n\n  /**\n   * Get the number of arguments for a macro definition\n   * @param {TexParser} parser The calling parser.\n   * @param {string} name The macro that is getting the argument count.\n   * @return {string} The number of arguments (or blank).\n   */\n  export function GetArgCount(parser: TexParser, name: string): string {\n    let n = parser.GetBrackets(name);\n    if (n) {\n      // @test Newcommand Optional, Newcommand Arg, Newcommand Arg Optional\n      // @test Newenvironment Optional, Newenvironment Arg Optional\n      n = ParseUtil.trimSpaces(n);\n      if (!n.match(/^[0-9]+$/)) {\n        // @test Illegal Argument Number\n        throw new TexError('IllegalParamNumber',\n                           'Illegal number of parameters specified in %1', name);\n      }\n    }\n    return n;\n  }\n\n  /**\n   * Get a \\def parameter template.\n   * @param {TexParser} parser The calling parser.\n   * @param {string} cmd The string starting with the template.\n   * @param {string} cs The control sequence of the \\def.\n   * @return {number | string[]} The number of parameters or a string array if\n   *     there is an optional argument.\n   */\n  export function GetTemplate(parser: TexParser, cmd: string, cs: string): number | string[] {\n    // @test Def Double Let, Def ReDef, Def Let\n    let c = parser.GetNext();\n    let params: string[] = [];\n    let n = 0;\n    let i = parser.i;\n    while (parser.i < parser.string.length) {\n      c = parser.GetNext();\n      if (c === '#') {\n        // @test Def ReDef, Def Let, Def Optional Brace\n        if (i !== parser.i) {\n          // @test Def Let, Def Optional Brace\n          params[n] = parser.string.substr(i, parser.i - i);\n        }\n        c = parser.string.charAt(++parser.i);\n        if (!c.match(/^[1-9]$/)) {\n          // @test Illegal Hash\n          throw new TexError('CantUseHash2',\n                              'Illegal use of # in template for %1', cs);\n        }\n        if (parseInt(c) !== ++n) {\n          // @test No Sequence\n          throw new TexError('SequentialParam',\n                              'Parameters for %1 must be numbered sequentially', cs);\n        }\n        i = parser.i + 1;\n      } else if (c === '{') {\n        // @test Def Double Let, Def ReDef, Def Let\n        if (i !== parser.i) {\n          // @test Optional Brace Error\n          params[n] = parser.string.substr(i, parser.i - i);\n        }\n        if (params.length > 0) {\n          // @test Def Let, Def Optional Brace\n          return [n.toString()].concat(params);\n        } else {\n          // @test Def Double Let, Def ReDef\n          return n;\n        }\n      }\n      parser.i++;\n    }\n    // @test No Replacement\n    throw new TexError('MissingReplacementString',\n                        'Missing replacement string for definition of %1', cmd);\n  }\n\n\n  /**\n   * Find a single parameter delimited by a trailing template.\n   * @param {TexParser} parser The calling parser.\n   * @param {string} name The name of the calling command.\n   * @param {string} param The parameter for the macro.\n   */\n  export function GetParameter(parser: TexParser, name: string, param: string) {\n    if (param == null) {\n      // @test Def Let, Def Optional Brace, Def Options CS\n      return parser.GetArgument(name);\n    }\n    let i = parser.i;\n    let j = 0;\n    let hasBraces = 0;\n    while (parser.i < parser.string.length) {\n      let c = parser.string.charAt(parser.i);\n      // @test Def Let, Def Optional Brace, Def Options CS\n      if (c === '{') {\n        // @test Def Optional Brace, Def Options CS\n        if (parser.i === i) {\n          // @test Def Optional Brace\n          hasBraces = 1;\n        }\n        parser.GetArgument(name);\n        j = parser.i - i;\n      } else if (MatchParam(parser, param)) {\n        // @test Def Let, Def Optional Brace, Def Options CS\n        if (hasBraces) {\n          // @test Def Optional Brace\n          i++;\n          j -= 2;\n        }\n        return parser.string.substr(i, j);\n      } else if (c === '\\\\') {\n        // @test Def Options CS\n        parser.i++;\n        j++;\n        hasBraces = 0;\n        let match = parser.string.substr(parser.i).match(/[a-z]+|./i);\n        if (match) {\n          // @test Def Options CS\n          parser.i += match[0].length;\n          j = parser.i - i;\n        }\n      } else {\n        // @test Def Let\n        parser.i++;\n        j++;\n        hasBraces = 0;\n      }\n    }\n    // @test Runaway Argument\n    throw new TexError('RunawayArgument', 'Runaway argument for %1?', name);\n  }\n\n\n  /**\n   * Check if a template is at the current location.\n   * (The match must be exact, with no spacing differences. TeX is\n   *  a little more forgiving than this about spaces after macro names)\n   * @param {TexParser} parser The calling parser.\n   * @param {string} param Tries to match an optional parameter.\n   * @return {number} The number of optional parameters, either 0 or 1.\n   */\n  export function MatchParam(parser: TexParser, param: string): number {\n    // @test Def Let, Def Optional Brace, Def Options CS\n    if (parser.string.substr(parser.i, param.length) !== param) {\n      // @test Def Let, Def Options CS\n      return 0;\n    }\n    if (param.match(/\\\\[a-z]+$/i) &&\n        parser.string.charAt(parser.i + param.length).match(/[a-z]/i)) {\n      // @test (missing)\n      return 0;\n    }\n    // @test Def Let, Def Optional Brace, Def Options CS\n    parser.i += param.length;\n    return 1;\n  }\n\n\n  /**\n   * Adds a new delimiter as extension to the parser.\n   * @param {TexParser} parser The current parser.\n   * @param {string} cs The control sequence of the delimiter.\n   * @param {string} char The corresponding character.\n   * @param {Attributes} attr The attributes needed for parsing.\n   */\n  export function addDelimiter(parser: TexParser, cs: string, char: string, attr: Attributes) {\n    const handlers = parser.configuration.handlers;\n    const handler = handlers.retrieve(NEW_DELIMITER) as sm.DelimiterMap;\n    handler.add(cs, new Symbol(cs, char, attr));\n  }\n\n  /**\n   * Adds a new macro as extension to the parser.\n   * @param {TexParser} parser The current parser.\n   * @param {string} cs The control sequence of the delimiter.\n   * @param {ParseMethod} func The parse method for this macro.\n   * @param {Args[]} attr The attributes needed for parsing.\n   * @param {string=} symbol Optionally original symbol for macro, in case it is\n   *     different from the control sequence.\n   */\n  export function addMacro(parser: TexParser, cs: string, func: ParseMethod, attr: Args[],\n                           symbol: string = '') {\n    const handlers = parser.configuration.handlers;\n    const handler = handlers.retrieve(NEW_COMMAND) as sm.CommandMap;\n    handler.add(cs, new Macro(symbol ? symbol : cs, func, attr));\n  }\n\n\n  /**\n   * Adds a new environment as extension to the parser.\n   * @param {TexParser} parser The current parser.\n   * @param {string} env The environment name.\n   * @param {ParseMethod} func The parse method for this macro.\n   * @param {Args[]} attr The attributes needed for parsing.\n   */\n  export function addEnvironment(parser: TexParser, env: string, func: ParseMethod, attr: Args[]) {\n    const handlers = parser.configuration.handlers;\n    const handler = handlers.retrieve(NEW_ENVIRONMENT) as sm.EnvironmentMap;\n    handler.add(env, new Macro(env, func, attr));\n  }\n\n  /**\n   * Naming constants for the extension mappings.\n   */\n  export const NEW_DELIMITER = 'new-Delimiter';\n  export const NEW_COMMAND = 'new-Command';\n  export const NEW_ENVIRONMENT = 'new-Environment';\n\n}\n\nexport default NewcommandUtil;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13522, "column": 0}, "map": {"version":3,"file":"NewcommandMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for definitorial commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport * as sm from '../SymbolMap.js';\nimport {Symbol, Macro} from '../Symbol.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {StackItem} from '../StackItem.js';\nimport NewcommandUtil from './NewcommandUtil.js';\n\n\n// Namespace\nlet NewcommandMethods: Record<string, ParseMethod> = {};\n\n/**\n * Implements \\newcommand{\\name}[n][default]{...}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n */\nNewcommandMethods.NewCommand = function(parser: TexParser, name: string) {\n  // @test Newcommand Simple\n  let cs = NewcommandUtil.GetCsNameArgument(parser, name);\n  let n = NewcommandUtil.GetArgCount(parser, name);\n  let opt = parser.GetBrackets(name);\n  let def = parser.GetArgument(name);\n  NewcommandUtil.addMacro(parser, cs, NewcommandMethods.Macro, [def, n, opt]);\n};\n\n\n/**\n * Implements \\newenvironment{name}[n][default]{begincmd}{endcmd}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n */\nNewcommandMethods.NewEnvironment = function(parser: TexParser, name: string) {\n  // @test Newenvironment Empty, Newenvironment Content\n  let env = ParseUtil.trimSpaces(parser.GetArgument(name));\n  let n = NewcommandUtil.GetArgCount(parser, name);\n  let opt = parser.GetBrackets(name);\n  let bdef = parser.GetArgument(name);\n  let edef = parser.GetArgument(name);\n  NewcommandUtil.addEnvironment(parser, env, NewcommandMethods.BeginEnv, [true, bdef, edef, n, opt]);\n};\n\n\n/**\n * Implements \\def command.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n */\nNewcommandMethods.MacroDef = function(parser: TexParser, name: string) {\n  // @test Def DoubleLet, DefReDef\n  let cs = NewcommandUtil.GetCSname(parser, name);\n  let params = NewcommandUtil.GetTemplate(parser, name, '\\\\' + cs);\n  let def = parser.GetArgument(name);\n  !(params instanceof Array) ?\n    // @test Def DoubleLet, DefReDef\n    NewcommandUtil.addMacro(parser, cs, NewcommandMethods.Macro, [def, params]) :\n    // @test Def Let\n    NewcommandUtil.addMacro(parser, cs, NewcommandMethods.MacroWithTemplate, [def].concat(params));\n};\n\n\n/**\n * Implements the \\let command.\n *\n * All \\let commands create either new delimiters or macros in the extension\n * maps. In the latter case if the let binds a symbol we have to generate a\n * macro with the appropriate parse methods from the SymbolMap. Otherwise we\n * simply copy the macro under a new name.\n *\n * Let does not always work on special characters as TeX does.  For example\n * \"\\let\\car^ a\\car b\" will yield a superscript, on the otherhand\n * \\let\\bgroup={ is possible and will work fine in \\bgroup a } but will fail\n * in \\sqrt\\bgroup a}.\n *\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n */\nNewcommandMethods.Let = function(parser: TexParser, name: string) {\n  const cs = NewcommandUtil.GetCSname(parser, name);\n  let c = parser.GetNext();\n  // @test Let Bar, Let Caret\n  if (c === '=') {\n    // @test Let Brace Equal, Let Brace Equal Stretchy\n    parser.i++;\n    c = parser.GetNext();\n  }\n  const handlers = parser.configuration.handlers;\n  if (c === '\\\\') {\n    // @test Let Bar, Let Brace Equal Stretchy\n    name = NewcommandUtil.GetCSname(parser, name);\n    let macro = handlers.get('delimiter').lookup('\\\\' + name) as Symbol;\n    if (macro) {\n      // @test Let Bar, Let Brace Equal Stretchy\n      NewcommandUtil.addDelimiter(parser, '\\\\' + cs, macro.char, macro.attributes);\n      return;\n    }\n    const map = handlers.get('macro').applicable(name);\n    if (!map) {\n      // @test Let Undefined CS\n      return;\n    }\n    if (map instanceof sm.MacroMap) {\n      // @test Def Let, Newcommand Let\n      const macro = (map as sm.CommandMap).lookup(name) as Macro;\n      NewcommandUtil.addMacro(parser, cs, macro.func, macro.args, macro.symbol);\n      return;\n    }\n    macro = (map as sm.CharacterMap).lookup(name) as Symbol;\n    const newArgs = NewcommandUtil.disassembleSymbol(cs, macro);\n    const method = (p: TexParser, _cs: string, ...rest: any[]) => {\n      // @test Let Relet, Let Let, Let Circular Macro\n      const symb = NewcommandUtil.assembleSymbol(rest);\n      return map.parser(p, symb);\n    };\n    NewcommandUtil.addMacro(parser, cs, method, newArgs);\n    return;\n  }\n  // @test Let Brace Equal, Let Caret\n  parser.i++;\n  const macro = handlers.get('delimiter').lookup(c) as Symbol;\n  if (macro) {\n    // @test Let Paren Delim, Let Paren Stretchy\n    NewcommandUtil.addDelimiter(parser, '\\\\' + cs, macro.char, macro.attributes);\n    return;\n  }\n  // @test Let Brace Equal, Let Caret\n  NewcommandUtil.addMacro(parser, cs, NewcommandMethods.Macro, [c]);\n};\n\n\n/**\n * Process a macro with a parameter template by replacing parameters in the\n * parser's string.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The name of the calling command.\n * @param {string} text The text template of the macro.\n * @param {string} n The number of parameters.\n * @param {string[]} ...params The parameter values.\n */\nNewcommandMethods.MacroWithTemplate = function (parser: TexParser, name: string,\n                                                text: string, n: string,\n                                                ...params: string[]) {\n  const argCount = parseInt(n, 10);\n  // @test Def Let\n  if (argCount) {\n    // @test Def Let\n    let args = [];\n    parser.GetNext();\n    if (params[0] && !NewcommandUtil.MatchParam(parser, params[0])) {\n      // @test Missing Arguments\n      throw new TexError('MismatchUseDef',\n                          'Use of %1 doesn\\'t match its definition', name);\n    }\n    for (let i = 0; i < argCount; i++) {\n      // @test Def Let\n      args.push(NewcommandUtil.GetParameter(parser, name, params[i + 1]));\n    }\n    text = ParseUtil.substituteArgs(parser, args, text);\n  }\n  parser.string = ParseUtil.addArgs(parser, text,\n                                    parser.string.slice(parser.i));\n  parser.i = 0;\n  ParseUtil.checkMaxMacros(parser);\n};\n\n\n/**\n * Process a user-defined environment.\n * @param {TexParser} parser The calling parser.\n * @param {StackItem} begin The begin stackitem.\n * @param {string} bdef The begin definition in the newenvironment macro.\n * @param {string} edef The end definition in the newenvironment macro.\n * @param {number} n The number of parameters.\n * @param {string} def Default for an optional parameter.\n */\nNewcommandMethods.BeginEnv = function(parser: TexParser, begin: StackItem,\n                                      bdef: string, edef: string, n: number, def: string) {\n  // @test Newenvironment Empty, Newenvironment Content\n  // We have an end item, and we are supposed to close this environment.\n  if (begin.getProperty('end') && parser.stack.env['closing'] === begin.getName()) {\n    // @test Newenvironment Empty, Newenvironment Content\n    delete parser.stack.env['closing'];\n    // Parse the commands in the end environment definition.\n    let rest = parser.string.slice(parser.i);\n    parser.string = edef;\n    parser.i = 0;\n    parser.Parse();\n    // Reset to parsing the remainder of the expression.\n    parser.string = rest;\n    parser.i = 0;\n    // Close this environment.\n    return parser.itemFactory.create('end').setProperty('name', begin.getName());\n  }\n  if (n) {\n    // @test Newenvironment Optional, Newenvironment Arg Optional\n    let args: string[] = [];\n    if (def != null) {\n      // @test Newenvironment Optional, Newenvironment Arg Optional\n      let optional = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n      args.push(optional == null ? def : optional);\n    }\n    for (let i = args.length; i < n; i++) {\n      // @test Newenvironment Arg Optional\n      args.push(parser.GetArgument('\\\\begin{' + begin.getName() + '}'));\n    }\n    bdef = ParseUtil.substituteArgs(parser, args, bdef);\n    edef = ParseUtil.substituteArgs(parser, [], edef); // no args, but get errors for #n in edef\n  }\n  parser.string = ParseUtil.addArgs(parser, bdef,\n                                    parser.string.slice(parser.i));\n  parser.i = 0;\n  return parser.itemFactory.create('beginEnv').setProperty('name', begin.getName());\n};\n\nNewcommandMethods.Macro = BaseMethods.Macro;\n\nexport default NewcommandMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13708, "column": 0}, "map": {"version":3,"file":"NewcommandItems.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Items for TeX parsing of new environments.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport TexError from '../TexError.js';\nimport {CheckType, BaseItem, StackItem} from '../StackItem.js';\n\n\n/**\n * Opening Item dealing with definitions of new environments. It's pushed onto\n * the stack whenever a user defined environment is encountered and remains\n * until a corresponding \\\\end collapses the stack.\n */\nexport class BeginEnvItem extends BaseItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'beginEnv';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    if (item.isKind('end')) {\n      // @test Newenvironment Empty, Newenvironment Align\n      if (item.getName() !== this.getName()) {\n        // @test (missing) \\newenvironment{env}{aa}{bb}\\begin{env}cc\\end{equation}\n        throw new TexError('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}',\n                            this.getName(), item.getName());\n      }\n      return [[this.factory.create('mml', this.toMml())], true];\n    }\n    if (item.isKind('stop')) {\n      // @test (missing) \\newenvironment{env}{aa}{bb}\\begin{env}cc\n      throw new TexError('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n    }\n    // @test Newenvironment Empty, Newenvironment Align\n    return super.checkItem(item);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAA,gBAAA,2CAAsC;AACtC,IAAA,4CAA+D;AAQ/D,IAAA,eAAA,SAAA,MAAA;IAAkC,UAAA,cAAA,QAAQ;IAA1C,SAAA;;IAuCA,CAAC;IAlCC,OAAA,cAAA,CAAW,aAAA,SAAA,EAAA,MAAI,EAAA;aAAf;YACE,OAAO,UAAU,CAAC;QACpB,CAAC;;;OAAA;IAMD,OAAA,cAAA,CAAI,aAAA,SAAA,EAAA,QAAM,EAAA;aAAV;YACE,OAAO,IAAI,CAAC;QACd,CAAC;;;OAAA;IAMM,aAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,IAAe;QAC9B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAEtB,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,EAAE;gBAErC,MAAM,IAAI,cAAA,OAAQ,CAAC,WAAW,EAAE,kCAAkC,EAC9C,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;aACrD;YACD,OAAO;gBAAC;oBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;iBAAC;gBAAE,IAAI;aAAC,CAAC;SAC3D;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAEvB,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,mBAAmB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC1E;QAED,OAAO,OAAA,SAAA,CAAM,SAAS,CAAA,IAAA,CAAA,IAAA,EAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEH,OAAA,YAAC;AAAD,CAAC,AAvCD,CAAkC,eAAA,QAAQ,GAuCzC;AAvCY,QAAA,YAAA,GAAA,aAAY","ignoreList":[0]}},
    {"offset": {"line": 13779, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13784, "column": 0}, "map": {"version":3,"file":"ConfigMacrosConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/configmacros/ConfigMacrosConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview    Configuration file for the configmacros package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {expandable} from '../../../util/Options.js';\nimport {CommandMap, EnvironmentMap} from '../SymbolMap.js';\nimport ParseMethods from '../ParseMethods.js';\nimport {Macro} from '../Symbol.js';\nimport NewcommandMethods from '../newcommand/NewcommandMethods.js';\nimport {BeginEnvItem} from '../newcommand/NewcommandItems.js';\nimport {TeX} from '../../tex.js';\n\ntype TEX = TeX<any, any, any>;\n\n/**\n * The name to use for the macros map\n */\nconst MACROSMAP = 'configmacros-map';\n\n/**\n * The name to use for the environment map\n */\nconst ENVIRONMENTMAP = 'configmacros-env-map';\n\n/**\n * Create the command map for the macros\n *\n * @param {Configuration} config   The configuration object for the input jax\n */\nfunction configmacrosInit(config: ParserConfiguration) {\n  new CommandMap(MACROSMAP, {}, {});\n  new EnvironmentMap(ENVIRONMENTMAP, ParseMethods.environment, {}, {});\n  config.append(Configuration.local({\n    handler: {\n      macro: [MACROSMAP],\n      environment: [ENVIRONMENTMAP]\n    },\n    priority: 3\n  }));\n}\n\n/**\n * Create the user-defined macros and environments from their options\n *\n * @param {Configuration} config   The configuration object for the input jax\n * @param {TeX} jax                The TeX input jax\n */\nfunction configmacrosConfig(_config: ParserConfiguration, jax: TEX) {\n  configMacros(jax);\n  configEnvironments(jax);\n}\n\n/**\n * Create user-defined macros from the macros option\n *\n * @param {TeX} jax                The TeX input jax\n */\nfunction configMacros(jax: TEX) {\n  const handler = jax.parseOptions.handlers.retrieve(MACROSMAP) as CommandMap;\n  const macros = jax.parseOptions.options.macros;\n  for (const cs of Object.keys(macros)) {\n    const def = (typeof macros[cs] === 'string' ? [macros[cs]] : macros[cs]);\n    const macro = Array.isArray(def[2]) ?\n      new Macro(cs, NewcommandMethods.MacroWithTemplate, def.slice(0, 2).concat(def[2])) :\n      new Macro(cs, NewcommandMethods.Macro, def);\n    handler.add(cs, macro);\n  }\n}\n\n/**\n * Create user-defined environments from the environments option\n *\n * @param {TeX} jax                The TeX input jax\n */\nfunction configEnvironments(jax: TEX) {\n  const handler = jax.parseOptions.handlers.retrieve(ENVIRONMENTMAP) as EnvironmentMap;\n  const environments = jax.parseOptions.options.environments;\n  for (const env of Object.keys(environments)) {\n    handler.add(env, new Macro(env, NewcommandMethods.BeginEnv, [true].concat(environments[env])));\n  }\n}\n\n/**\n * The configuration object for configmacros\n */\nexport const ConfigMacrosConfiguration = Configuration.create(\n  'configmacros', {\n    init: configmacrosInit,\n    config: configmacrosConfig,\n    items: {\n      [BeginEnvItem.prototype.kind]: BeginEnvItem,\n    },\n    options: {\n      macros: expandable({}),\n      environments: expandable({})\n    }\n  }\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13899, "column": 0}, "map": {"version":3,"file":"EmpheqConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/empheq/EmpheqConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the empheq package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap, EnvironmentMap} from '../SymbolMap.js';\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {BeginItem} from '../base/BaseItems.js';\nimport {StackItem} from '../StackItem.js';\nimport {EmpheqUtil} from './EmpheqUtil.js';\n\n/**\n * A StackItem for empheq environments.\n */\nexport class EmpheqBeginItem extends BeginItem {\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'empheq-begin';\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem) {\n    if (item.isKind('end') && item.getName() === this.getName()) {\n      this.setProperty('end', false);\n    }\n    return super.checkItem(item);\n  }\n\n}\n\n/**\n * The methods that implement the empheq package.\n */\nexport const EmpheqMethods = {\n\n  /**\n   * Handle an empheq environment.\n   *\n   * @param {TexParser} parser        The active tex parser.\n   * @param {EmpheqBeginItem} begin   The begin item for this environment.\n   */\n  Empheq(parser: TexParser, begin: EmpheqBeginItem) {\n    if (parser.stack.env.closing === begin.getName()) {\n      delete parser.stack.env.closing;\n      parser.Push(parser.itemFactory.create('end').setProperty('name', parser.stack.global.empheq));\n      parser.stack.global.empheq = '';\n      const empheq = parser.stack.Top() as EmpheqBeginItem;\n      EmpheqUtil.adjustTable(empheq, parser);\n      parser.Push(parser.itemFactory.create('end').setProperty('name', 'empheq'));\n    } else {\n      ParseUtil.checkEqnEnv(parser);\n      delete parser.stack.global.eqnenv;\n      const opts = parser.GetBrackets('\\\\begin{' + begin.getName() + '}') || '';\n      const [env, n] = (parser.GetArgument('\\\\begin{' + begin.getName() + '}') || '').split(/=/);\n      if (!EmpheqUtil.checkEnv(env)) {\n        throw new TexError('UnknownEnv', 'Unknown environment \"%1\"', env);\n      }\n      if (opts) {\n        begin.setProperties(EmpheqUtil.splitOptions(opts, {left: 1, right: 1}));\n      }\n      parser.stack.global.empheq = env;\n      parser.string = '\\\\begin{' + env + '}' + (n ? '{' + n + '}' : '') + parser.string.slice(parser.i);\n      parser.i = 0;\n      parser.Push(begin);\n    }\n  },\n\n  /**\n   * Create an <mo> with a given content\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the macro being processed.\n   * @param {string} c           The character for the <mo>\n   */\n  EmpheqMO(parser: TexParser, _name: string, c: string) {\n    parser.Push(parser.create('token', 'mo', {}, c));\n  },\n\n  /**\n   * Create a delimiter <mo> with a given character\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the macro being processed.\n   */\n  EmpheqDelim(parser: TexParser, name: string) {\n    const c = parser.GetDelimiter(name);\n    parser.Push(parser.create('token', 'mo', {stretchy: true, symmetric: true}, c));\n  }\n\n};\n\n//\n//  Define an environment map to add the new empheq environment\n//\nnew EnvironmentMap('empheq-env', EmpheqUtil.environment, {\n  empheq: ['Empheq', 'empheq'],\n}, EmpheqMethods);\n\n//\n//  Define the empheq characters\n//\nnew CommandMap('empheq-macros', {\n  empheqlbrace:    ['EmpheqMO', '{'],\n  empheqrbrace:    ['EmpheqMO', '}'],\n  empheqlbrack:    ['EmpheqMO', '['],\n  empheqrbrack:    ['EmpheqMO', ']'],\n  empheqlangle:    ['EmpheqMO', '\\u27E8'],\n  empheqrangle:    ['EmpheqMO', '\\u27E9'],\n  empheqlparen:    ['EmpheqMO', '('],\n  empheqrparen:    ['EmpheqMO', ')'],\n  empheqlvert:     ['EmpheqMO', '|'],\n  empheqrvert:     ['EmpheqMO', '|'],\n  empheqlVert:     ['EmpheqMO', '\\u2016'],\n  empheqrVert:     ['EmpheqMO', '\\u2016'],\n  empheqlfloor:    ['EmpheqMO', '\\u230A'],\n  empheqrfloor:    ['EmpheqMO', '\\u230B'],\n  empheqlceil:     ['EmpheqMO', '\\u2308'],\n  empheqrceil:     ['EmpheqMO', '\\u2309'],\n  empheqbiglbrace: ['EmpheqMO', '{'],\n  empheqbigrbrace: ['EmpheqMO', '}'],\n  empheqbiglbrack: ['EmpheqMO', '['],\n  empheqbigrbrack: ['EmpheqMO', ']'],\n  empheqbiglangle: ['EmpheqMO', '\\u27E8'],\n  empheqbigrangle: ['EmpheqMO', '\\u27E9'],\n  empheqbiglparen: ['EmpheqMO', '('],\n  empheqbigrparen: ['EmpheqMO', ')'],\n  empheqbiglvert:  ['EmpheqMO', '|'],\n  empheqbigrvert:  ['EmpheqMO', '|'],\n  empheqbiglVert:  ['EmpheqMO', '\\u2016'],\n  empheqbigrVert:  ['EmpheqMO', '\\u2016'],\n  empheqbiglfloor: ['EmpheqMO', '\\u230A'],\n  empheqbigrfloor: ['EmpheqMO', '\\u230B'],\n  empheqbiglceil:  ['EmpheqMO', '\\u2308'],\n  empheqbigrceil:  ['EmpheqMO', '\\u2309'],\n  empheql:          'EmpheqDelim',\n  empheqr:          'EmpheqDelim',\n  empheqbigl:       'EmpheqDelim',\n  empheqbigr:       'EmpheqDelim'\n}, EmpheqMethods);\n\n//\n//  Define the package for our new environment\n//\nexport const EmpheqConfiguration = Configuration.create('empheq', {\n  handler: {\n    macro: ['empheq-macros'],\n    environment: ['empheq-env'],\n  },\n  items: {\n    [EmpheqBeginItem.prototype.kind]: EmpheqBeginItem\n  }\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14172, "column": 0}, "map": {"version":3,"file":"NewcommandMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing for definitorial commands.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport NewcommandMethods from './NewcommandMethods.js';\nimport {CommandMap} from '../SymbolMap.js';\n\n\n/**\n * Macros for newcommand etc.\n */\nnew CommandMap('Newcommand-macros', {\n  newcommand:       'NewCommand',\n  renewcommand:     'NewCommand',\n  newenvironment:   'NewEnvironment',\n  renewenvironment: 'NewEnvironment',\n  def:              'MacroDef',\n  'let':            'Let'\n}, NewcommandMethods);\n\n\n"],"names":[],"mappings":";;;;;;;;;AAwBA,IAAA,yBAAA,mDAAuD;AACvD,IAAA,4CAA2C;AAM3C,IAAI,eAAA,UAAU,CAAC,mBAAmB,EAAE;IAClC,UAAU,EAAQ,YAAY;IAC9B,YAAY,EAAM,YAAY;IAC9B,cAAc,EAAI,gBAAgB;IAClC,gBAAgB,EAAE,gBAAgB;IAClC,GAAG,EAAe,UAAU;IAC5B,KAAK,EAAa,KAAK;CACxB,EAAE,uBAAA,OAAiB,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14196, "column": 0}, "map": {"version":3,"file":"NewcommandConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/newcommand/NewcommandConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Newcommand package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {BeginEnvItem} from './NewcommandItems.js';\nimport NewcommandUtil from './NewcommandUtil.js';\nimport './NewcommandMappings.js';\nimport ParseMethods from '../ParseMethods.js';\nimport * as sm from '../SymbolMap.js';\n\n\n/**\n * Init method for Newcommand package.\n * @param {Configuration} config The current configuration.\n */\nlet init = function(config: ParserConfiguration) {\n  new sm.DelimiterMap(NewcommandUtil.NEW_DELIMITER,\n                      ParseMethods.delimiter, {});\n  new sm.CommandMap(NewcommandUtil.NEW_COMMAND, {}, {});\n  new sm.EnvironmentMap(NewcommandUtil.NEW_ENVIRONMENT,\n                        ParseMethods.environment, {}, {});\n  config.append(Configuration.local(\n    {handler: {character: [],\n               delimiter: [NewcommandUtil.NEW_DELIMITER],\n               macro: [NewcommandUtil.NEW_DELIMITER,\n                       NewcommandUtil.NEW_COMMAND],\n               environment: [NewcommandUtil.NEW_ENVIRONMENT]\n              },\n     priority: -1}));\n};\n\n\nexport const NewcommandConfiguration = Configuration.create(\n  'newcommand', {\n    handler: {\n      macro: ['Newcommand-macros']\n    },\n    items: {\n      [BeginEnvItem.prototype.kind]: BeginEnvItem,\n    },\n    options: {maxMacros: 1000},\n    init: init\n  }\n);\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,oDAAuE;AACvE,IAAA,uDAAkD;AAClD,IAAA,sBAAA,gDAAiD;;AAEjD,IAAA,oBAAA,+CAA8C;AAC9C,IAAA,KAAA,yCAAsC;AAOtC,IAAI,IAAI,GAAG,SAAS,MAA2B;IAC7C,IAAI,EAAE,CAAC,YAAY,CAAC,oBAAA,OAAc,CAAC,aAAa,EAC5B,kBAAA,OAAY,CAAC,SAAS,EAAE,CAAA,CAAE,CAAC,CAAC;IAChD,IAAI,EAAE,CAAC,UAAU,CAAC,oBAAA,OAAc,CAAC,WAAW,EAAE,CAAA,CAAE,EAAE,CAAA,CAAE,CAAC,CAAC;IACtD,IAAI,EAAE,CAAC,cAAc,CAAC,oBAAA,OAAc,CAAC,eAAe,EAC9B,kBAAA,OAAY,CAAC,WAAW,EAAE,CAAA,CAAE,EAAE,CAAA,CAAE,CAAC,CAAC;IACxD,MAAM,CAAC,MAAM,CAAC,mBAAA,aAAa,CAAC,KAAK,CAC/B;QAAC,OAAO,EAAE;YAAC,SAAS,EAAE,EAAE;YACb,SAAS,EAAE;gBAAC,oBAAA,OAAc,CAAC,aAAa;aAAC;YACzC,KAAK,EAAE;gBAAC,oBAAA,OAAc,CAAC,aAAa;gBAC5B,oBAAA,OAAc,CAAC,WAAW;aAAC;YACnC,WAAW,EAAE;gBAAC,oBAAA,OAAc,CAAC,eAAe;aAAC;SAC7C;QACV,QAAQ,EAAE,CAAC,CAAC;IAAA,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC;AAGW,QAAA,uBAAuB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACzD,YAAY,EAAE;IACZ,OAAO,EAAE;QACP,KAAK,EAAE;YAAC,mBAAmB;SAAC;KAC7B;IACD,KAAK,EAAA,CAAA,KAAA,CAAA,GACH,EAAA,CAAC,qBAAA,YAAY,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,qBAAA,YAAY,KAC5C;IACD,OAAO,EAAE;QAAC,SAAS,EAAE,IAAI;IAAA,CAAC;IAC1B,IAAI,EAAE,IAAI;CACX,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14284, "column": 0}, "map": {"version":3,"file":"ExtpfeilConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/extpfeil/ExtpfeilConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the extpfeil package. Note that this is\n *     based on AMS package and Newcommand utilities.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport {AmsMethods} from '../ams/AmsMethods.js';\nimport NewcommandUtil from '../newcommand/NewcommandUtil.js';\nimport {NewcommandConfiguration} from '../newcommand/NewcommandConfiguration.js';\nimport TexError from '../TexError.js';\n\n\n// Namespace\nexport let ExtpfeilMethods: Record<string, ParseMethod> = {};\n\nExtpfeilMethods.xArrow = AmsMethods.xArrow;\n\n/**\n * Implements \\Newextarrow to define a new arrow.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nExtpfeilMethods.NewExtArrow = function(parser: TexParser, name: string) {\n  let cs = parser.GetArgument(name);\n  const space = parser.GetArgument(name);\n  const chr = parser.GetArgument(name);\n  if (!cs.match(/^\\\\([a-z]+|.)$/i)) {\n    throw new TexError('NewextarrowArg1',\n               'First argument to %1 must be a control sequence name', name);\n  }\n  if (!space.match(/^(\\d+),(\\d+)$/)) {\n    throw new TexError(\n      'NewextarrowArg2',\n      'Second argument to %1 must be two integers separated by a comma',\n      name);\n  }\n  if (!chr.match(/^(\\d+|0x[0-9A-F]+)$/i)) {\n    throw new TexError(\n      'NewextarrowArg3',\n      'Third argument to %1 must be a unicode character number',\n      name);\n  }\n  cs = cs.substr(1);\n  let spaces = space.split(',');\n  NewcommandUtil.addMacro(parser, cs, ExtpfeilMethods.xArrow,\n                          [parseInt(chr), parseInt(spaces[0]), parseInt(spaces[1])]);\n};\n\n\nnew CommandMap('extpfeil', {\n  xtwoheadrightarrow: ['xArrow', 0x21A0, 12, 16],\n  xtwoheadleftarrow:  ['xArrow', 0x219E, 17, 13],\n  xmapsto:            ['xArrow', 0x21A6, 6, 7],\n  xlongequal:         ['xArrow', 0x003D, 7, 7],\n  xtofrom:            ['xArrow', 0x21C4, 12, 12],\n  Newextarrow:        'NewExtArrow'\n}, ExtpfeilMethods);\n\n\nlet init = function(config: ParserConfiguration) {\n  NewcommandConfiguration.init(config);\n};\n\nexport const ExtpfeilConfiguration = Configuration.create(\n  'extpfeil', {\n    handler: {macro: ['extpfeil']},\n    init: init\n  }\n);\n"],"names":[],"mappings":";;;;;;;;;;AAyBA,IAAA,oDAAuE;AAEvE,IAAA,4CAA2C;AAE3C,IAAA,kDAAgD;AAChD,IAAA,sBAAA,4DAA6D;AAC7D,IAAA,mFAAiF;AACjF,IAAA,gBAAA,2CAAsC;AAI3B,QAAA,eAAe,GAAgC,CAAA,CAAE,CAAC;AAE7D,QAAA,eAAe,CAAC,MAAM,GAAG,gBAAA,UAAU,CAAC,MAAM,CAAC;AAO3C,QAAA,eAAe,CAAC,WAAW,GAAG,SAAS,MAAiB,EAAE,IAAY;IACpE,IAAI,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClC,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACvC,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE;QAChC,MAAM,IAAI,cAAA,OAAQ,CAAC,iBAAiB,EACzB,sDAAsD,EAAE,IAAI,CAAC,CAAC;KAC1E;IACD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;QACjC,MAAM,IAAI,cAAA,OAAQ,CAChB,iBAAiB,EACjB,iEAAiE,EACjE,IAAI,CAAC,CAAC;KACT;IACD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,sBAAsB,CAAC,EAAE;QACtC,MAAM,IAAI,cAAA,OAAQ,CAChB,iBAAiB,EACjB,yDAAyD,EACzD,IAAI,CAAC,CAAC;KACT;IACD,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClB,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,oBAAA,OAAc,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,EAAE,QAAA,eAAe,CAAC,MAAM,EAClC;QAAC,QAAQ,CAAC,GAAG,CAAC;QAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KAAC,CAAC,CAAC;AACrF,CAAC,CAAC;AAGF,IAAI,eAAA,UAAU,CAAC,UAAU,EAAE;IACzB,kBAAkB,EAAE;QAAC,QAAQ;QAAE,MAAM;QAAE,EAAE;QAAE,EAAE;KAAC;IAC9C,iBAAiB,EAAG;QAAC,QAAQ;QAAE,MAAM;QAAE,EAAE;QAAE,EAAE;KAAC;IAC9C,OAAO,EAAa;QAAC,QAAQ;QAAE,MAAM;QAAE,CAAC;QAAE,CAAC;KAAC;IAC5C,UAAU,EAAU;QAAC,QAAQ;QAAE,MAAM;QAAE,CAAC;QAAE,CAAC;KAAC;IAC5C,OAAO,EAAa;QAAC,QAAQ;QAAE,MAAM;QAAE,EAAE;QAAE,EAAE;KAAC;IAC9C,WAAW,EAAS,aAAa;CAClC,EAAE,QAAA,eAAe,CAAC,CAAC;AAGpB,IAAI,IAAI,GAAG,SAAS,MAA2B;IAC7C,6BAAA,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,CAAC,CAAC;AAEW,QAAA,qBAAqB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACvD,UAAU,EAAE;IACV,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,UAAU;SAAC;IAAA,CAAC;IAC9B,IAAI,EAAE,IAAI;CACX,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14372, "column": 0}, "map": {"version":3,"file":"GensymbConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/gensymb/GensymbConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the gensymb package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {Symbol} from '../Symbol.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport TexParser from '../TexParser.js';\n\n\n/**\n * Handle characters that are known units.\n * @param {TexParser} parser The current tex parser.\n * @param {Symbol} mchar The parsed symbol.\n */\nfunction mathcharUnit(parser: TexParser, mchar: Symbol) {\n  const def = mchar.attributes || {};\n  def.mathvariant = TexConstant.Variant.NORMAL;\n  def.class = 'MathML-Unit';\n  const node = parser.create('token', 'mi', def, mchar.char);\n  parser.Push(node);\n}\n\n\n/**\n * gensymb units.\n */\nnew CharacterMap('gensymb-symbols', mathcharUnit, {\n  ohm:            '\\u2126',\n  degree:         '\\u00B0',\n  celsius:        '\\u2103',\n  perthousand:    '\\u2030',\n  micro:          '\\u00B5'\n});\n\n\nexport const GensymbConfiguration = Configuration.create(\n  'gensymb', {\n    handler: {macro: ['gensymb-symbols']},\n  }\n);\n\n"],"names":[],"mappings":";;;;;AAwBA,IAAA,oDAAkD;AAElD,IAAA,kDAA+C;AAC/C,IAAA,4CAA6C;AAS7C,SAAS,YAAY,CAAC,MAAiB,EAAE,KAAa;IACpD,IAAM,GAAG,GAAG,KAAK,CAAC,UAAU,IAAI,CAAA,CAAE,CAAC;IACnC,GAAG,CAAC,WAAW,GAAG,kBAAA,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7C,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC;IAC1B,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC;AAMD,IAAI,eAAA,YAAY,CAAC,iBAAiB,EAAE,YAAY,EAAE;IAChD,GAAG,EAAa,QAAQ;IACxB,MAAM,EAAU,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,WAAW,EAAK,QAAQ;IACxB,KAAK,EAAW,QAAQ;CACzB,CAAC,CAAC;AAGU,QAAA,oBAAoB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACtD,SAAS,EAAE;IACT,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,iBAAiB;SAAC;IAAA,CAAC;CACtC,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14406, "column": 0}, "map": {"version":3,"file":"HtmlMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/html/HtmlMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Methods for the Html package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport TexParser from '../TexParser.js';\nimport {ParseMethod} from '../Types.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\n\n// Namespace\nlet HtmlMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Implements \\href{url}{math}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nHtmlMethods.Href = function(parser: TexParser, name: string) {\n  const url = parser.GetArgument(name);\n  const arg = GetArgumentMML(parser, name);\n  NodeUtil.setAttribute(arg, 'href', url);\n  parser.Push(arg);\n};\n\n\n/**\n * Implements \\class{name}{math}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nHtmlMethods.Class = function(parser: TexParser, name: string) {\n  let CLASS = parser.GetArgument(name);\n  const arg = GetArgumentMML(parser, name);\n  let oldClass = NodeUtil.getAttribute(arg, 'class');\n  if (oldClass) {\n    CLASS = oldClass + ' ' + CLASS;\n  }\n  NodeUtil.setAttribute(arg, 'class', CLASS);\n  parser.Push(arg);\n};\n\n\n/**\n * Implements \\style{style-string}{math}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nHtmlMethods.Style = function(parser: TexParser, name: string) {\n  let style = parser.GetArgument(name);\n  const arg = GetArgumentMML(parser, name);\n  // check that it looks like a style string\n  let oldStyle = NodeUtil.getAttribute(arg, 'style');\n  if (oldStyle) {\n    if (style.charAt(style.length - 1) !== ';') {\n      style += ';';\n    }\n    style = oldStyle + ' ' + style;\n  }\n  NodeUtil.setAttribute(arg, 'style', style);\n  parser.Push(arg);\n};\n\n\n/**\n * Implements \\cssId{id}{math}\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nHtmlMethods.Id = function(parser: TexParser, name: string) {\n  const ID  = parser.GetArgument(name);\n  const arg = GetArgumentMML(parser, name);\n  NodeUtil.setAttribute(arg, 'id', ID);\n  parser.Push(arg);\n};\n\n\n/**\n * Parses the math argument of the above commands and returns it as single\n * node (in an mrow if necessary). The HTML attributes are then\n * attached to this element.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The calling macro name.\n * @return {MmlNode} The math node.\n */\nlet GetArgumentMML = function(parser: TexParser, name: string): MmlNode {\n  let arg = parser.ParseArg(name);\n  if (!NodeUtil.isInferred(arg)) {\n    return arg;\n  }\n  let children = NodeUtil.getChildren(arg);\n  if (children.length === 1) {\n    return children[0];\n  }\n  const mrow = parser.create('node', 'mrow');\n  NodeUtil.copyChildren(arg, mrow);\n  NodeUtil.copyAttributes(arg, mrow);\n  return mrow;\n};\n\n\nexport default HtmlMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14472, "column": 0}, "map": {"version":3,"file":"HtmlConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/html/HtmlConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Html package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport HtmlMethods from './HtmlMethods.js';\n\n\nnew CommandMap('html_macros', {\n  href:    'Href',\n  'class': 'Class',\n  style:   'Style',\n  cssId:   'Id'\n}, HtmlMethods);\n\nexport const HtmlConfiguration = Configuration.create(\n  'html', {handler: { macro: ['html_macros']}}\n);\n"],"names":[],"mappings":";;;;;;;;;;AAwBA,IAAA,oDAAkD;AAClD,IAAA,4CAA2C;AAC3C,IAAA,mBAAA,6CAA2C;AAG3C,IAAI,eAAA,UAAU,CAAC,aAAa,EAAE;IAC5B,IAAI,EAAK,MAAM;IACf,OAAO,EAAE,OAAO;IAChB,KAAK,EAAI,OAAO;IAChB,KAAK,EAAI,IAAI;CACd,EAAE,iBAAA,OAAW,CAAC,CAAC;AAEH,QAAA,iBAAiB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACnD,MAAM,EAAE;IAAC,OAAO,EAAE;QAAE,KAAK,EAAE;YAAC,aAAa;SAAC;IAAA,CAAC;AAAA,CAAC,CAC7C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 14498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14503, "column": 0}, "map": {"version":3,"file":"MathtoolsUtil.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsUtil.ts"],"sourcesContent":["/*************************************************************\n *  Copyright (c) 2021-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Utility functions for the mathtools package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {EqnArrayItem} from '../base/BaseItems.js';\nimport ParseUtil from '../ParseUtil.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {Macro} from '../Symbol.js';\nimport ParseOptions from '../ParseOptions.js';\nimport {lookup} from '../../../util/Options.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\nimport {MathtoolsMethods} from './MathtoolsMethods.js';\nimport {PAIREDDELIMS} from './MathtoolsConfiguration.js';\n\n/**\n * Utility functions for the Mathtools package.\n */\nexport const MathtoolsUtil = {\n\n  /**\n   * Set the displaystyle and scriptlevel attributes of an mstyle element\n   *\n   * @param {MmlNode} mml     The mstyle node to modify.\n   * @param {string} style    The TeX style macro to apply.\n   */\n  setDisplayLevel(mml: MmlNode, style: string) {\n    if (!style) return;\n    const [display, script] = lookup(style, {\n      '\\\\displaystyle':      [true, 0],\n      '\\\\textstyle':         [false, 0],\n      '\\\\scriptstyle':       [false, 1],\n      '\\\\scriptscriptstyle': [false, 2]\n    }, [null, null]);\n    if (display !== null) {\n      mml.attributes.set('displaystyle', display);\n      mml.attributes.set('scriptlevel', script);\n    }\n  },\n\n  /**\n   * Check that the top stack item is an alignment table.\n   *\n   * @param {TexParser} parser   The current TeX parser.\n   * @param {string} name        The name of the macro doing the checking.\n   * @return {EqnArrayItem}      The top item (an EqnArrayItem).\n   */\n  checkAlignment(parser: TexParser, name: string): EqnArrayItem {\n    const top = parser.stack.Top() as EqnArrayItem;\n    if (top.kind !== EqnArrayItem.prototype.kind) {\n      throw new TexError('NotInAlignment', '%1 can only be used in aligment environments', name);\n    }\n    return top;\n  },\n\n  /**\n   * Add a paired delimiter to the list of them.\n   *\n   * @param {ParseOptions} config   The parse options to modify.\n   * @param {string} cs             The control sequence for the paired delimiters.\n   * @param {string[]} args         The definition for the paired delimiters.  One of:\n   *                                   [left, right]\n   *                                   [left, right, body, argcount]\n   *                                   [left, right, body, argcount, pre, post]\n   */\n  addPairedDelims(config: ParseOptions, cs: string, args: string[]) {\n    const delims = config.handlers.retrieve(PAIREDDELIMS) as CommandMap;\n    delims.add(cs, new Macro(cs, MathtoolsMethods.PairedDelimiters, args));\n  },\n\n  /**\n   * Adjust the line spacing for a table.\n   *\n   * @param {MmlNode} mtable   The mtable node to adjust (if it is a table).\n   * @param {string} spread    The dimension to change by (number-with-units).\n   */\n  spreadLines(mtable: MmlNode, spread: string) {\n    if (!mtable.isKind('mtable')) return;\n    let rowspacing = mtable.attributes.get('rowspacing') as string;\n    if (rowspacing) {\n      const add = ParseUtil.dimen2em(spread);\n      rowspacing = rowspacing\n        .split(/ /)\n        .map(s => ParseUtil.Em(Math.max(0, ParseUtil.dimen2em(s) + add)))\n        .join(' ');\n    } else {\n      rowspacing = spread;\n    }\n    mtable.attributes.set('rowspacing', rowspacing);\n  },\n\n  /**\n   * Check if a string is a number and return it with an explicit plus if there isn't one.\n   *\n   * @param {string} name   The name of the macro doing the checking.\n   * @param {string} n      The string to test as a number.\n   * @return {srtring}      The number with an explicit sign.\n   */\n  plusOrMinus(name: string, n: string): string {\n    n = n.trim();\n    if (!n.match(/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)$/)) {\n      throw new TexError('NotANumber', 'Argument to %1 is not a number', name);\n    }\n    return (n.match(/^[-+]/) ? n : '+' + n);\n  },\n\n  /**\n   * Parse a \\prescript argument, with its associated format, if any.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the calling macro (\\prescript).\n   * @param {string} pos         The position for the argument (sub, sup, arg).\n   * @return {MmlNode}           The parsed MML version of the argument.\n   */\n  getScript(parser: TexParser, name: string, pos: string): MmlNode {\n    let arg = ParseUtil.trimSpaces(parser.GetArgument(name));\n    if (arg === '') {\n      return parser.create('node', 'none');\n    }\n    const format = parser.options.mathtools[`prescript-${pos}-format`];\n    format && (arg = `${format}{${arg}}`);\n    return new TexParser(arg, parser.stack.env, parser.configuration).mml();\n  }\n\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 14610, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14615, "column": 0}, "map": {"version":3,"file":"MathtoolsMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsMethods.ts"],"sourcesContent":["/*************************************************************\n *  Copyright (c) 2020-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Macro and environment implementations for the mathtools package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\n\nimport {ArrayItem, EqnArrayItem} from '../base/BaseItems.js';\nimport {StackItem} from '../StackItem.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {ParseMethod, ParseResult} from '../Types.js';\nimport {AmsMethods} from '../ams/AmsMethods.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\nimport {length2em, em} from '../../../util/lengths.js';\nimport {lookup} from '../../../util/Options.js';\nimport NewcommandUtil from '../newcommand/NewcommandUtil.js';\nimport NewcommandMethods from '../newcommand/NewcommandMethods.js';\n\nimport {MathtoolsTags} from './MathtoolsTags.js';\nimport {MathtoolsUtil} from './MathtoolsUtil.js';\n\n/**\n * The implementations for the macros and environments for the mathtools package.\n */\nexport const MathtoolsMethods: Record<string, ParseMethod> = {\n\n  /**\n   * Handle a mathtools matrix environment, with optional alignment.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   * @param {string} open        The open delimiter for the matrix.\n   * @param {string} close       The close delimiter for the matrix.\n   * @return {ParserResult}      The ArrayItem for the matrix.\n   */\n  MtMatrix(parser: TexParser, begin: StackItem, open: string, close: string): ParseResult {\n    const align = parser.GetBrackets(`\\\\begin{${begin.getName()}}`, 'c');\n    return MathtoolsMethods.Array(parser, begin, open, close, align);\n  },\n\n  /**\n   * Create a smallmatrix with given delimiters, and with optional alignment (and settable default)\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   * @param {string} open        The open delimiter for the matrix.\n   * @param {string} close       The close delimiter for the matrix.\n   * @param {string} align       The (optional) alignment.  If not given, use a bracket argument for it.\n   * @return {ParseResult}       The ArrayItem for the matrix.\n   */\n  MtSmallMatrix(parser: TexParser, begin: StackItem, open: string, close: string, align?: string): ParseResult {\n    if (!align) {\n      align = parser.GetBrackets(`\\\\begin{${begin.getName()}}`, parser.options.mathtools['smallmatrix-align']);\n    }\n    return MathtoolsMethods.Array(\n      parser, begin, open, close, align, ParseUtil.Em(1 / 3), '.2em', 'S', 1\n    );\n  },\n\n  /**\n   * Create the multlined StackItem.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   * @return {ParseResult}       The MultlinedItem.\n   */\n  MtMultlined(parser: TexParser, begin: StackItem): ParseResult {\n    const name = `\\\\begin{${begin.getName()}}`;\n    let pos = parser.GetBrackets(name, parser.options.mathtools['multlined-pos'] || 'c');\n    let width = pos ? parser.GetBrackets(name, '') : '';\n    if (pos && !pos.match(/^[cbt]$/)) {\n      [width, pos] = [pos, width];\n    }\n    parser.Push(begin);\n    const item = parser.itemFactory.create('multlined', parser, begin) as ArrayItem;\n    item.arraydef = {\n      displaystyle: true,\n      rowspacing: '.5em',\n      width: width || 'auto',\n      columnwidth: '100%',\n    };\n    return ParseUtil.setArrayAlign(item as ArrayItem, pos || 'c');\n  },\n\n  /**\n   * Replacement for the AMS HandleShove that includes optional spacing values\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the calling macro.\n   * @param {string} shove       Which way to shove the result.\n   */\n  HandleShove(parser: TexParser, name: string, shove: string) {\n    let top = parser.stack.Top();\n    if (top.kind !== 'multline' && top.kind !== 'multlined') {\n      throw new TexError(\n        'CommandInMultlined',\n        '%1 can only appear within the multline or multlined environments',\n        name);\n    }\n    if (top.Size()) {\n      throw new TexError(\n        'CommandAtTheBeginingOfLine',\n        '%1 must come at the beginning of the line',\n        name);\n    }\n    top.setProperty('shove', shove);\n    let shift = parser.GetBrackets(name);\n    let mml = parser.ParseArg(name);\n    if (shift) {\n      let mrow = parser.create('node', 'mrow', []);\n      let mspace = parser.create('node', 'mspace', [], {width: shift});\n      if (shove === 'left') {\n        mrow.appendChild(mspace);\n        mrow.appendChild(mml);\n      } else {\n        mrow.appendChild(mml);\n        mrow.appendChild(mspace);\n      }\n      mml = mrow;\n    }\n    parser.Push(mml);\n  },\n\n  /**\n   * Handle the spreadlines environment.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   */\n  SpreadLines(parser: TexParser, begin: StackItem) {\n    if (parser.stack.env.closing === begin.getName()) {\n      //\n      //  When the environment ends, look through the contents and\n      //  adjust the spacing in any tables, then push the results.\n      //\n      delete parser.stack.env.closing;\n      const top = parser.stack.Pop();\n      const mml = top.toMml();\n      const spread = top.getProperty('spread') as string;\n      if (mml.isInferred) {\n        for (const child of NodeUtil.getChildren(mml)) {\n          MathtoolsUtil.spreadLines(child, spread);\n        }\n      } else {\n        MathtoolsUtil.spreadLines(mml, spread);\n      }\n      parser.Push(mml);\n    } else {\n      //\n      //  Read the spread dimension and save it, then begin the environment.\n      //\n      const spread = parser.GetDimen(`\\\\begin{${begin.getName()}}`);\n      begin.setProperty('spread', spread);\n      parser.Push(begin);\n    }\n  },\n\n  /**\n   * Implements the various cases environments.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {StackItem} begin    The BeginItem for the environment.\n   * @param {string} open        The open delimiter for the matrix.\n   * @param {string} close       The close delimiter for the matrix.\n   * @param {string} style       The style (D, T, S, SS) for the contents of the array\n   * @return {ArrayItem}         The ArrayItem for the environment\n   */\n  Cases(parser: TexParser, begin: StackItem, open: string, close: string, style: string): ArrayItem {\n    const array = parser.itemFactory.create('array').setProperty('casesEnv', begin.getName()) as ArrayItem;\n    array.arraydef = {\n      rowspacing: '.2em',\n      columnspacing: '1em',\n      columnalign: 'left'\n    };\n    if (style === 'D') {\n      array.arraydef.displaystyle = true;\n    }\n    array.setProperties({open, close});\n    parser.Push(begin);\n    return array;\n  },\n\n  /**\n   * Handle \\mathrlap, \\mathllap, \\mathclap, and their cramped versions.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} pos         The position (l, c, r) of the lapped content\n   * @param {boolean} cramped    True if the style should be cramped\n   */\n  MathLap(parser: TexParser, name: string, pos: string, cramped: boolean) {\n    const style = parser.GetBrackets(name, '').trim();\n    let mml = parser.create('node', 'mstyle', [\n      parser.create('node', 'mpadded', [parser.ParseArg(name)], {\n        width: 0, ...(pos === 'r' ? {} : {lspace: (pos === 'l' ? '-1width' : '-.5width')})\n      })\n    ], {'data-cramped': cramped});\n    MathtoolsUtil.setDisplayLevel(mml, style);\n    parser.Push(parser.create('node', 'TeXAtom', [mml]));\n  },\n\n  /**\n   * Implements \\cramped.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  Cramped(parser: TexParser, name: string) {\n    const style = parser.GetBrackets(name, '').trim();\n    const arg = parser.ParseArg(name);\n    const mml = parser.create('node', 'mstyle', [arg], {'data-cramped': true});\n    MathtoolsUtil.setDisplayLevel(mml, style);\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\clap (and could do \\llap and \\rlap, where the contents are text mode).\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} pos         The position (l, c, r) of the lapped content\n   */\n  MtLap(parser: TexParser, name: string, pos: string) {\n    const content = ParseUtil.internalMath(parser, parser.GetArgument(name), 0);\n    let mml = parser.create('node', 'mpadded', content, {width: 0});\n    if (pos !== 'r') {\n      NodeUtil.setAttribute(mml, 'lspace', pos === 'l' ? '-1width' : '-.5width');\n    }\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\mathmakebox.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  MathMakeBox(parser: TexParser, name: string) {\n    const width = parser.GetBrackets(name);\n    const pos = parser.GetBrackets(name, 'c');\n    const mml = parser.create('node', 'mpadded', [parser.ParseArg(name)]);\n    if (width) {\n      NodeUtil.setAttribute(mml, 'width', width);\n    }\n    const align = lookup(pos, {c: 'center', r: 'right'}, '');\n    if (align) {\n      NodeUtil.setAttribute(mml, 'data-align', align);\n    }\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\mathmbox.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  MathMBox(parser: TexParser, name: string) {\n    parser.Push(parser.create('node', 'mrow', [parser.ParseArg(name)]));\n  },\n\n  /**\n   * Implements \\underbacket and \\overbracket.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  UnderOverBracket(parser: TexParser, name: string) {\n    const thickness = length2em(parser.GetBrackets(name, '.1em'), .1);\n    const height = parser.GetBrackets(name, '.2em');\n    const arg = parser.GetArgument(name);\n    const [pos, accent, border] = (\n      name.charAt(1) === 'o' ?\n        ['over', 'accent', 'bottom'] :\n        ['under', 'accentunder', 'top']\n    );\n    const t = em(thickness);\n    const base = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n    const copy = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n    const script = parser.create('node', 'mpadded', [\n      parser.create('node', 'mphantom', [copy])\n    ], {\n      style: `border: ${t} solid; border-${border}: none`,\n      height: height,\n      depth: 0\n    });\n    const node = ParseUtil.underOver(parser, base, script, pos, true);\n    const munderover = NodeUtil.getChildAt(NodeUtil.getChildAt(node, 0), 0);  // TeXAtom.inferredMrow child 0\n    NodeUtil.setAttribute(munderover, accent, true);\n    parser.Push(node);\n  },\n\n  /**\n   * Implements \\Aboxed.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  Aboxed(parser: TexParser, name: string) {\n    //\n    //  Check that the top item is an alignment, and that we are on an even number of cells\n    //  (othewise add one to make it even).\n    //\n    const top = MathtoolsUtil.checkAlignment(parser, name);\n    if (top.row.length % 2 === 1) {\n      top.row.push(parser.create('node', 'mtd', []));\n    }\n    //\n    //  Get the argument and the rest of the TeX string.\n    //\n    const arg = parser.GetArgument(name);\n    const rest = parser.string.substr(parser.i);\n    //\n    //  Put the argument back, followed by \"&&\", and a marker that we look for below.\n    //\n    parser.string = arg + '&&\\\\endAboxed';\n    parser.i = 0;\n    //\n    //  Get the two parts separated by ampersands, and ignore the rest.\n    //\n    const left = parser.GetUpTo(name, '&');\n    const right = parser.GetUpTo(name, '&');\n    parser.GetUpTo(name, '\\\\endAboxed');\n    //\n    //  Insert the TeX needed for the boxed content\n    //\n    const tex = ParseUtil.substituteArgs(\n      parser, [left, right], '\\\\rlap{\\\\boxed{#1{}#2}}\\\\kern.267em\\\\phantom{#1}&\\\\phantom{{}#2}\\\\kern.267em'\n    );\n    parser.string = tex + rest;\n    parser.i = 0;\n  },\n\n  /**\n   * Implements \\ArrowBetweenLines.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  ArrowBetweenLines(parser: TexParser, name: string) {\n    const top = MathtoolsUtil.checkAlignment(parser, name);\n    if (top.Size() || top.row.length) {\n      throw new TexError('BetweenLines', '%1 must be on a row by itself', name);\n    }\n    const star = parser.GetStar();\n    const symbol = parser.GetBrackets(name, '\\\\Updownarrow');\n    if (star) {\n      top.EndEntry();\n      top.EndEntry();\n    }\n    const tex = (star ? '\\\\quad' + symbol : symbol + '\\\\quad');\n    const mml = new TexParser(tex, parser.stack.env, parser.configuration).mml();\n    parser.Push(mml);\n    top.EndEntry();\n    top.EndRow();\n  },\n\n  /**\n   * Implements \\vdotswithin.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  VDotsWithin(parser: TexParser, name: string) {\n    const top = parser.stack.Top() as EqnArrayItem;\n    const isFlush = (top.getProperty('flushspaceabove') === top.table.length);\n    const arg = '\\\\mmlToken{mi}{}' + parser.GetArgument(name) + '\\\\mmlToken{mi}{}';\n    const base = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n    let mml = parser.create('node', 'mpadded', [\n      parser.create('node', 'mpadded', [\n        parser.create('node', 'mo', [\n          parser.create('text', '\\u22EE')\n        ])\n      ], {\n        width: 0,\n        lspace: '-.5width', ...(isFlush ? {height: '-.6em', voffset: '-.18em'} : {})\n      }),\n      parser.create('node', 'mphantom', [base])\n    ], {\n      lspace: '.5width'\n    });\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\shortvdotswithin.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  ShortVDotsWithin(parser: TexParser, _name: string) {\n    const top = parser.stack.Top() as EqnArrayItem;\n    const star = parser.GetStar();\n    MathtoolsMethods.FlushSpaceAbove(parser, '\\\\MTFlushSpaceAbove');\n    !star && top.EndEntry();\n    MathtoolsMethods.VDotsWithin(parser, '\\\\vdotswithin');\n    star && top.EndEntry();\n    MathtoolsMethods.FlushSpaceBelow(parser, '\\\\MTFlushSpaceBelow');\n  },\n\n  /**\n   * Implements \\MTFlushSpaceAbove.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  FlushSpaceAbove(parser: TexParser, name: string) {\n    const top = MathtoolsUtil.checkAlignment(parser, name);\n    top.setProperty('flushspaceabove', top.table.length);  // marker so \\vdotswithin can shorten its height\n    top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustabove']);\n  },\n\n  /**\n   * Implements \\MTFlushSpaceBelow.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  FlushSpaceBelow(parser: TexParser, name: string) {\n    const top = MathtoolsUtil.checkAlignment(parser, name);\n    top.Size() && top.EndEntry();\n    top.EndRow();\n    top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustbelow']);\n  },\n\n  /**\n   * Implements a paired delimiter (e.g., from \\DeclarePairedDelimiter).\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} open        The open delimiter.\n   * @param {string} close       The close delimiter.\n   * @param {string?} body       The body betweeen the delimiters.\n   * @param {number?} n          The number of arguments to use for the body.\n   * @param {string?} pre        The TeX to go before the open delimiter.\n   * @param {string?} post       The TeX to go after the close delimiter.\n   */\n  PairedDelimiters(parser: TexParser, name: string,\n                   open: string, close: string,\n                   body: string = '#1', n: number = 1,\n                   pre: string = '',  post: string = '') {\n    const star = parser.GetStar();\n    const size = (star ? '' : parser.GetBrackets(name));\n    const [left, right] = (star ? ['\\\\left', '\\\\right'] : size ? [size + 'l' , size + 'r'] : ['', '']);\n    const delim = (star ? '\\\\middle' : size || '');\n    if (n) {\n      const args: string[] = [];\n      for (let i = args.length; i < n; i++) {\n        args.push(parser.GetArgument(name));\n      }\n      pre  = ParseUtil.substituteArgs(parser, args, pre);\n      body = ParseUtil.substituteArgs(parser, args, body);\n      post = ParseUtil.substituteArgs(parser, args, post);\n    }\n    body = body.replace(/\\\\delimsize/g, delim);\n    parser.string = [pre, left, open, body, right, close, post, parser.string.substr(parser.i)]\n      .reduce((s, part) => ParseUtil.addArgs(parser, s, part), '');\n    parser.i = 0;\n    ParseUtil.checkMaxMacros(parser);\n  },\n\n  /**\n   * Implements \\DeclarePairedDelimiter.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  DeclarePairedDelimiter(parser: TexParser, name: string) {\n    const cs = NewcommandUtil.GetCsNameArgument(parser, name);\n    const open = parser.GetArgument(name);\n    const close = parser.GetArgument(name);\n    MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close]);\n  },\n\n  /**\n   * Implements \\DeclarePairedDelimiterX.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  DeclarePairedDelimiterX(parser: TexParser, name: string) {\n    const cs = NewcommandUtil.GetCsNameArgument(parser, name);\n    const n = NewcommandUtil.GetArgCount(parser, name);\n    const open = parser.GetArgument(name);\n    const close = parser.GetArgument(name);\n    const body = parser.GetArgument(name);\n    MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n]);\n  },\n\n  /**\n   * Implements \\DeclarePairedDelimiterXPP.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  DeclarePairedDelimiterXPP(parser: TexParser, name: string) {\n    const cs = NewcommandUtil.GetCsNameArgument(parser, name);\n    const n = NewcommandUtil.GetArgCount(parser, name);\n    const pre = parser.GetArgument(name);\n    const open = parser.GetArgument(name);\n    const close = parser.GetArgument(name);\n    const post = parser.GetArgument(name);\n    const body = parser.GetArgument(name);\n    MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n, pre, post]);\n  },\n\n  /**\n   * Implements \\centeredcolon, \\ordinarycolon, \\MTThinColon.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {boolean} center     True if colon should be centered\n   * @param {boolean} force      True menas always center (don't use centercolon option).\n   * @param {boolean} thin       True if this is a thin color (for \\coloneqq, etc).\n   */\n  CenterColon(parser: TexParser, _name: string, center: boolean, force: boolean = false, thin: boolean = false) {\n    const options = parser.options.mathtools;\n    let mml = parser.create('token', 'mo', {}, ':');\n    if (center && (options['centercolon'] || force)) {\n      const dy = options['centercolon-offset'];\n      mml = parser.create('node', 'mpadded', [mml], {\n        voffset: dy, height: `+${dy}`, depth: `-${dy}`,\n          ...(thin ? {width: options['thincolon-dw'], lspace: options['thincolon-dx']} : {})\n      });\n    }\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\coloneqq and related macros.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} tex         The tex string to use (if not using unicode versions or if there isn't one).\n   * @param {string} unicode     The unicode character (if there is one).\n   */\n  Relation(parser: TexParser, _name: string, tex: string, unicode?: string) {\n    const options = parser.options.mathtools;\n    if (options['use-unicode'] && unicode) {\n      parser.Push(parser.create('token', 'mo', {texClass: TEXCLASS.REL}, unicode));\n    } else {\n      tex = '\\\\mathrel{' + tex.replace(/:/g, '\\\\MTThinColon').replace(/-/g, '\\\\mathrel{-}') + '}';\n      parser.string = ParseUtil.addArgs(parser, tex, parser.string.substr(parser.i));\n      parser.i = 0;\n    }\n  },\n\n  /**\n   * Implements \\ndownarrow and \\nuparrow via a terrible hack (visual only, no chance of this working with SRE).\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {string} c           The base arrow for the slashed version\n   * @param {string} dy          A vertical offset for the slash\n   */\n  NArrow(parser: TexParser, _name: string, c: string, dy: string) {\n    parser.Push(\n      parser.create('node', 'TeXAtom', [\n        parser.create('token', 'mtext', {}, c),\n        parser.create('node', 'mpadded', [\n          parser.create('node', 'mpadded', [\n            parser.create('node', 'menclose', [\n              parser.create('node', 'mspace', [], {height: '.2em', depth: 0, width: '.4em'})\n            ], {notation: 'updiagonalstrike', 'data-thickness': '.05em', 'data-padding': 0})\n          ], {width: 0, lspace: '-.5width', voffset: dy}),\n          parser.create('node', 'mphantom', [\n            parser.create('token', 'mtext', {}, c)\n          ])\n        ], {width: 0, lspace: '-.5width'})\n      ], {texClass: TEXCLASS.REL})\n    );\n  },\n\n  /**\n   * Implements \\splitfrac and \\splitdfrac.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {boolean} display    True if \\splitdfrac.\n   */\n  SplitFrac(parser: TexParser, name: string, display: boolean) {\n    const num = parser.ParseArg(name);\n    const den = parser.ParseArg(name);\n    parser.Push(\n      parser.create('node', 'mstyle', [\n        parser.create('node', 'mfrac', [\n          parser.create('node', 'mstyle', [\n            num,\n            parser.create('token', 'mi'),\n            parser.create('token', 'mspace', {width: '1em'}) // no parameter for this in mathtools.  Should we add one?\n          ], {scriptlevel: 0}),\n          parser.create('node', 'mstyle', [\n            parser.create('token', 'mspace', {width: '1em'}),\n            parser.create('token', 'mi'),\n            den\n          ], {scriptlevel: 0})\n        ], {linethickness: 0, numalign: 'left', denomalign: 'right'})\n      ], {displaystyle: display, scriptlevel: 0})\n    );\n  },\n\n  /**\n   * Implements \\xmathstrut.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  XMathStrut(parser: TexParser, name: string) {\n    let dd = parser.GetBrackets(name);\n    let dh = parser.GetArgument(name);\n    dh = MathtoolsUtil.plusOrMinus(name, dh);\n    dd = MathtoolsUtil.plusOrMinus(name, dd || dh);\n    parser.Push(\n      parser.create('node', 'TeXAtom', [\n        parser.create('node', 'mpadded', [\n          parser.create('node', 'mphantom', [\n            parser.create('token', 'mo', {stretchy: false}, '(')\n          ])\n        ], {width: 0, height: dh + 'height', depth: dd + 'depth'})\n      ], {texClass: TEXCLASS.ORD})\n    );\n  },\n\n  /**\n   * Implements \\prescript.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  Prescript(parser: TexParser, name: string) {\n    const sup = MathtoolsUtil.getScript(parser, name, 'sup');\n    const sub = MathtoolsUtil.getScript(parser, name, 'sub');\n    const base = MathtoolsUtil.getScript(parser, name, 'arg');\n    if (NodeUtil.isType(sup, 'none') && NodeUtil.isType(sub, 'none')) {\n      parser.Push(base);\n      return;\n    }\n    const mml = parser.create('node', 'mmultiscripts', [base]);\n    NodeUtil.getChildren(mml).push(null, null);\n    NodeUtil.appendChildren(mml, [parser.create('node', 'mprescripts'), sub, sup]);\n    mml.setProperty('fixPrescript', true);\n    parser.Push(mml);\n  },\n\n  /**\n   * Implements \\newtagform and \\renewtagform.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   * @param {boolean=} renew     True if \\renewtagform.\n   */\n  NewTagForm(parser: TexParser, name: string, renew: boolean = false) {\n    const tags = parser.tags as MathtoolsTags;\n    if (!('mtFormats' in tags)) {\n      throw new TexError('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);\n    }\n    const id = parser.GetArgument(name).trim();\n    if (!id) {\n      throw new TexError('InvalidTagFormID', 'Tag form name can\\'t be empty');\n    }\n    const format = parser.GetBrackets(name, '');\n    const left = parser.GetArgument(name);\n    const right = parser.GetArgument(name);\n    if (!renew && tags.mtFormats.has(id)) {\n      throw new TexError('DuplicateTagForm', 'Duplicate tag form: %1', id);\n    }\n    tags.mtFormats.set(id, [left, right, format]);\n  },\n\n  /**\n   * Implements \\usetagform.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  UseTagForm(parser: TexParser, name: string) {\n    const tags = parser.tags as MathtoolsTags;\n    if (!('mtFormats' in tags)) {\n      throw new TexError('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);\n    }\n    const id = parser.GetArgument(name).trim();\n    if (!id) {\n      tags.mtCurrent = null;\n      return;\n    }\n    if (!tags.mtFormats.has(id)) {\n      throw new TexError('UndefinedTagForm', 'Undefined tag form: %1', id);\n    }\n    tags.mtCurrent = tags.mtFormats.get(id);\n  },\n\n  /**\n   * Implements \\mathtoolsset.\n   *\n   * @param {TexParser} parser   The calling parser.\n   * @param {string} name        The macro name.\n   */\n  SetOptions(parser: TexParser, name: string) {\n    const options = parser.options.mathtools;\n    if (!options['allow-mathtoolsset']) {\n      throw new TexError('ForbiddenMathtoolsSet', '%1 is disabled', name);\n    }\n    const allowed = {} as {[id: string]: number};\n    Object.keys(options).forEach(id => {\n      if (id !== 'pariedDelimiters' && id !== 'tagforms' && id !== 'allow-mathtoolsset') {\n        allowed[id] = 1;\n      }\n    });\n    const args = parser.GetArgument(name);\n    const keys = ParseUtil.keyvalOptions(args, allowed, true);\n    for (const id of Object.keys(keys)) {\n      options[id] = keys[id];\n    }\n  },\n\n  /**\n   * Use the Base or AMS methods for these\n   */\n  Array:  BaseMethods.Array,\n  Macro:  BaseMethods.Macro,\n  xArrow:      AmsMethods.xArrow,\n  HandleRef:   AmsMethods.HandleRef,\n  AmsEqnArray: AmsMethods.AmsEqnArray,\n  MacroWithTemplate: NewcommandMethods.MacroWithTemplate,\n\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAA,iBAAA,4CAAwC;AAExC,IAAA,kDAAgD;AAChD,IAAA,mBAAA,mDAAiD;AACjD,IAAA,iBAAA,4CAAwC;AACxC,IAAA,gBAAA,2CAAsC;AACtC,IAAA,gBAAA,2CAAsC;AACtC,IAAA,2DAA0D;AAC1D,IAAA,mDAAuD;AACvD,IAAA,mDAAgD;AAChD,IAAA,sBAAA,4DAA6D;AAC7D,IAAA,yBAAA,+DAAmE;AAGnE,IAAA,mDAAiD;AAKpC,QAAA,gBAAgB,GAAgC;IAW3D,QAAQ,EAAR,SAAS,MAAiB,EAAE,KAAgB,EAAE,IAAY,EAAE,KAAa;QACvE,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,WAAA,MAAA,CAAW,KAAK,CAAC,OAAO,EAAE,EAAA,IAAG,EAAE,GAAG,CAAC,CAAC;QACrE,OAAO,QAAA,gBAAgB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;IAYD,aAAa,EAAb,SAAc,MAAiB,EAAE,KAAgB,EAAE,IAAY,EAAE,KAAa,EAAE,KAAc;QAC5F,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,WAAA,MAAA,CAAW,KAAK,CAAC,OAAO,EAAE,EAAA,IAAG,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAC1G;QACD,OAAO,QAAA,gBAAgB,CAAC,KAAK,CAC3B,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,eAAA,OAAS,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CACvE,CAAC;IACJ,CAAC;IASD,WAAW,EAAX,SAAY,MAAiB,EAAE,KAAgB;;QAC7C,IAAM,IAAI,GAAG,WAAA,MAAA,CAAW,KAAK,CAAC,OAAO,EAAE,EAAA,IAAG,CAAC;QAC3C,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC;QACrF,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACpD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YAChC,KAAA,OAAe;gBAAC,GAAG;gBAAE,KAAK;aAAC,EAAA,EAAA,EAA1B,KAAK,GAAA,EAAA,CAAA,EAAA,EAAE,GAAG,GAAA,EAAA,CAAA,EAAA,CAAiB;SAC7B;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,CAAc,CAAC;QAChF,IAAI,CAAC,QAAQ,GAAG;YACd,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,MAAM;YAClB,KAAK,EAAE,KAAK,IAAI,MAAM;YACtB,WAAW,EAAE,MAAM;SACpB,CAAC;QACF,OAAO,eAAA,OAAS,CAAC,aAAa,CAAC,IAAiB,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;IAChE,CAAC;IASD,WAAW,EAAX,SAAY,MAAiB,EAAE,IAAY,EAAE,KAAa;QACxD,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QAC7B,IAAI,GAAG,CAAC,IAAI,KAAK,UAAU,IAAI,GAAG,CAAC,IAAI,KAAK,WAAW,EAAE;YACvD,MAAM,IAAI,cAAA,OAAQ,CAChB,oBAAoB,EACpB,kEAAkE,EAClE,IAAI,CAAC,CAAC;SACT;QACD,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE;YACd,MAAM,IAAI,cAAA,OAAQ,CAChB,4BAA4B,EAC5B,2CAA2C,EAC3C,IAAI,CAAC,CAAC;SACT;QACD,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,IAAI,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,KAAK,EAAE;YACT,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;YAC7C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;gBAAC,KAAK,EAAE,KAAK;YAAA,CAAC,CAAC,CAAC;YACjE,IAAI,KAAK,KAAK,MAAM,EAAE;gBACpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBACzB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aACvB,MAAM;gBACL,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAC1B;YACD,GAAG,GAAG,IAAI,CAAC;SACZ;QACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAQD,WAAW,EAAX,SAAY,MAAiB,EAAE,KAAgB;;QAC7C,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,EAAE;YAKhD,OAAO,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;YAChC,IAAM,KAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC/B,IAAM,GAAG,GAAG,KAAG,CAAC,KAAK,EAAE,CAAC;YACxB,IAAM,MAAM,GAAG,KAAG,CAAC,WAAW,CAAC,QAAQ,CAAW,CAAC;YACnD,IAAI,GAAG,CAAC,UAAU,EAAE;;oBAClB,IAAoB,IAAA,KAAA,SAAA,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;wBAA1C,IAAM,KAAK,GAAA,GAAA,KAAA;wBACd,mBAAA,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;qBAC1C;;;;;;;;;;;;aACF,MAAM;gBACL,mBAAA,aAAa,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;aACxC;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB,MAAM;YAIL,IAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAA,MAAA,CAAW,KAAK,CAAC,OAAO,EAAE,EAAA,IAAG,CAAC,CAAC;YAC9D,KAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC;IAYD,KAAK,EAAL,SAAM,MAAiB,EAAE,KAAgB,EAAE,IAAY,EAAE,KAAa,EAAE,KAAa;QACnF,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO,EAAE,CAAc,CAAC;QACvG,KAAK,CAAC,QAAQ,GAAG;YACf,UAAU,EAAE,MAAM;YAClB,aAAa,EAAE,KAAK;YACpB,WAAW,EAAE,MAAM;SACpB,CAAC;QACF,IAAI,KAAK,KAAK,GAAG,EAAE;YACjB,KAAK,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;SACpC;QACD,KAAK,CAAC,aAAa,CAAC;YAAC,IAAI,EAAA,IAAA;YAAE,KAAK,EAAA,KAAA;QAAA,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,KAAK,CAAC;IACf,CAAC;IAUD,OAAO,EAAP,SAAQ,MAAiB,EAAE,IAAY,EAAE,GAAW,EAAE,OAAgB;QACpE,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAClD,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;YACxC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;aAAC,EAAA,SAAA;gBACtD,KAAK,EAAE,CAAC;YAAA,GAAK,AAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC,CAAC,CAAC;gBAAC,MAAM,EAAE,AAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;YAAA,CAAC,CAAC,EAClF;SACH,EAAE;YAAC,cAAc,EAAE,OAAO;QAAA,CAAC,CAAC,CAAC;QAC9B,mBAAA,aAAa,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,GAAG;SAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAQD,OAAO,EAAP,SAAQ,MAAiB,EAAE,IAAY;QACrC,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAClD,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;YAAC,GAAG;SAAC,EAAE;YAAC,cAAc,EAAE,IAAI;QAAA,CAAC,CAAC,CAAC;QAC3E,mBAAA,aAAa,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IASD,KAAK,EAAL,SAAM,MAAiB,EAAE,IAAY,EAAE,GAAW;QAChD,IAAM,OAAO,GAAG,eAAA,OAAS,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5E,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE;YAAC,KAAK,EAAE,CAAC;QAAA,CAAC,CAAC,CAAC;QAChE,IAAI,GAAG,KAAK,GAAG,EAAE;YACf,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;SAC5E;QACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAQD,WAAW,EAAX,SAAY,MAAiB,EAAE,IAAY;QACzC,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC1C,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;SAAC,CAAC,CAAC;QACtE,IAAI,KAAK,EAAE;YACT,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;SAC5C;QACD,IAAM,KAAK,GAAG,CAAA,GAAA,aAAA,MAAM,EAAC,GAAG,EAAE;YAAC,CAAC,EAAE,QAAQ;YAAE,CAAC,EAAE,OAAO;QAAA,CAAC,EAAE,EAAE,CAAC,CAAC;QACzD,IAAI,KAAK,EAAE;YACT,cAAA,OAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;SACjD;QACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAQD,QAAQ,EAAR,SAAS,MAAiB,EAAE,IAAY;QACtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE;YAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;SAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IAQD,gBAAgB,EAAhB,SAAiB,MAAiB,EAAE,IAAY;QAC9C,IAAM,SAAS,GAAG,CAAA,GAAA,aAAA,SAAS,EAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QAClE,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAChD,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAA,KAAA,OAAwB,AAC5B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CACtB;YAAC,MAAM;YAAE,QAAQ;YAAE,QAAQ;SAAC,CAAC,CAAC,CAC9B;YAAC,OAAO;YAAE,aAAa;YAAE,KAAK;SAAC,CAClC,CAAA,EAAA,EAJM,GAAG,GAAA,EAAA,CAAA,EAAA,EAAE,MAAM,GAAA,EAAA,CAAA,EAAA,EAAE,MAAM,GAAA,EAAA,CAAA,EAIzB,CAAC;QACF,IAAM,CAAC,GAAG,CAAA,GAAA,aAAA,EAAE,EAAC,SAAS,CAAC,CAAC;QACxB,IAAM,IAAI,GAAG,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;QAC9E,IAAM,IAAI,GAAG,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;QAC9E,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAC9C,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;gBAAC,IAAI;aAAC,CAAC;SAC1C,EAAE;YACD,KAAK,EAAE,WAAA,MAAA,CAAW,CAAC,EAAA,mBAAA,MAAA,CAAkB,MAAM,EAAA,SAAQ;YACnD,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,CAAC;SACT,CAAC,CAAC;QACH,IAAM,IAAI,GAAG,eAAA,OAAS,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAClE,IAAM,UAAU,GAAG,cAAA,OAAQ,CAAC,UAAU,CAAC,cAAA,OAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,cAAA,OAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAQD,MAAM,EAAN,SAAO,MAAiB,EAAE,IAAY;QAKpC,IAAM,GAAG,GAAG,mBAAA,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;YAC5B,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;SAChD;QAID,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAI5C,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,eAAe,CAAC;QACtC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QAIb,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACvC,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACxC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QAIpC,IAAM,GAAG,GAAG,eAAA,OAAS,CAAC,cAAc,CAClC,MAAM,EAAE;YAAC,IAAI;YAAE,KAAK;SAAC,EAAE,8EAA8E,CACtG,CAAC;QACF,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC;QAC3B,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,CAAC;IAQD,iBAAiB,EAAjB,SAAkB,MAAiB,EAAE,IAAY;QAC/C,IAAM,GAAG,GAAG,mBAAA,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACvD,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE;YAChC,MAAM,IAAI,cAAA,OAAQ,CAAC,cAAc,EAAE,+BAA+B,EAAE,IAAI,CAAC,CAAC;SAC3E;QACD,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;QACzD,IAAI,IAAI,EAAE;YACR,GAAG,CAAC,QAAQ,EAAE,CAAC;YACf,GAAG,CAAC,QAAQ,EAAE,CAAC;SAChB;QACD,IAAM,GAAG,GAAG,AAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC;QAC3D,IAAM,GAAG,GAAG,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;QAC7E,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjB,GAAG,CAAC,QAAQ,EAAE,CAAC;QACf,GAAG,CAAC,MAAM,EAAE,CAAC;IACf,CAAC;IAQD,WAAW,EAAX,SAAY,MAAiB,EAAE,IAAY;QACzC,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAkB,CAAC;QAC/C,IAAM,OAAO,GAAG,AAAC,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC1E,IAAM,GAAG,GAAG,kBAAkB,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,kBAAkB,CAAC;QAC/E,IAAM,IAAI,GAAG,IAAI,eAAA,OAAS,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,CAAC;QAC9E,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YACzC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;oBAC1B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC;iBAChC,CAAC;aACH,EAAA,SAAA;gBACC,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,UAAU;YAAA,GAAK,AAAC,OAAO,CAAC,CAAC,CAAC;gBAAC,MAAM,EAAE,OAAO;gBAAE,OAAO,EAAE,QAAQ;YAAA,CAAC,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC,EAC5E;YACF,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;gBAAC,IAAI;aAAC,CAAC;SAC1C,EAAE;YACD,MAAM,EAAE,SAAS;SAClB,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAQD,gBAAgB,EAAhB,SAAiB,MAAiB,EAAE,KAAa;QAC/C,IAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAkB,CAAC;QAC/C,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAC9B,QAAA,gBAAgB,CAAC,eAAe,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;QAChE,CAAC,IAAI,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC;QACxB,QAAA,gBAAgB,CAAC,WAAW,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;QACtD,IAAI,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC;QACvB,QAAA,gBAAgB,CAAC,eAAe,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;IAClE,CAAC;IAQD,eAAe,EAAf,SAAgB,MAAiB,EAAE,IAAY;QAC7C,IAAM,GAAG,GAAG,mBAAA,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACvD,GAAG,CAAC,WAAW,CAAC,iBAAiB,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACrD,GAAG,CAAC,aAAa,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC7E,CAAC;IAQD,eAAe,EAAf,SAAgB,MAAiB,EAAE,IAAY;QAC7C,IAAM,GAAG,GAAG,mBAAA,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACvD,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC7B,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,GAAG,CAAC,aAAa,CAAC,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC;IAC7E,CAAC;IAcD,gBAAgB,EAAhB,SAAiB,MAAiB,EAAE,IAAY,EAC/B,IAAY,EAAE,KAAa,EAC3B,IAAmB,EAAE,CAAa,EAClC,GAAgB,EAAG,IAAiB;QADpC,IAAA,SAAA,KAAA,GAAA;YAAA,OAAA,IAAmB;QAAA;QAAE,IAAA,MAAA,KAAA,GAAA;YAAA,IAAA,CAAa;QAAA;QAClC,IAAA,QAAA,KAAA,GAAA;YAAA,MAAA,EAAgB;QAAA;QAAG,IAAA,SAAA,KAAA,GAAA;YAAA,OAAA,EAAiB;QAAA;QACnD,IAAM,IAAI,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAM,IAAI,GAAG,AAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9C,IAAA,KAAA,OAAgB,AAAC,IAAI,CAAC,CAAC,CAAC;YAAC,QAAQ;YAAE,SAAS;SAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAAC,IAAI,GAAG,GAAG;YAAG,IAAI,GAAG,GAAG;SAAC,CAAC,CAAC,CAAC;YAAC,EAAE;YAAE,EAAE;SAAC,CAAC,CAAA,EAAA,EAA3F,IAAI,GAAA,EAAA,CAAA,EAAA,EAAE,KAAK,GAAA,EAAA,CAAA,EAAgF,CAAC;QACnG,IAAM,KAAK,GAAG,AAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,EAAE;YACL,IAAM,IAAI,GAAa,EAAE,CAAC;YAC1B,IAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;gBACpC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aACrC;YACD,GAAG,GAAI,eAAA,OAAS,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;YACnD,IAAI,GAAG,eAAA,OAAS,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,GAAG,eAAA,OAAS,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SACrD;QACD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,GAAG;YAAC,GAAG;YAAE,IAAI;YAAE,IAAI;YAAE,IAAI;YAAE,KAAK;YAAE,KAAK;YAAE,IAAI;YAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;SAAC,CACxF,MAAM,CAAC,SAAC,CAAC,EAAE,IAAI;YAAK,OAAA,eAAA,OAAS,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC;QAAlC,CAAkC,EAAE,EAAE,CAAC,CAAC;QAC/D,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACb,eAAA,OAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAQD,sBAAsB,EAAtB,SAAuB,MAAiB,EAAE,IAAY;QACpD,IAAM,EAAE,GAAG,oBAAA,OAAc,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1D,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtC,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,mBAAA,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,EAAE;YAAC,IAAI;YAAE,KAAK;SAAC,CAAC,CAAC;IACzE,CAAC;IAQD,uBAAuB,EAAvB,SAAwB,MAAiB,EAAE,IAAY;QACrD,IAAM,EAAE,GAAG,oBAAA,OAAc,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1D,IAAM,CAAC,GAAG,oBAAA,OAAc,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACnD,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtC,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtC,mBAAA,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,EAAE;YAAC,IAAI;YAAE,KAAK;YAAE,IAAI;YAAE,CAAC;SAAC,CAAC,CAAC;IAClF,CAAC;IAQD,yBAAyB,EAAzB,SAA0B,MAAiB,EAAE,IAAY;QACvD,IAAM,EAAE,GAAG,oBAAA,OAAc,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1D,IAAM,CAAC,GAAG,oBAAA,OAAc,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACnD,IAAM,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtC,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtC,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtC,mBAAA,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,EAAE;YAAC,IAAI;YAAE,KAAK;YAAE,IAAI;YAAE,CAAC;YAAE,GAAG;YAAE,IAAI;SAAC,CAAC,CAAC;IAC7F,CAAC;IAWD,WAAW,EAAX,SAAY,MAAiB,EAAE,KAAa,EAAE,MAAe,EAAE,KAAsB,EAAE,IAAqB;QAA7C,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,KAAsB;QAAA;QAAE,IAAA,SAAA,KAAA,GAAA;YAAA,OAAA,KAAqB;QAAA;QAC1G,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,CAAA,CAAE,EAAE,GAAG,CAAC,CAAC;QAChD,IAAI,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,EAAE;YAC/C,IAAM,EAAE,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;YACzC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAAC,GAAG;aAAC,EAAA,SAAA;gBAC1C,OAAO,EAAE,EAAE;gBAAE,MAAM,EAAE,IAAA,MAAA,CAAI,EAAE,CAAE;gBAAE,KAAK,EAAE,IAAA,MAAA,CAAI,EAAE,CAAE;YAAA,GACzC,AAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,KAAK,EAAE,OAAO,CAAC,cAAc,CAAC;gBAAE,MAAM,EAAE,OAAO,CAAC,cAAc,CAAC;YAAA,CAAC,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC,EACpF,CAAC;SACJ;QACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAUD,QAAQ,EAAR,SAAS,MAAiB,EAAE,KAAa,EAAE,GAAW,EAAE,OAAgB;QACtE,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,OAAO,EAAE;YACrC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;gBAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,GAAG;YAAA,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;SAC9E,MAAM;YACL,GAAG,GAAG,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,cAAc,CAAC,GAAG,GAAG,CAAC;YAC5F,MAAM,CAAC,MAAM,GAAG,eAAA,OAAS,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/E,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;SACd;IACH,CAAC;IAUD,MAAM,EAAN,SAAO,MAAiB,EAAE,KAAa,EAAE,CAAS,EAAE,EAAU;QAC5D,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAC/B,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,CAAA,CAAE,EAAE,CAAC,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;oBAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;wBAChC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;4BAAC,MAAM,EAAE,MAAM;4BAAE,KAAK,EAAE,CAAC;4BAAE,KAAK,EAAE,MAAM;wBAAA,CAAC,CAAC;qBAC/E,EAAE;wBAAC,QAAQ,EAAE,kBAAkB;wBAAE,gBAAgB,EAAE,OAAO;wBAAE,cAAc,EAAE,CAAC;oBAAA,CAAC,CAAC;iBACjF,EAAE;oBAAC,KAAK,EAAE,CAAC;oBAAE,MAAM,EAAE,UAAU;oBAAE,OAAO,EAAE,EAAE;gBAAA,CAAC,CAAC;gBAC/C,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;oBAChC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,CAAA,CAAE,EAAE,CAAC,CAAC;iBACvC,CAAC;aACH,EAAE;gBAAC,KAAK,EAAE,CAAC;gBAAE,MAAM,EAAE,UAAU;YAAA,CAAC,CAAC;SACnC,EAAE;YAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,GAAG;QAAA,CAAC,CAAC,CAC7B,CAAC;IACJ,CAAC;IASD,SAAS,EAAT,SAAU,MAAiB,EAAE,IAAY,EAAE,OAAgB;QACzD,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClC,IAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;YAC9B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE;gBAC7B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;oBAC9B,GAAG;oBACH,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;oBAC5B,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE;wBAAC,KAAK,EAAE,KAAK;oBAAA,CAAC,CAAC;iBACjD,EAAE;oBAAC,WAAW,EAAE,CAAC;gBAAA,CAAC,CAAC;gBACpB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;oBAC9B,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE;wBAAC,KAAK,EAAE,KAAK;oBAAA,CAAC,CAAC;oBAChD,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;oBAC5B,GAAG;iBACJ,EAAE;oBAAC,WAAW,EAAE,CAAC;gBAAA,CAAC,CAAC;aACrB,EAAE;gBAAC,aAAa,EAAE,CAAC;gBAAE,QAAQ,EAAE,MAAM;gBAAE,UAAU,EAAE,OAAO;YAAA,CAAC,CAAC;SAC9D,EAAE;YAAC,YAAY,EAAE,OAAO;YAAE,WAAW,EAAE,CAAC;QAAA,CAAC,CAAC,CAC5C,CAAC;IACJ,CAAC;IAQD,UAAU,EAAV,SAAW,MAAiB,EAAE,IAAY;QACxC,IAAI,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,EAAE,GAAG,mBAAA,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACzC,EAAE,GAAG,mBAAA,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,IAAI,CACT,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;YAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE;gBAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,EAAE;oBAChC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE;wBAAC,QAAQ,EAAE,KAAK;oBAAA,CAAC,EAAE,GAAG,CAAC;iBACrD,CAAC;aACH,EAAE;gBAAC,KAAK,EAAE,CAAC;gBAAE,MAAM,EAAE,EAAE,GAAG,QAAQ;gBAAE,KAAK,EAAE,EAAE,GAAG,OAAO;YAAA,CAAC,CAAC;SAC3D,EAAE;YAAC,QAAQ,EAAE,aAAA,QAAQ,CAAC,GAAG;QAAA,CAAC,CAAC,CAC7B,CAAC;IACJ,CAAC;IAQD,SAAS,EAAT,SAAU,MAAiB,EAAE,IAAY;QACvC,IAAM,GAAG,GAAG,mBAAA,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACzD,IAAM,GAAG,GAAG,mBAAA,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACzD,IAAM,IAAI,GAAG,mBAAA,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1D,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,cAAA,OAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE;YAChE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO;SACR;QACD,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,eAAe,EAAE;YAAC,IAAI;SAAC,CAAC,CAAC;QAC3D,cAAA,OAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC3C,cAAA,OAAQ,CAAC,cAAc,CAAC,GAAG,EAAE;YAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,aAAa,CAAC;YAAE,GAAG;YAAE,GAAG;SAAC,CAAC,CAAC;QAC/E,GAAG,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IASD,UAAU,EAAV,SAAW,MAAiB,EAAE,IAAY,EAAE,KAAsB;QAAtB,IAAA,UAAA,KAAA,GAAA;YAAA,QAAA,KAAsB;QAAA;QAChE,IAAM,IAAI,GAAG,MAAM,CAAC,IAAqB,CAAC;QAC1C,IAAI,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,EAAE;YAC1B,MAAM,IAAI,cAAA,OAAQ,CAAC,WAAW,EAAE,gDAAgD,EAAE,IAAI,CAAC,CAAC;SACzF;QACD,IAAM,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,EAAE,EAAE;YACP,MAAM,IAAI,cAAA,OAAQ,CAAC,kBAAkB,EAAE,+BAA+B,CAAC,CAAC;SACzE;QACD,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC5C,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtC,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YACpC,MAAM,IAAI,cAAA,OAAQ,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,EAAE,CAAC,CAAC;SACtE;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE;YAAC,IAAI;YAAE,KAAK;YAAE,MAAM;SAAC,CAAC,CAAC;IAChD,CAAC;IAQD,UAAU,EAAV,SAAW,MAAiB,EAAE,IAAY;QACxC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAqB,CAAC;QAC1C,IAAI,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,EAAE;YAC1B,MAAM,IAAI,cAAA,OAAQ,CAAC,WAAW,EAAE,gDAAgD,EAAE,IAAI,CAAC,CAAC;SACzF;QACD,IAAM,EAAE,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,EAAE,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YAC3B,MAAM,IAAI,cAAA,OAAQ,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,EAAE,CAAC,CAAC;SACtE;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAQD,UAAU,EAAV,SAAW,MAAiB,EAAE,IAAY;;QACxC,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE;YAClC,MAAM,IAAI,cAAA,OAAQ,CAAC,uBAAuB,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;SACrE;QACD,IAAM,OAAO,GAAG,CAAA,CAA4B,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,SAAA,EAAE;YAC7B,IAAI,EAAE,KAAK,kBAAkB,IAAI,EAAE,KAAK,UAAU,IAAI,EAAE,KAAK,oBAAoB,EAAE;gBACjF,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;aACjB;QACH,CAAC,CAAC,CAAC;QACH,IAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACtC,IAAM,IAAI,GAAG,eAAA,OAAS,CAAC,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;;YAC1D,IAAiB,IAAA,KAAA,SAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;gBAA/B,IAAM,EAAE,GAAA,GAAA,KAAA;gBACX,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;aACxB;;;;;;;;;;;;IACH,CAAC;IAKD,KAAK,EAAG,iBAAA,OAAW,CAAC,KAAK;IACzB,KAAK,EAAG,iBAAA,OAAW,CAAC,KAAK;IACzB,MAAM,EAAO,gBAAA,UAAU,CAAC,MAAM;IAC9B,SAAS,EAAI,gBAAA,UAAU,CAAC,SAAS;IACjC,WAAW,EAAE,gBAAA,UAAU,CAAC,WAAW;IACnC,iBAAiB,EAAE,uBAAA,OAAiB,CAAC,iBAAiB;CAEvD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 15272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15277, "column": 0}, "map": {"version":3,"file":"MathtoolsMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsMappings.ts"],"sourcesContent":["/*************************************************************\n *  Copyright (c) 2020-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Macro and environment mappings for the mathtools package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport ParseMethods from '../ParseMethods.js';\nimport {CommandMap, EnvironmentMap, DelimiterMap} from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\n\nimport {MathtoolsMethods} from './MathtoolsMethods.js';\n\n//\n//  Mathtools macros that are not implemented:\n//\n//    \\smashoperator[〈pos〉]{〈operator with limits〉}\n//    \\SwapAboveDisplaySkip\n//    \\noeqref{〈label,label,. . . 〉}\n//    \\intertext{〈text 〉}\n//    \\shortintertext{〈text 〉}\n//    \\reDeclarePairedDelimiterInnerWrapper{〈macro name〉}{〈star or nostarnonscaled or nostarscaled〉}{〈code〉}\n//    \\DeclareMathSizes{〈dimen〉}{〈dimen〉}{〈dimen〉}{〈dimen〉}\n//    \\newgathered{〈name〉}{〈pre_line〉}{〈post_line〉}{〈after〉}\n//    \\renewgathered{〈name〉}{〈pre_line〉}{〈post_line〉}{〈after〉}\n//\n\n/**\n * The macros for this package.\n */\nnew CommandMap('mathtools-macros', {\n\n  shoveleft:  ['HandleShove', TexConstant.Align.LEFT],    // override AMS version\n  shoveright: ['HandleShove', TexConstant.Align.RIGHT],   // override AMS version\n\n  xleftrightarrow:    ['xArrow', 0x2194, 10, 10],\n  xLeftarrow:         ['xArrow', 0x21D0, 12, 7],\n  xRightarrow:        ['xArrow', 0x21D2, 7, 12],\n  xLeftrightarrow:    ['xArrow', 0x21D4, 12, 12],\n  xhookleftarrow:     ['xArrow', 0x21A9, 10, 5],\n  xhookrightarrow:    ['xArrow', 0x21AA, 5, 10],\n  xmapsto:            ['xArrow', 0x21A6, 10, 10],\n  xrightharpoondown:  ['xArrow', 0x21C1, 5, 10],\n  xleftharpoondown:   ['xArrow', 0x21BD, 10, 5],\n  xrightleftharpoons: ['xArrow', 0x21CC, 10, 10],\n  xrightharpoonup:    ['xArrow', 0x21C0, 5, 10],\n  xleftharpoonup:     ['xArrow', 0x21BC, 10, 5],\n  xleftrightharpoons: ['xArrow', 0x21CB, 10, 10],\n\n  mathllap: ['MathLap', 'l', false],\n  mathrlap: ['MathLap', 'r', false],\n  mathclap: ['MathLap', 'c', false],\n  clap:     ['MtLap', 'c'],\n  textllap: ['MtLap', 'l'],\n  textrlap: ['MtLap', 'r'],\n  textclap: ['MtLap', 'c'],\n\n  cramped: 'Cramped',\n  crampedllap: ['MathLap', 'l', true],\n  crampedrlap: ['MathLap', 'r', true],\n  crampedclap: ['MathLap', 'c', true],\n  crampedsubstack: ['Macro', '\\\\begin{crampedsubarray}{c}#1\\\\end{crampedsubarray}', 1],\n\n  mathmbox:    'MathMBox',\n  mathmakebox: 'MathMakeBox',\n\n  overbracket:  'UnderOverBracket',\n  underbracket: 'UnderOverBracket',\n\n  refeq: 'HandleRef',\n\n  MoveEqLeft: ['Macro', '\\\\hspace{#1em}&\\\\hspace{-#1em}', 1, '2'],\n  Aboxed: 'Aboxed',\n\n  ArrowBetweenLines: 'ArrowBetweenLines',\n  vdotswithin: 'VDotsWithin',\n  shortvdotswithin: 'ShortVDotsWithin',\n  MTFlushSpaceAbove: 'FlushSpaceAbove',\n  MTFlushSpaceBelow: 'FlushSpaceBelow',\n\n  DeclarePairedDelimiter:     'DeclarePairedDelimiter',\n  DeclarePairedDelimiterX:    'DeclarePairedDelimiterX',\n  DeclarePairedDelimiterXPP:  'DeclarePairedDelimiterXPP',\n\n  //\n  //  Typos from initial release -- kept for backward compatibility for now\n  //\n  DeclarePairedDelimiters:    'DeclarePairedDelimiter',\n  DeclarePairedDelimitersX:   'DeclarePairedDelimiterX',\n  DeclarePairedDelimitersXPP: 'DeclarePairedDelimiterXPP',\n\n  centercolon: ['CenterColon', true, true],\n  ordinarycolon: ['CenterColon', false],\n  MTThinColon: ['CenterColon', true, true, true],\n\n  coloneqq:    ['Relation', ':=', '\\u2254'],\n  Coloneqq:    ['Relation', '::=', '\\u2A74'],\n  coloneq:     ['Relation', ':-'],\n  Coloneq:     ['Relation', '::-'],\n  eqqcolon:    ['Relation', '=:', '\\u2255'],\n  Eqqcolon:    ['Relation', '=::'],\n  eqcolon:     ['Relation', '-:', '\\u2239'],\n  Eqcolon:     ['Relation', '-::'],\n  colonapprox: ['Relation', ':\\\\approx'],\n  Colonapprox: ['Relation', '::\\\\approx'],\n  colonsim:    ['Relation', ':\\\\sim'],\n  Colonsim:    ['Relation', '::\\\\sim'],\n  dblcolon:    ['Relation', '::', '\\u2237'],\n\n  nuparrow:   ['NArrow', '\\u2191', '.06em'],\n  ndownarrow: ['NArrow', '\\u2193', '.25em'],\n  bigtimes:   ['Macro', '\\\\mathop{\\\\Large\\\\kern-.1em\\\\boldsymbol{\\\\times}\\\\kern-.1em}'],\n\n  splitfrac:  ['SplitFrac', false],\n  splitdfrac: ['SplitFrac', true],\n\n  xmathstrut: 'XMathStrut',\n\n  prescript: 'Prescript',\n\n  newtagform: ['NewTagForm', false],\n  renewtagform: ['NewTagForm', true],\n  usetagform: 'UseTagForm',\n\n  adjustlimits: [\n    'MacroWithTemplate',\n    '\\\\mathop{{#1}\\\\vphantom{{#3}}}_{{#2}\\\\vphantom{{#4}}}\\\\mathop{{#3}\\\\vphantom{{#1}}}_{{#4}\\\\vphantom{{#2}}}',\n    4, , '_', , '_'\n  ],\n\n  mathtoolsset: 'SetOptions'\n\n}, MathtoolsMethods);\n\n/**\n *  The environments for this package.\n */\nnew EnvironmentMap('mathtools-environments', ParseMethods.environment, {\n  dcases:  ['Array', null, '\\\\{', '', 'll', null, '.2em', 'D'],\n  rcases:  ['Array', null, '', '\\\\}', 'll', null, '.2em'],\n  drcases: ['Array', null, '', '\\\\}', 'll', null, '.2em', 'D'],\n  'dcases*':  ['Cases', null, '{', '', 'D'],\n  'rcases*':  ['Cases', null, '', '}'],\n  'drcases*': ['Cases', null, '', '}', 'D'],\n  'cases*':   ['Cases', null, '{', ''],\n\n  'matrix*':  ['MtMatrix', null, null, null],\n  'pmatrix*': ['MtMatrix', null, '(', ')'],\n  'bmatrix*': ['MtMatrix', null, '[', ']'],\n  'Bmatrix*': ['MtMatrix', null, '\\\\{', '\\\\}'],\n  'vmatrix*': ['MtMatrix', null, '\\\\vert', '\\\\vert'],\n  'Vmatrix*': ['MtMatrix', null, '\\\\Vert', '\\\\Vert'],\n\n  'smallmatrix*':  ['MtSmallMatrix', null, null, null],\n  psmallmatrix:    ['MtSmallMatrix', null, '(', ')', 'c'],\n  'psmallmatrix*': ['MtSmallMatrix', null, '(', ')'],\n  bsmallmatrix:    ['MtSmallMatrix', null, '[', ']', 'c'],\n  'bsmallmatrix*': ['MtSmallMatrix', null, '[', ']'],\n  Bsmallmatrix:    ['MtSmallMatrix', null, '\\\\{', '\\\\}', 'c'],\n  'Bsmallmatrix*': ['MtSmallMatrix', null, '\\\\{', '\\\\}'],\n  vsmallmatrix:    ['MtSmallMatrix', null, '\\\\vert', '\\\\vert', 'c'],\n  'vsmallmatrix*': ['MtSmallMatrix', null, '\\\\vert', '\\\\vert'],\n  Vsmallmatrix:    ['MtSmallMatrix', null, '\\\\Vert', '\\\\Vert', 'c'],\n  'Vsmallmatrix*': ['MtSmallMatrix', null, '\\\\Vert', '\\\\Vert'],\n\n  crampedsubarray: ['Array', null, null, null, null, '0em', '0.1em', 'S\\'', 1],\n\n  multlined: 'MtMultlined',\n\n  spreadlines: ['SpreadLines', true],\n\n  lgathered: ['AmsEqnArray', null, null, null, 'l', null, '.5em', 'D'],\n  rgathered: ['AmsEqnArray', null, null, null, 'r', null, '.5em', 'D'],\n\n}, MathtoolsMethods);\n\n/**\n * The delimiters for this package.\n */\nnew DelimiterMap('mathtools-delimiters', ParseMethods.delimiter, {\n  '\\\\lparen': '(',\n  '\\\\rparen': ')'\n});\n\n/**\n * The special characters for this package.\n */\nnew CommandMap('mathtools-characters', {\n  ':' : ['CenterColon', true]\n}, MathtoolsMethods);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15778, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15783, "column": 0}, "map": {"version":3,"file":"MathtoolsTags.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsTags.ts"],"sourcesContent":["/*************************************************************\n *  Copyright (c) 2021-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Tags implementation for the mathtools package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport TexError from '../TexError.js';\nimport {ParserConfiguration} from '../Configuration.js';\nimport {TeX} from '../../tex.js';\nimport {AbstractTags, TagsFactory} from '../Tags.js';\n\n\n/**\n * The type for the Mathtools tags (including their data).\n */\nexport type MathtoolsTags = AbstractTags & {\n  mtFormats: Map<string, [string, string, string]>;  // name -> [left, right, format]\n  mtCurrent: [string, string, string];               // [left, right, format]\n};\n\n/**\n * The ID number for the current tag class\n */\nlet tagID = 0;\n\n/**\n * Creates and registers a subclass of the currently configured tag class\n * that handles the formats created by the \\newtagform macro.\n */\nexport function MathtoolsTagFormat(config: ParserConfiguration, jax: TeX<any, any, any>) {\n  /**\n   * If the tag format is being added by one of the other extensions,\n   *   as is done for the 'ams' tags, make sure it is defined so we can create it.\n   */\n  const tags = jax.parseOptions.options.tags;\n  if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {\n    TagsFactory.add(tags, config.tags[tags]);\n  }\n\n  /**\n   * The original tag class to be extended (none, ams, or all)\n   */\n  const TagClass = TagsFactory.create(jax.parseOptions.options.tags).constructor as typeof AbstractTags;\n\n  /**\n   * A Tags object that uses \\newtagform to define the formatting\n   */\n  class TagFormat extends TagClass {\n\n    /**\n     * The defined tag formats\n     */\n    public mtFormats: Map<string, [string, string, string]> = new Map();\n\n    /**\n     * The format currently in use ([left, right, format]), or null for using the default\n     */\n    public mtCurrent: [string, string, string] = null;\n\n    /**\n     * @override\n     * @constructor\n     */\n    constructor() {\n      super();\n      const forms = jax.parseOptions.options.mathtools.tagforms;\n      for (const form of Object.keys(forms)) {\n        if (!Array.isArray(forms[form]) || forms[form].length !== 3) {\n          throw new TexError('InvalidTagFormDef',\n                             'The tag form definition for \"%1\" should be an array fo three strings', form);\n        }\n        this.mtFormats.set(form, forms[form]);\n      }\n    }\n\n    /**\n     * @override\n     */\n    public formatTag(tag: string) {\n      if (this.mtCurrent) {\n        const [left, right, format] = this.mtCurrent;\n        return (format ? `${left}${format}{${tag}}${right}` : `${left}${tag}${right}`);\n      }\n      return super.formatTag(tag);\n    }\n  }\n\n  //\n  //  Get a unique name for the tag class (since it is tied to the input jax)\n  //  Note:  These never get freed, so they will accumulate if you create many\n  //  TeX input jax instances with this extension.\n  //\n  tagID++;\n  const tagName = 'MathtoolsTags-' + tagID;\n  //\n  // Register the tag class\n  //\n  TagsFactory.add(tagName, TagFormat);\n  jax.parseOptions.options.tags = tagName;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15904, "column": 0}, "map": {"version":3,"file":"MathtoolsItems.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsItems.ts"],"sourcesContent":["/*************************************************************\n *  Copyright (c) 2020-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Implementation of items for the mathtools package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {MultlineItem} from '../ams/AmsItems.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {TexConstant} from '../TexConstants.js';\n\n\n/**\n * The StackItem for the multlined environment\n */\nexport class MultlinedItem extends MultlineItem {\n\n  /**\n   * @override\n   */\n  get kind() {\n    return 'multlined';\n  }\n\n\n  /**\n   * @override\n   */\n  public EndTable() {\n    if (this.Size() || this.row.length) {\n      this.EndEntry();\n      this.EndRow();\n    }\n    if (this.table.length > 1) {\n      const options = this.factory.configuration.options.mathtools;\n      const gap = options.multlinegap;\n      const firstskip = options['firstline-afterskip'] || gap;\n      const lastskip = options['lastline-preskip'] || gap;\n      const first = NodeUtil.getChildren(this.table[0])[0];\n      if (NodeUtil.getAttribute(first, 'columnalign') !== TexConstant.Align.RIGHT) {\n        first.appendChild(this.create('node', 'mspace', [], {width: firstskip}));\n      }\n      const last = NodeUtil.getChildren(this.table[this.table.length - 1])[0];\n      if (NodeUtil.getAttribute(last, 'columnalign') !== TexConstant.Align.LEFT) {\n        const top = NodeUtil.getChildren(last)[0];\n        top.childNodes.unshift(null);\n        const space = this.create('node', 'mspace', [], {width: lastskip});\n        NodeUtil.setChild(top, 0, space);\n      }\n    }\n    super.EndTable.call(this);\n  }\n\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAA,8CAAgD;AAChD,IAAA,gBAAA,2CAAsC;AACtC,IAAA,kDAA+C;AAM/C,IAAA,gBAAA,SAAA,MAAA;IAAmC,UAAA,eAAA,QAAY;IAA/C,SAAA;;IAsCA,CAAC;IAjCC,OAAA,cAAA,CAAI,cAAA,SAAA,EAAA,MAAI,EAAA;aAAR;YACE,OAAO,WAAW,CAAC;QACrB,CAAC;;;OAAA;IAMM,cAAA,SAAA,CAAA,QAAQ,GAAf;QACE,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;YAClC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC;YAC7D,IAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC;YAChC,IAAM,SAAS,GAAG,OAAO,CAAC,qBAAqB,CAAC,IAAI,GAAG,CAAC;YACxD,IAAM,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC,IAAI,GAAG,CAAC;YACpD,IAAM,KAAK,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,cAAA,OAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,KAAK,kBAAA,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE;gBAC3E,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;oBAAC,KAAK,EAAE,SAAS;gBAAA,CAAC,CAAC,CAAC,CAAC;aAC1E;YACD,IAAM,IAAI,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxE,IAAI,cAAA,OAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,kBAAA,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE;gBACzE,IAAM,KAAG,GAAG,cAAA,OAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,KAAG,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;oBAAC,KAAK,EAAE,QAAQ;gBAAA,CAAC,CAAC,CAAC;gBACnE,cAAA,OAAQ,CAAC,QAAQ,CAAC,KAAG,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;aAClC;SACF;QACD,OAAA,SAAA,CAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAEH,OAAA,aAAC;AAAD,CAAC,AAtCD,CAAmC,cAAA,YAAY,GAsC9C;AAtCY,QAAA,aAAA,GAAA,cAAa","ignoreList":[0]}},
    {"offset": {"line": 15980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15985, "column": 0}, "map": {"version":3,"file":"MathtoolsConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/mathtools/MathtoolsConfiguration.ts"],"sourcesContent":["/*************************************************************\n *  Copyright (c) 2020-2022 MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview    Configuration file for the mathtools package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {expandable} from '../../../util/Options.js';\nimport {ParserConfiguration} from '../Configuration.js';\nimport {TeX} from '../../tex.js';\nimport ParseOptions from '../ParseOptions.js';\n\nimport './MathtoolsMappings.js';\nimport {MathtoolsUtil} from './MathtoolsUtil.js';\nimport {MathtoolsTagFormat} from './MathtoolsTags.js';\nimport {MultlinedItem} from './MathtoolsItems.js';\n\n/**\n * The name of the paried-delimiters command map.\n */\nexport const PAIREDDELIMS = 'mathtools-paired-delims';\n\n/**\n * Create the paired-delimiters command map, and link it into the configuration.\n * @param {ParserConfiguration} config   The current configuration.\n */\nfunction initMathtools(config: ParserConfiguration) {\n  new CommandMap(PAIREDDELIMS, {}, {});\n  config.append(Configuration.local({handler: {macro: [PAIREDDELIMS]}, priority: -5}));\n}\n\n/**\n * Add any pre-defined paired delimiters, and subclass the configured tag format.\n * @param {ParserConfiguration} config   The current configuration.\n * @param {TeX} jac                      The TeX input jax\n */\nfunction configMathtools(config: ParserConfiguration, jax: TeX<any, any, any>) {\n  const parser = jax.parseOptions;\n  const pairedDelims = parser.options.mathtools.pairedDelimiters;\n  for (const cs of Object.keys(pairedDelims)) {\n    MathtoolsUtil.addPairedDelims(parser, cs, pairedDelims[cs]);\n  }\n  MathtoolsTagFormat(config, jax);\n}\n\n/**\n * A filter to fix up mmultiscripts elements.\n * @param {ParseOptions} data   The parse options.\n */\nexport function fixPrescripts({data}: {data: ParseOptions}) {\n  for (const node of data.getList('mmultiscripts')) {\n    if (!node.getProperty('fixPrescript')) continue;\n    const childNodes = NodeUtil.getChildren(node);\n    let n = 0;\n    for (const i of [1, 2]) {\n      if (!childNodes[i]) {\n        NodeUtil.setChild(node, i, data.nodeFactory.create('node', 'none'));\n        n++;\n      }\n    }\n    for (const i of [4, 5]) {\n      if (NodeUtil.isType(childNodes[i], 'mrow') && NodeUtil.getChildren(childNodes[i]).length === 0) {\n        NodeUtil.setChild(node, i, data.nodeFactory.create('node', 'none'));\n      }\n    }\n    if (n === 2) {\n      childNodes.splice(1, 2);\n    }\n  }\n}\n\n/**\n * The configuration for the mathtools package\n */\nexport const MathtoolsConfiguration = Configuration.create(\n  'mathtools', {\n    handler: {\n      macro: ['mathtools-macros', 'mathtools-delimiters'],\n      environment: ['mathtools-environments'],\n      delimiter: ['mathtools-delimiters'],\n      character: ['mathtools-characters']\n    },\n    items: {\n      [MultlinedItem.prototype.kind]: MultlinedItem\n    },\n    init: initMathtools,\n    config: configMathtools,\n    postprocessors: [[fixPrescripts, -6]],\n    options: {\n      mathtools: {\n        'multlinegap': '1em',                   // horizontal space for multlined environments\n        'multlined-pos': 'c',                   // default alignment for multlined environments\n        'firstline-afterskip': '',              // space for first line of multlined (overrides multlinegap)\n        'lastline-preskip': '',                 // space for last line of multlined (overrides multlinegap)\n        'smallmatrix-align': 'c',               // default alignment for smallmatrix environments\n        'shortvdotsadjustabove': '.2em',        // space to remove above \\shortvdots\n        'shortvdotsadjustbelow': '.2em',        // space to remove below \\shortvdots\n        'centercolon': false,                   // true to have colon automatically centered\n        'centercolon-offset': '.04em',          // vertical adjustment for centered colons\n        'thincolon-dx': '-.04em',               // horizontal adjustment for thin colons (e.g., \\coloneqq)\n        'thincolon-dw': '-.08em',               // width adjustment for thin colons\n        'use-unicode': false,                   // true to use unicode characters rather than multi-character\n                                                //   version for \\coloneqq, etc., when possible\n        'prescript-sub-format': '',             // format for \\prescript subscript\n        'prescript-sup-format': '',             // format for \\prescript superscript\n        'prescript-arg-format': '',             // format for \\prescript base\n        'allow-mathtoolsset': true,             // true to allow \\mathtoolsset to change settings\n        pairedDelimiters: expandable({}),       // predefined paired delimiters\n                                                //     name: [left, right, body, argcount, pre, post]\n        tagforms: expandable({}),               // tag form definitions\n                                                //     name: [left, right, format]\n       }\n    }\n  }\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16169, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16174, "column": 0}, "map": {"version":3,"file":"MhchemConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/mhchem/MhchemConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the mhchem package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\nimport TexParser from '../TexParser.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport {AmsMethods} from '../ams/AmsMethods.js';\nimport {mhchemParser} from 'mhchemparser/dist/mhchemParser.js';\n\n// Namespace\nlet MhchemMethods: Record<string, ParseMethod> = {};\n\nMhchemMethods.Macro = BaseMethods.Macro;\nMhchemMethods.xArrow = AmsMethods.xArrow;\n\n/**\n * @param{TeXParser} parser   The parser for this expression\n * @param{string} name        The macro name being called\n * @param{string} machine     The name of the fininte-state machine to use\n */\nMhchemMethods.Machine = function(parser: TexParser, name: string, machine: 'tex' | 'ce' | 'pu') {\n  let arg = parser.GetArgument(name);\n  let tex;\n  try {\n    tex = mhchemParser.toTex(arg, machine);\n  } catch (err) {\n    throw new TexError(err[0], err[1]);\n  }\n  parser.string = tex + parser.string.substr(parser.i);\n  parser.i = 0;\n};\n\nnew CommandMap(\n  'mhchem', {\n    ce: ['Machine', 'ce'],\n    pu: ['Machine', 'pu'],\n    longrightleftharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'\n    ],\n    longRightleftharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{\\\\leftharpoondown}}'\n    ],\n    longLeftrightharpoons: [\n      'Macro',\n      '\\\\stackrel{\\\\textstyle\\\\vphantom{{-}}{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'\n    ],\n    longleftrightarrows: [\n      'Macro',\n      '\\\\stackrel{\\\\longrightarrow}{\\\\smash{\\\\longleftarrow}\\\\Rule{0px}{.25em}{0px}}'\n    ],\n    //\n    //  Needed for \\bond for the ~ forms\n    //\n    tripledash: [\n      'Macro',\n      '\\\\vphantom{-}\\\\raise2mu{\\\\kern2mu\\\\tiny\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern2mu}'\n    ],\n    xleftrightarrow:    ['xArrow', 0x2194, 6, 6],\n    xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],   // FIXME:  doesn't stretch in HTML-CSS output\n    xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],   // FIXME:  how should this be handled?\n    xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]\n  },\n  MhchemMethods\n);\n\n\nexport const MhchemConfiguration = Configuration.create(\n  'mhchem', {handler: {macro: ['mhchem']}}\n);\n"],"names":[],"mappings":";;;;;;;;;;AAwBA,IAAA,oDAAkD;AAClD,IAAA,4CAA2C;AAE3C,IAAA,gBAAA,2CAAsC;AAEtC,IAAA,mBAAA,mDAAiD;AACjD,IAAA,kDAAgD;AAChD,IAAA,iEAA+D;AAG/D,IAAI,aAAa,GAAgC,CAAA,CAAE,CAAC;AAEpD,aAAa,CAAC,KAAK,GAAG,iBAAA,OAAW,CAAC,KAAK,CAAC;AACxC,aAAa,CAAC,MAAM,GAAG,gBAAA,UAAU,CAAC,MAAM,CAAC;AAOzC,aAAa,CAAC,OAAO,GAAG,SAAS,MAAiB,EAAE,IAAY,EAAE,OAA4B;IAC5F,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,GAAG,CAAC;IACR,IAAI;QACF,GAAG,GAAG,kBAAA,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;KACxC,CAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAI,cAAA,OAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACpC;IACD,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrD,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,CAAC,CAAC;AAEF,IAAI,eAAA,UAAU,CACZ,QAAQ,EAAE;IACR,EAAE,EAAE;QAAC,SAAS;QAAE,IAAI;KAAC;IACrB,EAAE,EAAE;QAAC,SAAS;QAAE,IAAI;KAAC;IACrB,qBAAqB,EAAE;QACrB,OAAO;QACP,2FAA2F;KAC5F;IACD,qBAAqB,EAAE;QACrB,OAAO;QACP,gFAAgF;KACjF;IACD,qBAAqB,EAAE;QACrB,OAAO;QACP,iGAAiG;KAClG;IACD,mBAAmB,EAAE;QACnB,OAAO;QACP,+EAA+E;KAChF;IAID,UAAU,EAAE;QACV,OAAO;QACP,gGAAgG;KACjG;IACD,eAAe,EAAK;QAAC,QAAQ;QAAE,MAAM;QAAE,CAAC;QAAE,CAAC;KAAC;IAC5C,kBAAkB,EAAE;QAAC,QAAQ;QAAE,MAAM;QAAE,CAAC;QAAE,CAAC;KAAC;IAC5C,kBAAkB,EAAE;QAAC,QAAQ;QAAE,MAAM;QAAE,CAAC;QAAE,CAAC;KAAC;IAC5C,kBAAkB,EAAE;QAAC,QAAQ;QAAE,MAAM;QAAE,CAAC;QAAE,CAAC;KAAC;CAC7C,EACD,aAAa,CACd,CAAC;AAGW,QAAA,mBAAmB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACrD,QAAQ,EAAE;IAAC,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,QAAQ;SAAC;IAAA,CAAC;AAAA,CAAC,CACzC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16270, "column": 0}, "map": {"version":3,"file":"NoErrorsConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/noerrors/NoErrorsConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the NoErrors package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {NodeFactory} from '../NodeFactory.js';\n\n/**\n * Generates an error node containing the erroneous expression.\n * @param {TexParser} parser The node factory.\n * @param {string} message The error message (which is ignored).\n * @param {string} id The error id (which is ignored).\n * @param {string} expr The original LaTeX expression.\n */\nfunction noErrors(factory: NodeFactory,\n                  message: string, _id: string, expr: string) {\n  let mtext = factory.create('token', 'mtext', {}, expr.replace(/\\n/g, ' '));\n  let error = factory.create('node', 'merror', [mtext], {'data-mjx-error': message, title: message});\n  return error;\n}\n\nexport const NoErrorsConfiguration = Configuration.create(\n  'noerrors', {nodes: {'error': noErrors}}\n);\n\n\n"],"names":[],"mappings":";;;;;AAwBA,IAAA,oDAAkD;AAUlD,SAAS,QAAQ,CAAC,OAAoB,EACpB,OAAe,EAAE,GAAW,EAAE,IAAY;IAC1D,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3E,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE;QAAC,KAAK;KAAC,EAAE;QAAC,gBAAgB,EAAE,OAAO;QAAE,KAAK,EAAE,OAAO;IAAA,CAAC,CAAC,CAAC;IACnG,OAAO,KAAK,CAAC;AACf,CAAC;AAEY,QAAA,qBAAqB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACvD,UAAU,EAAE;IAAC,KAAK,EAAE;QAAC,OAAO,EAAE,QAAQ;IAAA,CAAC;AAAA,CAAC,CACzC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16296, "column": 0}, "map": {"version":3,"file":"NoUndefinedConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/noundefined/NoUndefinedConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the AMS package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport TexParser from '../TexParser.js';\n\n/**\n * Generates a red version of the undefined control sequence, instead of\n * throwing an error.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nfunction noUndefined(parser: TexParser, name: string) {\n  const textNode = parser.create('text', '\\\\' + name);\n  const options = parser.options.noundefined || {};\n  const def = {} as {[name: string]: string};\n  for (const id of ['color', 'background', 'size']) {\n    if (options[id]) {\n      def['math' + id] = options[id];\n    }\n  }\n  parser.Push(parser.create('node', 'mtext', [], def, textNode));\n}\n\nexport const NoUndefinedConfiguration = Configuration.create(\n  'noundefined', {\n    fallback: {macro: noUndefined},\n    options: {\n      noundefined: {\n        color: 'red',\n        background: '',\n        size: ''\n      }\n    },\n    priority: 3\n  }\n);\n\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAwBA,IAAA,oDAAkD;AASlD,SAAS,WAAW,CAAC,MAAiB,EAAE,IAAY;;IAClD,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;IACpD,IAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,IAAI,CAAA,CAAE,CAAC;IACjD,IAAM,GAAG,GAAG,CAAA,CAA8B,CAAC;;QAC3C,IAAiB,IAAA,KAAA,SAAA;YAAC,OAAO;YAAE,YAAY;YAAE,MAAM;SAAC,CAAA,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,EAAA,KAAA,GAAA,IAAA,GAAE;YAA7C,IAAM,EAAE,GAAA,GAAA,KAAA;YACX,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE;gBACf,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;aAChC;SACF;;;;;;;;;;;;IACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;AACjE,CAAC;AAEY,QAAA,wBAAwB,GAAG,mBAAA,aAAa,CAAC,MAAM,CAC1D,aAAa,EAAE;IACb,QAAQ,EAAE;QAAC,KAAK,EAAE,WAAW;IAAA,CAAC;IAC9B,OAAO,EAAE;QACP,WAAW,EAAE;YACX,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE,EAAE;YACd,IAAI,EAAE,EAAE;SACT;KACF;IACD,QAAQ,EAAE,CAAC;CACZ,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 16358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16363, "column": 0}, "map": {"version":3,"file":"PhysicsItems.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/physics/PhysicsItems.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2009-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Stack items for the physics package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {CheckType, BaseItem, StackItem} from '../StackItem.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport TexParser from '../TexParser.js';\nimport {AbstractMmlTokenNode} from '../../../core/MmlTree/MmlNode.js';\n\nexport class AutoOpen extends BaseItem {\n\n  /**\n   * @override\n   */\n  protected static errors = Object.assign(Object.create(BaseItem.errors), {\n    'stop': ['ExtraOrMissingDelims', 'Extra open or missing close delimiter']\n  });\n\n  /**\n   * The number of unpaired open delimiters that need to be matched before\n   *   a close delimiter will close this item. (#2831)\n   */\n  protected openCount: number = 0;\n\n  /**\n   * @override\n   */\n  public get kind() {\n    return 'auto open';\n  }\n\n\n  /**\n   * @override\n   */\n  get isOpen() {\n    return true;\n  }\n\n\n  /**\n   * @override\n   */\n  public toMml() {\n    // Smash and right/left\n    let parser = this.factory.configuration.parser;\n    let right = this.getProperty('right') as string;\n    if (this.getProperty('smash')) {\n      let mml = super.toMml();\n      const smash = parser.create('node', 'mpadded', [mml],\n                                  {height: 0, depth: 0});\n      this.Clear();\n      this.Push(parser.create('node', 'TeXAtom', [smash]));\n    }\n    if (right) {\n      this.Push(new TexParser(right, parser.stack.env,\n                              parser.configuration).mml());\n    }\n    let mml = ParseUtil.fenced(\n      this.factory.configuration,\n      this.getProperty('open') as string,\n      super.toMml(),\n      this.getProperty('close') as string,\n      this.getProperty('big') as string\n    );\n    //\n    //  Remove fence markers that would cause it to be TeX class INNER,\n    //  so it is treated as a regular mrow when setting the tex class (#2760)\n    //\n    NodeUtil.removeProperties(mml, 'open', 'close', 'texClass');\n    return mml;\n  }\n\n  /**\n   * @override\n   */\n  public checkItem(item: StackItem): CheckType {\n    //\n    //  Check for nested open delimiters (#2831)\n    //\n    if (item.isKind('mml') && item.Size() === 1) {\n      const mml = item.toMml();\n      if (mml.isKind('mo') && (mml as AbstractMmlTokenNode).getText() === this.getProperty('open')) {\n        this.openCount++;\n      }\n    }\n    let close = item.getProperty('autoclose');\n    if (close && close === this.getProperty('close') && !this.openCount--) {\n      if (this.getProperty('ignore')) {\n        this.Clear();\n        return [[], true];\n      }\n      return [[this.toMml()], true];\n    }\n    return super.checkItem(item);\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16480, "column": 0}, "map": {"version":3,"file":"PhysicsMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/physics/PhysicsMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Methods for TeX parsing of the physics package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {ParseMethod} from '../Types.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {TEXCLASS, MmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {NodeFactory} from '../NodeFactory.js';\nimport {Macro} from '../Symbol.js';\n\n\nlet PhysicsMethods: Record<string, ParseMethod> = {};\n\n\n/***********************\n * Physics package section 2.1\n * Automatic bracing\n */\n\n/**\n * Pairs open and closed fences.\n * @type {{[fence: string]: string}}\n */\nconst pairs: {[fence: string]: string} = {\n  '(': ')',\n  '[': ']',\n  '{': '}',\n  '|': '|',\n};\n\n\n/**\n * Regular expression for matching big fence arguments.\n * @type {RegExp}\n */\nconst biggs: RegExp = /^(b|B)i(g{1,2})$/;\n\n\n/**\n * Automatic sizing of fences, e.g., \\\\qty(x). Some with content.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string=} open Opening fence.\n * @param {string=} close Closing fence.\n * @param {boolean=} arg Fences contain an argument.\n * @param {string=} named Name operator.\n * @param {string=} variant A font for the mathvariant.\n */\nPhysicsMethods.Quantity = function(parser: TexParser, name: string,\n                                   open: string = '(', close: string = ')',\n                                   arg: boolean = false, named: string = '',\n                                   variant: string = '') {\n  let star = arg ? parser.GetStar() : false;\n  let next = parser.GetNext();\n  let position = parser.i;\n  let big = null;\n  if (next === '\\\\') {\n    parser.i++;\n    big = parser.GetCS();\n    if (!big.match(biggs)) {\n      // empty\n      let empty = parser.create('node', 'mrow');\n      parser.Push(ParseUtil.fenced(parser.configuration, open, empty, close));\n      parser.i = position;\n      return;\n    }\n    next = parser.GetNext();\n  }\n  let right = pairs[next];\n  if (arg && next !== '{') {\n    throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n  }\n  if (!right) {\n    let empty = parser.create('node', 'mrow');\n    parser.Push(ParseUtil.fenced(parser.configuration, open, empty, close));\n    parser.i = position;\n    return;\n  }\n  // Get the fences\n  if (named) {\n    const mml = parser.create('token', 'mi', {texClass: TEXCLASS.OP}, named);\n    if (variant) {\n      NodeUtil.setAttribute(mml, 'mathvariant', variant);\n    }\n    parser.Push(parser.itemFactory.create('fn', mml));\n  }\n  if (next === '{') {\n    let argument = parser.GetArgument(name);\n    next = arg ? open : '\\\\{';\n    right = arg ? close : '\\\\}';\n    // TODO: Make all these fenced expressions.\n    argument = star ? next + ' ' + argument + ' ' + right :\n      (big ?\n       '\\\\' + big + 'l' + next + ' ' + argument + ' ' + '\\\\' + big + 'r' + right :\n       '\\\\left' + next + ' ' + argument + ' ' + '\\\\right' + right);\n    parser.Push(new TexParser(argument, parser.stack.env,\n                              parser.configuration).mml());\n    return;\n  }\n  if (arg) {\n    next = open;\n    right = close;\n  }\n  parser.i++;\n  parser.Push(parser.itemFactory.create('auto open')\n              .setProperties({open: next, close: right, big: big}));\n};\n\n\n/**\n * The evaluate macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Eval = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let next = parser.GetNext();\n  if (next === '{') {\n    let arg = parser.GetArgument(name);\n    let replace = '\\\\left. ' +\n      (star ? '\\\\smash{' + arg + '}' : arg) +\n      ' ' + '\\\\vphantom{\\\\int}\\\\right|';\n    parser.string = parser.string.slice(0, parser.i) + replace +\n      parser.string.slice(parser.i);\n    return;\n  }\n  if (next === '(' || next === '[') {\n    parser.i++;\n    parser.Push(parser.itemFactory.create('auto open')\n                .setProperties(\n                  {open: next, close: '|',\n                   smash: star, right: '\\\\vphantom{\\\\int}'}));\n    return;\n  }\n  throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n};\n\n\n/**\n * The anti/commutator and poisson macros.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string=} open Opening fence.\n * @param {string=} close Closing fence.\n */\nPhysicsMethods.Commutator = function(parser: TexParser, name: string,\n                                     open: string = '[', close: string = ']') {\n  let star = parser.GetStar();\n  let next = parser.GetNext();\n  let big = null;\n  if (next === '\\\\') {\n    parser.i++;\n    big = parser.GetCS();\n    if (!big.match(biggs)) {\n      // Actually a commutator error arg1 error.\n      throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n    }\n    next = parser.GetNext();\n  }\n  if (next !== '{') {\n    throw new TexError('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n  }\n  let arg1 = parser.GetArgument(name);\n  let arg2 = parser.GetArgument(name);\n  let argument = arg1 + ',' + arg2;\n  argument = star ? open + ' ' + argument + ' ' + close :\n    (big ?\n     '\\\\' + big + 'l' + open + ' ' + argument + ' ' + '\\\\' + big + 'r' + close :\n     '\\\\left' + open + ' ' + argument + ' ' + '\\\\right' + close);\n  parser.Push(new TexParser(argument, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/***********************\n * Physics package section 2.2\n * Vector notation\n */\n\nlet latinCap: [number, number] = [0x41, 0x5A];\nlet latinSmall: [number, number] = [0x61, 0x7A];\nlet greekCap: [number, number] = [0x391, 0x3A9];\nlet greekSmall: [number, number] = [0x3B1, 0x3C9];\nlet digits: [number, number] = [0x30, 0x39];\n\n/**\n * Checks if a value is in a given numerical interval.\n * @param {number} value The value.\n * @param {[number, number]} range The closed interval.\n */\nfunction inRange(value: number, range: [number, number]) {\n  return (value >= range[0] && value <= range[1]);\n}\n\n\n/**\n * Method to create a token for the vector commands. It creates a vector token\n * with the specific vector font (e.g., bold) in case it is a Latin or capital\n * Greek character, accent or small Greek character if command is starred. This\n * is a replacement for the original token method in the node factory.\n * @param {NodeFactory} factory The current node factory.\n * @param {string} kind The type of token to create.\n * @param {any} def The attributes for the node.\n * @param {string} text The text contained in the token node.\n * @return {MmlNode} The newly create token node.\n */\nfunction createVectorToken(factory: NodeFactory, kind: string,\n                           def: any, text: string): MmlNode  {\n  let parser = factory.configuration.parser;\n  let token = NodeFactory.createToken(factory, kind, def, text);\n  let code: number = text.codePointAt(0);\n  if (text.length === 1 && !parser.stack.env.font &&\n      parser.stack.env.vectorFont &&\n      (inRange(code, latinCap) || inRange(code, latinSmall) ||\n       inRange(code, greekCap) || inRange(code, digits) ||\n       (inRange(code, greekSmall) && parser.stack.env.vectorStar) ||\n       NodeUtil.getAttribute(token, 'accent'))) {\n    NodeUtil.setAttribute(token, 'mathvariant', parser.stack.env.vectorFont);\n  }\n  return token;\n}\n\n\n/**\n * Bold vector notation.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.VectorBold = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let arg = parser.GetArgument(name);\n  let oldToken = parser.configuration.nodeFactory.get('token');\n  let oldFont = parser.stack.env.font;\n  delete parser.stack.env.font;\n  parser.configuration.nodeFactory.set('token', createVectorToken);\n  parser.stack.env.vectorFont = star ? 'bold-italic' : 'bold';\n  parser.stack.env.vectorStar = star;\n  let node = new TexParser(arg, parser.stack.env, parser.configuration).mml();\n  if (oldFont) {\n    parser.stack.env.font = oldFont;\n  }\n  delete parser.stack.env.vectorFont;\n  delete parser.stack.env.vectorStar;\n  parser.configuration.nodeFactory.set('token', oldToken);\n  parser.Push(node);\n};\n\n\n/**\n * Macros that can have an optional star which is propagated.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} argcount Number of arguments.\n * @param {string[]} ...parts List of parts from which to assemble the macro.\n *     If the original command is starred, a star will be injected at each part.\n */\nPhysicsMethods.StarMacro = function(parser: TexParser, name: string,\n                                argcount: number, ...parts: string[]) {\n  let star = parser.GetStar();\n  const args: string[] = [];\n  if (argcount) {\n    for (let i = args.length; i < argcount; i++) {\n      args.push(parser.GetArgument(name));\n    }\n  }\n  let macro = parts.join(star ? '*' : '');\n  macro = ParseUtil.substituteArgs(parser, args, macro);\n  parser.string = ParseUtil.addArgs(parser, macro, parser.string.slice(parser.i));\n  parser.i = 0;\n  ParseUtil.checkMaxMacros(parser);\n};\n\n\n/**\n * Computes the application of a vector operation.\n * @param {TexParser} parser The calling parser.\n * @param {string} kind The type of stack item to parse the operator into.\n * @param {string} name The macro name.\n * @param {string} operator The operator expression.\n * @param {string[]} ...fences List of opening fences that should be\n *     automatically sized and paired to its corresponding closing fence.\n */\nlet vectorApplication = function(\n  parser: TexParser, kind: string, name: string, operator: string,\n  fences: string[]) {\n  let op = new TexParser(operator, parser.stack.env,\n                         parser.configuration).mml();\n  parser.Push(parser.itemFactory.create(kind, op));\n  let left = parser.GetNext();\n  let right = pairs[left];\n  if (!right) {\n    return;\n  }\n  let lfence = '', rfence = '', arg = '';\n  let enlarge = fences.indexOf(left) !== -1;\n  if (left === '{') {\n    arg = parser.GetArgument(name);\n    lfence = enlarge ? '\\\\left\\\\{' : '';\n    rfence = enlarge ? '\\\\right\\\\}' : '';\n    let macro = lfence + ' ' + arg + ' ' + rfence;\n    parser.string = macro + parser.string.slice(parser.i);\n    parser.i = 0;\n    return;\n  }\n  if (!enlarge) {\n    return;\n  }\n  parser.i++;\n  parser.Push(parser.itemFactory.create('auto open')\n              .setProperties({open: left, close: right}));\n};\n\n\n/**\n * An operator that needs to be parsed (e.g., a Greek letter or nabla) and\n * applied to a possibly fenced expression. By default automatic fences are\n * parentheses and brakets, with braces being ignored.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} operator The operator expression.\n * @param {string[]} ...fences List of opening fences that should be\n *     automatically sized and paired to its corresponding closing fence.\n */\nPhysicsMethods.OperatorApplication = function(\n  parser: TexParser, name: string, operator: string,\n  ...fences: string[]) {\n  vectorApplication(parser, 'fn', name, operator, fences);\n};\n\n/**\n * A vector operator that needs to be parsed (e.g., a Greek letter or nabla with\n * a crossproduct) and connected to a possibly fenced expression. By default\n * automatic fences are parentheses and brakets.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} operator The operator expression.\n * @param {string[]} ...fences List of opening fences that should be\n *     automatically sized and paired to its corresponding closing fence.\n */\nPhysicsMethods.VectorOperator = function(\n  parser: TexParser, name: string, operator: string,\n  ...fences: string[]) {\n  vectorApplication(parser, 'mml', name, operator, fences);\n};\n\n\n/***********************\n * Physics package section 2.3\n * Operators\n */\n\n/**\n * Operator expression with automatic fences and optional exponent.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean=} opt Set to false if no optional exponent is allowed.\n * @param {string=} id The name of the function if different from name.\n */\nPhysicsMethods.Expression = function(parser: TexParser, name: string,\n                                     opt: boolean = true, id: string = '') {\n  id = id || name.slice(1);\n  const exp = opt ? parser.GetBrackets(name) : null;\n  let mml = parser.create('token', 'mi', {texClass: TEXCLASS.OP}, id);\n  if (exp) {\n    const sup = new TexParser(exp,\n                              parser.stack.env, parser.configuration).mml();\n    mml = parser.create('node', 'msup', [mml, sup]);\n  }\n  parser.Push(parser.itemFactory.create('fn', mml));\n  if (parser.GetNext() !== '(') {\n    return;\n  }\n  parser.i++;\n  parser.Push(parser.itemFactory.create('auto open')\n              .setProperties({open: '(', close: ')'}));\n};\n\n\n/***********************\n * Physics package section 2.4\n * Quick quad text\n */\n\n/**\n * Quad text macros.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} text The text that is to be padded with quad spaces.\n */\nPhysicsMethods.Qqtext = function(parser: TexParser, name: string,\n                                 text: string) {\n  let star = parser.GetStar();\n  let arg = text ? text : parser.GetArgument(name);\n  let replace = (star ? '' : '\\\\quad') + '\\\\text{' + arg + '}\\\\quad ';\n  parser.string = parser.string.slice(0, parser.i) + replace +\n    parser.string.slice(parser.i);\n};\n\n\n/***********************\n * Physics package section 2.5\n * Derivatives\n */\n\n/**\n * The differential and variation macros.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {string} op The operator. It will be parsed.\n */\nPhysicsMethods.Differential = function(parser: TexParser, name: string,\n                                       op: string) {\n  const optArg = parser.GetBrackets(name);\n  const power = optArg != null ? '^{' + optArg + '}' : ' ';\n  const parens = parser.GetNext() === '(';\n  const braces = parser.GetNext() === '{';\n  let macro = op + power;\n  if (!(parens || braces)) {\n    macro += parser.GetArgument(name, true) || '';\n    let mml = new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml();\n    parser.Push(mml);\n    return;\n  }\n  if (braces) {\n    macro += parser.GetArgument(name);\n    const mml = new TexParser(macro, parser.stack.env,\n                              parser.configuration).mml();\n    parser.Push(parser.create('node', 'TeXAtom', [mml], {texClass: TEXCLASS.OP}));\n    return;\n  }\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n  parser.i++;\n  parser.Push(parser.itemFactory.create('auto open')\n              .setProperties({open: '(', close: ')'}));\n};\n\n\n/**\n * The derivative macro. Its behaviour depends on the number of arguments\n * provided. In case of\n * 1 argument: will be part of the denominator.\n * 2 arguments: argument one is numerator, argument two is denominator.\n * 3+ arguments: arguments above 2 will be part of the denominator and the\n *   exponent of the enumerator will depend on the number of denominator\n *   arguments. In particular, the optional exponent argument will be ignored!\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {number} argMax The maximum number of arguments for the macro.\n * @param {string} op The derivative operator.\n */\nPhysicsMethods.Derivative = function(parser: TexParser, name: string,\n                                     argMax: number, op: string) {\n  const star = parser.GetStar();\n  const optArg = parser.GetBrackets(name);\n  let argCounter = 1;\n  const args = [];\n  args.push(parser.GetArgument(name));\n  while (parser.GetNext() === '{' && argCounter < argMax) {\n    args.push(parser.GetArgument(name));\n    argCounter++;\n  }\n  let ignore = false;\n  let power1 = ' ';\n  let power2 = ' ';\n  if (argMax > 2 && args.length > 2) {\n    power1 = '^{' + (args.length - 1) + '}';\n    ignore = true;\n  } else if (optArg != null) {\n    if (argMax > 2 && args.length > 1) {\n      ignore = true;\n    }\n    power1 = '^{' + optArg + '}';\n    power2 = power1;\n  }\n  const frac = star ? '\\\\flatfrac' : '\\\\frac';\n  const first = args.length > 1 ? args[0] : '';\n  const second = args.length > 1 ? args[1] : args[0];\n  let rest = '';\n  for (let i = 2, arg; arg = args[i]; i++) {\n    rest += op + ' ' + arg;\n  }\n  const macro = frac + '{' + op + power1 + first + '}' +\n    '{' + op + ' ' + second + power2 + ' ' + rest + '}';\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n  if (parser.GetNext() === '(') {\n    parser.i++;\n    parser.Push(parser.itemFactory.create('auto open')\n                .setProperties({open: '(', close: ')', ignore: ignore}));\n  }\n};\n\n\n/***********************\n * Physics package section 2.6\n * Dirac bra-ket notation\n */\n\n/**\n * The bra macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Bra = function(parser: TexParser, name: string) {\n  let starBra = parser.GetStar();\n  let bra = parser.GetArgument(name);\n  let ket = '';\n  let hasKet = false;\n  let starKet = false;\n  if (parser.GetNext() === '\\\\') {\n    let saveI = parser.i;\n    parser.i++;\n    // This ensures that bra-ket also works if \\let bound versions of \\ket.\n    let cs = parser.GetCS();\n    let symbol = parser.lookup('macro', cs) as Macro;\n    if (symbol && symbol.symbol === 'ket') {\n      hasKet = true;\n      saveI = parser.i;\n      starKet = parser.GetStar();\n      if (parser.GetNext() === '{') {\n        ket = parser.GetArgument(cs, true);\n      } else {\n        parser.i = saveI;\n        starKet = false;\n      }\n    } else {\n      parser.i = saveI;\n    }\n  }\n  let macro = '';\n  if (hasKet) {\n    macro = (starBra || starKet) ?\n    `\\\\langle{${bra}}\\\\vert{${ket}}\\\\rangle` :\n      `\\\\left\\\\langle{${bra}}\\\\middle\\\\vert{${ket}}\\\\right\\\\rangle`;\n  } else {\n    macro = (starBra || starKet) ?\n    `\\\\langle{${bra}}\\\\vert` : `\\\\left\\\\langle{${bra}}\\\\right\\\\vert{${ket}}`;\n  }\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * The ket macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Ket = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let ket = parser.GetArgument(name);\n  let macro = star ? `\\\\vert{${ket}}\\\\rangle` :\n    `\\\\left\\\\vert{${ket}}\\\\right\\\\rangle`;\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * The braket macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.BraKet = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let bra = parser.GetArgument(name);\n  let ket = null;\n  if (parser.GetNext() === '{') {\n    ket = parser.GetArgument(name, true);\n  }\n  let macro = '';\n  if (ket == null) {\n    macro = star ?\n      `\\\\langle{${bra}}\\\\vert{${bra}}\\\\rangle` :\n      `\\\\left\\\\langle{${bra}}\\\\middle\\\\vert{${bra}}\\\\right\\\\rangle`;\n  } else {\n    macro = star ?\n      `\\\\langle{${bra}}\\\\vert{${ket}}\\\\rangle` :\n      `\\\\left\\\\langle{${bra}}\\\\middle\\\\vert{${ket}}\\\\right\\\\rangle`;\n  }\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * The ketbra macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.KetBra = function(parser: TexParser, name: string) {\n  let star = parser.GetStar();\n  let ket = parser.GetArgument(name);\n  let bra = null;\n  if (parser.GetNext() === '{') {\n    bra = parser.GetArgument(name, true);\n  }\n  let macro = '';\n  if (bra == null) {\n    macro = star ?\n      `\\\\vert{${ket}}\\\\rangle\\\\!\\\\langle{${ket}}\\\\vert` :\n      `\\\\left\\\\vert{${ket}}\\\\middle\\\\rangle\\\\!\\\\middle\\\\langle{${ket}}\\\\right\\\\vert`;\n  } else {\n    macro = star ?\n      `\\\\vert{${ket}}\\\\rangle\\\\!\\\\langle{${bra}}\\\\vert` :\n      `\\\\left\\\\vert{${ket}}\\\\middle\\\\rangle\\\\!\\\\middle\\\\langle{${bra}}\\\\right\\\\vert`;\n  }\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * Generates the expanded braket LaTeX code for matrix operations.\n * @param {[string, string, string]} [arg1, arg2, arg3] The three arguments\n *     <arg1|arg2|arg3>.\n * @param {boolean} star1 No automatic sizing of fences.\n * @param {boolean} star2 Automatic sizing of fences wrt. to arg1 & arg3 only.\n */\nfunction outputBraket([arg1, arg2, arg3]: [string, string, string],\n                      star1: boolean, star2: boolean) {\n  return (star1 && star2) ?\n    `\\\\left\\\\langle{${arg1}}\\\\middle\\\\vert{${arg2}}\\\\middle\\\\vert{${arg3}}\\\\right\\\\rangle` :\n    (star1 ? `\\\\langle{${arg1}}\\\\vert{${arg2}}\\\\vert{${arg3}}\\\\rangle` :\n     `\\\\left\\\\langle{${arg1}}\\\\right\\\\vert{${arg2}}\\\\left\\\\vert{${arg3}}\\\\right\\\\rangle`);\n}\n\n\n/**\n * The expectation value macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Expectation = function(parser: TexParser, name: string) {\n  let star1 = parser.GetStar();\n  let star2 = star1 && parser.GetStar();\n  let arg1 = parser.GetArgument(name);\n  let arg2 = null;\n  if (parser.GetNext() === '{') {\n    arg2 = parser.GetArgument(name, true);\n  }\n  let macro = (arg1 && arg2) ?\n    outputBraket([arg2, arg1, arg2], star1, star2) :\n    // Braces for semantics, similar to braket package.\n    (star1 ? `\\\\langle {${arg1}} \\\\rangle` :\n     `\\\\left\\\\langle {${arg1}} \\\\right\\\\rangle`);\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * The matrix element macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.MatrixElement = function(parser: TexParser, name: string) {\n  const star1 = parser.GetStar();\n  const star2 = star1 && parser.GetStar();\n  const arg1 = parser.GetArgument(name);\n  const arg2 = parser.GetArgument(name);\n  const arg3 = parser.GetArgument(name);\n  const macro = outputBraket([arg1, arg2, arg3], star1, star2);\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n\n/********************\n * Physics package Section 2.7\n * Matrix macros\n */\n/**\n * The matrix quantity macro.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean=} small Use small matrix.\n */\nPhysicsMethods.MatrixQuantity = function(parser: TexParser, name: string, small?: boolean) {\n  const star = parser.GetStar();\n  const next = parser.GetNext();\n  const array = small ? 'smallmatrix' : 'array';\n  let arg = '';\n  let open = '';\n  let close = '';\n  switch (next) {\n  case '{':\n    arg = parser.GetArgument(name);\n    break;\n  case '(':\n    parser.i++;\n    open = star ? '\\\\lgroup' : '(';\n    close = star ? '\\\\rgroup' : ')';\n    arg = parser.GetUpTo(name, ')');\n    break;\n  case '[':\n    parser.i++;\n    open = '[';\n    close = ']';\n    arg = parser.GetUpTo(name, ']');\n    break;\n  case '|':\n    parser.i++;\n    open = '|';\n    close = '|';\n    arg = parser.GetUpTo(name, '|');\n    break;\n  default:\n    open = '(';\n    close = ')';\n    break;\n  }\n  const macro = (open ? '\\\\left' : '') + open +\n    '\\\\begin{' + array + '}{} ' + arg + '\\\\end{' + array + '}' +\n    (open ? '\\\\right' : '') + close;\n  parser.Push(new TexParser(macro, parser.stack.env,\n                            parser.configuration).mml());\n};\n\n\n/**\n * Generation of identity matrices.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.IdentityMatrix = function(parser: TexParser, name: string) {\n  const arg = parser.GetArgument(name);\n  const size = parseInt(arg, 10);\n  if (isNaN(size)) {\n    throw new TexError('InvalidNumber', 'Invalid number');\n  }\n  if (size <= 1) {\n    parser.string = '1' + parser.string.slice(parser.i);\n    parser.i = 0;\n    return;\n  }\n  let zeros = Array(size).fill('0');\n  let columns = [];\n  for (let i = 0; i < size; i++) {\n    let row = zeros.slice();\n    row[i] = '1';\n    columns.push(row.join(' & '));\n  }\n  parser.string = columns.join('\\\\\\\\ ') + parser.string.slice(parser.i);\n  parser.i = 0;\n};\n\n\n/**\n * Generation of matrices with fixed value.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.XMatrix = function(parser: TexParser, name: string) {\n  const star = parser.GetStar();\n  const arg1 = parser.GetArgument(name);\n  const arg2 = parser.GetArgument(name);\n  const arg3 = parser.GetArgument(name);\n  let n = parseInt(arg2, 10);\n  let m = parseInt(arg3, 10);\n  if (isNaN(n) || isNaN(m) || m.toString() !== arg3 || n.toString() !== arg2) {\n    throw new TexError('InvalidNumber', 'Invalid number');\n  }\n  n = n < 1 ? 1 : n;\n  m = m < 1 ? 1 : m;\n  // Elements\n  if (!star) {\n    const row = Array(m).fill(arg1).join(' & ');\n    const matrix = Array(n).fill(row).join('\\\\\\\\ ');\n    parser.string = matrix + parser.string.slice(parser.i);\n    parser.i = 0;\n    return;\n  }\n  let matrix = '';\n  if (n === 1 && m === 1) {\n    // Case 1: n=m=1, no index.\n    matrix = arg1;\n  } else if (n === 1) {\n    // Case 2: n=1, row vector, single index.\n    let row = [];\n    for (let i = 1; i <= m; i++) {\n      row.push(`${arg1}_{${i}}`);\n    }\n    matrix = row.join(' & ');\n  } else if (m === 1) {\n    // Case 3: m=1, column vector, single index.\n    let row = [];\n    for (let i = 1; i <= n; i++) {\n      row.push(`${arg1}_{${i}}`);\n    }\n    matrix = row.join('\\\\\\\\ ');\n  } else {\n    // Case 4: matrix, double index. Note the extra mrows for indices.\n    let rows = [];\n    for (let i = 1; i <= n; i++) {\n      let row = [];\n      for (let j = 1; j <= m; j++) {\n        row.push(`${arg1}_{{${i}}{${j}}}`);\n      }\n      rows.push(row.join(' & '));\n    }\n    matrix = rows.join('\\\\\\\\ ');\n  }\n  parser.string = matrix + parser.string.slice(parser.i);\n  parser.i = 0;\n  return;\n};\n\n\n/**\n * Generation of Pauli matrices. Matrix 0 is the 2x2 identity.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.PauliMatrix = function(parser: TexParser, name: string) {\n  const arg = parser.GetArgument(name);\n  let matrix = arg.slice(1);\n  switch (arg[0]) {\n  case '0':\n    matrix += ' 1 & 0\\\\\\\\ 0 & 1';\n    break;\n  case '1':\n  case 'x':\n    matrix += ' 0 & 1\\\\\\\\ 1 & 0';\n    break;\n  case '2':\n  case 'y':\n    matrix += ' 0 & -i\\\\\\\\ i & 0';\n    break;\n  case '3':\n  case 'z':\n    matrix += ' 1 & 0\\\\\\\\ 0 & -1';\n    break;\n  default:\n  }\n  parser.string = matrix + parser.string.slice(parser.i);\n  parser.i = 0;\n};\n\n\n/**\n * Generation of anti/diagonal matrices.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n * @param {boolean=} anti True if constructing anti-diagonal matrix.\n */\nPhysicsMethods.DiagonalMatrix = function(parser: TexParser, name: string,\n                                         anti?: boolean) {\n  if (parser.GetNext() !== '{') {\n    return;\n  }\n  let startI = parser.i;\n  /* let arg =*/ parser.GetArgument(name);\n  let endI = parser.i;\n  parser.i = startI + 1;\n  let elements = [];\n  let element = '';\n  let currentI = parser.i;\n  while (currentI < endI) {\n    try {\n      element = parser.GetUpTo(name, ',');\n    } catch (e) {\n      parser.i = endI;\n      elements.push(parser.string.slice(currentI, endI - 1));\n      break;\n    }\n    if (parser.i >= endI) {\n      elements.push(parser.string.slice(currentI, endI));\n      break;\n    }\n    currentI = parser.i;\n    elements.push(element);\n  }\n  parser.string = makeDiagMatrix(elements, anti) + parser.string.slice(endI);\n  parser.i = 0;\n};\n\n\n/**\n * Creates the a (anti)diagonal matrix string.\n * @param {string[]} elements The elements on the diagonal.\n * @param {boolean} anti True if constructing anti-diagonal matrix.\n */\nfunction makeDiagMatrix(elements: string[], anti: boolean) {\n  let length = elements.length;\n  let matrix = [];\n  for (let i = 0; i < length; i++) {\n    matrix.push(Array(anti ? length - i : i + 1).join('&') +\n                '\\\\mqty{' + elements[i] + '}');\n  }\n  return matrix.join('\\\\\\\\ ');\n}\n\n\n/**\n * Closes an automatic fence if one was opened.\n * @param {TexParser} parser The calling parser.\n * @param {string} fence The fence.\n * @param {number} texclass The TeX class.\n */\nPhysicsMethods.AutoClose = function(parser: TexParser, fence: string, _texclass: number) {\n  const mo = parser.create('token', 'mo', {stretchy: false}, fence);\n  const item = parser.itemFactory.create('mml', mo).\n    setProperties({autoclose: fence});\n  parser.Push(item);\n};\n\n\n/**\n * Generates the vector nabla depending on the arrowdel option.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.Vnabla = function(parser: TexParser, _name: string) {\n  let argument = parser.options.physics.arrowdel ?\n    '\\\\vec{\\\\gradientnabla}' : '{\\\\gradientnabla}';\n  return parser.Push(new TexParser(argument, parser.stack.env,\n                                   parser.configuration).mml());\n};\n\n\n/**\n * Generates the differential d depending on the italicdiff option.\n * @param {TexParser} parser The calling parser.\n * @param {string} name The macro name.\n */\nPhysicsMethods.DiffD = function(parser: TexParser, _name: string) {\n  let argument = parser.options.physics.italicdiff ? 'd' : '{\\\\rm d}';\n  return parser.Push(new TexParser(argument, parser.stack.env,\n                                   parser.configuration).mml());\n};\n\n\n/**\n *  Methods taken from Base package.\n */\nPhysicsMethods.Macro = BaseMethods.Macro;\n\nPhysicsMethods.NamedFn = BaseMethods.NamedFn;\n\nPhysicsMethods.Array = BaseMethods.Array;\n\n\nexport default PhysicsMethods;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17150, "column": 0}, "map": {"version":3,"file":"PhysicsMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/physics/PhysicsMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for TeX parsing of the physics package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {EnvironmentMap, CommandMap, MacroMap, CharacterMap} from '../SymbolMap.js';\nimport PhysicsMethods from './PhysicsMethods.js';\nimport {TexConstant} from '../TexConstants.js';\nimport ParseMethods from '../ParseMethods.js';\nimport {TEXCLASS} from '../../../core/MmlTree/MmlNode.js';\n\n\n/**\n * Macros for physics package (section 2.1).\n */\nnew CommandMap('Physics-automatic-bracing-macros', {\n  'quantity':       'Quantity',\n  'qty':            'Quantity',\n  'pqty':           ['Quantity', '(', ')', true],\n  'bqty':           ['Quantity', '[', ']', true],\n  'vqty':           ['Quantity', '|', '|', true],\n  'Bqty':           ['Quantity', '\\\\{', '\\\\}', true],\n  'absolutevalue':  ['Quantity', '|', '|', true],\n  'abs':            ['Quantity', '|', '|', true],\n  'norm':           ['Quantity', '\\\\|', '\\\\|', true],\n  'evaluated':      'Eval',\n  'eval':           'Eval',\n  'order':          ['Quantity', '(', ')', true, 'O',\n                     TexConstant.Variant.CALLIGRAPHIC],\n  'commutator':     'Commutator',\n  'comm':           'Commutator',\n  'anticommutator': ['Commutator', '\\\\{', '\\\\}'],\n  'acomm':          ['Commutator', '\\\\{', '\\\\}'],\n  'poissonbracket': ['Commutator', '\\\\{', '\\\\}'],\n  'pb':             ['Commutator', '\\\\{', '\\\\}']\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.2).\n */\nnew CharacterMap('Physics-vector-mo', ParseMethods.mathchar0mo, {\n  dotproduct:    ['\\u22C5', {mathvariant: TexConstant.Variant.BOLD}],\n  vdot:          ['\\u22C5', {mathvariant: TexConstant.Variant.BOLD}],\n  crossproduct:  '\\u00D7',\n  cross:         '\\u00D7',\n  cp:            '\\u00D7',\n  // This is auxiliary!\n  gradientnabla: ['\\u2207', {mathvariant: TexConstant.Variant.BOLD}]\n});\n\nnew CharacterMap('Physics-vector-mi', ParseMethods.mathchar0mi, {\n  real:          ['\\u211C', {mathvariant: TexConstant.Variant.NORMAL}],\n  imaginary:     ['\\u2111', {mathvariant: TexConstant.Variant.NORMAL}]\n});\n\nnew CommandMap('Physics-vector-macros', {\n  'vnabla':      'Vnabla',\n  'vectorbold':  'VectorBold',\n  'vb':          'VectorBold',\n  'vectorarrow': ['StarMacro', 1, '\\\\vec{\\\\vb', '{#1}}'],\n  'va':          ['StarMacro', 1, '\\\\vec{\\\\vb', '{#1}}'],\n  'vectorunit':  ['StarMacro', 1, '\\\\hat{\\\\vb', '{#1}}'],\n  'vu':          ['StarMacro', 1, '\\\\hat{\\\\vb', '{#1}}'],\n  'gradient':    ['OperatorApplication', '\\\\vnabla', '(', '['],\n  'grad':        ['OperatorApplication', '\\\\vnabla', '(', '['],\n  'divergence':  ['VectorOperator', '\\\\vnabla\\\\vdot', '(', '['],\n  'div':         ['VectorOperator', '\\\\vnabla\\\\vdot', '(', '['],\n  'curl':        ['VectorOperator', '\\\\vnabla\\\\crossproduct', '(', '['],\n  'laplacian':   ['OperatorApplication', '\\\\nabla^2', '(', '['],\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.3).\n */\nnew CommandMap('Physics-expressions-macros', {\n  'sin':              'Expression',\n  'sinh':             'Expression',\n  'arcsin':           'Expression',\n  'asin':             'Expression',\n  'cos':              'Expression',\n  'cosh':             'Expression',\n  'arccos':           'Expression',\n  'acos':             'Expression',\n  'tan':              'Expression',\n  'tanh':             'Expression',\n  'arctan':           'Expression',\n  'atan':             'Expression',\n  'csc':              'Expression',\n  'csch':             'Expression',\n  'arccsc':           'Expression',\n  'acsc':             'Expression',\n  'sec':              'Expression',\n  'sech':             'Expression',\n  'arcsec':           'Expression',\n  'asec':             'Expression',\n  'cot':              'Expression',\n  'coth':             'Expression',\n  'arccot':           'Expression',\n  'acot':             'Expression',\n  'exp':              ['Expression', false],\n  'log':              'Expression',\n  'ln':               'Expression',\n  'det':              ['Expression', false],\n  'Pr':               ['Expression', false],\n  // New expressions.\n  'tr':               ['Expression', false],\n  'trace':            ['Expression', false, 'tr'],\n  'Tr':               ['Expression', false],\n  'Trace':            ['Expression', false, 'Tr'],\n  'rank':             'NamedFn',\n  'erf':              ['Expression', false],\n  'Residue':          ['Macro', '\\\\mathrm{Res}'],\n  'Res':              ['OperatorApplication', '\\\\Residue', '(', '[', '{'],\n  'principalvalue':   ['OperatorApplication', '{\\\\cal P}'],\n  'pv':               ['OperatorApplication', '{\\\\cal P}'],\n  'PV':               ['OperatorApplication', '{\\\\rm P.V.}'],\n  'Re':               ['OperatorApplication', '\\\\mathrm{Re}', '{'],\n  'Im':               ['OperatorApplication', '\\\\mathrm{Im}', '{'],\n  // Old named functions.\n  'sine':             ['NamedFn', 'sin'],\n  'hypsine':          ['NamedFn', 'sinh'],\n  'arcsine':          ['NamedFn', 'arcsin'],\n  'asine':            ['NamedFn', 'asin'],\n  'cosine':           ['NamedFn', 'cos'],\n  'hypcosine':        ['NamedFn', 'cosh'],\n  'arccosine':        ['NamedFn', 'arccos'],\n  'acosine':          ['NamedFn', 'acos'],\n  'tangent':          ['NamedFn', 'tan'],\n  'hyptangent':       ['NamedFn', 'tanh'],\n  'arctangent':       ['NamedFn', 'arctan'],\n  'atangent':         ['NamedFn', 'atan'],\n  'cosecant':         ['NamedFn', 'csc'],\n  'hypcosecant':      ['NamedFn', 'csch'],\n  'arccosecant':      ['NamedFn', 'arccsc'],\n  'acosecant':        ['NamedFn', 'acsc'],\n  'secant':           ['NamedFn', 'sec'],\n  'hypsecant':        ['NamedFn', 'sech'],\n  'arcsecant':        ['NamedFn', 'arcsec'],\n  'asecant':          ['NamedFn', 'asec'],\n  'cotangent':        ['NamedFn', 'cot'],\n  'hypcotangent':     ['NamedFn', 'coth'],\n  'arccotangent':     ['NamedFn', 'arccot'],\n  'acotangent':       ['NamedFn', 'acot'],\n  'exponential':      ['NamedFn', 'exp'],\n  'logarithm':        ['NamedFn', 'log'],\n  'naturallogarithm': ['NamedFn', 'ln'],\n  'determinant':      ['NamedFn', 'det'],\n  'Probability':      ['NamedFn', 'Pr'],\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.4).\n */\nnew CommandMap('Physics-quick-quad-macros', {\n  'qqtext':     'Qqtext',\n  'qq':         'Qqtext',\n  'qcomma':     ['Macro', '\\\\qqtext*{,}'],\n  'qc':         ['Macro', '\\\\qqtext*{,}'],\n  'qcc':        ['Qqtext', 'c.c.'],\n  'qif':        ['Qqtext', 'if'],\n  'qthen':      ['Qqtext', 'then'],\n  'qelse':      ['Qqtext', 'else'],\n  'qotherwise': ['Qqtext', 'otherwise'],\n  'qunless':    ['Qqtext', 'unless'],\n  'qgiven':     ['Qqtext', 'given'],\n  'qusing':     ['Qqtext', 'using'],\n  'qassume':    ['Qqtext', 'assume'],\n  'qsince':     ['Qqtext', 'since'],\n  'qlet':       ['Qqtext', 'let'],\n  'qfor':       ['Qqtext', 'for'],\n  'qall':       ['Qqtext', 'all'],\n  'qeven':      ['Qqtext', 'even'],\n  'qodd':       ['Qqtext', 'odd'],\n  'qinteger':   ['Qqtext', 'integer'],\n  'qand':       ['Qqtext', 'and'],\n  'qor':        ['Qqtext', 'or'],\n  'qas':        ['Qqtext', 'as'],\n  'qin':        ['Qqtext', 'in'],\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.5).\n */\nnew CommandMap('Physics-derivative-macros', {\n  'diffd':                'DiffD',\n  'flatfrac':             ['Macro', '\\\\left.#1\\\\middle/#2\\\\right.', 2],\n  'differential':         ['Differential', '\\\\diffd'],\n  'dd':                   ['Differential', '\\\\diffd'],\n  'variation':            ['Differential', '\\\\delta'],\n  'var':                  ['Differential', '\\\\delta'],\n  'derivative':           ['Derivative', 2, '\\\\diffd'],\n  'dv':                   ['Derivative', 2, '\\\\diffd'],\n  'partialderivative':    ['Derivative', 3, '\\\\partial'],\n  'pderivative':          ['Derivative', 3, '\\\\partial'],\n  'pdv':                  ['Derivative', 3, '\\\\partial'],\n  'functionalderivative': ['Derivative', 2, '\\\\delta'],\n  'fderivative':          ['Derivative', 2, '\\\\delta'],\n  'fdv':                  ['Derivative', 2, '\\\\delta'],\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.6).\n */\nnew CommandMap('Physics-bra-ket-macros', {\n  'bra':              'Bra',\n  'ket':              'Ket',\n  'innerproduct':     'BraKet',\n  'ip':               'BraKet',\n  'braket':           'BraKet',\n  'outerproduct':     'KetBra',\n  'dyad':             'KetBra',\n  'ketbra':           'KetBra',\n  'op':               'KetBra',\n  'expectationvalue': 'Expectation',\n  'expval':           'Expectation',\n  'ev':               'Expectation',\n  'matrixelement':    'MatrixElement',\n  'matrixel':         'MatrixElement',\n  'mel':              'MatrixElement',\n}, PhysicsMethods);\n\n\n/**\n * Macros for physics package (section 2.7).\n */\nnew CommandMap('Physics-matrix-macros', {\n  'matrixquantity':      'MatrixQuantity',\n  'mqty'          :      'MatrixQuantity',\n  'pmqty':               ['Macro', '\\\\mqty(#1)', 1],\n  'Pmqty':               ['Macro', '\\\\mqty*(#1)', 1],\n  'bmqty':               ['Macro', '\\\\mqty[#1]', 1],\n  'vmqty':               ['Macro', '\\\\mqty|#1|', 1],\n  // Smallmatrices\n  'smallmatrixquantity': ['MatrixQuantity', true],\n  'smqty':               ['MatrixQuantity', true],\n  'spmqty':              ['Macro', '\\\\smqty(#1)', 1],\n  'sPmqty':              ['Macro', '\\\\smqty*(#1)', 1],\n  'sbmqty':              ['Macro', '\\\\smqty[#1]', 1],\n  'svmqty':              ['Macro', '\\\\smqty|#1|', 1],\n  'matrixdeterminant':   ['Macro', '\\\\vmqty{#1}', 1],\n  'mdet':                ['Macro', '\\\\vmqty{#1}', 1],\n  'smdet':               ['Macro', '\\\\svmqty{#1}', 1],\n  'identitymatrix':      'IdentityMatrix',\n  'imat':                'IdentityMatrix',\n  'xmatrix':             'XMatrix',\n  'xmat':                'XMatrix',\n  'zeromatrix':          ['Macro', '\\\\xmat{0}{#1}{#2}', 2],\n  'zmat':                ['Macro', '\\\\xmat{0}{#1}{#2}', 2],\n  'paulimatrix':         'PauliMatrix',\n  'pmat':                'PauliMatrix',\n  'diagonalmatrix': 'DiagonalMatrix',\n  'dmat': 'DiagonalMatrix',\n  'antidiagonalmatrix': ['DiagonalMatrix', true],\n  'admat': ['DiagonalMatrix', true]\n}, PhysicsMethods);\n\n\n\n/**\n * Auxiliary environment map to define smallmatrix. This makes Physics\n * independent of AmsMath.\n */\nnew EnvironmentMap('Physics-aux-envs', ParseMethods.environment, {\n  smallmatrix:   ['Array', null, null, null, 'c', '0.333em', '.2em', 'S', 1]\n}, PhysicsMethods);\n\n\n/**\n * Character map for braket package.\n */\nnew MacroMap('Physics-characters', {\n  '|': ['AutoClose', TEXCLASS.ORD],   // texClass: TEXCLASS.ORD, // Have to push the closer as mml with special property\n  ')': 'AutoClose',\n  ']': 'AutoClose'\n}, PhysicsMethods);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17843, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17848, "column": 0}, "map": {"version":3,"file":"PhysicsConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/physics/PhysicsConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the Physics package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {AutoOpen} from './PhysicsItems.js';\nimport './PhysicsMappings.js';\n\n\nexport const PhysicsConfiguration = Configuration.create(\n  'physics', {\n    handler: {\n      macro: [\n        'Physics-automatic-bracing-macros',\n        'Physics-vector-macros',\n        'Physics-vector-mo',\n        'Physics-vector-mi',\n        'Physics-derivative-macros',\n        'Physics-expressions-macros',\n        'Physics-quick-quad-macros',\n        'Physics-bra-ket-macros',\n        'Physics-matrix-macros'\n      ],\n      character: ['Physics-characters'],\n      environment: ['Physics-aux-envs']\n    },\n    items: {\n      [AutoOpen.prototype.kind]: AutoOpen\n    },\n    options: {\n      physics: {\n        italicdiff: false,\n        arrowdel: false\n      }\n    }\n  }\n);\n"],"names":[],"mappings":";;;;;;AAwBA,IAAA,oDAAkD;AAClD,IAAA,iDAA2C;;AAI9B,QAAA,oBAAoB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACtD,SAAS,EAAE;IACT,OAAO,EAAE;QACP,KAAK,EAAE;YACL,kCAAkC;YAClC,uBAAuB;YACvB,mBAAmB;YACnB,mBAAmB;YACnB,2BAA2B;YAC3B,4BAA4B;YAC5B,2BAA2B;YAC3B,wBAAwB;YACxB,uBAAuB;SACxB;QACD,SAAS,EAAE;YAAC,oBAAoB;SAAC;QACjC,WAAW,EAAE;YAAC,kBAAkB;SAAC;KAClC;IACD,KAAK,EAAA,CAAA,KAAA,CAAA,GACH,EAAA,CAAC,kBAAA,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAA,GAAG,kBAAA,QAAQ,KACpC;IACD,OAAO,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,KAAK;SAChB;KACF;CACF,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17885, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17890, "column": 0}, "map": {"version":3,"file":"SetOptionsConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/setoptions/SetOptionsConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the setoptions package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration, ConfigurationHandler, ParserConfiguration} from '../Configuration.js';\nimport {TeX} from '../../tex.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport TexError from '../TexError.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {Macro} from '../Symbol.js';\nimport BaseMethods from '../base/BaseMethods.js';\nimport {expandable, isObject} from '../../../util/Options.js';\n\nexport const SetOptionsUtil = {\n\n  /**\n   * Check if options can be set for a given pacakge, and error otherwise.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} extension   The name of the package whose option is being set.\n   * @return {boolean}           True when options can be set for this package.\n   */\n  filterPackage(parser: TexParser, extension: string): boolean {\n    if (extension !== 'tex' && !ConfigurationHandler.get(extension)) {\n      throw new TexError('NotAPackage', 'Not a defined package: %1', extension);\n    }\n    const config = parser.options.setoptions;\n    const options = config.allowOptions[extension];\n    if ((options === undefined && !config.allowPackageDefault) || options === false) {\n      throw new TexError('PackageNotSettable', 'Options can\\'t be set for package \"%1\"', extension);\n    }\n    return true;\n  },\n\n  /**\n   * Check if an option can be set and error otherwise.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} extension   The name of the package whose option is being set.\n   * @param {string} option      The name of the option being set.\n   * @return {boolean}           True when the option can be set.\n   */\n  filterOption(parser: TexParser, extension: string, option: string): boolean {\n    const config = parser.options.setoptions;\n    const options = config.allowOptions[extension] || {};\n    const allow = (options.hasOwnProperty(option) && !isObject(options[option]) ? options[option] : null);\n    if (allow === false || (allow === null && !config.allowOptionsDefault)) {\n      throw new TexError('OptionNotSettable', 'Option \"%1\" is not allowed to be set', option);\n    }\n    if (!(extension === 'tex' ? parser.options : parser.options[extension])?.hasOwnProperty(option)) {\n      if (extension === 'tex') {\n        throw new TexError('InvalidTexOption', 'Invalid TeX option \"%1\"', option);\n      } else {\n        throw new TexError('InvalidOptionKey', 'Invalid option \"%1\" for package \"%2\"', option, extension);\n      }\n    }\n    return true;\n  },\n\n  /**\n   * Verify an option's value before setting it.\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} extension   The name of the package whose option this is.\n   * @param {string} option      The name of the option being set.\n   * @param {string} value       The value to give to the option.\n   * @return {string}            The (possibly modified) value for the option\n   */\n  filterValue(_parser: TexParser, _extension: string, _option: string, value: string): string {\n    return value;\n  }\n\n};\n\nconst setOptionsMap = new CommandMap('setoptions', {\n  setOptions: 'SetOptions'\n}, {\n  /**\n   * Implements \\setOptions[package]{option-values}\n   *\n   * @param {TexParser} parser   The active tex parser.\n   * @param {string} name        The name of the macro being processed.\n   */\n  SetOptions(parser: TexParser, name: string) {\n    const extension = parser.GetBrackets(name) || 'tex';\n    const options = ParseUtil.keyvalOptions(parser.GetArgument(name));\n    const config = parser.options.setoptions;\n    if (!config.filterPackage(parser, extension)) return;\n    for (const key of Object.keys(options)) {\n      if (config.filterOption(parser, extension, key)) {\n        (extension === 'tex' ? parser.options : parser.options[extension])[key] =\n          config.filterValue(parser, extension, key, options[key]);\n      }\n    }\n  }\n});\n\n/**\n * If the require package is available, save the original require,\n *   and define a macro that loads the extension and sets\n *   its options, if any.\n *\n * @param {ParserConfiguration} config  The current configuration.\n * @param {TeX} jax                     The active tex input jax.\n */\nfunction setoptionsConfig(_config: ParserConfiguration, jax: TeX<any, any, any>) {\n  const require = jax.parseOptions.handlers.get('macro').lookup('require') as any;\n  if (require) {\n    setOptionsMap.add('Require', new Macro('Require', require._func));\n    setOptionsMap.add('require', new Macro('require', BaseMethods.Macro,\n                                           ['\\\\Require{#2}\\\\setOptions[#2]{#1}', 2, '']));\n  }\n}\n\nexport const SetOptionsConfiguration = Configuration.create(\n  'setoptions', {\n    handler: {macro: ['setoptions']},\n    config: setoptionsConfig,\n    priority: 3,  // must be less than the priority of the require package (which is 5).\n    options: {\n      setoptions: {\n        filterPackage: SetOptionsUtil.filterPackage,  // filter for whether a package can be configured\n        filterOption: SetOptionsUtil.filterOption,    // filter for whether an option can be set\n        filterValue: SetOptionsUtil.filterValue,      // filter for the value to assign to an option\n        allowPackageDefault: true,       // default for allowing packages when not explicitly set in allowOptions\n        allowOptionsDefault: true,       // default for allowing option that isn't explicitly set in allowOptions\n        allowOptions: expandable({       // list of packages to allow/disallow, and their options to allow/disallow\n          //\n          //  top-level tex items can be set, but not these\n          //    (that leaves digits and the tagging options)\n          //\n          tex: {\n            FindTeX: false,\n            formatError: false,\n            package: false,\n            baseURL: false,\n            tags: false,\n            maxBuffer: false,\n            maxMaxros: false,\n            macros: false,\n            environments: false\n          },\n          //\n          // These packages can't be configured at all\n          //\n          setoptions: false,\n          autoload: false,\n          require: false,\n          configmacros: false,\n          tagformat: false\n        })\n      }\n    }\n  }\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18030, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18035, "column": 0}, "map": {"version":3,"file":"TagFormatConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/tagformat/TagFormatConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2019-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview    Configuration file for the tagformat package.\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport {TeX} from '../../tex.js';\nimport {AbstractTags, TagsFactory} from '../Tags.js';\n\n/**\n * Number used to make tag class unique (each TeX input has to have its own because\n *  it needs access to the parse options)\n */\nlet tagID = 0;\n\n/**\n * Configure a class to use for the tag handler that uses the input jax's options\n *   to control the formatting of the tags\n * @param {Configuration} config   The configuration for the input jax\n * @param {TeX} jax                The TeX input jax\n */\nexport function tagformatConfig(config: ParserConfiguration, jax: TeX<any, any, any>) {\n\n  /**\n   * If the tag format is being added by one of the other extensions,\n   *   as is done for the 'ams' tags, make sure it is defined so we can create it.\n   */\n  const tags = jax.parseOptions.options.tags;\n  if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {\n    TagsFactory.add(tags, config.tags[tags]);\n  }\n\n  /**\n   * The original tag class to be extended (none, ams, or all)\n   */\n  const TagClass = TagsFactory.create(jax.parseOptions.options.tags).constructor as typeof AbstractTags;\n\n  /**\n   * A Tags object that uses the input jax options to perform the formatting\n   *\n   * Note:  We have to make a new class for each input jax since the format\n   * methods don't have access to the input jax, and hence to its options.\n   * If they did, we would use a common configTags class instead.\n   */\n  class TagFormat extends TagClass {\n\n    /**\n     * @override\n     */\n    public formatNumber(n: number) {\n      return jax.parseOptions.options.tagformat.number(n);\n    }\n\n    /**\n     * @override\n     */\n    public formatTag(tag: string) {\n      return jax.parseOptions.options.tagformat.tag(tag);\n    }\n\n    /**\n     * @override\n     */\n    public formatId(id: string) {\n      return jax.parseOptions.options.tagformat.id(id);\n    }\n\n    /**\n     * @override\n     */\n    public formatUrl(id: string, base: string) {\n      return jax.parseOptions.options.tagformat.url(id, base);\n    }\n  }\n\n  //\n  //  Get a unique name for the tag class (since it is tied to the input jax)\n  //  Note:  These never get freed, so they will accumulate if you create many\n  //  TeX input jax instances with this extension.\n  //\n  tagID++;\n  const tagName = 'configTags-' + tagID;\n  //\n  // Register the tag class\n  //\n  TagsFactory.add(tagName, TagFormat);\n  jax.parseOptions.options.tags = tagName;\n}\n\n/**\n * The configuration object for configTags\n */\nexport const TagFormatConfiguration = Configuration.create(\n  'tagformat', {\n    config: [tagformatConfig, 10],\n    options: {\n      tagformat: {\n        number: (n: number) => n.toString(),\n        tag:    (tag: string) => '(' + tag + ')',\n        id:     (id: string) => 'mjx-eqn:' + id.replace(/\\s/g, '_'),\n        url:    (id: string, base: string) => base + '#' + encodeURIComponent(id),\n      }\n    }\n  }\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,oDAAuE;AAEvE,IAAA,kCAAqD;AAMrD,IAAI,KAAK,GAAG,CAAC,CAAC;AAQd,SAAgB,eAAe,CAAC,MAA2B,EAAE,GAAuB;IAMlF,IAAM,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC;IAC3C,IAAI,IAAI,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;QACvD,UAAA,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC1C;IAKD,IAAM,QAAQ,GAAG,UAAA,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,WAAkC,CAAC;IAStG,IAAA,YAAA,SAAA,MAAA;QAAwB,UAAA,WAAA,QAAQ;QAAhC,SAAA;;QA6BA,CAAC;QAxBQ,UAAA,SAAA,CAAA,YAAY,GAAnB,SAAoB,CAAS;YAC3B,OAAO,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC;QAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,GAAW;YAC1B,OAAO,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrD,CAAC;QAKM,UAAA,SAAA,CAAA,QAAQ,GAAf,SAAgB,EAAU;YACxB,OAAO,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnD,CAAC;QAKM,UAAA,SAAA,CAAA,SAAS,GAAhB,SAAiB,EAAU,EAAE,IAAY;YACvC,OAAO,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC1D,CAAC;QACH,OAAA,SAAC;IAAD,CAAC,AA7BD,CAAwB,QAAQ,GA6B/B;IAOD,KAAK,EAAE,CAAC;IACR,IAAM,OAAO,GAAG,aAAa,GAAG,KAAK,CAAC;IAItC,UAAA,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACpC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;AAC1C,CAAC;AAlED,QAAA,eAAA,GAAA,gBAkEC;AAKY,QAAA,sBAAsB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACxD,WAAW,EAAE;IACX,MAAM,EAAE;QAAC,eAAe;QAAE,EAAE;KAAC;IAC7B,OAAO,EAAE;QACP,SAAS,EAAE;YACT,MAAM,EAAE,SAAC,CAAS;gBAAK,OAAA,CAAC,CAAC,QAAQ,EAAE;YAAZ,CAAY;YACnC,GAAG,EAAK,SAAC,GAAW;gBAAK,OAAA,GAAG,GAAG,GAAG,GAAG,GAAG;YAAf,CAAe;YACxC,EAAE,EAAM,SAAC,EAAU;gBAAK,OAAA,UAAU,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;YAAnC,CAAmC;YAC3D,GAAG,EAAK,SAAC,EAAU,EAAE,IAAY;gBAAK,OAAA,IAAI,GAAG,GAAG,GAAG,kBAAkB,CAAC,EAAE,CAAC;YAAnC,CAAmC;SAC1E;KACF;CACF,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 18116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18121, "column": 0}, "map": {"version":3,"file":"TextMacrosMethods.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/textmacros/TextMacrosMethods.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview  Method definitions for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport TexParser from '../TexParser.js';\nimport {retryAfter} from '../../../util/Retries.js';\nimport {TextParser} from './TextParser.js';\nimport BaseMethods from '../base/BaseMethods.js';\n\n/**\n * The methods used to implement the text-mode macros\n */\nexport const TextMacrosMethods = {\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  Comment(parser: TextParser, _c: string) {\n    while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\\n') {\n      parser.i++;\n    }\n    parser.i++;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} open         The delimiter used to open math-mode in text-mode\n   */\n  Math(parser: TextParser, open: string) {\n    parser.saveText();\n    let i = parser.i;\n    let j, c;\n    let braces = 0;\n    //\n    // Loop through the string looking for the closing delimiter, while matching braces\n    //\n    while ((c = parser.GetNext())) {\n      j = parser.i++;\n      switch (c) {\n\n      case '\\\\':\n        const cs = parser.GetCS();\n        if (cs === ')') c = '\\\\(';  // \\( is the opening delimiter for \\)\n      case '$':\n        //\n        //  If there are no unbalanced braces and we have found the close delimiter,\n        //    process the contents of the delimiters in math mode (using the original TeX parser)\n        //\n        if (braces === 0 && open === c) {\n          const config = parser.texParser.configuration;\n          const mml = (new TexParser(parser.string.substr(i, j - i), parser.stack.env, config)).mml();\n          parser.PushMath(mml);\n          return;\n        }\n        break;\n\n      case '{':\n        braces++;\n        break;\n\n      case '}':\n        if (braces === 0) {\n          parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n        }\n        braces--;\n        break;\n      }\n    }\n    parser.Error('MathNotTerminated', 'Math-mode is not properly terminated');\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  MathModeOnly(parser: TextParser, c: string) {\n    parser.Error('MathModeOnly', '\\'%1\\' allowed only in math mode', c);\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  Misplaced(parser: TextParser, c: string) {\n    parser.Error('Misplaced', '\\'%1\\' can not be used here', c);\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  OpenBrace(parser: TextParser, _c: string) {\n    //\n    //  Save the current stack environment and make a copy of it for\n    //    use within the braced group.\n    //\n    const env = parser.stack.env;\n    parser.envStack.push(env);\n    parser.stack.env = Object.assign({}, env);\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  CloseBrace(parser: TextParser, _c: string) {\n    //\n    //  Restore the saved stack environment, if there was one\n    //\n    if (parser.envStack.length) {\n      parser.saveText();\n      parser.stack.env = parser.envStack.pop();\n    } else {\n      parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n    }\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  OpenQuote(parser: TextParser, c: string) {\n    //\n    //  Handle smart open quotes\n    //\n    if (parser.string.charAt(parser.i) === c) {\n      parser.text += '\\u201C';\n      parser.i++;\n    } else {\n      parser.text += '\\u2018';\n    }\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  CloseQuote(parser: TextParser, c: string) {\n    //\n    //  Handle smart close quotes\n    //\n    if (parser.string.charAt(parser.i) === c) {\n      parser.text += '\\u201D';\n      parser.i++;\n    } else {\n      parser.text += '\\u2019';\n    }\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  Tilde(parser: TextParser, _c: string) {\n    parser.text += '\\u00A0';  // non-breaking space\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} c            The character that called this function\n   */\n  Space(parser: TextParser, _c: string) {\n    parser.text += ' ';  // regular space, but skipping multiple spaces\n    while (parser.GetNext().match(/\\s/)) parser.i++;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   */\n  SelfQuote(parser: TextParser, name: string) {\n    parser.text += name.substr(1);  // add in the quoted character\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   * @param {string} c            The character to insert into the string\n   */\n  Insert(parser: TextParser, _name: string, c: string) {\n    parser.text += c;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   * @param {string} c            The character to insert into the string\n   */\n  Accent(parser: TextParser, name: string, c: string) {\n    //\n    //  Create an accented character using mover\n    //\n    const base = parser.ParseArg(name);\n    const accent = parser.create('token', 'mo', {}, c);\n    parser.addAttributes(accent);\n    parser.Push(parser.create('node', 'mover', [base, accent]));\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   */\n  Emph(parser: TextParser, name: string) {\n    //\n    //  Switch to/from italics\n    //\n    const variant = (parser.stack.env.mathvariant === '-tex-mathit' ? 'normal' : '-tex-mathit');\n    parser.Push(parser.ParseTextArg(name, {mathvariant: variant}));\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   * @param {string} variant      The font variant to use from now on\n   */\n  SetFont(parser: TextParser, _name: string, variant: string) {\n    parser.saveText();\n    parser.stack.env.mathvariant = variant;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   * @param {number} size         The font size to use from now on\n   */\n  SetSize(parser: TextParser, _name: string, size: number) {\n    parser.saveText();\n    parser.stack.env.mathsize = size;\n  },\n\n  /**\n   * @param {TextParser} parser   The text-mode parser\n   * @param {string} name         The control sequence that called this function\n   */\n  CheckAutoload(parser: TextParser, name: string) {\n    const autoload = parser.configuration.packageData.get('autoload');\n    const texParser = parser.texParser;\n    name = name.slice(1);\n    //\n    // Check if a macro is undefined, or currently set to autoload an extension.\n    // If so, process the macro in the original TexParser:\n    //    This will handle the undefined macro using the TeX parser's configuration, then return,\n    //    or will cause the autoloaded extension to load or be processed and restart the expression.\n    // Otherwise, process the macro in text mode.\n    //\n    const macro = texParser.lookup('macro', name);\n    if (!macro || (autoload && macro._func === autoload.Autoload)) {\n      texParser.parse('macro', [texParser, name]);\n      if (!macro) return;\n      retryAfter(Promise.resolve());\n    }\n    texParser.parse('macro', [parser, name]);\n  },\n\n  //\n  // Copy some methods from the base package\n  //\n  Macro: BaseMethods.Macro,\n  Spacer: BaseMethods.Spacer,\n  Hskip: BaseMethods.Hskip,\n  rule: BaseMethods.rule,\n  Rule: BaseMethods.Rule,\n  HandleRef: BaseMethods.HandleRef\n\n};\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18274, "column": 0}, "map": {"version":3,"file":"TextParser.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/textmacros/TextParser.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview  The TextParser class for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport ParseOptions from '../ParseOptions.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {StackItem} from '../StackItem.js';\nimport {MmlNode, AbstractMmlNode} from '../../../core/MmlTree/MmlNode.js';\nimport {EnvList} from '../StackItem.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {StopItem, StyleItem} from '../base/BaseItems.js';\n\n/**\n * Subclass of the TexParser but for handling text-mode material\n */\nexport class TextParser extends TexParser {\n\n  /**\n   * The accumulated text material to go into an mtext element\n   */\n  public text: string;\n\n  /**\n   * Saved stack environments for processing braces\n   */\n  public envStack: EnvList[];\n\n  /**\n   * The scriptlevel of this text-mode material\n   */\n  public level: number | string | undefined;\n\n  /**\n   * The accumulated MmlNodes generated by parsing the text-mode material\n   */\n  protected nodes: MmlNode[];\n\n  /**\n   * Short-hand for obtaining the saved TexParser\n   */\n  public get texParser() {\n    return this.configuration.packageData.get('textmacros').texParser;\n  }\n\n  /**\n   * @override\n   */\n  public get tags() {\n    return this.texParser.tags;\n  }\n\n  /**\n   * @override\n   * @constructor\n   */\n  constructor(text: string, env: EnvList, configuration: ParseOptions, level?: number | string) {\n    super(text, env, configuration);\n    this.level = level;\n  }\n\n  /**\n   * Make sure we only return one element (wrap multiple ones in an mrow or mstyle, as needed).\n   *\n   * @override\n   */\n  public mml() {\n    return (this.level != null ?\n            this.create('node', 'mstyle', this.nodes, {displaystyle: false, scriptlevel: this.level}) :\n            this.nodes.length === 1 ? this.nodes[0] : this.create('node', 'mrow', this.nodes));\n  }\n\n  /**\n   * @override\n   */\n  public Parse() {\n    this.text = '';\n    this.nodes = [];\n    this.envStack = [];\n    super.Parse();\n  }\n\n  /**\n   * Creates an mtext element for the saved text and pushes that onto the node list\n   */\n  public saveText() {\n    if (this.text) {\n      const mathvariant = this.stack.env.mathvariant;\n      const text = ParseUtil.internalText(this, this.text, mathvariant ? {mathvariant} : {});\n      this.text = '';\n      this.Push(text);\n    }\n  }\n\n  /**\n   * @override\n   */\n  public Push(mml: MmlNode | StackItem) {\n    if (this.text) {\n      this.saveText();\n    }\n    if (mml instanceof StopItem) {\n      return super.Push(mml);\n    }\n    if (mml instanceof StyleItem) {\n      this.stack.env.mathcolor = this.stack.env.color;\n      return;\n    }\n    if (mml instanceof AbstractMmlNode) {\n      this.addAttributes(mml);\n      this.nodes.push(mml);\n    }\n  }\n\n  /**\n   * Push some math into the node list, adding mathsize and mathcolor\n   *   if specified in the environment.\n   *\n   * @param {MmlNode} mml   The math nodes to push\n   */\n  public PushMath(mml: MmlNode) {\n    const env = this.stack.env;\n    if (!mml.isKind('TeXAtom')) {\n      mml = this.create('node', 'TeXAtom', [mml]);  // make sure the math is an ORD\n    }\n    for (const name of ['mathsize', 'mathcolor']) {\n      if (env[name] && !mml.attributes.getExplicit(name)) {\n        if (!mml.isToken && !mml.isKind('mstyle')) {\n          mml = this.create('node', 'mstyle', [mml]);\n        }\n        NodeUtil.setAttribute(mml, name, env[name]);\n      }\n    }\n    if (mml.isInferred) {\n      mml = this.create('node', 'mrow', mml.childNodes);\n    }\n    this.nodes.push(mml);\n  }\n\n  /**\n   * Add mathsize, mathcolor, and mathvariant to token nodes,\n   *   if they are specified in the environment\n   *\n   * @param {MmlNode} mml   The node to adjust\n   */\n  public addAttributes(mml: MmlNode) {\n    const env = this.stack.env;\n    if (!mml.isToken) return;\n    for (const name of ['mathsize', 'mathcolor', 'mathvariant']) {\n      if (env[name] && !mml.attributes.getExplicit(name)) {\n        NodeUtil.setAttribute(mml, name, env[name]);\n      }\n    }\n  }\n\n  /**\n   * Process the argument as text with the given environment settings\n   *\n   * @param {string} name   The macro that is calling for a parameter\n   * @param {EnvList} env   The environment to use\n   */\n  public ParseTextArg(name: string, env: EnvList) {\n    const text = this.GetArgument(name);\n    env = Object.assign(Object.assign({}, this.stack.env), env);\n    return (new TextParser(text, env, this.configuration)).mml();\n  }\n\n  /**\n   * Process an argument as text rather than math\n   *\n   * @override\n   */\n  public ParseArg(name: string) {\n    return (new TextParser(this.GetArgument(name), this.stack.env, this.configuration)).mml();\n  }\n\n  /**\n   * Throw an error\n   *\n   * @param {string} id        The id for the message string\n   * @param {string} message   The English version of the message\n   * @param {string[]} args    Any substitution args for the message\n   */\n  public Error(id: string, message: string, ...args: string[]) {\n    throw new TexError(id, message, ...args);\n  }\n\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18504, "column": 0}, "map": {"version":3,"file":"TextcompMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/textcomp/TextcompMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Mappings for the textcomp package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\n\nimport {CommandMap} from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {TextMacrosMethods} from '../textmacros/TextMacrosMethods.js';\nimport TexParser from '../TexParser.js';\nimport ParseUtil from '../ParseUtil.js';\nimport {TextParser} from '../textmacros/TextParser.js';\n\n\n/**\n * Identifiers from the Textcomp package.\n */\nnew CommandMap('textcomp-macros', {\n\n  // Table 3: Predefined LATEX 2ε Text-Mode Commands\n  'textasciicircum':     ['Insert', '\\u005E'],\n  'textasciitilde':      ['Insert', '\\u007E'],\n  'textasteriskcentered': ['Insert', '\\u002A'],\n  'textbackslash':       ['Insert', '\\u005C'],\n  'textbar':             ['Insert', '\\u007C'],\n  'textbraceleft':       ['Insert', '\\u007B'],\n  'textbraceright':      ['Insert', '\\u007D'],\n  'textbullet':          ['Insert', '\\u2022'],\n  'textdagger':          ['Insert', '\\u2020'],\n  'textdaggerdbl':       ['Insert', '\\u2021'],\n  'textellipsis':        ['Insert', '\\u2026'],\n  'textemdash':          ['Insert', '\\u2014'],\n  'textendash':          ['Insert', '\\u2013'],\n  'textexclamdown':      ['Insert', '\\u00A1'],\n  'textgreater':         ['Insert', '\\u003E'],\n  'textless':            ['Insert', '\\u003C'],\n  'textordfeminine':     ['Insert', '\\u00AA'],\n  'textordmasculine':    ['Insert', '\\u00BA'],\n  'textparagraph':       ['Insert', '\\u00B6'],\n  'textperiodcentered':  ['Insert', '\\u00B7'],\n  'textquestiondown':    ['Insert', '\\u00BF'],\n  'textquotedblleft':    ['Insert', '\\u201C'],\n  'textquotedblright':   ['Insert', '\\u201D'],\n  'textquoteleft':       ['Insert', '\\u2018'],\n  'textquoteright':      ['Insert', '\\u2019'],\n  'textsection':         ['Insert', '\\u00A7'],\n  'textunderscore':      ['Insert', '\\u005F'],\n  'textvisiblespace':    ['Insert', '\\u2423'],\n\n  // Table 12: textcomp Diacritics\n  'textacutedbl':        ['Insert', '\\u02DD'],\n  'textasciiacute':      ['Insert', '\\u00B4'],\n  'textasciibreve':      ['Insert', '\\u02D8'],\n  'textasciicaron':      ['Insert', '\\u02C7'],\n  'textasciidieresis':   ['Insert', '\\u00A8'],\n  'textasciimacron':     ['Insert', '\\u00AF'],\n  'textgravedbl':        ['Insert', '\\u02F5'],\n  'texttildelow':        ['Insert', '\\u02F7'],\n\n  // Table 13: textcomp Currency Symbols\n  'textbaht':            ['Insert', '\\u0E3F'],\n  'textcent':            ['Insert', '\\u00A2'],\n  'textcolonmonetary':   ['Insert', '\\u20A1'],\n  'textcurrency':        ['Insert', '\\u00A4'],\n  'textdollar':          ['Insert', '\\u0024'],\n  'textdong':            ['Insert', '\\u20AB'],\n  'texteuro':            ['Insert', '\\u20AC'],\n  'textflorin':          ['Insert', '\\u0192'],\n  'textguarani':         ['Insert', '\\u20B2'],\n  'textlira':            ['Insert', '\\u20A4'],\n  'textnaira':           ['Insert', '\\u20A6'],\n  'textpeso':            ['Insert', '\\u20B1'],\n  'textsterling':        ['Insert', '\\u00A3'],\n  'textwon':             ['Insert', '\\u20A9'],\n  'textyen':             ['Insert', '\\u00A5'],\n\n  // Table 15: textcomp Legal Symbols\n  'textcircledP':        ['Insert', '\\u2117'],\n  'textcompwordmark':    ['Insert', '\\u200C'],\n  'textcopyleft':        ['Insert', '\\u{1F12F}'],\n  'textcopyright':       ['Insert', '\\u00A9'],\n  'textregistered':      ['Insert', '\\u00AE'],\n  'textservicemark':     ['Insert', '\\u2120'],\n  'texttrademark':       ['Insert', '\\u2122'],\n\n  // Table 20: Miscellaneous textcomp Symbol\n  'textbardbl':          ['Insert', '\\u2016'],\n  'textbigcircle':       ['Insert', '\\u25EF'],\n  'textblank':           ['Insert', '\\u2422'],\n  'textbrokenbar':       ['Insert', '\\u00A6'],\n  'textdiscount':        ['Insert', '\\u2052'],\n  'textestimated':       ['Insert', '\\u212E'],\n  'textinterrobang':     ['Insert', '\\u203D'],\n  'textinterrobangdown': ['Insert', '\\u2E18'],\n  'textmusicalnote':     ['Insert', '\\u266A'],\n  'textnumero':          ['Insert', '\\u2116'],\n  'textopenbullet':      ['Insert', '\\u25E6'],\n  'textpertenthousand':  ['Insert', '\\u2031'],\n  'textperthousand':     ['Insert', '\\u2030'],\n  'textrecipe':          ['Insert', '\\u211E'],\n  'textreferencemark':   ['Insert', '\\u203B'],\n  // 'textthreequartersemdash'\n  // 'texttwelveudash'\n\n  // Table 51: textcomp Text-Mode Delimiters\n  'textlangle':          ['Insert', '\\u2329'],\n  'textrangle':          ['Insert', '\\u232A'],\n  'textlbrackdbl':       ['Insert', '\\u27E6'],\n  'textrbrackdbl':       ['Insert', '\\u27E7'],\n  'textlquill':          ['Insert', '\\u2045'],\n  'textrquill':          ['Insert', '\\u2046'],\n\n  // Table 62: textcomp Text-Mode Math and Science Symbols\n  'textcelsius':         ['Insert', '\\u2103'],\n  'textdegree':          ['Insert', '\\u00B0'],\n  'textdiv':             ['Insert', '\\u00F7'],\n  'textdownarrow':       ['Insert', '\\u2193'],\n  'textfractionsolidus': ['Insert', '\\u2044'],\n  'textleftarrow':       ['Insert', '\\u2190'],\n  'textlnot':            ['Insert', '\\u00AC'],\n  'textmho':             ['Insert', '\\u2127'],\n  'textminus':           ['Insert', '\\u2212'],\n  'textmu':              ['Insert', '\\u00B5'],\n  'textohm':             ['Insert', '\\u2126'],\n  'textonehalf':         ['Insert', '\\u00BD'],\n  'textonequarter':      ['Insert', '\\u00BC'],\n  'textonesuperior':     ['Insert', '\\u00B9'],\n  'textpm':              ['Insert', '\\u00B1'],\n  'textrightarrow':      ['Insert', '\\u2192'],\n  'textsurd':            ['Insert', '\\u221A'],\n  'textthreequarters':   ['Insert', '\\u00BE'],\n  'textthreesuperior':   ['Insert', '\\u00B3'],\n  'texttimes':           ['Insert', '\\u00D7'],\n  'texttwosuperior':     ['Insert', '\\u00B2'],\n  'textuparrow':         ['Insert', '\\u2191'],\n\n  // Table 110: textcomp Genealogical Symbols\n  'textborn':            ['Insert', '\\u002A'],\n  'textdied':            ['Insert', '\\u2020'],\n  'textdivorced':        ['Insert', '\\u26AE'],\n  //  'textleaf'\n  'textmarried':         ['Insert', '\\u26AD'],\n\n  // This is not the correct glyph\n  'textcentoldstyle':    ['Insert', '\\u00A2', TexConstant.Variant.OLDSTYLE],\n  // This is not the correct glyph\n  'textdollaroldstyle':  ['Insert', '\\u0024', TexConstant.Variant.OLDSTYLE],\n\n  // Table 16: textcomp Old-Style Numerals\n  'textzerooldstyle':    ['Insert', '0', TexConstant.Variant.OLDSTYLE],\n  'textoneoldstyle':     ['Insert', '1', TexConstant.Variant.OLDSTYLE],\n  'texttwooldstyle':     ['Insert', '2', TexConstant.Variant.OLDSTYLE],\n  'textthreeoldstyle':   ['Insert', '3', TexConstant.Variant.OLDSTYLE],\n  'textfouroldstyle':    ['Insert', '4', TexConstant.Variant.OLDSTYLE],\n  'textfiveoldstyle':    ['Insert', '5', TexConstant.Variant.OLDSTYLE],\n  'textsixoldstyle':     ['Insert', '6', TexConstant.Variant.OLDSTYLE],\n  'textsevenoldstyle':   ['Insert', '7', TexConstant.Variant.OLDSTYLE],\n  'texteightoldstyle':   ['Insert', '8', TexConstant.Variant.OLDSTYLE],\n  'textnineoldstyle':    ['Insert', '9', TexConstant.Variant.OLDSTYLE]\n}, {\n  Insert: function(parser: TexParser, name: string, c: string, font: string) {\n    if (parser instanceof TextParser) {\n      if (!font) {\n        TextMacrosMethods.Insert(parser, name, c);\n        return;\n      }\n      parser.saveText();\n    }\n    parser.Push(ParseUtil.internalText(\n      parser, c, font ? {mathvariant: font} : {}));\n  }\n});\n"],"names":[],"mappings":";;;;;;;;;AAyBA,IAAA,4CAA2C;AAC3C,IAAA,kDAA+C;AAC/C,IAAA,uEAAqE;AAErE,IAAA,iBAAA,4CAAwC;AACxC,IAAA,yDAAuD;AAMvD,IAAI,eAAA,UAAU,CAAC,iBAAiB,EAAE;IAGhC,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,sBAAsB,EAAE;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC5C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,SAAS,EAAc;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,aAAa,EAAU;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,kBAAkB,EAAK;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,oBAAoB,EAAG;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,kBAAkB,EAAK;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,kBAAkB,EAAK;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,mBAAmB,EAAI;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,aAAa,EAAU;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,kBAAkB,EAAK;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAG3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,mBAAmB,EAAI;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAG3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,mBAAmB,EAAI;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,aAAa,EAAU;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,WAAW,EAAY;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,SAAS,EAAc;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,SAAS,EAAc;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAG3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,kBAAkB,EAAK;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,cAAc,EAAS;QAAC,QAAQ;QAAE,cAAW;KAAC;IAC9C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAG3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,WAAW,EAAY;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,qBAAqB,EAAE;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,oBAAoB,EAAG;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,mBAAmB,EAAI;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAK3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAG3C,aAAa,EAAU;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,YAAY,EAAW;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,SAAS,EAAc;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,qBAAqB,EAAE;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,eAAe,EAAQ;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,SAAS,EAAc;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,WAAW,EAAY;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,QAAQ,EAAe;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,SAAS,EAAc;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,aAAa,EAAU;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,QAAQ,EAAe;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,gBAAgB,EAAO;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,mBAAmB,EAAI;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,mBAAmB,EAAI;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,WAAW,EAAY;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,iBAAiB,EAAM;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,aAAa,EAAU;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAG3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,UAAU,EAAa;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAC3C,cAAc,EAAS;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAE3C,aAAa,EAAU;QAAC,QAAQ;QAAE,QAAQ;KAAC;IAG3C,kBAAkB,EAAK;QAAC,QAAQ;QAAE,QAAQ;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IAEzE,oBAAoB,EAAG;QAAC,QAAQ;QAAE,QAAQ;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IAGzE,kBAAkB,EAAK;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,iBAAiB,EAAM;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,iBAAiB,EAAM;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,mBAAmB,EAAI;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,kBAAkB,EAAK;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,kBAAkB,EAAK;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,iBAAiB,EAAM;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,mBAAmB,EAAI;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,mBAAmB,EAAI;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;IACpE,kBAAkB,EAAK;QAAC,QAAQ;QAAE,GAAG;QAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,QAAQ;KAAC;CACrE,EAAE;IACD,MAAM,EAAE,SAAS,MAAiB,EAAE,IAAY,EAAE,CAAS,EAAE,IAAY;QACvE,IAAI,MAAM,YAAY,gBAAA,UAAU,EAAE;YAChC,IAAI,CAAC,IAAI,EAAE;gBACT,uBAAA,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC1C,OAAO;aACR;YACD,MAAM,CAAC,QAAQ,EAAE,CAAC;SACnB;QACD,MAAM,CAAC,IAAI,CAAC,eAAA,OAAS,CAAC,YAAY,CAChC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YAAC,WAAW,EAAE,IAAI;QAAA,CAAC,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC,CAAC,CAAC;IACjD,CAAC;CACF,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19018, "column": 0}, "map": {"version":3,"file":"TextcompConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/textcomp/TextcompConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the textcomp package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport './TextcompMappings.js';\n\n\nexport const TextcompConfiguration = Configuration.create(\n  'textcomp', {\n    handler: {macro: ['textcomp-macros']}\n  }\n);\n\n"],"names":[],"mappings":";;;;;AAwBA,IAAA,oDAAkD;;AAIrC,QAAA,qBAAqB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACvD,UAAU,EAAE;IACV,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,iBAAiB;SAAC;IAAA,CAAC;CACtC,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19032, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19037, "column": 0}, "map": {"version":3,"file":"TextMacrosMappings.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/textmacros/TextMacrosMappings.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview  Character and Macro mappings for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {MacroMap, CommandMap} from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport {TextMacrosMethods} from './TextMacrosMethods.js';\nimport {MATHSPACE} from '../../../util/lengths.js';\n\n//\n//  The special characters in text-mode\n//\nnew MacroMap('text-special', {\n  '$':          'Math',\n  '%':          'Comment',\n  '^':          'MathModeOnly',\n  '_':          'MathModeOnly',\n  '&':          'Misplaced',\n  '#':          'Misplaced',\n  '~':          'Tilde',\n  ' ':          'Space',\n  '\\t':         'Space',\n  '\\r':         'Space',\n  '\\n':         'Space',\n  '\\u00A0':     'Tilde',\n  '{':          'OpenBrace',\n  '}':          'CloseBrace',\n  '`':          'OpenQuote',\n  '\\'':         'CloseQuote'\n}, TextMacrosMethods);\n\n//\n//  The text-mode macro mappings\n//\nnew CommandMap('text-macros', {\n  '(':          'Math',\n\n  '$':          'SelfQuote',\n  '_':          'SelfQuote',\n  '%':          'SelfQuote',\n  '{':          'SelfQuote',\n  '}':          'SelfQuote',\n  ' ':          'SelfQuote',\n  '&':          'SelfQuote',\n  '#':          'SelfQuote',\n  '\\\\':         'SelfQuote',\n\n  '\\'':         ['Accent', '\\u00B4'],\n  '\\u2019':     ['Accent', '\\u00B4'],\n  '`':          ['Accent', '\\u0060'],\n  '\\u2018':     ['Accent', '\\u0060'],\n  '^':          ['Accent', '^'],\n  '\\\"':         ['Accent', '\\u00A8'],\n  '~':          ['Accent', '~'],\n  '=':          ['Accent', '\\u00AF'],\n  '.':          ['Accent', '\\u02D9'],\n  'u':          ['Accent', '\\u02D8'],\n  'v':          ['Accent', '\\u02C7'],\n\n  emph:         'Emph',\n  rm:           ['SetFont', TexConstant.Variant.NORMAL],\n  mit:          ['SetFont', TexConstant.Variant.ITALIC],\n  oldstyle:     ['SetFont', TexConstant.Variant.OLDSTYLE],\n  cal:          ['SetFont', TexConstant.Variant.CALLIGRAPHIC],\n  it:           ['SetFont', '-tex-mathit'], // needs special handling\n  bf:           ['SetFont', TexConstant.Variant.BOLD],\n  bbFont:       ['SetFont', TexConstant.Variant.DOUBLESTRUCK],\n  scr:          ['SetFont', TexConstant.Variant.SCRIPT],\n  frak:         ['SetFont', TexConstant.Variant.FRAKTUR],\n  sf:           ['SetFont', TexConstant.Variant.SANSSERIF],\n  tt:           ['SetFont', TexConstant.Variant.MONOSPACE],\n\n  tiny:         ['SetSize', 0.5],\n  Tiny:         ['SetSize', 0.6],  // non-standard\n  scriptsize:   ['SetSize', 0.7],\n  small:        ['SetSize', 0.85],\n  normalsize:   ['SetSize', 1.0],\n  large:        ['SetSize', 1.2],\n  Large:        ['SetSize', 1.44],\n  LARGE:        ['SetSize', 1.73],\n  huge:         ['SetSize', 2.07],\n  Huge:         ['SetSize', 2.49],\n\n  Bbb:          ['Macro', '{\\\\bbFont #1}', 1],\n  textnormal:   ['Macro', '{\\\\rm #1}', 1],\n  textup:       ['Macro', '{\\\\rm #1}', 1],\n  textrm:       ['Macro', '{\\\\rm #1}', 1],\n  textit:       ['Macro', '{\\\\it #1}', 1],\n  textbf:       ['Macro', '{\\\\bf #1}', 1],\n  textsf:       ['Macro', '{\\\\sf #1}', 1],\n  texttt:       ['Macro', '{\\\\tt #1}', 1],\n\n  dagger:       ['Insert', '\\u2020'],\n  ddagger:      ['Insert', '\\u2021'],\n  S:            ['Insert', '\\u00A7'],\n\n  ',':          ['Spacer', MATHSPACE.thinmathspace],\n  ':':          ['Spacer', MATHSPACE.mediummathspace],\n  '>':          ['Spacer', MATHSPACE.mediummathspace],\n  ';':          ['Spacer', MATHSPACE.thickmathspace],\n  '!':          ['Spacer', MATHSPACE.negativethinmathspace],\n  enspace:      ['Spacer', .5],\n  quad:         ['Spacer', 1],\n  qquad:        ['Spacer', 2],\n  thinspace:    ['Spacer', MATHSPACE.thinmathspace],\n  negthinspace: ['Spacer', MATHSPACE.negativethinmathspace],\n\n  hskip:        'Hskip',\n  hspace:       'Hskip',\n  kern:         'Hskip',\n  mskip:        'Hskip',\n  mspace:       'Hskip',\n  mkern:        'Hskip',\n  rule:         'rule',\n  Rule:         ['Rule'],\n  Space:        ['Rule', 'blank'],\n\n  color:        'CheckAutoload',\n  textcolor:    'CheckAutoload',\n  colorbox:     'CheckAutoload',\n  fcolorbox:    'CheckAutoload',\n  href:         'CheckAutoload',\n  style:        'CheckAutoload',\n  class:        'CheckAutoload',\n  cssId:        'CheckAutoload',\n  unicode:      'CheckAutoload',\n\n  ref:          ['HandleRef', false],\n  eqref:        ['HandleRef', true],\n\n}, TextMacrosMethods);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19332, "column": 0}, "map": {"version":3,"file":"TextMacrosConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/textmacros/TextMacrosConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2020-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the textmacros package\n *\n * @author dpvc@mathjax.org (Davide P. Cervone)\n */\n\nimport {TeX} from '../../tex.js';\nimport TexParser from '../TexParser.js';\nimport {Configuration, ParserConfiguration} from '../Configuration.js';\nimport ParseOptions from '../ParseOptions.js';\nimport {TagsFactory} from '../Tags.js';\nimport {StartItem, StopItem, MmlItem, StyleItem} from '../base/BaseItems.js';\nimport {TextParser} from './TextParser.js';\nimport {TextMacrosMethods} from './TextMacrosMethods.js';\nimport {MmlNode} from '../../../core/MmlTree/MmlNode.js';\n\nimport './TextMacrosMappings.js';\n\n/**\n *  The base text macro configuration (used in the TextParser)\n */\nexport const TextBaseConfiguration = Configuration.create('text-base', {\n  parser: 'text',\n  handler: {\n    character: ['command', 'text-special'],\n    macro: ['text-macros']\n  },\n  fallback: {\n    //\n    // Unknown characters are added to the text verbatim\n    //\n    character: (parser: TextParser, c: string) => {\n      parser.text += c;\n    },\n    //\n    // For unknown macros, if they are defined in the main TeX parser\n    //   and not string-replacement macros, give an error, otherwise\n    //   run the macro (this either does the string replacement or\n    //   produces the error as configured in the main TeX parser, so\n    //   this will respect the noundefined package, if loaded).\n    //\n    macro: (parser: TextParser, name: string) => {\n      const texParser = parser.texParser;\n      const macro = texParser.lookup('macro', name);\n      if (macro && macro._func !== TextMacrosMethods.Macro) {\n        parser.Error('MathMacro', '%1 is only supported in math mode', '\\\\' + name);\n      }\n      texParser.parse('macro', [parser, name]);\n    }\n  },\n  items: {\n    [StartItem.prototype.kind]: StartItem,\n    [StopItem.prototype.kind]: StopItem,\n    [MmlItem.prototype.kind]: MmlItem,\n    [StyleItem.prototype.kind]: StyleItem     // needed for \\color\n  }\n});\n\n/**\n * Replacement for ParseUtil.internalMath that handles text-mode macros.\n *\n * @param {TexParser} parser      The TexParser calling this function\n * @param {string} text           The text-mode string to be processed\n * @param {number|string} level   The scriptlevel of the text\n * @param {string} mathvariant    The mathvariant for the text\n * @return {MmlNode[]}            The final MmlNode generated for the text\n */\nfunction internalMath(parser: TexParser, text: string, level?: number | string, mathvariant?: string): MmlNode[] {\n  const config = parser.configuration.packageData.get('textmacros');\n  if (!(parser instanceof TextParser)) {\n    config.texParser = parser;\n  }\n  return [(new TextParser(text, mathvariant ? {mathvariant} : {}, config.parseOptions, level)).mml()];\n}\n\n//\n//  The textmacros package configuration\n//\nexport const TextMacrosConfiguration = Configuration.create('textmacros', {\n  /**\n   * @param {ParserConfiguration} config   The configuration object we are being configured within\n   * @param {TeX<any,any,any>} jax         The TeX input jax in which we are running\n   */\n  config(_config: ParserConfiguration, jax: TeX<any, any, any>) {\n    //\n    //  Create the configuration and parseOptions objects for the\n    //    internal TextParser and add the textBase configuration.\n    //\n    const textConf = new ParserConfiguration(jax.parseOptions.options.textmacros.packages, ['tex', 'text']);\n    textConf.init();\n    const parseOptions = new ParseOptions(textConf, []);\n    parseOptions.options = jax.parseOptions.options;      // share the TeX options\n    textConf.config(jax);\n    TagsFactory.addTags(textConf.tags);\n    parseOptions.tags = TagsFactory.getDefault();\n    parseOptions.tags.configuration = parseOptions;\n    //\n    // Share the TeX input jax's parseOptions packageData object\n    //   so that require and other packages will work in both parsers,\n    //   set the textmacros data (texParser will be filled in later),\n    //   and replace the internalMath function with our own.\n    //\n    parseOptions.packageData = jax.parseOptions.packageData;\n    parseOptions.packageData.set('textmacros', {parseOptions, jax, texParser: null});\n    parseOptions.options.internalMath = internalMath;\n  },\n  preprocessors: [(data: {data: ParseOptions}) => {\n    //\n    //  Set the MmlFactory for the nodeFactory, since it was not available\n    //  durring configuration above.\n    //\n    const config = data.data.packageData.get('textmacros');\n    config.parseOptions.nodeFactory.setMmlFactory(config.jax.mmlFactory);\n  }],\n  options: {\n    textmacros: {\n      packages: ['text-base']    // textmacro packages to load\n    }\n  }\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19425, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19430, "column": 0}, "map": {"version":3,"file":"UpgreekConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/upgreek/UpgreekConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2021-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the upgreek package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {Symbol} from '../Symbol.js';\nimport {CharacterMap} from '../SymbolMap.js';\nimport {TexConstant} from '../TexConstants.js';\nimport TexParser from '../TexParser.js';\n\n\n/**\n * Handle greek mathchar as mi in normal variant.\n * @param {TexParser} parser The current tex parser.\n * @param {Symbol} mchar The parsed symbol.\n */\nfunction mathchar0miNormal(parser: TexParser, mchar: Symbol) {\n  const def = mchar.attributes || {};\n  def.mathvariant = TexConstant.Variant.NORMAL;\n  const node = parser.create('token', 'mi', def, mchar.char);\n  parser.Push(node);\n}\n\n/**\n * Upright Greek characters.\n */\nnew CharacterMap('upgreek', mathchar0miNormal, {\n  upalpha:        '\\u03B1',\n  upbeta:         '\\u03B2',\n  upgamma:        '\\u03B3',\n  updelta:        '\\u03B4',\n  upepsilon:      '\\u03F5',\n  upzeta:         '\\u03B6',\n  upeta:          '\\u03B7',\n  uptheta:        '\\u03B8',\n  upiota:         '\\u03B9',\n  upkappa:        '\\u03BA',\n  uplambda:       '\\u03BB',\n  upmu:           '\\u03BC',\n  upnu:           '\\u03BD',\n  upxi:           '\\u03BE',\n  upomicron:      '\\u03BF',\n  uppi:           '\\u03C0',\n  uprho:          '\\u03C1',\n  upsigma:        '\\u03C3',\n  uptau:          '\\u03C4',\n  upupsilon:      '\\u03C5',\n  upphi:          '\\u03D5',\n  upchi:          '\\u03C7',\n  uppsi:          '\\u03C8',\n  upomega:        '\\u03C9',\n  upvarepsilon:   '\\u03B5',\n  upvartheta:     '\\u03D1',\n  upvarpi:        '\\u03D6',\n  upvarrho:       '\\u03F1',\n  upvarsigma:     '\\u03C2',\n  upvarphi:       '\\u03C6',\n\n  Upgamma:        '\\u0393',\n  Updelta:        '\\u0394',\n  Uptheta:        '\\u0398',\n  Uplambda:       '\\u039B',\n  Upxi:           '\\u039E',\n  Uppi:           '\\u03A0',\n  Upsigma:        '\\u03A3',\n  Upupsilon:      '\\u03A5',\n  Upphi:          '\\u03A6',\n  Uppsi:          '\\u03A8',\n  Upomega:        '\\u03A9'\n});\n\n\nexport const UpgreekConfiguration = Configuration.create(\n  'upgreek', {\n    handler: {macro: ['upgreek']},\n  }\n);\n\n"],"names":[],"mappings":";;;;;AAwBA,IAAA,oDAAkD;AAElD,IAAA,4CAA6C;AAC7C,IAAA,kDAA+C;AAS/C,SAAS,iBAAiB,CAAC,MAAiB,EAAE,KAAa;IACzD,IAAM,GAAG,GAAG,KAAK,CAAC,UAAU,IAAI,CAAA,CAAE,CAAC;IACnC,GAAG,CAAC,WAAW,GAAG,kBAAA,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC;AAKD,IAAI,eAAA,YAAY,CAAC,SAAS,EAAE,iBAAiB,EAAE;IAC7C,OAAO,EAAS,QAAQ;IACxB,MAAM,EAAU,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,SAAS,EAAO,QAAQ;IACxB,MAAM,EAAU,QAAQ;IACxB,KAAK,EAAW,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,MAAM,EAAU,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,QAAQ,EAAQ,QAAQ;IACxB,IAAI,EAAY,QAAQ;IACxB,IAAI,EAAY,QAAQ;IACxB,IAAI,EAAY,QAAQ;IACxB,SAAS,EAAO,QAAQ;IACxB,IAAI,EAAY,QAAQ;IACxB,KAAK,EAAW,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,KAAK,EAAW,QAAQ;IACxB,SAAS,EAAO,QAAQ;IACxB,KAAK,EAAW,QAAQ;IACxB,KAAK,EAAW,QAAQ;IACxB,KAAK,EAAW,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,YAAY,EAAI,QAAQ;IACxB,UAAU,EAAM,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,QAAQ,EAAQ,QAAQ;IACxB,UAAU,EAAM,QAAQ;IACxB,QAAQ,EAAQ,QAAQ;IAExB,OAAO,EAAS,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,QAAQ,EAAQ,QAAQ;IACxB,IAAI,EAAY,QAAQ;IACxB,IAAI,EAAY,QAAQ;IACxB,OAAO,EAAS,QAAQ;IACxB,SAAS,EAAO,QAAQ;IACxB,KAAK,EAAW,QAAQ;IACxB,KAAK,EAAW,QAAQ;IACxB,OAAO,EAAS,QAAQ;CACzB,CAAC,CAAC;AAGU,QAAA,oBAAoB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACtD,SAAS,EAAE;IACT,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,SAAS;SAAC;IAAA,CAAC;CAC9B,CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19499, "column": 0}, "map": {"version":3,"file":"UnicodeConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/unicode/UnicodeConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the unicode package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {EnvList} from '../StackItem.js';\nimport TexParser from '../TexParser.js';\nimport TexError from '../TexError.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport ParseUtil from '../ParseUtil.js';\nimport NodeUtil from '../NodeUtil.js';\nimport {numeric} from '../../../util/Entities.js';\n\n// Namespace\nexport let UnicodeMethods: Record<string, ParseMethod> = {};\n\nlet UnicodeCache: {[key: number]: [number, number, string, number]} = {};\n\n/**\n * Parse function for unicode macro.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the macro.\n */\nUnicodeMethods.Unicode = function(parser: TexParser, name: string) {\n  let HD = parser.GetBrackets(name);\n  let HDsplit = null;\n  let font = null;\n  if (HD) {\n    if (HD.replace(/ /g, '').\n        match(/^(\\d+(\\.\\d*)?|\\.\\d+),(\\d+(\\.\\d*)?|\\.\\d+)$/)) {\n      HDsplit = HD.replace(/ /g, '').split(/,/);\n      font = parser.GetBrackets(name);\n    } else {\n      font = HD;\n    }\n  }\n  let n = ParseUtil.trimSpaces(parser.GetArgument(name)).replace(/^0x/, 'x');\n  if (!n.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)) {\n    throw new TexError('BadUnicode', 'Argument to \\\\unicode must be a number');\n  }\n  let N = parseInt(n.match(/^x/) ? '0' + n : n);\n  if (!UnicodeCache[N]) {\n    UnicodeCache[N] = [800, 200, font, N];\n  } else if (!font) {\n    font = UnicodeCache[N][2];\n  }\n  if (HDsplit) {\n    UnicodeCache[N][0] = Math.floor(parseFloat(HDsplit[0]) * 1000);\n    UnicodeCache[N][1] = Math.floor(parseFloat(HDsplit[1]) * 1000);\n  }\n  let variant = parser.stack.env.font as string;\n  let def: EnvList = {};\n  if (font) {\n    UnicodeCache[N][2] = def.fontfamily = font.replace(/'/g, '\\'');\n    if (variant) {\n      if (variant.match(/bold/)) {\n        def.fontweight = 'bold';\n      }\n      if (variant.match(/italic|-mathit/)) {\n        def.fontstyle = 'italic';\n      }\n    }\n  } else if (variant) {\n    def.mathvariant = variant;\n  }\n  let node = parser.create('token', 'mtext', def, numeric(n));\n  NodeUtil.setProperty(node, 'unicode', true);\n  parser.Push(node);\n};\n\n\nnew CommandMap('unicode', {unicode: 'Unicode'}, UnicodeMethods);\n\n\nexport const UnicodeConfiguration = Configuration.create(\n  'unicode', {handler: {macro: ['unicode']}}\n);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19582, "column": 0}, "map": {"version":3,"file":"VerbConfiguration.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/verb/VerbConfiguration.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n/**\n * @fileoverview Configuration file for the verb package.\n *\n * @author v.sorge@mathjax.org (Volker Sorge)\n */\n\nimport {Configuration} from '../Configuration.js';\nimport {TexConstant} from '../TexConstants.js';\nimport TexParser from '../TexParser.js';\nimport {CommandMap} from '../SymbolMap.js';\nimport {ParseMethod} from '../Types.js';\nimport TexError from '../TexError.js';\n\n\n// Namespace\nexport let VerbMethods: Record<string, ParseMethod> = {};\n\n\n/**\n * Implements the verbatim notation \\verb|...|.\n * @param {TexParser} parser The current tex parser.\n * @param {string} name The name of the calling macro.\n */\nVerbMethods.Verb = function(parser: TexParser, name: string) {\n  const c = parser.GetNext();\n  const start = ++parser.i;\n  if (c === '' ) {\n    throw new TexError('MissingArgFor', 'Missing argument for %1', name);\n  }\n  while (parser.i < parser.string.length &&\n         parser.string.charAt(parser.i) !== c) {\n    parser.i++;\n  }\n  if (parser.i === parser.string.length) {\n    throw new TexError('NoClosingDelim',\n                       'Can\\'t find closing delimiter for %1',\n                       parser.currentCS);\n  }\n  const text = parser.string.slice(start, parser.i).replace(/ /g, '\\u00A0');\n  parser.i++;\n  parser.Push(parser.create('token', 'mtext',\n                            {mathvariant: TexConstant.Variant.MONOSPACE},\n                            text));\n};\n\n\nnew CommandMap('verb', {verb: 'Verb'}, VerbMethods);\n\n\nexport const VerbConfiguration = Configuration.create(\n  'verb', {handler: {macro: ['verb']}}\n);\n"],"names":[],"mappings":";;;;;;;;;;AAwBA,IAAA,oDAAkD;AAClD,IAAA,kDAA+C;AAE/C,IAAA,4CAA2C;AAE3C,IAAA,gBAAA,2CAAsC;AAI3B,QAAA,WAAW,GAAgC,CAAA,CAAE,CAAC;AAQzD,QAAA,WAAW,CAAC,IAAI,GAAG,SAAS,MAAiB,EAAE,IAAY;IACzD,IAAM,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;IAC3B,IAAM,KAAK,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;IACzB,IAAI,CAAC,KAAK,EAAE,EAAG;QACb,MAAM,IAAI,cAAA,OAAQ,CAAC,eAAe,EAAE,yBAAyB,EAAE,IAAI,CAAC,CAAC;KACtE;IACD,MAAO,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,IAC/B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAE;QAC3C,MAAM,CAAC,CAAC,EAAE,CAAC;KACZ;IACD,IAAI,MAAM,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;QACrC,MAAM,IAAI,cAAA,OAAQ,CAAC,gBAAgB,EAChB,sCAAsC,EACtC,MAAM,CAAC,SAAS,CAAC,CAAC;KACtC;IACD,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC1E,MAAM,CAAC,CAAC,EAAE,CAAC;IACX,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,EAChB;QAAC,WAAW,EAAE,kBAAA,WAAW,CAAC,OAAO,CAAC,SAAS;IAAA,CAAC,EAC5C,IAAI,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC;AAGF,IAAI,eAAA,UAAU,CAAC,MAAM,EAAE;IAAC,IAAI,EAAE,MAAM;AAAA,CAAC,EAAE,QAAA,WAAW,CAAC,CAAC;AAGvC,QAAA,iBAAiB,GAAG,mBAAA,aAAa,CAAC,MAAM,CACnD,MAAM,EAAE;IAAC,OAAO,EAAE;QAAC,KAAK,EAAE;YAAC,MAAM;SAAC;IAAA,CAAC;AAAA,CAAC,CACrC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19630, "column": 0}, "map": {"version":3,"file":"AllPackages.js","sources":["file://D%3A/Mitos/admin/node_modules/mathjax-full/ts/input/tex/AllPackages.ts"],"sourcesContent":["/*************************************************************\n *\n *  Copyright (c) 2018-2022 The MathJax Consortium\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n/**\n * @fileoverview  Loads all the TeX extensions\n *\n * @author dpvc@mathjax.org (Davide Cervone)\n */\n\nimport './base/BaseConfiguration.js';\nimport './action/ActionConfiguration.js';\nimport './ams/AmsConfiguration.js';\nimport './amscd/AmsCdConfiguration.js';\nimport './bbox/BboxConfiguration.js';\nimport './boldsymbol/BoldsymbolConfiguration.js';\nimport './braket/BraketConfiguration.js';\nimport './bussproofs/BussproofsConfiguration.js';\nimport './cancel/CancelConfiguration.js';\nimport './cases/CasesConfiguration.js';\nimport './centernot/CenternotConfiguration.js';\nimport './color/ColorConfiguration.js';\nimport './colorv2/ColorV2Configuration.js';\nimport './colortbl/ColortblConfiguration.js';\nimport './configmacros/ConfigMacrosConfiguration.js';\nimport './empheq/EmpheqConfiguration.js';\nimport './enclose/EncloseConfiguration.js';\nimport './extpfeil/ExtpfeilConfiguration.js';\nimport './gensymb/GensymbConfiguration.js';\nimport './html/HtmlConfiguration.js';\nimport './mathtools/MathtoolsConfiguration.js';\nimport './mhchem/MhchemConfiguration.js';\nimport './newcommand/NewcommandConfiguration.js';\nimport './noerrors/NoErrorsConfiguration.js';\nimport './noundefined/NoUndefinedConfiguration.js';\nimport './physics/PhysicsConfiguration.js';\nimport './setoptions/SetOptionsConfiguration.js';\nimport './tagformat/TagFormatConfiguration.js';\nimport './textcomp/TextcompConfiguration.js';\nimport './textmacros/TextMacrosConfiguration.js';\nimport './upgreek/UpgreekConfiguration.js';\nimport './unicode/UnicodeConfiguration.js';\nimport './verb/VerbConfiguration.js';\n\ndeclare const MathJax: any;\nif (typeof MathJax !== 'undefined' && MathJax.loader) {\n  MathJax.loader.preLoad(\n    '[tex]/action',\n    '[tex]/ams',\n    '[tex]/amscd',\n    '[tex]/bbox',\n    '[tex]/boldsymbol',\n    '[tex]/braket',\n    '[tex]/bussproofs',\n    '[tex]/cancel',\n    '[tex]/cases',\n    '[tex]/centernot',\n    '[tex]/color',\n    '[tex]/colorv2',\n    '[tex]/colortbl',\n    '[tex]/empheq',\n    '[tex]/enclose',\n    '[tex]/extpfeil',\n    '[tex]/gensymb',\n    '[tex]/html',\n    '[tex]/mathtools',\n    '[tex]/mhchem',\n    '[tex]/newcommand',\n    '[tex]/noerrors',\n    '[tex]/noundefined',\n    '[tex]/physics',\n    '[tex]/upgreek',\n    '[tex]/unicode',\n    '[tex]/verb',\n    '[tex]/configmacros',\n    '[tex]/tagformat',\n    '[tex]/textcomp',\n    '[tex]/textmacros',\n    '[tex]/setoptions',\n  );\n}\n\nexport const AllPackages: string[] = [\n  'base',\n  'action',\n  'ams',\n  'amscd',\n  'bbox',\n  'boldsymbol',\n  'braket',\n  'bussproofs',\n  'cancel',\n  'cases',\n  'centernot',\n  'color',\n  'colortbl',\n  'empheq',\n  'enclose',\n  'extpfeil',\n  'gensymb',\n  'html',\n  'mathtools',\n  'mhchem',\n  'newcommand',\n  'noerrors',\n  'noundefined',\n  'upgreek',\n  'unicode',\n  'verb',\n  'configmacros',\n  'tagformat',\n  'textcomp',\n  'textmacros'\n];\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,IAAI,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,CAAC,MAAM,EAAE;IACpD,OAAO,CAAC,MAAM,CAAC,OAAO,CACpB,cAAc,EACd,WAAW,EACX,aAAa,EACb,YAAY,EACZ,kBAAkB,EAClB,cAAc,EACd,kBAAkB,EAClB,cAAc,EACd,aAAa,EACb,iBAAiB,EACjB,aAAa,EACb,eAAe,EACf,gBAAgB,EAChB,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,eAAe,EACf,YAAY,EACZ,iBAAiB,EACjB,cAAc,EACd,kBAAkB,EAClB,gBAAgB,EAChB,mBAAmB,EACnB,eAAe,EACf,eAAe,EACf,eAAe,EACf,YAAY,EACZ,oBAAoB,EACpB,iBAAiB,EACjB,gBAAgB,EAChB,kBAAkB,EAClB,kBAAkB,CACnB,CAAC;CACH;AAEY,QAAA,WAAW,GAAa;IACnC,MAAM;IACN,QAAQ;IACR,KAAK;IACL,OAAO;IACP,MAAM;IACN,YAAY;IACZ,QAAQ;IACR,YAAY;IACZ,QAAQ;IACR,OAAO;IACP,WAAW;IACX,OAAO;IACP,UAAU;IACV,QAAQ;IACR,SAAS;IACT,UAAU;IACV,SAAS;IACT,MAAM;IACN,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,UAAU;IACV,aAAa;IACb,SAAS;IACT,SAAS;IACT,MAAM;IACN,cAAc;IACd,WAAW;IACX,UAAU;IACV,YAAY;CACb,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}