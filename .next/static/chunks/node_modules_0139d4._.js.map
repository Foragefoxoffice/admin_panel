{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,IAAIC,cAAAA,iBAAiB,CAACH;IAC9B;IAEA,OAAOC;AACT","ignoreList":[0]}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0]}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAAA;;;;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGP,SAASQ,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUd,UAAUe,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH;YAC7D,MAAMI,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0]}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,cAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0]}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0]}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/react/LexicalComposerContext.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { createContext, useContext } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls.\n\nfunction formatDevErrorMessage(message) {\n  throw new Error(message);\n}\n\nconst LexicalComposerContext = /*#__PURE__*/createContext(null);\nfunction createLexicalComposerContext(parent, theme) {\n  let parentContext = null;\n  if (parent != null) {\n    parentContext = parent[1];\n  }\n  function getTheme() {\n    if (theme != null) {\n      return theme;\n    }\n    return parentContext != null ? parentContext.getTheme() : null;\n  }\n  return {\n    getTheme\n  };\n}\nfunction useLexicalComposerContext() {\n  const composerContext = useContext(LexicalComposerContext);\n  if (composerContext == null) {\n    {\n      formatDevErrorMessage(`LexicalComposerContext.useLexicalComposerContext: cannot find a LexicalComposerContext`);\n    }\n  }\n  return composerContext;\n}\n\nexport { LexicalComposerContext, createLexicalComposerContext, useLexicalComposerContext };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;AAED;;AAEA;;;;;;CAMC,GAED,qEAAqE;AAErE,SAAS,sBAAsB,OAAO;IACpC,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,yBAAyB,WAAW,GAAE,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE;AAC1D,SAAS,6BAA6B,MAAM,EAAE,KAAK;IACjD,IAAI,gBAAgB;IACpB,IAAI,UAAU,MAAM;QAClB,gBAAgB,MAAM,CAAC,EAAE;IAC3B;IACA,SAAS;QACP,IAAI,SAAS,MAAM;YACjB,OAAO;QACT;QACA,OAAO,iBAAiB,OAAO,cAAc,QAAQ,KAAK;IAC5D;IACA,OAAO;QACL;IACF;AACF;AACA,SAAS;IACP,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IACnC,IAAI,mBAAmB,MAAM;QAC3B;YACE,sBAAsB,CAAC,sFAAsF,CAAC;QAChH;IACF;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/lexical/Lexical.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls.\n\nfunction formatDevErrorMessage(message) {\n  throw new Error(message);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst documentMode = CAN_USE_DOM && 'documentMode' in document ? document.documentMode : null;\nconst IS_APPLE = CAN_USE_DOM && /Mac|iPod|iPhone|iPad/.test(navigator.platform);\nconst IS_FIREFOX = CAN_USE_DOM && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);\nconst CAN_USE_BEFORE_INPUT = CAN_USE_DOM && 'InputEvent' in window && !documentMode ? 'getTargetRanges' in new window.InputEvent('input') : false;\nconst IS_SAFARI = CAN_USE_DOM && /Version\\/[\\d.]+.*Safari/.test(navigator.userAgent);\nconst IS_IOS = CAN_USE_DOM && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nconst IS_ANDROID = CAN_USE_DOM && /Android/.test(navigator.userAgent);\n\n// Keep these in case we need to use them in the future.\n// export const IS_WINDOWS: boolean = CAN_USE_DOM && /Win/.test(navigator.platform);\nconst IS_CHROME = CAN_USE_DOM && /^(?=.*Chrome).*/i.test(navigator.userAgent);\n// export const canUseTextInputEvent: boolean = CAN_USE_DOM && 'TextEvent' in window && !documentMode;\n\nconst IS_ANDROID_CHROME = CAN_USE_DOM && IS_ANDROID && IS_CHROME;\nconst IS_APPLE_WEBKIT = CAN_USE_DOM && /AppleWebKit\\/[\\d.]+/.test(navigator.userAgent) && !IS_CHROME;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction normalizeClassNames(...classNames) {\n  const rval = [];\n  for (const className of classNames) {\n    if (className && typeof className === 'string') {\n      for (const [s] of className.matchAll(/\\S+/g)) {\n        rval.push(s);\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// DOM\nconst DOM_ELEMENT_TYPE = 1;\nconst DOM_TEXT_TYPE = 3;\nconst DOM_DOCUMENT_TYPE = 9;\nconst DOM_DOCUMENT_FRAGMENT_TYPE = 11;\n\n// Reconciling\nconst NO_DIRTY_NODES = 0;\nconst HAS_DIRTY_NODES = 1;\nconst FULL_RECONCILE = 2;\n\n// Text node modes\nconst IS_NORMAL = 0;\nconst IS_TOKEN = 1;\nconst IS_SEGMENTED = 2;\n// IS_INERT = 3\n\n// Text node formatting\nconst IS_BOLD = 1;\nconst IS_ITALIC = 1 << 1;\nconst IS_STRIKETHROUGH = 1 << 2;\nconst IS_UNDERLINE = 1 << 3;\nconst IS_CODE = 1 << 4;\nconst IS_SUBSCRIPT = 1 << 5;\nconst IS_SUPERSCRIPT = 1 << 6;\nconst IS_HIGHLIGHT = 1 << 7;\nconst IS_LOWERCASE = 1 << 8;\nconst IS_UPPERCASE = 1 << 9;\nconst IS_CAPITALIZE = 1 << 10;\nconst IS_ALL_FORMATTING = IS_BOLD | IS_ITALIC | IS_STRIKETHROUGH | IS_UNDERLINE | IS_CODE | IS_SUBSCRIPT | IS_SUPERSCRIPT | IS_HIGHLIGHT | IS_LOWERCASE | IS_UPPERCASE | IS_CAPITALIZE;\n\n// Text node details\nconst IS_DIRECTIONLESS = 1;\nconst IS_UNMERGEABLE = 1 << 1;\n\n// Element node formatting\nconst IS_ALIGN_LEFT = 1;\nconst IS_ALIGN_CENTER = 2;\nconst IS_ALIGN_RIGHT = 3;\nconst IS_ALIGN_JUSTIFY = 4;\nconst IS_ALIGN_START = 5;\nconst IS_ALIGN_END = 6;\n\n// Reconciliation\nconst NON_BREAKING_SPACE = '\\u00A0';\nconst ZERO_WIDTH_SPACE = '\\u200b';\n\n// For iOS/Safari we use a non breaking space, otherwise the cursor appears\n// overlapping the composed text.\nconst COMPOSITION_SUFFIX = IS_SAFARI || IS_IOS || IS_APPLE_WEBKIT ? NON_BREAKING_SPACE : ZERO_WIDTH_SPACE;\nconst DOUBLE_LINE_BREAK = '\\n\\n';\n\n// For FF, we need to use a non-breaking space, or it gets composition\n// in a stuck state.\nconst COMPOSITION_START_CHAR = IS_FIREFOX ? NON_BREAKING_SPACE : COMPOSITION_SUFFIX;\nconst RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\nconst LTR = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' + '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' + '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF';\n\n// eslint-disable-next-line no-misleading-character-class\nconst RTL_REGEX = new RegExp('^[^' + LTR + ']*[' + RTL + ']');\n// eslint-disable-next-line no-misleading-character-class\nconst LTR_REGEX = new RegExp('^[^' + RTL + ']*[' + LTR + ']');\nconst TEXT_TYPE_TO_FORMAT = {\n  bold: IS_BOLD,\n  capitalize: IS_CAPITALIZE,\n  code: IS_CODE,\n  highlight: IS_HIGHLIGHT,\n  italic: IS_ITALIC,\n  lowercase: IS_LOWERCASE,\n  strikethrough: IS_STRIKETHROUGH,\n  subscript: IS_SUBSCRIPT,\n  superscript: IS_SUPERSCRIPT,\n  underline: IS_UNDERLINE,\n  uppercase: IS_UPPERCASE\n};\nconst DETAIL_TYPE_TO_DETAIL = {\n  directionless: IS_DIRECTIONLESS,\n  unmergeable: IS_UNMERGEABLE\n};\nconst ELEMENT_TYPE_TO_FORMAT = {\n  center: IS_ALIGN_CENTER,\n  end: IS_ALIGN_END,\n  justify: IS_ALIGN_JUSTIFY,\n  left: IS_ALIGN_LEFT,\n  right: IS_ALIGN_RIGHT,\n  start: IS_ALIGN_START\n};\nconst ELEMENT_FORMAT_TO_TYPE = {\n  [IS_ALIGN_CENTER]: 'center',\n  [IS_ALIGN_END]: 'end',\n  [IS_ALIGN_JUSTIFY]: 'justify',\n  [IS_ALIGN_LEFT]: 'left',\n  [IS_ALIGN_RIGHT]: 'right',\n  [IS_ALIGN_START]: 'start'\n};\nconst TEXT_MODE_TO_TYPE = {\n  normal: IS_NORMAL,\n  segmented: IS_SEGMENTED,\n  token: IS_TOKEN\n};\nconst TEXT_TYPE_TO_MODE = {\n  [IS_NORMAL]: 'normal',\n  [IS_SEGMENTED]: 'segmented',\n  [IS_TOKEN]: 'token'\n};\nconst NODE_STATE_KEY = '$';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction $garbageCollectDetachedDecorators(editor, pendingEditorState) {\n  const currentDecorators = editor._decorators;\n  const pendingDecorators = editor._pendingDecorators;\n  let decorators = pendingDecorators || currentDecorators;\n  const nodeMap = pendingEditorState._nodeMap;\n  let key;\n  for (key in decorators) {\n    if (!nodeMap.has(key)) {\n      if (decorators === currentDecorators) {\n        decorators = cloneDecorators(editor);\n      }\n      delete decorators[key];\n    }\n  }\n}\nfunction $garbageCollectDetachedDeepChildNodes(node, parentKey, prevNodeMap, nodeMap, nodeMapDelete, dirtyNodes) {\n  let child = node.getFirstChild();\n  while (child !== null) {\n    const childKey = child.__key;\n    // TODO Revise condition below, redundant? LexicalNode already cleans up children when moving Nodes\n    if (child.__parent === parentKey) {\n      if ($isElementNode(child)) {\n        $garbageCollectDetachedDeepChildNodes(child, childKey, prevNodeMap, nodeMap, nodeMapDelete, dirtyNodes);\n      }\n\n      // If we have created a node and it was dereferenced, then also\n      // remove it from out dirty nodes Set.\n      if (!prevNodeMap.has(childKey)) {\n        dirtyNodes.delete(childKey);\n      }\n      nodeMapDelete.push(childKey);\n    }\n    child = child.getNextSibling();\n  }\n}\nfunction $garbageCollectDetachedNodes(prevEditorState, editorState, dirtyLeaves, dirtyElements) {\n  const prevNodeMap = prevEditorState._nodeMap;\n  const nodeMap = editorState._nodeMap;\n  // Store dirtyElements in a queue for later deletion; deleting dirty subtrees too early will\n  // hinder accessing .__next on child nodes\n  const nodeMapDelete = [];\n  for (const [nodeKey] of dirtyElements) {\n    const node = nodeMap.get(nodeKey);\n    if (node !== undefined) {\n      // Garbage collect node and its children if they exist\n      if (!node.isAttached()) {\n        if ($isElementNode(node)) {\n          $garbageCollectDetachedDeepChildNodes(node, nodeKey, prevNodeMap, nodeMap, nodeMapDelete, dirtyElements);\n        }\n        // If we have created a node and it was dereferenced, then also\n        // remove it from out dirty nodes Set.\n        if (!prevNodeMap.has(nodeKey)) {\n          dirtyElements.delete(nodeKey);\n        }\n        nodeMapDelete.push(nodeKey);\n      }\n    }\n  }\n  for (const nodeKey of nodeMapDelete) {\n    nodeMap.delete(nodeKey);\n  }\n  for (const nodeKey of dirtyLeaves) {\n    const node = nodeMap.get(nodeKey);\n    if (node !== undefined && !node.isAttached()) {\n      if (!prevNodeMap.has(nodeKey)) {\n        dirtyLeaves.delete(nodeKey);\n      }\n      nodeMap.delete(nodeKey);\n    }\n  }\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// The time between a text entry event and the mutation observer firing.\nconst TEXT_MUTATION_VARIANCE = 100;\nlet isProcessingMutations = false;\nlet lastTextEntryTimeStamp = 0;\nfunction getIsProcessingMutations() {\n  return isProcessingMutations;\n}\nfunction updateTimeStamp(event) {\n  lastTextEntryTimeStamp = event.timeStamp;\n}\nfunction initTextEntryListener(editor) {\n  if (lastTextEntryTimeStamp === 0) {\n    getWindow(editor).addEventListener('textInput', updateTimeStamp, true);\n  }\n}\nfunction isManagedLineBreak(dom, target, editor) {\n  const isBR = dom.nodeName === 'BR';\n  const lexicalLineBreak = target.__lexicalLineBreak;\n  return lexicalLineBreak && (dom === lexicalLineBreak || isBR && dom.previousSibling === lexicalLineBreak) || isBR && getNodeKeyFromDOMNode(dom, editor) !== undefined;\n}\nfunction getLastSelection(editor) {\n  return editor.getEditorState().read(() => {\n    const selection = $getSelection();\n    return selection !== null ? selection.clone() : null;\n  });\n}\nfunction $handleTextMutation(target, node, editor) {\n  const domSelection = getDOMSelection(getWindow(editor));\n  let anchorOffset = null;\n  let focusOffset = null;\n  if (domSelection !== null && domSelection.anchorNode === target) {\n    anchorOffset = domSelection.anchorOffset;\n    focusOffset = domSelection.focusOffset;\n  }\n  const text = target.nodeValue;\n  if (text !== null) {\n    $updateTextNodeFromDOMContent(node, text, anchorOffset, focusOffset, false);\n  }\n}\nfunction shouldUpdateTextNodeFromMutation(selection, targetDOM, targetNode) {\n  if ($isRangeSelection(selection)) {\n    const anchorNode = selection.anchor.getNode();\n    if (anchorNode.is(targetNode) && selection.format !== anchorNode.getFormat()) {\n      return false;\n    }\n  }\n  return isDOMTextNode(targetDOM) && targetNode.isAttached();\n}\nfunction $getNearestManagedNodePairFromDOMNode(startingDOM, editor, editorState, rootElement) {\n  for (let dom = startingDOM; dom && !isDOMUnmanaged(dom); dom = getParentElement(dom)) {\n    const key = getNodeKeyFromDOMNode(dom, editor);\n    if (key !== undefined) {\n      const node = $getNodeByKey(key, editorState);\n      if (node) {\n        // All decorator nodes are unmanaged\n        return $isDecoratorNode(node) || !isHTMLElement(dom) ? undefined : [dom, node];\n      }\n    } else if (dom === rootElement) {\n      return [rootElement, internalGetRoot(editorState)];\n    }\n  }\n}\nfunction flushMutations(editor, mutations, observer) {\n  isProcessingMutations = true;\n  const shouldFlushTextMutations = performance.now() - lastTextEntryTimeStamp > TEXT_MUTATION_VARIANCE;\n  try {\n    updateEditorSync(editor, () => {\n      const selection = $getSelection() || getLastSelection(editor);\n      const badDOMTargets = new Map();\n      const rootElement = editor.getRootElement();\n      // We use the current editor state, as that reflects what is\n      // actually \"on screen\".\n      const currentEditorState = editor._editorState;\n      const blockCursorElement = editor._blockCursorElement;\n      let shouldRevertSelection = false;\n      let possibleTextForFirefoxPaste = '';\n      for (let i = 0; i < mutations.length; i++) {\n        const mutation = mutations[i];\n        const type = mutation.type;\n        const targetDOM = mutation.target;\n        const pair = $getNearestManagedNodePairFromDOMNode(targetDOM, editor, currentEditorState, rootElement);\n        if (!pair) {\n          continue;\n        }\n        const [nodeDOM, targetNode] = pair;\n        if (type === 'characterData') {\n          // Text mutations are deferred and passed to mutation listeners to be\n          // processed outside of the Lexical engine.\n          if (shouldFlushTextMutations && $isTextNode(targetNode) && isDOMTextNode(targetDOM) && shouldUpdateTextNodeFromMutation(selection, targetDOM, targetNode)) {\n            $handleTextMutation(targetDOM, targetNode, editor);\n          }\n        } else if (type === 'childList') {\n          shouldRevertSelection = true;\n          // We attempt to \"undo\" any changes that have occurred outside\n          // of Lexical. We want Lexical's editor state to be source of truth.\n          // To the user, these will look like no-ops.\n          const addedDOMs = mutation.addedNodes;\n          for (let s = 0; s < addedDOMs.length; s++) {\n            const addedDOM = addedDOMs[s];\n            const node = $getNodeFromDOMNode(addedDOM);\n            const parentDOM = addedDOM.parentNode;\n            if (parentDOM != null && addedDOM !== blockCursorElement && node === null && !isManagedLineBreak(addedDOM, parentDOM, editor)) {\n              if (IS_FIREFOX) {\n                const possibleText = (isHTMLElement(addedDOM) ? addedDOM.innerText : null) || addedDOM.nodeValue;\n                if (possibleText) {\n                  possibleTextForFirefoxPaste += possibleText;\n                }\n              }\n              parentDOM.removeChild(addedDOM);\n            }\n          }\n          const removedDOMs = mutation.removedNodes;\n          const removedDOMsLength = removedDOMs.length;\n          if (removedDOMsLength > 0) {\n            let unremovedBRs = 0;\n            for (let s = 0; s < removedDOMsLength; s++) {\n              const removedDOM = removedDOMs[s];\n              if (isManagedLineBreak(removedDOM, targetDOM, editor) || blockCursorElement === removedDOM) {\n                targetDOM.appendChild(removedDOM);\n                unremovedBRs++;\n              }\n            }\n            if (removedDOMsLength !== unremovedBRs) {\n              badDOMTargets.set(nodeDOM, targetNode);\n            }\n          }\n        }\n      }\n\n      // Now we process each of the unique target nodes, attempting\n      // to restore their contents back to the source of truth, which\n      // is Lexical's \"current\" editor state. This is basically like\n      // an internal revert on the DOM.\n      if (badDOMTargets.size > 0) {\n        for (const [nodeDOM, targetNode] of badDOMTargets) {\n          targetNode.reconcileObservedMutation(nodeDOM, editor);\n        }\n      }\n\n      // Capture all the mutations made during this function. This\n      // also prevents us having to process them on the next cycle\n      // of onMutation, as these mutations were made by us.\n      const records = observer.takeRecords();\n\n      // Check for any random auto-added <br> elements, and remove them.\n      // These get added by the browser when we undo the above mutations\n      // and this can lead to a broken UI.\n      if (records.length > 0) {\n        for (let i = 0; i < records.length; i++) {\n          const record = records[i];\n          const addedNodes = record.addedNodes;\n          const target = record.target;\n          for (let s = 0; s < addedNodes.length; s++) {\n            const addedDOM = addedNodes[s];\n            const parentDOM = addedDOM.parentNode;\n            if (parentDOM != null && addedDOM.nodeName === 'BR' && !isManagedLineBreak(addedDOM, target, editor)) {\n              parentDOM.removeChild(addedDOM);\n            }\n          }\n        }\n\n        // Clear any of those removal mutations\n        observer.takeRecords();\n      }\n      if (selection !== null) {\n        if (shouldRevertSelection) {\n          $setSelection(selection);\n        }\n        if (IS_FIREFOX && isFirefoxClipboardEvents(editor)) {\n          selection.insertRawText(possibleTextForFirefoxPaste);\n        }\n      }\n    });\n  } finally {\n    isProcessingMutations = false;\n  }\n}\nfunction flushRootMutations(editor) {\n  const observer = editor._observer;\n  if (observer !== null) {\n    const mutations = observer.takeRecords();\n    flushMutations(editor, mutations, observer);\n  }\n}\nfunction initMutationObserver(editor) {\n  initTextEntryListener(editor);\n  editor._observer = new MutationObserver((mutations, observer) => {\n    flushMutations(editor, mutations, observer);\n  });\n}\n\nfunction coerceToJSON(v) {\n  return v;\n}\n\n/**\n * The return value of {@link createState}, for use with\n * {@link $getState} and {@link $setState}.\n */\nclass StateConfig {\n  /** The string key used when serializing this state to JSON */\n\n  /** The parse function from the StateValueConfig passed to createState */\n\n  /**\n   * The unparse function from the StateValueConfig passed to createState,\n   * with a default that is simply a pass-through that assumes the value is\n   * JSON serializable.\n   */\n\n  /**\n   * An equality function from the StateValueConfig, with a default of\n   * Object.is.\n   */\n\n  /**\n   * The result of `stateValueConfig.parse(undefined)`, which is computed only\n   * once and used as the default value. When the current value `isEqual` to\n   * the `defaultValue`, it will not be serialized to JSON.\n   */\n\n  constructor(key, stateValueConfig) {\n    this.key = key;\n    this.parse = stateValueConfig.parse.bind(stateValueConfig);\n    this.unparse = (stateValueConfig.unparse || coerceToJSON).bind(stateValueConfig);\n    this.isEqual = (stateValueConfig.isEqual || Object.is).bind(stateValueConfig);\n    this.defaultValue = this.parse(undefined);\n  }\n}\n\n/**\n * For advanced use cases, using this type is not recommended unless\n * it is required (due to TypeScript's lack of features like\n * higher-kinded types).\n *\n * A {@link StateConfig} type with any key and any value that can be\n * used in situations where the key and value type can not be known,\n * such as in a generic constraint when working with a collection of\n * StateConfig.\n *\n * {@link StateConfigKey} and {@link StateConfigValue} will be\n * useful when this is used as a generic constraint.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n/**\n * Get the value type (V) from a StateConfig\n */\n\n/**\n * Get the key type (K) from a StateConfig\n */\n\n/**\n * A value type, or an updater for that value type. For use with\n * {@link $setState} or any user-defined wrappers around it.\n */\n\n/**\n * Configure a value to be used with StateConfig.\n *\n * The value type should be inferred from the definition of parse.\n *\n * If the value type is not JSON serializable, then unparse must also be provided.\n *\n * Values should be treated as immutable, much like React.useState. Mutating\n * stored values directly will cause unpredictable behavior, is not supported,\n * and may trigger errors in the future.\n *\n * @example\n * ```ts\n * const numberOrNullState = createState('numberOrNull', {parse: (v) => typeof v === 'number' ? v : null});\n * //    ^? State<'numberOrNull', StateValueConfig<number | null>>\n * const numberState = createState('number', {parse: (v) => typeof v === 'number' ? v : 0});\n * //    ^? State<'number', StateValueConfig<number>>\n * ```\n *\n * Only the parse option is required, it is generally not useful to\n * override `unparse` or `isEqual`. However, if you are using\n * non-primitive types such as Array, Object, Date, or something\n * more exotic then you would want to override this. In these\n * cases you might want to reach for third party libraries.\n *\n * @example\n * ```ts\n * const isoDateState = createState('isoDate', {\n *   parse: (v): null | Date => {\n *     const date = typeof v === 'string' ? new Date(v) : null;\n *     return date && !isNaN(date.valueOf()) ? date : null;\n *   }\n *   isEqual: (a, b) => a === b || (a && b && a.valueOf() === b.valueOf()),\n *   unparse: (v) => v && v.toString()\n * });\n * ```\n *\n * You may find it easier to write a parse function using libraries like\n * zod, valibot, ajv, Effect, TypeBox, etc. perhaps with a wrapper function.\n */\n\n/**\n * Create a StateConfig for the given string key and StateValueConfig.\n *\n * The key must be locally unique. In dev you wil get a key collision error\n * when you use two separate StateConfig on the same node with the same key.\n *\n * The returned StateConfig value should be used with {@link $getState} and\n * {@link $setState}.\n *\n * @param key The key to use\n * @param valueConfig Configuration for the value type\n * @returns a StateConfig\n */\nfunction createState(key, valueConfig) {\n  return new StateConfig(key, valueConfig);\n}\n\n/**\n * Given two versions of a node and a stateConfig, compare their state values\n * using `$getState(nodeVersion, stateConfig, 'direct')`.\n * If the values are equal according to `stateConfig.isEqual`, return `null`,\n * otherwise return `[value, prevValue]`.\n *\n * This is useful for implementing updateDOM. Note that the `'direct'`\n * version argument is used for both nodes.\n *\n * @param node Any LexicalNode\n * @param prevNode A previous version of node\n * @param stateConfig The configuration of the state to read\n * @returns `[value, prevValue]` if changed, otherwise `null`\n */\nfunction $getStateChange(node, prevNode, stateConfig) {\n  const value = $getState(node, stateConfig, 'direct');\n  const prevValue = $getState(prevNode, stateConfig, 'direct');\n  return stateConfig.isEqual(value, prevValue) ? null : [value, prevValue];\n}\n\n/**\n * The accessor for working with node state. This will read the value for the\n * state on the given node, and will return `stateConfig.defaultValue` if the\n * state has never been set on this node.\n *\n * The `version` parameter is optional and should generally be `'latest'`,\n * consistent with the behavior of other node methods and functions,\n * but for certain use cases such as `updateDOM` you may have a need to\n * use `'direct'` to read the state from a previous version of the node.\n *\n * For very advanced use cases, you can expect that 'direct' does not\n * require an editor state, just like directly accessing other properties\n * of a node without an accessor (e.g. `textNode.__text`).\n *\n * @param node Any LexicalNode\n * @param stateConfig The configuration of the state to read\n * @param version The default value 'latest' will read the latest version of the node state, 'direct' will read the version that is stored on this LexicalNode which not reflect the version used in the current editor state\n * @returns The current value from the state, or the default value provided by the configuration.\n */\nfunction $getState(node, stateConfig, version = 'latest') {\n  const latestOrDirectNode = version === 'latest' ? node.getLatest() : node;\n  const state = latestOrDirectNode.__state;\n  if (state) {\n    $checkCollision(node, stateConfig, state);\n    return state.getValue(stateConfig);\n  }\n  return stateConfig.defaultValue;\n}\n\n/**\n * @internal\n *\n * Register the config to this node's sharedConfigMap and throw an exception in\n * `true` when a collision is detected.\n */\nfunction $checkCollision(node, stateConfig, state) {\n  {\n    const collision = state.sharedConfigMap.get(stateConfig.key);\n    if (collision !== undefined && collision !== stateConfig) {\n      {\n        formatDevErrorMessage(`$setState: State key collision ${JSON.stringify(stateConfig.key)} detected in ${node.constructor.name} node with type ${node.getType()} and key ${node.getKey()}. Only one StateConfig with a given key should be used on a node.`);\n      }\n    }\n  }\n}\n\n/**\n * Set the state defined by stateConfig on node. Like with `React.useState`\n * you may directly specify the value or use an updater function that will\n * be called with the previous value of the state on that node (which will\n * be the `stateConfig.defaultValue` if not set).\n *\n * When an updater function is used, the node will only be marked dirty if\n * `stateConfig.isEqual(prevValue, value)` is false.\n *\n * @example\n * ```ts\n * const toggle = createState('toggle', {parse: Boolean});\n * // set it direction\n * $setState(node, counterState, true);\n * // use an updater\n * $setState(node, counterState, (prev) => !prev);\n * ```\n *\n * @param node The LexicalNode to set the state on\n * @param stateConfig The configuration for this state\n * @param valueOrUpdater The value or updater function\n * @returns node\n */\nfunction $setState(node, stateConfig, valueOrUpdater) {\n  errorOnReadOnly();\n  let value;\n  if (typeof valueOrUpdater === 'function') {\n    const latest = node.getLatest();\n    const prevValue = $getState(latest, stateConfig);\n    value = valueOrUpdater(prevValue);\n    if (stateConfig.isEqual(prevValue, value)) {\n      return latest;\n    }\n  } else {\n    value = valueOrUpdater;\n  }\n  const writable = node.getWritable();\n  const state = $getWritableNodeState(writable);\n  $checkCollision(node, stateConfig, state);\n  state.updateFromKnown(stateConfig, value);\n  return writable;\n}\n/**\n * @internal\n */\nclass NodeState {\n  /**\n   * @internal\n   *\n   * Track the (versioned) node that this NodeState was created for, to\n   * facilitate copy-on-write for NodeState. When a LexicalNode is cloned,\n   * it will *reference* the NodeState from its prevNode. From the nextNode\n   * you can continue to read state without copying, but the first $setState\n   * will trigger a copy of the prevNode's NodeState with the node property\n   * updated.\n   */\n\n  /**\n   * @internal\n   *\n   * State that has already been parsed in a get state, so it is safe. (can be returned with\n   * just a cast since the proof was given before).\n   *\n   * Note that it uses StateConfig, so in addition to (1) the CURRENT VALUE, it has access to\n   * (2) the State key (3) the DEFAULT VALUE and (4) the PARSE FUNCTION\n   */\n\n  /**\n   * @internal\n   *\n   * A copy of serializedNode[NODE_STATE_KEY] that is made when JSON is\n   * imported but has not been parsed yet.\n   *\n   * It stays here until a get state requires us to parse it, and since we\n   * then know the value is safe we move it to knownState and garbage collect\n   * it at the next version.\n   *\n   * Note that since only string keys are used here, we can only allow this\n   * state to pass-through on export or on the next version since there is\n   * no known value configuration. This pass-through is to support scenarios\n   * where multiple versions of the editor code are working in parallel so\n   * an old version of your code doesnt erase metadata that was\n   * set by a newer version of your code.\n   */\n\n  /**\n   * @internal\n   *\n   * This sharedConfigMap is preserved across all versions of a given node and\n   * remains writable. It is how keys are resolved to configuration.\n   */\n\n  /**\n   * @internal\n   *\n   * The count of known or unknown keys in this state, ignoring the\n   * intersection between the two sets.\n   */\n\n  /**\n   * @internal\n   */\n  constructor(node, sharedConfigMap = new Map(), unknownState = undefined, knownState = new Map(), size = undefined) {\n    this.node = node;\n    this.sharedConfigMap = sharedConfigMap;\n    this.unknownState = unknownState;\n    this.knownState = knownState;\n    const computedSize = size !== undefined ? size : computeSize(sharedConfigMap, unknownState, knownState);\n    {\n      if (!(size === undefined || computedSize === size)) {\n        formatDevErrorMessage(`NodeState: size != computedSize (${String(size)} != ${String(computedSize)})`);\n      }\n      for (const stateConfig of knownState.keys()) {\n        if (!sharedConfigMap.has(stateConfig.key)) {\n          formatDevErrorMessage(`NodeState: sharedConfigMap missing knownState key ${stateConfig.key}`);\n        }\n      }\n    }\n    this.size = computedSize;\n  }\n\n  /** @internal */\n  getValue(stateConfig) {\n    const known = this.knownState.get(stateConfig);\n    if (known !== undefined) {\n      return known;\n    }\n    this.sharedConfigMap.set(stateConfig.key, stateConfig);\n    let parsed = stateConfig.defaultValue;\n    if (this.unknownState && stateConfig.key in this.unknownState) {\n      const jsonValue = this.unknownState[stateConfig.key];\n      if (jsonValue !== undefined) {\n        parsed = stateConfig.parse(jsonValue);\n      }\n      // Only update if the key was unknown\n      this.updateFromKnown(stateConfig, parsed);\n    }\n    return parsed;\n  }\n\n  /**\n   * @internal\n   *\n   * Used only for advanced use cases, such as collab. The intent here is to\n   * allow you to diff states with a more stable interface than the properties\n   * of this class.\n   */\n  getInternalState() {\n    return [this.unknownState, this.knownState];\n  }\n\n  /**\n   * Encode this NodeState to JSON in the format that its node expects.\n   * This returns `{[NODE_STATE_KEY]?: UnknownStateRecord}` rather than\n   * `UnknownStateRecord | undefined` so that we can support flattening\n   * specific entries in the future when nodes can declare what\n   * their required StateConfigs are.\n   */\n  toJSON() {\n    const state = {\n      ...this.unknownState\n    };\n    for (const [stateConfig, v] of this.knownState) {\n      if (stateConfig.isEqual(v, stateConfig.defaultValue)) {\n        delete state[stateConfig.key];\n      } else {\n        state[stateConfig.key] = stateConfig.unparse(v);\n      }\n    }\n    return undefinedIfEmpty(state) ? {\n      [NODE_STATE_KEY]: state\n    } : {};\n  }\n\n  /**\n   * @internal\n   *\n   * A NodeState is writable when the node to update matches\n   * the node associated with the NodeState. This basically\n   * mirrors how the EditorState NodeMap works, but in a\n   * bottom-up organization rather than a top-down organization.\n   *\n   * This allows us to implement the same \"copy on write\"\n   * pattern for state, without having the state version\n   * update every time the node version changes (e.g. when\n   * its parent or siblings change).\n   *\n   * @param node The node to associate with the state\n   * @returns The next writaable state\n   */\n  getWritable(node) {\n    if (this.node === node) {\n      return this;\n    }\n    const nextKnownState = new Map(this.knownState);\n    const nextUnknownState = cloneUnknownState(this.unknownState);\n    if (nextUnknownState) {\n      // Garbage collection\n      for (const stateConfig of nextKnownState.keys()) {\n        delete nextUnknownState[stateConfig.key];\n      }\n    }\n    return new NodeState(node, this.sharedConfigMap, undefinedIfEmpty(nextUnknownState), nextKnownState, this.size);\n  }\n\n  /** @internal */\n  updateFromKnown(stateConfig, value) {\n    const key = stateConfig.key;\n    this.sharedConfigMap.set(key, stateConfig);\n    const {\n      knownState,\n      unknownState\n    } = this;\n    if (!(knownState.has(stateConfig) || unknownState && key in unknownState)) {\n      this.size++;\n    }\n    knownState.set(stateConfig, value);\n  }\n\n  /**\n   * @internal\n   *\n   * This is intended for advanced use cases only, such\n   * as collab or dev tools.\n   *\n   * Update a single key value pair from unknown state,\n   * parsing it if the key is known to this node. This is\n   * basically like updateFromJSON, but the effect is\n   * isolated to a single entry.\n   *\n   * @param k The string key from an UnknownStateRecord\n   * @param v The unknown value from an UnknownStateRecord\n   */\n  updateFromUnknown(k, v) {\n    const stateConfig = this.sharedConfigMap.get(k);\n    if (stateConfig) {\n      this.updateFromKnown(stateConfig, stateConfig.parse(v));\n    } else {\n      this.unknownState = this.unknownState || {};\n      if (!(k in this.unknownState)) {\n        this.size++;\n      }\n      this.unknownState[k] = v;\n    }\n  }\n\n  /**\n   * @internal\n   *\n   * Reset all existing state to default or empty values,\n   * and perform any updates from the given unknownState.\n   *\n   * This is used when initializing a node's state from JSON,\n   * or when resetting a node's state from JSON.\n   *\n   * @param unknownState The new state in serialized form\n   */\n  updateFromJSON(unknownState) {\n    const {\n      knownState\n    } = this;\n    // Reset all known state to defaults\n    for (const stateConfig of knownState.keys()) {\n      knownState.set(stateConfig, stateConfig.defaultValue);\n    }\n    // Since we are resetting all state to this new record,\n    // the size starts at the number of known keys\n    // and will be updated as we traverse the new state\n    this.size = knownState.size;\n    this.unknownState = {};\n    if (unknownState) {\n      for (const [k, v] of Object.entries(unknownState)) {\n        this.updateFromUnknown(k, v);\n      }\n    }\n    this.unknownState = undefinedIfEmpty(this.unknownState);\n  }\n}\nfunction computeSize(sharedConfigMap, unknownState, knownState) {\n  let size = knownState.size;\n  if (unknownState) {\n    for (const k in unknownState) {\n      const sharedConfig = sharedConfigMap.get(k);\n      if (!sharedConfig || !knownState.has(sharedConfig)) {\n        size++;\n      }\n    }\n  }\n  return size;\n}\n\n/**\n * Return obj if it is an object with at least one property, otherwise\n * return undefined.\n */\nfunction undefinedIfEmpty(obj) {\n  if (obj) {\n    for (const key in obj) {\n      return obj;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Return undefined if unknownState is undefined or an empty object,\n * otherwise return a shallow clone of it.\n */\nfunction cloneUnknownState(unknownState) {\n  return undefinedIfEmpty(unknownState) && {\n    ...unknownState\n  };\n}\n\n/**\n * @internal\n *\n * Only for direct use in very advanced integrations, such as lexical-yjs.\n * Typically you would only use {@link createState}, {@link $getState}, and\n * {@link $setState}. This is effectively the preamble for {@link $setState}.\n */\nfunction $getWritableNodeState(node) {\n  const writable = node.getWritable();\n  const state = writable.__state ? writable.__state.getWritable(writable) : new NodeState(writable);\n  writable.__state = state;\n  return state;\n}\n\n/**\n * @internal\n *\n * This is used to implement LexicalNode.updateFromJSON and is\n * not intended to be exported from the package.\n *\n * @param node any LexicalNode\n * @param unknownState undefined or a serialized State\n * @returns A writable version of node, with the state set.\n */\nfunction $updateStateFromJSON(node, unknownState) {\n  const writable = node.getWritable();\n  if (unknownState || writable.__state) {\n    $getWritableNodeState(node).updateFromJSON(unknownState);\n  }\n  return writable;\n}\n\n/**\n * @internal\n *\n * Return true if the two nodes have equivalent NodeState, to be used\n * to determine when TextNode are being merged, not a lot of use cases\n * otherwise.\n */\nfunction $nodeStatesAreEquivalent(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && a.size !== b.size) {\n    return false;\n  }\n  const keys = new Set();\n  const hasUnequalMapEntry = (sourceState, otherState) => {\n    for (const [stateConfig, value] of sourceState.knownState) {\n      if (keys.has(stateConfig.key)) {\n        continue;\n      }\n      keys.add(stateConfig.key);\n      const otherValue = otherState ? otherState.getValue(stateConfig) : stateConfig.defaultValue;\n      if (otherValue !== value && !stateConfig.isEqual(otherValue, value)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const hasUnequalRecordEntry = (sourceState, otherState) => {\n    const {\n      unknownState\n    } = sourceState;\n    const otherUnknownState = otherState ? otherState.unknownState : undefined;\n    if (unknownState) {\n      for (const [key, value] of Object.entries(unknownState)) {\n        if (keys.has(key)) {\n          continue;\n        }\n        keys.add(key);\n        const otherValue = otherUnknownState ? otherUnknownState[key] : undefined;\n        if (value !== otherValue) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  return !(a && hasUnequalMapEntry(a, b) || b && hasUnequalMapEntry(b, a) || a && hasUnequalRecordEntry(a, b) || b && hasUnequalRecordEntry(b, a));\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction $canSimpleTextNodesBeMerged(node1, node2) {\n  const node1Mode = node1.__mode;\n  const node1Format = node1.__format;\n  const node1Style = node1.__style;\n  const node2Mode = node2.__mode;\n  const node2Format = node2.__format;\n  const node2Style = node2.__style;\n  const node1State = node1.__state;\n  const node2State = node2.__state;\n  return (node1Mode === null || node1Mode === node2Mode) && (node1Format === null || node1Format === node2Format) && (node1Style === null || node1Style === node2Style) && (node1.__state === null || node1State === node2State || $nodeStatesAreEquivalent(node1State, node2State));\n}\nfunction $mergeTextNodes(node1, node2) {\n  const writableNode1 = node1.mergeWithSibling(node2);\n  const normalizedNodes = getActiveEditor()._normalizedNodes;\n  normalizedNodes.add(node1.__key);\n  normalizedNodes.add(node2.__key);\n  return writableNode1;\n}\nfunction $normalizeTextNode(textNode) {\n  let node = textNode;\n  if (node.__text === '' && node.isSimpleText() && !node.isUnmergeable()) {\n    node.remove();\n    return;\n  }\n\n  // Backward\n  let previousNode;\n  while ((previousNode = node.getPreviousSibling()) !== null && $isTextNode(previousNode) && previousNode.isSimpleText() && !previousNode.isUnmergeable()) {\n    if (previousNode.__text === '') {\n      previousNode.remove();\n    } else if ($canSimpleTextNodesBeMerged(previousNode, node)) {\n      node = $mergeTextNodes(previousNode, node);\n      break;\n    } else {\n      break;\n    }\n  }\n\n  // Forward\n  let nextNode;\n  while ((nextNode = node.getNextSibling()) !== null && $isTextNode(nextNode) && nextNode.isSimpleText() && !nextNode.isUnmergeable()) {\n    if (nextNode.__text === '') {\n      nextNode.remove();\n    } else if ($canSimpleTextNodesBeMerged(node, nextNode)) {\n      node = $mergeTextNodes(node, nextNode);\n      break;\n    } else {\n      break;\n    }\n  }\n}\nfunction $normalizeSelection(selection) {\n  $normalizePoint(selection.anchor);\n  $normalizePoint(selection.focus);\n  return selection;\n}\nfunction $normalizePoint(point) {\n  while (point.type === 'element') {\n    const node = point.getNode();\n    const offset = point.offset;\n    let nextNode;\n    let nextOffsetAtEnd;\n    if (offset === node.getChildrenSize()) {\n      nextNode = node.getChildAtIndex(offset - 1);\n      nextOffsetAtEnd = true;\n    } else {\n      nextNode = node.getChildAtIndex(offset);\n      nextOffsetAtEnd = false;\n    }\n    if ($isTextNode(nextNode)) {\n      point.set(nextNode.__key, nextOffsetAtEnd ? nextNode.getTextContentSize() : 0, 'text', true);\n      break;\n    } else if (!$isElementNode(nextNode)) {\n      break;\n    }\n    point.set(nextNode.__key, nextOffsetAtEnd ? nextNode.getChildrenSize() : 0, 'element', true);\n  }\n}\n\nlet subTreeTextContent = '';\nlet subTreeDirectionedTextContent = '';\nlet subTreeTextFormat = null;\nlet subTreeTextStyle = '';\nlet editorTextContent = '';\nlet activeEditorConfig;\nlet activeEditor$1;\nlet activeEditorNodes;\nlet treatAllNodesAsDirty = false;\nlet activeEditorStateReadOnly = false;\nlet activeMutationListeners;\nlet activeTextDirection = null;\nlet activeDirtyElements;\nlet activeDirtyLeaves;\nlet activePrevNodeMap;\nlet activeNextNodeMap;\nlet activePrevKeyToDOMMap;\nlet mutatedNodes;\nfunction destroyNode(key, parentDOM) {\n  const node = activePrevNodeMap.get(key);\n  if (parentDOM !== null) {\n    const dom = getPrevElementByKeyOrThrow(key);\n    if (dom.parentNode === parentDOM) {\n      parentDOM.removeChild(dom);\n    }\n  }\n\n  // This logic is really important, otherwise we will leak DOM nodes\n  // when their corresponding LexicalNodes are removed from the editor state.\n  if (!activeNextNodeMap.has(key)) {\n    activeEditor$1._keyToDOMMap.delete(key);\n  }\n  if ($isElementNode(node)) {\n    const children = createChildrenArray(node, activePrevNodeMap);\n    destroyChildren(children, 0, children.length - 1, null);\n  }\n  if (node !== undefined) {\n    setMutatedNode(mutatedNodes, activeEditorNodes, activeMutationListeners, node, 'destroyed');\n  }\n}\nfunction destroyChildren(children, _startIndex, endIndex, dom) {\n  let startIndex = _startIndex;\n  for (; startIndex <= endIndex; ++startIndex) {\n    const child = children[startIndex];\n    if (child !== undefined) {\n      destroyNode(child, dom);\n    }\n  }\n}\nfunction setTextAlign(domStyle, value) {\n  domStyle.setProperty('text-align', value);\n}\nconst DEFAULT_INDENT_VALUE = '40px';\nfunction setElementIndent(dom, indent) {\n  const indentClassName = activeEditorConfig.theme.indent;\n  if (typeof indentClassName === 'string') {\n    const elementHasClassName = dom.classList.contains(indentClassName);\n    if (indent > 0 && !elementHasClassName) {\n      dom.classList.add(indentClassName);\n    } else if (indent < 1 && elementHasClassName) {\n      dom.classList.remove(indentClassName);\n    }\n  }\n  const indentationBaseValue = getComputedStyle(dom).getPropertyValue('--lexical-indent-base-value') || DEFAULT_INDENT_VALUE;\n  dom.style.setProperty('padding-inline-start', indent === 0 ? '' : `calc(${indent} * ${indentationBaseValue})`);\n}\nfunction setElementFormat(dom, format) {\n  const domStyle = dom.style;\n  if (format === 0) {\n    setTextAlign(domStyle, '');\n  } else if (format === IS_ALIGN_LEFT) {\n    setTextAlign(domStyle, 'left');\n  } else if (format === IS_ALIGN_CENTER) {\n    setTextAlign(domStyle, 'center');\n  } else if (format === IS_ALIGN_RIGHT) {\n    setTextAlign(domStyle, 'right');\n  } else if (format === IS_ALIGN_JUSTIFY) {\n    setTextAlign(domStyle, 'justify');\n  } else if (format === IS_ALIGN_START) {\n    setTextAlign(domStyle, 'start');\n  } else if (format === IS_ALIGN_END) {\n    setTextAlign(domStyle, 'end');\n  }\n}\nfunction $createNode(key, slot) {\n  const node = activeNextNodeMap.get(key);\n  if (node === undefined) {\n    {\n      formatDevErrorMessage(`createNode: node does not exist in nodeMap`);\n    }\n  }\n  const dom = node.createDOM(activeEditorConfig, activeEditor$1);\n  storeDOMWithKey(key, dom, activeEditor$1);\n\n  // This helps preserve the text, and stops spell check tools from\n  // merging or break the spans (which happens if they are missing\n  // this attribute).\n  if ($isTextNode(node)) {\n    dom.setAttribute('data-lexical-text', 'true');\n  } else if ($isDecoratorNode(node)) {\n    dom.setAttribute('data-lexical-decorator', 'true');\n  }\n  if ($isElementNode(node)) {\n    const indent = node.__indent;\n    const childrenSize = node.__size;\n    if (indent !== 0) {\n      setElementIndent(dom, indent);\n    }\n    if (childrenSize !== 0) {\n      const endIndex = childrenSize - 1;\n      const children = createChildrenArray(node, activeNextNodeMap);\n      $createChildrenWithDirection(children, endIndex, node, dom);\n    }\n    const format = node.__format;\n    if (format !== 0) {\n      setElementFormat(dom, format);\n    }\n    if (!node.isInline()) {\n      reconcileElementTerminatingLineBreak(null, node, dom);\n    }\n    if ($textContentRequiresDoubleLinebreakAtEnd(node)) {\n      subTreeTextContent += DOUBLE_LINE_BREAK;\n      editorTextContent += DOUBLE_LINE_BREAK;\n    }\n  } else {\n    const text = node.getTextContent();\n    if ($isDecoratorNode(node)) {\n      const decorator = node.decorate(activeEditor$1, activeEditorConfig);\n      if (decorator !== null) {\n        reconcileDecorator(key, decorator);\n      }\n      // Decorators are always non editable\n      dom.contentEditable = 'false';\n    } else if ($isTextNode(node)) {\n      if (!node.isDirectionless()) {\n        subTreeDirectionedTextContent += text;\n      }\n    }\n    subTreeTextContent += text;\n    editorTextContent += text;\n  }\n  if (slot !== null) {\n    slot.insertChild(dom);\n  }\n  {\n    // Freeze the node in DEV to prevent accidental mutations\n    Object.freeze(node);\n  }\n  setMutatedNode(mutatedNodes, activeEditorNodes, activeMutationListeners, node, 'created');\n  return dom;\n}\nfunction $createChildrenWithDirection(children, endIndex, element, dom) {\n  const previousSubTreeDirectionedTextContent = subTreeDirectionedTextContent;\n  subTreeDirectionedTextContent = '';\n  $createChildren(children, element, 0, endIndex, element.getDOMSlot(dom));\n  reconcileBlockDirection(element, dom);\n  subTreeDirectionedTextContent = previousSubTreeDirectionedTextContent;\n}\nfunction $createChildren(children, element, _startIndex, endIndex, slot) {\n  const previousSubTreeTextContent = subTreeTextContent;\n  subTreeTextContent = '';\n  let startIndex = _startIndex;\n  for (; startIndex <= endIndex; ++startIndex) {\n    $createNode(children[startIndex], slot);\n    const node = activeNextNodeMap.get(children[startIndex]);\n    if (node !== null && $isTextNode(node)) {\n      if (subTreeTextFormat === null) {\n        subTreeTextFormat = node.getFormat();\n      }\n      if (subTreeTextStyle === '') {\n        subTreeTextStyle = node.getStyle();\n      }\n    }\n  }\n  if ($textContentRequiresDoubleLinebreakAtEnd(element)) {\n    subTreeTextContent += DOUBLE_LINE_BREAK;\n  }\n  const dom = slot.element;\n  dom.__lexicalTextContent = subTreeTextContent;\n  subTreeTextContent = previousSubTreeTextContent + subTreeTextContent;\n}\nfunction isLastChildLineBreakOrDecorator(element, nodeMap) {\n  if (element) {\n    const lastKey = element.__last;\n    if (lastKey) {\n      const node = nodeMap.get(lastKey);\n      if (node) {\n        return $isLineBreakNode(node) ? 'line-break' : $isDecoratorNode(node) && node.isInline() ? 'decorator' : null;\n      }\n    }\n    return 'empty';\n  }\n  return null;\n}\n\n// If we end an element with a LineBreakNode, then we need to add an additional <br>\nfunction reconcileElementTerminatingLineBreak(prevElement, nextElement, dom) {\n  const prevLineBreak = isLastChildLineBreakOrDecorator(prevElement, activePrevNodeMap);\n  const nextLineBreak = isLastChildLineBreakOrDecorator(nextElement, activeNextNodeMap);\n  if (prevLineBreak !== nextLineBreak) {\n    nextElement.getDOMSlot(dom).setManagedLineBreak(nextLineBreak);\n  }\n}\nfunction reconcileTextFormat(element) {\n  if (subTreeTextFormat != null && subTreeTextFormat !== element.__textFormat && !activeEditorStateReadOnly) {\n    element.setTextFormat(subTreeTextFormat);\n  }\n}\nfunction reconcileTextStyle(element) {\n  if (subTreeTextStyle !== '' && subTreeTextStyle !== element.__textStyle && !activeEditorStateReadOnly) {\n    element.setTextStyle(subTreeTextStyle);\n  }\n}\nfunction reconcileBlockDirection(element, dom) {\n  const previousSubTreeDirectionTextContent = dom.__lexicalDirTextContent || '';\n  const previousDirection = dom.__lexicalDir || '';\n  if (previousSubTreeDirectionTextContent !== subTreeDirectionedTextContent || previousDirection !== activeTextDirection) {\n    const hasEmptyDirectionedTextContent = subTreeDirectionedTextContent === '';\n    const direction = hasEmptyDirectionedTextContent ? activeTextDirection : getTextDirection(subTreeDirectionedTextContent);\n    if (direction !== previousDirection) {\n      const classList = dom.classList;\n      const theme = activeEditorConfig.theme;\n      let previousDirectionTheme = previousDirection !== null ? theme[previousDirection] : undefined;\n      let nextDirectionTheme = direction !== null ? theme[direction] : undefined;\n\n      // Remove the old theme classes if they exist\n      if (previousDirectionTheme !== undefined) {\n        if (typeof previousDirectionTheme === 'string') {\n          const classNamesArr = normalizeClassNames(previousDirectionTheme);\n          previousDirectionTheme = theme[previousDirection] = classNamesArr;\n        }\n\n        // @ts-ignore: intentional\n        classList.remove(...previousDirectionTheme);\n      }\n      if (direction === null || hasEmptyDirectionedTextContent && direction === 'ltr') {\n        // Remove direction\n        dom.removeAttribute('dir');\n      } else {\n        // Apply the new theme classes if they exist\n        if (nextDirectionTheme !== undefined) {\n          if (typeof nextDirectionTheme === 'string') {\n            const classNamesArr = normalizeClassNames(nextDirectionTheme);\n            // @ts-expect-error: intentional\n            nextDirectionTheme = theme[direction] = classNamesArr;\n          }\n          if (nextDirectionTheme !== undefined) {\n            classList.add(...nextDirectionTheme);\n          }\n        }\n\n        // Update direction\n        dom.dir = direction;\n      }\n      if (!activeEditorStateReadOnly) {\n        const writableNode = element.getWritable();\n        writableNode.__dir = direction;\n      }\n    }\n    activeTextDirection = direction;\n    dom.__lexicalDirTextContent = subTreeDirectionedTextContent;\n    dom.__lexicalDir = direction;\n  }\n}\nfunction $reconcileChildrenWithDirection(prevElement, nextElement, dom) {\n  const previousSubTreeDirectionTextContent = subTreeDirectionedTextContent;\n  subTreeDirectionedTextContent = '';\n  subTreeTextFormat = null;\n  subTreeTextStyle = '';\n  $reconcileChildren(prevElement, nextElement, nextElement.getDOMSlot(dom));\n  reconcileBlockDirection(nextElement, dom);\n  reconcileTextFormat(nextElement);\n  reconcileTextStyle(nextElement);\n  subTreeDirectionedTextContent = previousSubTreeDirectionTextContent;\n}\nfunction createChildrenArray(element, nodeMap) {\n  const children = [];\n  let nodeKey = element.__first;\n  while (nodeKey !== null) {\n    const node = nodeMap.get(nodeKey);\n    if (node === undefined) {\n      {\n        formatDevErrorMessage(`createChildrenArray: node does not exist in nodeMap`);\n      }\n    }\n    children.push(nodeKey);\n    nodeKey = node.__next;\n  }\n  return children;\n}\nfunction $reconcileChildren(prevElement, nextElement, slot) {\n  const previousSubTreeTextContent = subTreeTextContent;\n  const prevChildrenSize = prevElement.__size;\n  const nextChildrenSize = nextElement.__size;\n  subTreeTextContent = '';\n  const dom = slot.element;\n  if (prevChildrenSize === 1 && nextChildrenSize === 1) {\n    const prevFirstChildKey = prevElement.__first;\n    const nextFirstChildKey = nextElement.__first;\n    if (prevFirstChildKey === nextFirstChildKey) {\n      $reconcileNode(prevFirstChildKey, dom);\n    } else {\n      const lastDOM = getPrevElementByKeyOrThrow(prevFirstChildKey);\n      const replacementDOM = $createNode(nextFirstChildKey, null);\n      try {\n        dom.replaceChild(replacementDOM, lastDOM);\n      } catch (error) {\n        if (typeof error === 'object' && error != null) {\n          const msg = `${error.toString()} Parent: ${dom.tagName}, new child: {tag: ${replacementDOM.tagName} key: ${nextFirstChildKey}}, old child: {tag: ${lastDOM.tagName}, key: ${prevFirstChildKey}}.`;\n          throw new Error(msg);\n        } else {\n          throw error;\n        }\n      }\n      destroyNode(prevFirstChildKey, null);\n    }\n    const nextChildNode = activeNextNodeMap.get(nextFirstChildKey);\n    if ($isTextNode(nextChildNode)) {\n      if (subTreeTextFormat === null) {\n        subTreeTextFormat = nextChildNode.getFormat();\n      }\n      if (subTreeTextStyle === '') {\n        subTreeTextStyle = nextChildNode.getStyle();\n      }\n    }\n  } else {\n    const prevChildren = createChildrenArray(prevElement, activePrevNodeMap);\n    const nextChildren = createChildrenArray(nextElement, activeNextNodeMap);\n    if (!(prevChildren.length === prevChildrenSize)) {\n      formatDevErrorMessage(`$reconcileChildren: prevChildren.length !== prevChildrenSize`);\n    }\n    if (!(nextChildren.length === nextChildrenSize)) {\n      formatDevErrorMessage(`$reconcileChildren: nextChildren.length !== nextChildrenSize`);\n    }\n    if (prevChildrenSize === 0) {\n      if (nextChildrenSize !== 0) {\n        $createChildren(nextChildren, nextElement, 0, nextChildrenSize - 1, slot);\n      }\n    } else if (nextChildrenSize === 0) {\n      if (prevChildrenSize !== 0) {\n        const canUseFastPath = slot.after == null && slot.before == null && slot.element.__lexicalLineBreak == null;\n        destroyChildren(prevChildren, 0, prevChildrenSize - 1, canUseFastPath ? null : dom);\n        if (canUseFastPath) {\n          // Fast path for removing DOM nodes\n          dom.textContent = '';\n        }\n      }\n    } else {\n      $reconcileNodeChildren(nextElement, prevChildren, nextChildren, prevChildrenSize, nextChildrenSize, slot);\n    }\n  }\n  if ($textContentRequiresDoubleLinebreakAtEnd(nextElement)) {\n    subTreeTextContent += DOUBLE_LINE_BREAK;\n  }\n  dom.__lexicalTextContent = subTreeTextContent;\n  subTreeTextContent = previousSubTreeTextContent + subTreeTextContent;\n}\nfunction $reconcileNode(key, parentDOM) {\n  const prevNode = activePrevNodeMap.get(key);\n  let nextNode = activeNextNodeMap.get(key);\n  if (prevNode === undefined || nextNode === undefined) {\n    {\n      formatDevErrorMessage(`reconcileNode: prevNode or nextNode does not exist in nodeMap`);\n    }\n  }\n  const isDirty = treatAllNodesAsDirty || activeDirtyLeaves.has(key) || activeDirtyElements.has(key);\n  const dom = getElementByKeyOrThrow(activeEditor$1, key);\n\n  // If the node key points to the same instance in both states\n  // and isn't dirty, we just update the text content cache\n  // and return the existing DOM Node.\n  if (prevNode === nextNode && !isDirty) {\n    if ($isElementNode(prevNode)) {\n      const previousSubTreeTextContent = dom.__lexicalTextContent;\n      if (previousSubTreeTextContent !== undefined) {\n        subTreeTextContent += previousSubTreeTextContent;\n        editorTextContent += previousSubTreeTextContent;\n      }\n      const previousSubTreeDirectionTextContent = dom.__lexicalDirTextContent;\n      if (previousSubTreeDirectionTextContent !== undefined) {\n        subTreeDirectionedTextContent += previousSubTreeDirectionTextContent;\n      }\n    } else {\n      const text = prevNode.getTextContent();\n      if ($isTextNode(prevNode) && !prevNode.isDirectionless()) {\n        subTreeDirectionedTextContent += text;\n      }\n      editorTextContent += text;\n      subTreeTextContent += text;\n    }\n    return dom;\n  }\n  // If the node key doesn't point to the same instance in both maps,\n  // it means it were cloned. If they're also dirty, we mark them as mutated.\n  if (prevNode !== nextNode && isDirty) {\n    setMutatedNode(mutatedNodes, activeEditorNodes, activeMutationListeners, nextNode, 'updated');\n  }\n\n  // Update node. If it returns true, we need to unmount and re-create the node\n  if (nextNode.updateDOM(prevNode, dom, activeEditorConfig)) {\n    const replacementDOM = $createNode(key, null);\n    if (parentDOM === null) {\n      {\n        formatDevErrorMessage(`reconcileNode: parentDOM is null`);\n      }\n    }\n    parentDOM.replaceChild(replacementDOM, dom);\n    destroyNode(key, null);\n    return replacementDOM;\n  }\n  if ($isElementNode(prevNode) && $isElementNode(nextNode)) {\n    // Reconcile element children\n    const nextIndent = nextNode.__indent;\n    if (nextIndent !== prevNode.__indent) {\n      setElementIndent(dom, nextIndent);\n    }\n    const nextFormat = nextNode.__format;\n    if (nextFormat !== prevNode.__format) {\n      setElementFormat(dom, nextFormat);\n    }\n    if (isDirty) {\n      $reconcileChildrenWithDirection(prevNode, nextNode, dom);\n      if (!$isRootNode(nextNode) && !nextNode.isInline()) {\n        reconcileElementTerminatingLineBreak(prevNode, nextNode, dom);\n      }\n    }\n    if ($textContentRequiresDoubleLinebreakAtEnd(nextNode)) {\n      subTreeTextContent += DOUBLE_LINE_BREAK;\n      editorTextContent += DOUBLE_LINE_BREAK;\n    }\n  } else {\n    const text = nextNode.getTextContent();\n    if ($isDecoratorNode(nextNode)) {\n      const decorator = nextNode.decorate(activeEditor$1, activeEditorConfig);\n      if (decorator !== null) {\n        reconcileDecorator(key, decorator);\n      }\n    } else if ($isTextNode(nextNode) && !nextNode.isDirectionless()) {\n      // Handle text content, for LTR, LTR cases.\n      subTreeDirectionedTextContent += text;\n    }\n    subTreeTextContent += text;\n    editorTextContent += text;\n  }\n  if (!activeEditorStateReadOnly && $isRootNode(nextNode) && nextNode.__cachedText !== editorTextContent) {\n    // Cache the latest text content.\n    const nextRootNode = nextNode.getWritable();\n    nextRootNode.__cachedText = editorTextContent;\n    nextNode = nextRootNode;\n  }\n  {\n    // Freeze the node in DEV to prevent accidental mutations\n    Object.freeze(nextNode);\n  }\n  return dom;\n}\nfunction reconcileDecorator(key, decorator) {\n  let pendingDecorators = activeEditor$1._pendingDecorators;\n  const currentDecorators = activeEditor$1._decorators;\n  if (pendingDecorators === null) {\n    if (currentDecorators[key] === decorator) {\n      return;\n    }\n    pendingDecorators = cloneDecorators(activeEditor$1);\n  }\n  pendingDecorators[key] = decorator;\n}\nfunction getNextSibling(element) {\n  let nextSibling = element.nextSibling;\n  if (nextSibling !== null && nextSibling === activeEditor$1._blockCursorElement) {\n    nextSibling = nextSibling.nextSibling;\n  }\n  return nextSibling;\n}\nfunction $reconcileNodeChildren(nextElement, prevChildren, nextChildren, prevChildrenLength, nextChildrenLength, slot) {\n  const prevEndIndex = prevChildrenLength - 1;\n  const nextEndIndex = nextChildrenLength - 1;\n  let prevChildrenSet;\n  let nextChildrenSet;\n  let siblingDOM = slot.getFirstChild();\n  let prevIndex = 0;\n  let nextIndex = 0;\n  while (prevIndex <= prevEndIndex && nextIndex <= nextEndIndex) {\n    const prevKey = prevChildren[prevIndex];\n    const nextKey = nextChildren[nextIndex];\n    if (prevKey === nextKey) {\n      siblingDOM = getNextSibling($reconcileNode(nextKey, slot.element));\n      prevIndex++;\n      nextIndex++;\n    } else {\n      if (prevChildrenSet === undefined) {\n        prevChildrenSet = new Set(prevChildren);\n      }\n      if (nextChildrenSet === undefined) {\n        nextChildrenSet = new Set(nextChildren);\n      }\n      const nextHasPrevKey = nextChildrenSet.has(prevKey);\n      const prevHasNextKey = prevChildrenSet.has(nextKey);\n      if (!nextHasPrevKey) {\n        // Remove prev\n        siblingDOM = getNextSibling(getPrevElementByKeyOrThrow(prevKey));\n        destroyNode(prevKey, slot.element);\n        prevIndex++;\n      } else if (!prevHasNextKey) {\n        // Create next\n        $createNode(nextKey, slot.withBefore(siblingDOM));\n        nextIndex++;\n      } else {\n        // Move next\n        const childDOM = getElementByKeyOrThrow(activeEditor$1, nextKey);\n        if (childDOM === siblingDOM) {\n          siblingDOM = getNextSibling($reconcileNode(nextKey, slot.element));\n        } else {\n          slot.withBefore(siblingDOM).insertChild(childDOM);\n          $reconcileNode(nextKey, slot.element);\n        }\n        prevIndex++;\n        nextIndex++;\n      }\n    }\n    const node = activeNextNodeMap.get(nextKey);\n    if (node !== null && $isTextNode(node)) {\n      if (subTreeTextFormat === null) {\n        subTreeTextFormat = node.getFormat();\n      }\n      if (subTreeTextStyle === '') {\n        subTreeTextStyle = node.getStyle();\n      }\n    }\n  }\n  const appendNewChildren = prevIndex > prevEndIndex;\n  const removeOldChildren = nextIndex > nextEndIndex;\n  if (appendNewChildren && !removeOldChildren) {\n    const previousNode = nextChildren[nextEndIndex + 1];\n    const insertDOM = previousNode === undefined ? null : activeEditor$1.getElementByKey(previousNode);\n    $createChildren(nextChildren, nextElement, nextIndex, nextEndIndex, slot.withBefore(insertDOM));\n  } else if (removeOldChildren && !appendNewChildren) {\n    destroyChildren(prevChildren, prevIndex, prevEndIndex, slot.element);\n  }\n}\nfunction $reconcileRoot(prevEditorState, nextEditorState, editor, dirtyType, dirtyElements, dirtyLeaves) {\n  // We cache text content to make retrieval more efficient.\n  // The cache must be rebuilt during reconciliation to account for any changes.\n  subTreeTextContent = '';\n  editorTextContent = '';\n  subTreeDirectionedTextContent = '';\n  // Rather than pass around a load of arguments through the stack recursively\n  // we instead set them as bindings within the scope of the module.\n  treatAllNodesAsDirty = dirtyType === FULL_RECONCILE;\n  activeTextDirection = null;\n  activeEditor$1 = editor;\n  activeEditorConfig = editor._config;\n  activeEditorNodes = editor._nodes;\n  activeMutationListeners = activeEditor$1._listeners.mutation;\n  activeDirtyElements = dirtyElements;\n  activeDirtyLeaves = dirtyLeaves;\n  activePrevNodeMap = prevEditorState._nodeMap;\n  activeNextNodeMap = nextEditorState._nodeMap;\n  activeEditorStateReadOnly = nextEditorState._readOnly;\n  activePrevKeyToDOMMap = new Map(editor._keyToDOMMap);\n  // We keep track of mutated nodes so we can trigger mutation\n  // listeners later in the update cycle.\n  const currentMutatedNodes = new Map();\n  mutatedNodes = currentMutatedNodes;\n  $reconcileNode('root', null);\n  // We don't want a bunch of void checks throughout the scope\n  // so instead we make it seem that these values are always set.\n  // We also want to make sure we clear them down, otherwise we\n  // can leak memory.\n  // @ts-ignore\n  activeEditor$1 = undefined;\n  // @ts-ignore\n  activeEditorNodes = undefined;\n  // @ts-ignore\n  activeDirtyElements = undefined;\n  // @ts-ignore\n  activeDirtyLeaves = undefined;\n  // @ts-ignore\n  activePrevNodeMap = undefined;\n  // @ts-ignore\n  activeNextNodeMap = undefined;\n  // @ts-ignore\n  activeEditorConfig = undefined;\n  // @ts-ignore\n  activePrevKeyToDOMMap = undefined;\n  // @ts-ignore\n  mutatedNodes = undefined;\n  return currentMutatedNodes;\n}\nfunction storeDOMWithKey(key, dom, editor) {\n  const keyToDOMMap = editor._keyToDOMMap;\n  setNodeKeyOnDOMNode(dom, editor, key);\n  keyToDOMMap.set(key, dom);\n}\nfunction getPrevElementByKeyOrThrow(key) {\n  const element = activePrevKeyToDOMMap.get(key);\n  if (element === undefined) {\n    {\n      formatDevErrorMessage(`Reconciliation: could not find DOM element for node key ${key}`);\n    }\n  }\n  return element;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction createCommand(type) {\n  return {\n    type\n  } ;\n}\nconst SELECTION_CHANGE_COMMAND = createCommand('SELECTION_CHANGE_COMMAND');\nconst SELECTION_INSERT_CLIPBOARD_NODES_COMMAND = createCommand('SELECTION_INSERT_CLIPBOARD_NODES_COMMAND');\nconst CLICK_COMMAND = createCommand('CLICK_COMMAND');\nconst DELETE_CHARACTER_COMMAND = createCommand('DELETE_CHARACTER_COMMAND');\nconst INSERT_LINE_BREAK_COMMAND = createCommand('INSERT_LINE_BREAK_COMMAND');\nconst INSERT_PARAGRAPH_COMMAND = createCommand('INSERT_PARAGRAPH_COMMAND');\nconst CONTROLLED_TEXT_INSERTION_COMMAND = createCommand('CONTROLLED_TEXT_INSERTION_COMMAND');\nconst PASTE_COMMAND = createCommand('PASTE_COMMAND');\nconst REMOVE_TEXT_COMMAND = createCommand('REMOVE_TEXT_COMMAND');\nconst DELETE_WORD_COMMAND = createCommand('DELETE_WORD_COMMAND');\nconst DELETE_LINE_COMMAND = createCommand('DELETE_LINE_COMMAND');\nconst FORMAT_TEXT_COMMAND = createCommand('FORMAT_TEXT_COMMAND');\nconst UNDO_COMMAND = createCommand('UNDO_COMMAND');\nconst REDO_COMMAND = createCommand('REDO_COMMAND');\nconst KEY_DOWN_COMMAND = createCommand('KEYDOWN_COMMAND');\nconst KEY_ARROW_RIGHT_COMMAND = createCommand('KEY_ARROW_RIGHT_COMMAND');\nconst MOVE_TO_END = createCommand('MOVE_TO_END');\nconst KEY_ARROW_LEFT_COMMAND = createCommand('KEY_ARROW_LEFT_COMMAND');\nconst MOVE_TO_START = createCommand('MOVE_TO_START');\nconst KEY_ARROW_UP_COMMAND = createCommand('KEY_ARROW_UP_COMMAND');\nconst KEY_ARROW_DOWN_COMMAND = createCommand('KEY_ARROW_DOWN_COMMAND');\nconst KEY_ENTER_COMMAND = createCommand('KEY_ENTER_COMMAND');\nconst KEY_SPACE_COMMAND = createCommand('KEY_SPACE_COMMAND');\nconst KEY_BACKSPACE_COMMAND = createCommand('KEY_BACKSPACE_COMMAND');\nconst KEY_ESCAPE_COMMAND = createCommand('KEY_ESCAPE_COMMAND');\nconst KEY_DELETE_COMMAND = createCommand('KEY_DELETE_COMMAND');\nconst KEY_TAB_COMMAND = createCommand('KEY_TAB_COMMAND');\nconst INSERT_TAB_COMMAND = createCommand('INSERT_TAB_COMMAND');\nconst INDENT_CONTENT_COMMAND = createCommand('INDENT_CONTENT_COMMAND');\nconst OUTDENT_CONTENT_COMMAND = createCommand('OUTDENT_CONTENT_COMMAND');\nconst DROP_COMMAND = createCommand('DROP_COMMAND');\nconst FORMAT_ELEMENT_COMMAND = createCommand('FORMAT_ELEMENT_COMMAND');\nconst DRAGSTART_COMMAND = createCommand('DRAGSTART_COMMAND');\nconst DRAGOVER_COMMAND = createCommand('DRAGOVER_COMMAND');\nconst DRAGEND_COMMAND = createCommand('DRAGEND_COMMAND');\nconst COPY_COMMAND = createCommand('COPY_COMMAND');\nconst CUT_COMMAND = createCommand('CUT_COMMAND');\nconst SELECT_ALL_COMMAND = createCommand('SELECT_ALL_COMMAND');\nconst CLEAR_EDITOR_COMMAND = createCommand('CLEAR_EDITOR_COMMAND');\nconst CLEAR_HISTORY_COMMAND = createCommand('CLEAR_HISTORY_COMMAND');\nconst CAN_REDO_COMMAND = createCommand('CAN_REDO_COMMAND');\nconst CAN_UNDO_COMMAND = createCommand('CAN_UNDO_COMMAND');\nconst FOCUS_COMMAND = createCommand('FOCUS_COMMAND');\nconst BLUR_COMMAND = createCommand('BLUR_COMMAND');\nconst KEY_MODIFIER_COMMAND = createCommand('KEY_MODIFIER_COMMAND');\n\nconst PASS_THROUGH_COMMAND = Object.freeze({});\nconst ANDROID_COMPOSITION_LATENCY = 30;\nconst rootElementEvents = [['keydown', onKeyDown], ['pointerdown', onPointerDown], ['compositionstart', onCompositionStart], ['compositionend', onCompositionEnd], ['input', onInput], ['click', onClick], ['cut', PASS_THROUGH_COMMAND], ['copy', PASS_THROUGH_COMMAND], ['dragstart', PASS_THROUGH_COMMAND], ['dragover', PASS_THROUGH_COMMAND], ['dragend', PASS_THROUGH_COMMAND], ['paste', PASS_THROUGH_COMMAND], ['focus', PASS_THROUGH_COMMAND], ['blur', PASS_THROUGH_COMMAND], ['drop', PASS_THROUGH_COMMAND]];\nif (CAN_USE_BEFORE_INPUT) {\n  rootElementEvents.push(['beforeinput', (event, editor) => onBeforeInput(event, editor)]);\n}\nlet lastKeyDownTimeStamp = 0;\nlet lastKeyCode = null;\nlet lastBeforeInputInsertTextTimeStamp = 0;\nlet unprocessedBeforeInputData = null;\nconst rootElementsRegistered = new WeakMap();\nlet isSelectionChangeFromDOMUpdate = false;\nlet isSelectionChangeFromMouseDown = false;\nlet isInsertLineBreak = false;\nlet isFirefoxEndingComposition = false;\nlet isSafariEndingComposition = false;\nlet safariEndCompositionEventData = '';\nlet postDeleteSelectionToRestore = null;\nlet collapsedSelectionFormat = [0, '', 0, 'root', 0];\n\n// This function is used to determine if Lexical should attempt to override\n// the default browser behavior for insertion of text and use its own internal\n// heuristics. This is an extremely important function, and makes much of Lexical\n// work as intended between different browsers and across word, line and character\n// boundary/formats. It also is important for text replacement, node schemas and\n// composition mechanics.\nfunction $shouldPreventDefaultAndInsertText(selection, domTargetRange, text, timeStamp, isBeforeInput) {\n  const anchor = selection.anchor;\n  const focus = selection.focus;\n  const anchorNode = anchor.getNode();\n  const editor = getActiveEditor();\n  const domSelection = getDOMSelection(getWindow(editor));\n  const domAnchorNode = domSelection !== null ? domSelection.anchorNode : null;\n  const anchorKey = anchor.key;\n  const backingAnchorElement = editor.getElementByKey(anchorKey);\n  const textLength = text.length;\n  return anchorKey !== focus.key ||\n  // If we're working with a non-text node.\n  !$isTextNode(anchorNode) ||\n  // If we are replacing a range with a single character or grapheme, and not composing.\n  (!isBeforeInput && (!CAN_USE_BEFORE_INPUT ||\n  // We check to see if there has been\n  // a recent beforeinput event for \"textInput\". If there has been one in the last\n  // 50ms then we proceed as normal. However, if there is not, then this is likely\n  // a dangling `input` event caused by execCommand('insertText').\n  lastBeforeInputInsertTextTimeStamp < timeStamp + 50) || anchorNode.isDirty() && textLength < 2 ||\n  // TODO consider if there are other scenarios when multiple code units\n  //      should be addressed here\n  doesContainSurrogatePair(text)) && anchor.offset !== focus.offset && !anchorNode.isComposing() ||\n  // Any non standard text node.\n  $isTokenOrSegmented(anchorNode) ||\n  // If the text length is more than a single character and we're either\n  // dealing with this in \"beforeinput\" or where the node has already recently\n  // been changed (thus is dirty).\n  anchorNode.isDirty() && textLength > 1 ||\n  // If the DOM selection element is not the same as the backing node during beforeinput.\n  (isBeforeInput || !CAN_USE_BEFORE_INPUT) && backingAnchorElement !== null && !anchorNode.isComposing() && domAnchorNode !== getDOMTextNode(backingAnchorElement) ||\n  // If TargetRange is not the same as the DOM selection; browser trying to edit random parts\n  // of the editor.\n  domSelection !== null && domTargetRange !== null && (!domTargetRange.collapsed || domTargetRange.startContainer !== domSelection.anchorNode || domTargetRange.startOffset !== domSelection.anchorOffset) ||\n  // Check if we're changing from bold to italics, or some other format.\n  anchorNode.getFormat() !== selection.format || anchorNode.getStyle() !== selection.style ||\n  // One last set of heuristics to check against.\n  $shouldInsertTextAfterOrBeforeTextNode(selection, anchorNode);\n}\nfunction shouldSkipSelectionChange(domNode, offset) {\n  return isDOMTextNode(domNode) && domNode.nodeValue !== null && offset !== 0 && offset !== domNode.nodeValue.length;\n}\nfunction onSelectionChange(domSelection, editor, isActive) {\n  const {\n    anchorNode: anchorDOM,\n    anchorOffset,\n    focusNode: focusDOM,\n    focusOffset\n  } = domSelection;\n  if (isSelectionChangeFromDOMUpdate) {\n    isSelectionChangeFromDOMUpdate = false;\n\n    // If native DOM selection is on a DOM element, then\n    // we should continue as usual, as Lexical's selection\n    // may have normalized to a better child. If the DOM\n    // element is a text node, we can safely apply this\n    // optimization and skip the selection change entirely.\n    // We also need to check if the offset is at the boundary,\n    // because in this case, we might need to normalize to a\n    // sibling instead.\n    if (shouldSkipSelectionChange(anchorDOM, anchorOffset) && shouldSkipSelectionChange(focusDOM, focusOffset) && !postDeleteSelectionToRestore) {\n      return;\n    }\n  }\n  updateEditorSync(editor, () => {\n    // Non-active editor don't need any extra logic for selection, it only needs update\n    // to reconcile selection (set it to null) to ensure that only one editor has non-null selection.\n    if (!isActive) {\n      $setSelection(null);\n      return;\n    }\n    if (!isSelectionWithinEditor(editor, anchorDOM, focusDOM)) {\n      return;\n    }\n    let selection = $getSelection();\n\n    // Restore selection in the event of incorrect rightward shift after deletion\n    if (postDeleteSelectionToRestore && $isRangeSelection(selection) && selection.isCollapsed()) {\n      const curAnchor = selection.anchor;\n      const prevAnchor = postDeleteSelectionToRestore.anchor;\n      if (\n      // Rightward shift in same node\n      curAnchor.key === prevAnchor.key && curAnchor.offset === prevAnchor.offset + 1 ||\n      // Or rightward shift into sibling node\n      curAnchor.offset === 1 && prevAnchor.getNode().is(curAnchor.getNode().getPreviousSibling())) {\n        // Restore selection\n        selection = postDeleteSelectionToRestore.clone();\n        $setSelection(selection);\n      }\n    }\n    postDeleteSelectionToRestore = null;\n\n    // Update the selection format\n    if ($isRangeSelection(selection)) {\n      const anchor = selection.anchor;\n      const anchorNode = anchor.getNode();\n      if (selection.isCollapsed()) {\n        // Badly interpreted range selection when collapsed - #1482\n        if (domSelection.type === 'Range' && domSelection.anchorNode === domSelection.focusNode) {\n          selection.dirty = true;\n        }\n\n        // If we have marked a collapsed selection format, and we're\n        // within the given time range – then attempt to use that format\n        // instead of getting the format from the anchor node.\n        const windowEvent = getWindow(editor).event;\n        const currentTimeStamp = windowEvent ? windowEvent.timeStamp : performance.now();\n        const [lastFormat, lastStyle, lastOffset, lastKey, timeStamp] = collapsedSelectionFormat;\n        const root = $getRoot();\n        const isRootTextContentEmpty = editor.isComposing() === false && root.getTextContent() === '';\n        if (currentTimeStamp < timeStamp + 200 && anchor.offset === lastOffset && anchor.key === lastKey) {\n          $updateSelectionFormatStyle(selection, lastFormat, lastStyle);\n        } else {\n          if (anchor.type === 'text') {\n            if (!$isTextNode(anchorNode)) {\n              formatDevErrorMessage(`Point.getNode() must return TextNode when type is text`);\n            }\n            $updateSelectionFormatStyleFromTextNode(selection, anchorNode);\n          } else if (anchor.type === 'element' && !isRootTextContentEmpty) {\n            if (!$isElementNode(anchorNode)) {\n              formatDevErrorMessage(`Point.getNode() must return ElementNode when type is element`);\n            }\n            const lastNode = anchor.getNode();\n            if (\n            // This previously applied to all ParagraphNode\n            lastNode.isEmpty()) {\n              $updateSelectionFormatStyleFromElementNode(selection, lastNode);\n            } else {\n              $updateSelectionFormatStyle(selection, 0, '');\n            }\n          }\n        }\n      } else {\n        const anchorKey = anchor.key;\n        const focus = selection.focus;\n        const focusKey = focus.key;\n        const nodes = selection.getNodes();\n        const nodesLength = nodes.length;\n        const isBackward = selection.isBackward();\n        const startOffset = isBackward ? focusOffset : anchorOffset;\n        const endOffset = isBackward ? anchorOffset : focusOffset;\n        const startKey = isBackward ? focusKey : anchorKey;\n        const endKey = isBackward ? anchorKey : focusKey;\n        let combinedFormat = IS_ALL_FORMATTING;\n        let hasTextNodes = false;\n        for (let i = 0; i < nodesLength; i++) {\n          const node = nodes[i];\n          const textContentSize = node.getTextContentSize();\n          if ($isTextNode(node) && textContentSize !== 0 &&\n          // Exclude empty text nodes at boundaries resulting from user's selection\n          !(i === 0 && node.__key === startKey && startOffset === textContentSize || i === nodesLength - 1 && node.__key === endKey && endOffset === 0)) {\n            // TODO: what about style?\n            hasTextNodes = true;\n            combinedFormat &= node.getFormat();\n            if (combinedFormat === 0) {\n              break;\n            }\n          }\n        }\n        selection.format = hasTextNodes ? combinedFormat : 0;\n      }\n    }\n    dispatchCommand(editor, SELECTION_CHANGE_COMMAND, undefined);\n  });\n}\nfunction $updateSelectionFormatStyle(selection, format, style) {\n  if (selection.format !== format || selection.style !== style) {\n    selection.format = format;\n    selection.style = style;\n    selection.dirty = true;\n  }\n}\nfunction $updateSelectionFormatStyleFromTextNode(selection, node) {\n  const format = node.getFormat();\n  const style = node.getStyle();\n  $updateSelectionFormatStyle(selection, format, style);\n}\nfunction $updateSelectionFormatStyleFromElementNode(selection, node) {\n  const format = node.getTextFormat();\n  const style = node.getTextStyle();\n  $updateSelectionFormatStyle(selection, format, style);\n}\n\n// This is a work-around is mainly Chrome specific bug where if you select\n// the contents of an empty block, you cannot easily unselect anything.\n// This results in a tiny selection box that looks buggy/broken. This can\n// also help other browsers when selection might \"appear\" lost, when it\n// really isn't.\nfunction onClick(event, editor) {\n  updateEditorSync(editor, () => {\n    const selection = $getSelection();\n    const domSelection = getDOMSelection(getWindow(editor));\n    const lastSelection = $getPreviousSelection();\n    if (domSelection) {\n      if ($isRangeSelection(selection)) {\n        const anchor = selection.anchor;\n        const anchorNode = anchor.getNode();\n        if (anchor.type === 'element' && anchor.offset === 0 && selection.isCollapsed() && !$isRootNode(anchorNode) && $getRoot().getChildrenSize() === 1 && anchorNode.getTopLevelElementOrThrow().isEmpty() && lastSelection !== null && selection.is(lastSelection)) {\n          domSelection.removeAllRanges();\n          selection.dirty = true;\n        } else if (event.detail === 3 && !selection.isCollapsed()) {\n          // Triple click causing selection to overflow into the nearest element. In that\n          // case visually it looks like a single element content is selected, focus node\n          // is actually at the beginning of the next element (if present) and any manipulations\n          // with selection (formatting) are affecting second element as well\n          const focus = selection.focus;\n          const focusNode = focus.getNode();\n          if (anchorNode !== focusNode) {\n            const parentNode = $findMatchingParent(anchorNode, node => $isElementNode(node) && !node.isInline());\n            if ($isElementNode(parentNode)) {\n              parentNode.select(0);\n            }\n          }\n        }\n      } else if (event.pointerType === 'touch') {\n        // This is used to update the selection on touch devices when the user clicks on text after a\n        // node selection. See isSelectionChangeFromMouseDown for the inverse\n        const domAnchorNode = domSelection.anchorNode;\n        // If the user is attempting to click selection back onto text, then\n        // we should attempt create a range selection.\n        // When we click on an empty paragraph node or the end of a paragraph that ends\n        // with an image/poll, the nodeType will be ELEMENT_NODE\n        if (isHTMLElement(domAnchorNode) || isDOMTextNode(domAnchorNode)) {\n          const newSelection = $internalCreateRangeSelection(lastSelection, domSelection, editor, event);\n          $setSelection(newSelection);\n        }\n      }\n    }\n    dispatchCommand(editor, CLICK_COMMAND, event);\n  });\n}\nfunction onPointerDown(event, editor) {\n  // TODO implement text drag & drop\n  const target = event.target;\n  const pointerType = event.pointerType;\n  if (isDOMNode(target) && pointerType !== 'touch' && event.button === 0) {\n    updateEditorSync(editor, () => {\n      // Drag & drop should not recompute selection until mouse up; otherwise the initially\n      // selected content is lost.\n      if (!$isSelectionCapturedInDecorator(target)) {\n        isSelectionChangeFromMouseDown = true;\n      }\n    });\n  }\n}\nfunction getTargetRange(event) {\n  if (!event.getTargetRanges) {\n    return null;\n  }\n  const targetRanges = event.getTargetRanges();\n  if (targetRanges.length === 0) {\n    return null;\n  }\n  return targetRanges[0];\n}\nfunction $canRemoveText(anchorNode, focusNode) {\n  return anchorNode !== focusNode || $isElementNode(anchorNode) || $isElementNode(focusNode) || !anchorNode.isToken() || !focusNode.isToken();\n}\nfunction isPossiblyAndroidKeyPress(timeStamp) {\n  return lastKeyCode === 'MediaLast' && timeStamp < lastKeyDownTimeStamp + ANDROID_COMPOSITION_LATENCY;\n}\nfunction onBeforeInput(event, editor) {\n  const inputType = event.inputType;\n  const targetRange = getTargetRange(event);\n\n  // We let the browser do its own thing for composition.\n  if (inputType === 'deleteCompositionText' ||\n  // If we're pasting in FF, we shouldn't get this event\n  // as the `paste` event should have triggered, unless the\n  // user has dom.event.clipboardevents.enabled disabled in\n  // about:config. In that case, we need to process the\n  // pasted content in the DOM mutation phase.\n  IS_FIREFOX && isFirefoxClipboardEvents(editor)) {\n    return;\n  } else if (inputType === 'insertCompositionText') {\n    return;\n  }\n  updateEditorSync(editor, () => {\n    const selection = $getSelection();\n    if (inputType === 'deleteContentBackward') {\n      if (selection === null) {\n        // Use previous selection\n        const prevSelection = $getPreviousSelection();\n        if (!$isRangeSelection(prevSelection)) {\n          return;\n        }\n        $setSelection(prevSelection.clone());\n      }\n      if ($isRangeSelection(selection)) {\n        const isSelectionAnchorSameAsFocus = selection.anchor.key === selection.focus.key;\n        if (isPossiblyAndroidKeyPress(event.timeStamp) && editor.isComposing() && isSelectionAnchorSameAsFocus) {\n          $setCompositionKey(null);\n          lastKeyDownTimeStamp = 0;\n          // Fixes an Android bug where selection flickers when backspacing\n          setTimeout(() => {\n            updateEditorSync(editor, () => {\n              $setCompositionKey(null);\n            });\n          }, ANDROID_COMPOSITION_LATENCY);\n          if ($isRangeSelection(selection)) {\n            const anchorNode = selection.anchor.getNode();\n            anchorNode.markDirty();\n            if (!$isTextNode(anchorNode)) {\n              formatDevErrorMessage(`Anchor node must be a TextNode`);\n            }\n            $updateSelectionFormatStyleFromTextNode(selection, anchorNode);\n          }\n        } else {\n          $setCompositionKey(null);\n          event.preventDefault();\n          // Chromium Android at the moment seems to ignore the preventDefault\n          // on 'deleteContentBackward' and still deletes the content. Which leads\n          // to multiple deletions. So we let the browser handle the deletion in this case.\n          const selectedNode = selection.anchor.getNode();\n          const selectedNodeText = selectedNode.getTextContent();\n          // When the target node has `canInsertTextAfter` set to false, the first deletion\n          // doesn't have an effect, so we need to handle it with Lexical.\n          const selectedNodeCanInsertTextAfter = selectedNode.canInsertTextAfter();\n          const hasSelectedAllTextInNode = selection.anchor.offset === 0 && selection.focus.offset === selectedNodeText.length;\n          let shouldLetBrowserHandleDelete = IS_ANDROID_CHROME && isSelectionAnchorSameAsFocus && !hasSelectedAllTextInNode && selectedNodeCanInsertTextAfter;\n          // Check if selection is collapsed and if the previous node is a decorator node\n          // If so, the browser will not be able to handle the deletion\n          if (shouldLetBrowserHandleDelete && selection.isCollapsed()) {\n            shouldLetBrowserHandleDelete = !$isDecoratorNode($getAdjacentNode(selection.anchor, true));\n          }\n          if (!shouldLetBrowserHandleDelete) {\n            dispatchCommand(editor, DELETE_CHARACTER_COMMAND, true);\n            // When deleting across paragraphs, Chrome on Android incorrectly shifts the selection rightwards\n            // We save the correct selection to restore later during handling of selectionchange event\n            const selectionAfterDelete = $getSelection();\n            if (IS_ANDROID_CHROME && $isRangeSelection(selectionAfterDelete) && selectionAfterDelete.isCollapsed()) {\n              postDeleteSelectionToRestore = selectionAfterDelete;\n              // Cleanup in case selectionchange does not fire\n              setTimeout(() => postDeleteSelectionToRestore = null);\n            }\n          }\n        }\n        return;\n      }\n    }\n    if (!$isRangeSelection(selection)) {\n      return;\n    }\n    const data = event.data;\n\n    // This represents the case when two beforeinput events are triggered at the same time (without a\n    // full event loop ending at input). This happens with MacOS with the default keyboard settings,\n    // a combination of autocorrection + autocapitalization.\n    // Having Lexical run everything in controlled mode would fix the issue without additional code\n    // but this would kill the massive performance win from the most common typing event.\n    // Alternatively, when this happens we can prematurely update our EditorState based on the DOM\n    // content, a job that would usually be the input event's responsibility.\n    if (unprocessedBeforeInputData !== null) {\n      $updateSelectedTextFromDOM(false, editor, unprocessedBeforeInputData);\n    }\n    if ((!selection.dirty || unprocessedBeforeInputData !== null) && selection.isCollapsed() && !$isRootNode(selection.anchor.getNode()) && targetRange !== null) {\n      selection.applyDOMRange(targetRange);\n    }\n    unprocessedBeforeInputData = null;\n    const anchor = selection.anchor;\n    const focus = selection.focus;\n    const anchorNode = anchor.getNode();\n    const focusNode = focus.getNode();\n    if (inputType === 'insertText' || inputType === 'insertTranspose') {\n      if (data === '\\n') {\n        event.preventDefault();\n        dispatchCommand(editor, INSERT_LINE_BREAK_COMMAND, false);\n      } else if (data === DOUBLE_LINE_BREAK) {\n        event.preventDefault();\n        dispatchCommand(editor, INSERT_PARAGRAPH_COMMAND, undefined);\n      } else if (data == null && event.dataTransfer) {\n        // Gets around a Safari text replacement bug.\n        const text = event.dataTransfer.getData('text/plain');\n        event.preventDefault();\n        selection.insertRawText(text);\n      } else if (data != null && $shouldPreventDefaultAndInsertText(selection, targetRange, data, event.timeStamp, true)) {\n        event.preventDefault();\n        dispatchCommand(editor, CONTROLLED_TEXT_INSERTION_COMMAND, data);\n      } else {\n        unprocessedBeforeInputData = data;\n      }\n      lastBeforeInputInsertTextTimeStamp = event.timeStamp;\n      return;\n    }\n\n    // Prevent the browser from carrying out\n    // the input event, so we can control the\n    // output.\n    event.preventDefault();\n    switch (inputType) {\n      case 'insertFromYank':\n      case 'insertFromDrop':\n      case 'insertReplacementText':\n        {\n          dispatchCommand(editor, CONTROLLED_TEXT_INSERTION_COMMAND, event);\n          break;\n        }\n      case 'insertFromComposition':\n        {\n          // This is the end of composition\n          $setCompositionKey(null);\n          dispatchCommand(editor, CONTROLLED_TEXT_INSERTION_COMMAND, event);\n          break;\n        }\n      case 'insertLineBreak':\n        {\n          // Used for Android\n          $setCompositionKey(null);\n          dispatchCommand(editor, INSERT_LINE_BREAK_COMMAND, false);\n          break;\n        }\n      case 'insertParagraph':\n        {\n          // Used for Android\n          $setCompositionKey(null);\n\n          // Safari does not provide the type \"insertLineBreak\".\n          // So instead, we need to infer it from the keyboard event.\n          // We do not apply this logic to iOS to allow newline auto-capitalization\n          // work without creating linebreaks when pressing Enter\n          if (isInsertLineBreak && !IS_IOS) {\n            isInsertLineBreak = false;\n            dispatchCommand(editor, INSERT_LINE_BREAK_COMMAND, false);\n          } else {\n            dispatchCommand(editor, INSERT_PARAGRAPH_COMMAND, undefined);\n          }\n          break;\n        }\n      case 'insertFromPaste':\n      case 'insertFromPasteAsQuotation':\n        {\n          dispatchCommand(editor, PASTE_COMMAND, event);\n          break;\n        }\n      case 'deleteByComposition':\n        {\n          if ($canRemoveText(anchorNode, focusNode)) {\n            dispatchCommand(editor, REMOVE_TEXT_COMMAND, event);\n          }\n          break;\n        }\n      case 'deleteByDrag':\n      case 'deleteByCut':\n        {\n          dispatchCommand(editor, REMOVE_TEXT_COMMAND, event);\n          break;\n        }\n      case 'deleteContent':\n        {\n          dispatchCommand(editor, DELETE_CHARACTER_COMMAND, false);\n          break;\n        }\n      case 'deleteWordBackward':\n        {\n          dispatchCommand(editor, DELETE_WORD_COMMAND, true);\n          break;\n        }\n      case 'deleteWordForward':\n        {\n          dispatchCommand(editor, DELETE_WORD_COMMAND, false);\n          break;\n        }\n      case 'deleteHardLineBackward':\n      case 'deleteSoftLineBackward':\n        {\n          dispatchCommand(editor, DELETE_LINE_COMMAND, true);\n          break;\n        }\n      case 'deleteContentForward':\n      case 'deleteHardLineForward':\n      case 'deleteSoftLineForward':\n        {\n          dispatchCommand(editor, DELETE_LINE_COMMAND, false);\n          break;\n        }\n      case 'formatStrikeThrough':\n        {\n          dispatchCommand(editor, FORMAT_TEXT_COMMAND, 'strikethrough');\n          break;\n        }\n      case 'formatBold':\n        {\n          dispatchCommand(editor, FORMAT_TEXT_COMMAND, 'bold');\n          break;\n        }\n      case 'formatItalic':\n        {\n          dispatchCommand(editor, FORMAT_TEXT_COMMAND, 'italic');\n          break;\n        }\n      case 'formatUnderline':\n        {\n          dispatchCommand(editor, FORMAT_TEXT_COMMAND, 'underline');\n          break;\n        }\n      case 'historyUndo':\n        {\n          dispatchCommand(editor, UNDO_COMMAND, undefined);\n          break;\n        }\n      case 'historyRedo':\n        {\n          dispatchCommand(editor, REDO_COMMAND, undefined);\n          break;\n        }\n      // NO-OP\n    }\n  });\n}\nfunction onInput(event, editor) {\n  // Note that the MutationObserver may or may not have already fired,\n  // but the the DOM and selection may have already changed.\n  // See also:\n  // - https://github.com/facebook/lexical/issues/7028\n  // - https://github.com/facebook/lexical/pull/794\n\n  // We don't want the onInput to bubble, in the case of nested editors.\n  event.stopPropagation();\n  updateEditorSync(editor, () => {\n    const selection = $getSelection();\n    const data = event.data;\n    const targetRange = getTargetRange(event);\n    if (data != null && $isRangeSelection(selection) && $shouldPreventDefaultAndInsertText(selection, targetRange, data, event.timeStamp, false)) {\n      // Given we're over-riding the default behavior, we will need\n      // to ensure to disable composition before dispatching the\n      // insertText command for when changing the sequence for FF.\n      if (isFirefoxEndingComposition) {\n        $onCompositionEndImpl(editor, data);\n        isFirefoxEndingComposition = false;\n      }\n      const anchor = selection.anchor;\n      const anchorNode = anchor.getNode();\n      const domSelection = getDOMSelection(getWindow(editor));\n      if (domSelection === null) {\n        return;\n      }\n      const isBackward = selection.isBackward();\n      const startOffset = isBackward ? selection.anchor.offset : selection.focus.offset;\n      const endOffset = isBackward ? selection.focus.offset : selection.anchor.offset;\n      // If the content is the same as inserted, then don't dispatch an insertion.\n      // Given onInput doesn't take the current selection (it uses the previous)\n      // we can compare that against what the DOM currently says.\n      if (!CAN_USE_BEFORE_INPUT || selection.isCollapsed() || !$isTextNode(anchorNode) || domSelection.anchorNode === null || anchorNode.getTextContent().slice(0, startOffset) + data + anchorNode.getTextContent().slice(startOffset + endOffset) !== getAnchorTextFromDOM(domSelection.anchorNode)) {\n        dispatchCommand(editor, CONTROLLED_TEXT_INSERTION_COMMAND, data);\n      }\n      const textLength = data.length;\n\n      // Another hack for FF, as it's possible that the IME is still\n      // open, even though compositionend has already fired (sigh).\n      if (IS_FIREFOX && textLength > 1 && event.inputType === 'insertCompositionText' && !editor.isComposing()) {\n        selection.anchor.offset -= textLength;\n      }\n\n      // This ensures consistency on Android.\n      if (!IS_SAFARI && !IS_IOS && !IS_APPLE_WEBKIT && editor.isComposing()) {\n        lastKeyDownTimeStamp = 0;\n        $setCompositionKey(null);\n      }\n    } else {\n      const characterData = data !== null ? data : undefined;\n      $updateSelectedTextFromDOM(false, editor, characterData);\n\n      // onInput always fires after onCompositionEnd for FF.\n      if (isFirefoxEndingComposition) {\n        $onCompositionEndImpl(editor, data || undefined);\n        isFirefoxEndingComposition = false;\n      }\n    }\n\n    // Also flush any other mutations that might have occurred\n    // since the change.\n    $flushMutations();\n  }, {\n    event\n  });\n  unprocessedBeforeInputData = null;\n}\nfunction onCompositionStart(event, editor) {\n  updateEditorSync(editor, () => {\n    const selection = $getSelection();\n    if ($isRangeSelection(selection) && !editor.isComposing()) {\n      const anchor = selection.anchor;\n      const node = selection.anchor.getNode();\n      $setCompositionKey(anchor.key);\n      if (\n      // If it has been 30ms since the last keydown, then we should\n      // apply the empty space heuristic. We can't do this for Safari,\n      // as the keydown fires after composition start.\n      event.timeStamp < lastKeyDownTimeStamp + ANDROID_COMPOSITION_LATENCY ||\n      // FF has issues around composing multibyte characters, so we also\n      // need to invoke the empty space heuristic below.\n      anchor.type === 'element' || !selection.isCollapsed() || node.getFormat() !== selection.format || $isTextNode(node) && node.getStyle() !== selection.style) {\n        // We insert a zero width character, ready for the composition\n        // to get inserted into the new node we create. If\n        // we don't do this, Safari will fail on us because\n        // there is no text node matching the selection.\n        dispatchCommand(editor, CONTROLLED_TEXT_INSERTION_COMMAND, COMPOSITION_START_CHAR);\n      }\n    }\n  });\n}\nfunction $onCompositionEndImpl(editor, data) {\n  const compositionKey = editor._compositionKey;\n  $setCompositionKey(null);\n\n  // Handle termination of composition.\n  if (compositionKey !== null && data != null) {\n    // Composition can sometimes move to an adjacent DOM node when backspacing.\n    // So check for the empty case.\n    if (data === '') {\n      const node = $getNodeByKey(compositionKey);\n      const textNode = getDOMTextNode(editor.getElementByKey(compositionKey));\n      if (textNode !== null && textNode.nodeValue !== null && $isTextNode(node)) {\n        $updateTextNodeFromDOMContent(node, textNode.nodeValue, null, null, true);\n      }\n      return;\n    }\n\n    // Composition can sometimes be that of a new line. In which case, we need to\n    // handle that accordingly.\n    if (data[data.length - 1] === '\\n') {\n      const selection = $getSelection();\n      if ($isRangeSelection(selection)) {\n        // If the last character is a line break, we also need to insert\n        // a line break.\n        const focus = selection.focus;\n        selection.anchor.set(focus.key, focus.offset, focus.type);\n        dispatchCommand(editor, KEY_ENTER_COMMAND, null);\n        return;\n      }\n    }\n  }\n  $updateSelectedTextFromDOM(true, editor, data);\n}\nfunction onCompositionEnd(event, editor) {\n  // Firefox fires onCompositionEnd before onInput, but Chrome/Webkit,\n  // fire onInput before onCompositionEnd. To ensure the sequence works\n  // like Chrome/Webkit we use the isFirefoxEndingComposition flag to\n  // defer handling of onCompositionEnd in Firefox till we have processed\n  // the logic in onInput.\n  if (IS_FIREFOX) {\n    isFirefoxEndingComposition = true;\n  } else if (!IS_IOS && (IS_SAFARI || IS_APPLE_WEBKIT)) {\n    // Fix：https://github.com/facebook/lexical/pull/7061\n    // In safari, onCompositionEnd triggers before keydown\n    // This will cause an extra character to be deleted when exiting the IME\n    // Therefore, a flag is used to mark that the keydown event is triggered after onCompositionEnd\n    // Ensure that an extra character is not deleted due to the backspace event being triggered in the keydown event.\n    isSafariEndingComposition = true;\n    safariEndCompositionEventData = event.data;\n  } else {\n    updateEditorSync(editor, () => {\n      $onCompositionEndImpl(editor, event.data);\n    });\n  }\n}\nfunction onKeyDown(event, editor) {\n  lastKeyDownTimeStamp = event.timeStamp;\n  lastKeyCode = event.key;\n  if (editor.isComposing()) {\n    return;\n  }\n  const {\n    key,\n    shiftKey,\n    ctrlKey,\n    metaKey,\n    altKey\n  } = event;\n  if (dispatchCommand(editor, KEY_DOWN_COMMAND, event)) {\n    return;\n  }\n  if (key == null) {\n    return;\n  }\n  if (isSafariEndingComposition && isBackspace(lastKeyCode)) {\n    updateEditorSync(editor, () => {\n      $onCompositionEndImpl(editor, safariEndCompositionEventData);\n    });\n    isSafariEndingComposition = false;\n    safariEndCompositionEventData = '';\n    return;\n  }\n  if (isMoveForward(key, ctrlKey, altKey, metaKey)) {\n    dispatchCommand(editor, KEY_ARROW_RIGHT_COMMAND, event);\n  } else if (isMoveToEnd(key, ctrlKey, shiftKey, altKey, metaKey)) {\n    dispatchCommand(editor, MOVE_TO_END, event);\n  } else if (isMoveBackward(key, ctrlKey, altKey, metaKey)) {\n    dispatchCommand(editor, KEY_ARROW_LEFT_COMMAND, event);\n  } else if (isMoveToStart(key, ctrlKey, shiftKey, altKey, metaKey)) {\n    dispatchCommand(editor, MOVE_TO_START, event);\n  } else if (isMoveUp(key, ctrlKey, metaKey)) {\n    dispatchCommand(editor, KEY_ARROW_UP_COMMAND, event);\n  } else if (isMoveDown(key, ctrlKey, metaKey)) {\n    dispatchCommand(editor, KEY_ARROW_DOWN_COMMAND, event);\n  } else if (isLineBreak(key, shiftKey)) {\n    isInsertLineBreak = true;\n    dispatchCommand(editor, KEY_ENTER_COMMAND, event);\n  } else if (isSpace(key)) {\n    dispatchCommand(editor, KEY_SPACE_COMMAND, event);\n  } else if (isOpenLineBreak(key, ctrlKey)) {\n    event.preventDefault();\n    isInsertLineBreak = true;\n    dispatchCommand(editor, INSERT_LINE_BREAK_COMMAND, true);\n  } else if (isParagraph(key, shiftKey)) {\n    isInsertLineBreak = false;\n    dispatchCommand(editor, KEY_ENTER_COMMAND, event);\n  } else if (isDeleteBackward(key, altKey, metaKey, ctrlKey)) {\n    if (isBackspace(key)) {\n      dispatchCommand(editor, KEY_BACKSPACE_COMMAND, event);\n    } else {\n      event.preventDefault();\n      dispatchCommand(editor, DELETE_CHARACTER_COMMAND, true);\n    }\n  } else if (isEscape(key)) {\n    dispatchCommand(editor, KEY_ESCAPE_COMMAND, event);\n  } else if (isDeleteForward(key, ctrlKey, shiftKey, altKey, metaKey)) {\n    if (isDelete(key)) {\n      dispatchCommand(editor, KEY_DELETE_COMMAND, event);\n    } else {\n      event.preventDefault();\n      dispatchCommand(editor, DELETE_CHARACTER_COMMAND, false);\n    }\n  } else if (isDeleteWordBackward(key, altKey, ctrlKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, DELETE_WORD_COMMAND, true);\n  } else if (isDeleteWordForward(key, altKey, ctrlKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, DELETE_WORD_COMMAND, false);\n  } else if (isDeleteLineBackward(key, metaKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, DELETE_LINE_COMMAND, true);\n  } else if (isDeleteLineForward(key, metaKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, DELETE_LINE_COMMAND, false);\n  } else if (isBold(key, altKey, metaKey, ctrlKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, FORMAT_TEXT_COMMAND, 'bold');\n  } else if (isUnderline(key, altKey, metaKey, ctrlKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, FORMAT_TEXT_COMMAND, 'underline');\n  } else if (isItalic(key, altKey, metaKey, ctrlKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, FORMAT_TEXT_COMMAND, 'italic');\n  } else if (isTab(key, altKey, ctrlKey, metaKey)) {\n    dispatchCommand(editor, KEY_TAB_COMMAND, event);\n  } else if (isUndo(key, shiftKey, metaKey, ctrlKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, UNDO_COMMAND, undefined);\n  } else if (isRedo(key, shiftKey, metaKey, ctrlKey)) {\n    event.preventDefault();\n    dispatchCommand(editor, REDO_COMMAND, undefined);\n  } else {\n    const prevSelection = editor._editorState._selection;\n    if (prevSelection !== null && !$isRangeSelection(prevSelection)) {\n      // Only RangeSelection can use the native cut/copy/select all\n      if (isCopy(key, shiftKey, metaKey, ctrlKey)) {\n        event.preventDefault();\n        dispatchCommand(editor, COPY_COMMAND, event);\n      } else if (isCut(key, shiftKey, metaKey, ctrlKey)) {\n        event.preventDefault();\n        dispatchCommand(editor, CUT_COMMAND, event);\n      } else if (isSelectAll(key, metaKey, ctrlKey)) {\n        event.preventDefault();\n        dispatchCommand(editor, SELECT_ALL_COMMAND, event);\n      }\n      // FF does it well (no need to override behavior)\n    } else if (!IS_FIREFOX && isSelectAll(key, metaKey, ctrlKey)) {\n      event.preventDefault();\n      dispatchCommand(editor, SELECT_ALL_COMMAND, event);\n    }\n  }\n  if (isModifier(ctrlKey, shiftKey, altKey, metaKey)) {\n    dispatchCommand(editor, KEY_MODIFIER_COMMAND, event);\n  }\n}\nfunction getRootElementRemoveHandles(rootElement) {\n  // @ts-expect-error: internal field\n  let eventHandles = rootElement.__lexicalEventHandles;\n  if (eventHandles === undefined) {\n    eventHandles = [];\n    // @ts-expect-error: internal field\n    rootElement.__lexicalEventHandles = eventHandles;\n  }\n  return eventHandles;\n}\n\n// Mapping root editors to their active nested editors, contains nested editors\n// mapping only, so if root editor is selected map will have no reference to free up memory\nconst activeNestedEditorsMap = new Map();\nfunction onDocumentSelectionChange(event) {\n  const domSelection = getDOMSelectionFromTarget(event.target);\n  if (domSelection === null) {\n    return;\n  }\n  const nextActiveEditor = getNearestEditorFromDOMNode(domSelection.anchorNode);\n  if (nextActiveEditor === null) {\n    return;\n  }\n  if (isSelectionChangeFromMouseDown) {\n    isSelectionChangeFromMouseDown = false;\n    updateEditorSync(nextActiveEditor, () => {\n      const lastSelection = $getPreviousSelection();\n      const domAnchorNode = domSelection.anchorNode;\n      if (isHTMLElement(domAnchorNode) || isDOMTextNode(domAnchorNode)) {\n        // If the user is attempting to click selection back onto text, then\n        // we should attempt create a range selection.\n        // When we click on an empty paragraph node or the end of a paragraph that ends\n        // with an image/poll, the nodeType will be ELEMENT_NODE\n        const newSelection = $internalCreateRangeSelection(lastSelection, domSelection, nextActiveEditor, event);\n        $setSelection(newSelection);\n      }\n    });\n  }\n\n  // When editor receives selection change event, we're checking if\n  // it has any sibling editors (within same parent editor) that were active\n  // before, and trigger selection change on it to nullify selection.\n  const editors = getEditorsToPropagate(nextActiveEditor);\n  const rootEditor = editors[editors.length - 1];\n  const rootEditorKey = rootEditor._key;\n  const activeNestedEditor = activeNestedEditorsMap.get(rootEditorKey);\n  const prevActiveEditor = activeNestedEditor || rootEditor;\n  if (prevActiveEditor !== nextActiveEditor) {\n    onSelectionChange(domSelection, prevActiveEditor, false);\n  }\n  onSelectionChange(domSelection, nextActiveEditor, true);\n\n  // If newly selected editor is nested, then add it to the map, clean map otherwise\n  if (nextActiveEditor !== rootEditor) {\n    activeNestedEditorsMap.set(rootEditorKey, nextActiveEditor);\n  } else if (activeNestedEditor) {\n    activeNestedEditorsMap.delete(rootEditorKey);\n  }\n}\nfunction stopLexicalPropagation(event) {\n  // We attach a special property to ensure the same event doesn't re-fire\n  // for parent editors.\n  // @ts-ignore\n  event._lexicalHandled = true;\n}\nfunction hasStoppedLexicalPropagation(event) {\n  // @ts-ignore\n  const stopped = event._lexicalHandled === true;\n  return stopped;\n}\nfunction addRootElementEvents(rootElement, editor) {\n  // We only want to have a single global selectionchange event handler, shared\n  // between all editor instances.\n  const doc = rootElement.ownerDocument;\n  const documentRootElementsCount = rootElementsRegistered.get(doc);\n  if (documentRootElementsCount === undefined || documentRootElementsCount < 1) {\n    doc.addEventListener('selectionchange', onDocumentSelectionChange);\n  }\n  rootElementsRegistered.set(doc, (documentRootElementsCount || 0) + 1);\n\n  // @ts-expect-error: internal field\n  rootElement.__lexicalEditor = editor;\n  const removeHandles = getRootElementRemoveHandles(rootElement);\n  for (let i = 0; i < rootElementEvents.length; i++) {\n    const [eventName, onEvent] = rootElementEvents[i];\n    const eventHandler = typeof onEvent === 'function' ? event => {\n      if (hasStoppedLexicalPropagation(event)) {\n        return;\n      }\n      stopLexicalPropagation(event);\n      if (editor.isEditable() || eventName === 'click') {\n        onEvent(event, editor);\n      }\n    } : event => {\n      if (hasStoppedLexicalPropagation(event)) {\n        return;\n      }\n      stopLexicalPropagation(event);\n      const isEditable = editor.isEditable();\n      switch (eventName) {\n        case 'cut':\n          return isEditable && dispatchCommand(editor, CUT_COMMAND, event);\n        case 'copy':\n          return dispatchCommand(editor, COPY_COMMAND, event);\n        case 'paste':\n          return isEditable && dispatchCommand(editor, PASTE_COMMAND, event);\n        case 'dragstart':\n          return isEditable && dispatchCommand(editor, DRAGSTART_COMMAND, event);\n        case 'dragover':\n          return isEditable && dispatchCommand(editor, DRAGOVER_COMMAND, event);\n        case 'dragend':\n          return isEditable && dispatchCommand(editor, DRAGEND_COMMAND, event);\n        case 'focus':\n          return isEditable && dispatchCommand(editor, FOCUS_COMMAND, event);\n        case 'blur':\n          {\n            return isEditable && dispatchCommand(editor, BLUR_COMMAND, event);\n          }\n        case 'drop':\n          return isEditable && dispatchCommand(editor, DROP_COMMAND, event);\n      }\n    };\n    rootElement.addEventListener(eventName, eventHandler);\n    removeHandles.push(() => {\n      rootElement.removeEventListener(eventName, eventHandler);\n    });\n  }\n}\nfunction removeRootElementEvents(rootElement) {\n  const doc = rootElement.ownerDocument;\n  const documentRootElementsCount = rootElementsRegistered.get(doc);\n  if (!(documentRootElementsCount !== undefined)) {\n    formatDevErrorMessage(`Root element not registered`);\n  } // We only want to have a single global selectionchange event handler, shared\n  // between all editor instances.\n  const newCount = documentRootElementsCount - 1;\n  if (!(newCount >= 0)) {\n    formatDevErrorMessage(`Root element count less than 0`);\n  }\n  rootElementsRegistered.set(doc, newCount);\n  if (newCount === 0) {\n    doc.removeEventListener('selectionchange', onDocumentSelectionChange);\n  }\n  const editor = getEditorPropertyFromDOMNode(rootElement);\n  if (isLexicalEditor(editor)) {\n    cleanActiveNestedEditorsMap(editor);\n    // @ts-expect-error: internal field\n    rootElement.__lexicalEditor = null;\n  } else if (editor) {\n    {\n      formatDevErrorMessage(`Attempted to remove event handlers from a node that does not belong to this build of Lexical`);\n    }\n  }\n  const removeHandles = getRootElementRemoveHandles(rootElement);\n  for (let i = 0; i < removeHandles.length; i++) {\n    removeHandles[i]();\n  }\n\n  // @ts-expect-error: internal field\n  rootElement.__lexicalEventHandles = [];\n}\nfunction cleanActiveNestedEditorsMap(editor) {\n  if (editor._parentEditor !== null) {\n    // For nested editor cleanup map if this editor was marked as active\n    const editors = getEditorsToPropagate(editor);\n    const rootEditor = editors[editors.length - 1];\n    const rootEditorKey = rootEditor._key;\n    if (activeNestedEditorsMap.get(rootEditorKey) === editor) {\n      activeNestedEditorsMap.delete(rootEditorKey);\n    }\n  } else {\n    // For top-level editors cleanup map\n    activeNestedEditorsMap.delete(editor._key);\n  }\n}\nfunction markSelectionChangeFromDOMUpdate() {\n  isSelectionChangeFromDOMUpdate = true;\n}\nfunction markCollapsedSelectionFormat(format, style, offset, key, timeStamp) {\n  collapsedSelectionFormat = [format, style, offset, key, timeStamp];\n}\n\n/**\n * The base type for all serialized nodes\n */\n\n/**\n * Omit the children, type, and version properties from the given SerializedLexicalNode definition.\n */\n\n/** @internal */\n\nfunction $removeNode(nodeToRemove, restoreSelection, preserveEmptyParent) {\n  errorOnReadOnly();\n  const key = nodeToRemove.__key;\n  const parent = nodeToRemove.getParent();\n  if (parent === null) {\n    return;\n  }\n  const selection = $maybeMoveChildrenSelectionToParent(nodeToRemove);\n  let selectionMoved = false;\n  if ($isRangeSelection(selection) && restoreSelection) {\n    const anchor = selection.anchor;\n    const focus = selection.focus;\n    if (anchor.key === key) {\n      moveSelectionPointToSibling(anchor, nodeToRemove, parent, nodeToRemove.getPreviousSibling(), nodeToRemove.getNextSibling());\n      selectionMoved = true;\n    }\n    if (focus.key === key) {\n      moveSelectionPointToSibling(focus, nodeToRemove, parent, nodeToRemove.getPreviousSibling(), nodeToRemove.getNextSibling());\n      selectionMoved = true;\n    }\n  } else if ($isNodeSelection(selection) && restoreSelection && nodeToRemove.isSelected()) {\n    nodeToRemove.selectPrevious();\n  }\n  if ($isRangeSelection(selection) && restoreSelection && !selectionMoved) {\n    // Doing this is O(n) so lets avoid it unless we need to do it\n    const index = nodeToRemove.getIndexWithinParent();\n    removeFromParent(nodeToRemove);\n    $updateElementSelectionOnCreateDeleteNode(selection, parent, index, -1);\n  } else {\n    removeFromParent(nodeToRemove);\n  }\n  if (!preserveEmptyParent && !$isRootOrShadowRoot(parent) && !parent.canBeEmpty() && parent.isEmpty()) {\n    $removeNode(parent, restoreSelection);\n  }\n  if (restoreSelection && $isRootNode(parent) && parent.isEmpty()) {\n    parent.selectEnd();\n  }\n}\nclass LexicalNode {\n  // Allow us to look up the type including static props\n\n  /** @internal */\n\n  /** @internal */\n  //@ts-ignore We set the key in the constructor.\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  // Flow doesn't support abstract classes unfortunately, so we can't _force_\n  // subclasses of Node to implement statics. All subclasses of Node should have\n  // a static getType and clone method though. We define getType and clone here so we can call it\n  // on any  Node, and we throw this error by default since the subclass should provide\n  // their own implementation.\n  /**\n   * Returns the string type of this node. Every node must\n   * implement this and it MUST BE UNIQUE amongst nodes registered\n   * on the editor.\n   *\n   */\n  static getType() {\n    {\n      formatDevErrorMessage(`LexicalNode: Node ${this.name} does not implement .getType().`);\n    }\n  }\n\n  /**\n   * Clones this node, creating a new node with a different key\n   * and adding it to the EditorState (but not attaching it anywhere!). All nodes must\n   * implement this method.\n   *\n   */\n  static clone(_data) {\n    {\n      formatDevErrorMessage(`LexicalNode: Node ${this.name} does not implement .clone().`);\n    }\n  }\n\n  /**\n   * Perform any state updates on the clone of prevNode that are not already\n   * handled by the constructor call in the static clone method. If you have\n   * state to update in your clone that is not handled directly by the\n   * constructor, it is advisable to override this method but it is required\n   * to include a call to `super.afterCloneFrom(prevNode)` in your\n   * implementation. This is only intended to be called by\n   * {@link $cloneWithProperties} function or via a super call.\n   *\n   * @example\n   * ```ts\n   * class ClassesTextNode extends TextNode {\n   *   // Not shown: static getType, static importJSON, exportJSON, createDOM, updateDOM\n   *   __classes = new Set<string>();\n   *   static clone(node: ClassesTextNode): ClassesTextNode {\n   *     // The inherited TextNode constructor is used here, so\n   *     // classes is not set by this method.\n   *     return new ClassesTextNode(node.__text, node.__key);\n   *   }\n   *   afterCloneFrom(node: this): void {\n   *     // This calls TextNode.afterCloneFrom and LexicalNode.afterCloneFrom\n   *     // for necessary state updates\n   *     super.afterCloneFrom(node);\n   *     this.__addClasses(node.__classes);\n   *   }\n   *   // This method is a private implementation detail, it is not\n   *   // suitable for the public API because it does not call getWritable\n   *   __addClasses(classNames: Iterable<string>): this {\n   *     for (const className of classNames) {\n   *       this.__classes.add(className);\n   *     }\n   *     return this;\n   *   }\n   *   addClass(...classNames: string[]): this {\n   *     return this.getWritable().__addClasses(classNames);\n   *   }\n   *   removeClass(...classNames: string[]): this {\n   *     const node = this.getWritable();\n   *     for (const className of classNames) {\n   *       this.__classes.delete(className);\n   *     }\n   *     return this;\n   *   }\n   *   getClasses(): Set<string> {\n   *     return this.getLatest().__classes;\n   *   }\n   * }\n   * ```\n   *\n   */\n  afterCloneFrom(prevNode) {\n    this.__parent = prevNode.__parent;\n    this.__next = prevNode.__next;\n    this.__prev = prevNode.__prev;\n    this.__state = prevNode.__state;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  constructor(key) {\n    this.__type = this.constructor.getType();\n    this.__parent = null;\n    this.__prev = null;\n    this.__next = null;\n    Object.defineProperty(this, '__state', {\n      configurable: true,\n      enumerable: false,\n      value: undefined,\n      writable: true\n    });\n    $setNodeKey(this, key);\n    {\n      if (this.__type !== 'root') {\n        errorOnReadOnly();\n        errorOnTypeKlassMismatch(this.__type, this.constructor);\n      }\n    }\n  }\n  // Getters and Traversers\n\n  /**\n   * Returns the string type of this node.\n   */\n  getType() {\n    return this.__type;\n  }\n  isInline() {\n    {\n      formatDevErrorMessage(`LexicalNode: Node ${this.constructor.name} does not implement .isInline().`);\n    }\n  }\n\n  /**\n   * Returns true if there is a path between this node and the RootNode, false otherwise.\n   * This is a way of determining if the node is \"attached\" EditorState. Unattached nodes\n   * won't be reconciled and will ultimatelt be cleaned up by the Lexical GC.\n   */\n  isAttached() {\n    let nodeKey = this.__key;\n    while (nodeKey !== null) {\n      if (nodeKey === 'root') {\n        return true;\n      }\n      const node = $getNodeByKey(nodeKey);\n      if (node === null) {\n        break;\n      }\n      nodeKey = node.__parent;\n    }\n    return false;\n  }\n\n  /**\n   * Returns true if this node is contained within the provided Selection., false otherwise.\n   * Relies on the algorithms implemented in {@link BaseSelection.getNodes} to determine\n   * what's included.\n   *\n   * @param selection - The selection that we want to determine if the node is in.\n   */\n  isSelected(selection) {\n    const targetSelection = selection || $getSelection();\n    if (targetSelection == null) {\n      return false;\n    }\n    const isSelected = targetSelection.getNodes().some(n => n.__key === this.__key);\n    if ($isTextNode(this)) {\n      return isSelected;\n    }\n    // For inline images inside of element nodes.\n    // Without this change the image will be selected if the cursor is before or after it.\n    const isElementRangeSelection = $isRangeSelection(targetSelection) && targetSelection.anchor.type === 'element' && targetSelection.focus.type === 'element';\n    if (isElementRangeSelection) {\n      if (targetSelection.isCollapsed()) {\n        return false;\n      }\n      const parentNode = this.getParent();\n      if ($isDecoratorNode(this) && this.isInline() && parentNode) {\n        const firstPoint = targetSelection.isBackward() ? targetSelection.focus : targetSelection.anchor;\n        if (parentNode.is(firstPoint.getNode()) && firstPoint.offset === parentNode.getChildrenSize() && this.is(parentNode.getLastChild())) {\n          return false;\n        }\n      }\n    }\n    return isSelected;\n  }\n\n  /**\n   * Returns this nodes key.\n   */\n  getKey() {\n    // Key is stable between copies\n    return this.__key;\n  }\n\n  /**\n   * Returns the zero-based index of this node within the parent.\n   */\n  getIndexWithinParent() {\n    const parent = this.getParent();\n    if (parent === null) {\n      return -1;\n    }\n    let node = parent.getFirstChild();\n    let index = 0;\n    while (node !== null) {\n      if (this.is(node)) {\n        return index;\n      }\n      index++;\n      node = node.getNextSibling();\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the parent of this node, or null if none is found.\n   */\n  getParent() {\n    const parent = this.getLatest().__parent;\n    if (parent === null) {\n      return null;\n    }\n    return $getNodeByKey(parent);\n  }\n\n  /**\n   * Returns the parent of this node, or throws if none is found.\n   */\n  getParentOrThrow() {\n    const parent = this.getParent();\n    if (parent === null) {\n      {\n        formatDevErrorMessage(`Expected node ${this.__key} to have a parent.`);\n      }\n    }\n    return parent;\n  }\n\n  /**\n   * Returns the highest (in the EditorState tree)\n   * non-root ancestor of this node, or null if none is found. See {@link lexical!$isRootOrShadowRoot}\n   * for more information on which Elements comprise \"roots\".\n   */\n  getTopLevelElement() {\n    let node = this;\n    while (node !== null) {\n      const parent = node.getParent();\n      if ($isRootOrShadowRoot(parent)) {\n        if (!($isElementNode(node) || node === this && $isDecoratorNode(node))) {\n          formatDevErrorMessage(`Children of root nodes must be elements or decorators`);\n        }\n        return node;\n      }\n      node = parent;\n    }\n    return null;\n  }\n\n  /**\n   * Returns the highest (in the EditorState tree)\n   * non-root ancestor of this node, or throws if none is found. See {@link lexical!$isRootOrShadowRoot}\n   * for more information on which Elements comprise \"roots\".\n   */\n  getTopLevelElementOrThrow() {\n    const parent = this.getTopLevelElement();\n    if (parent === null) {\n      {\n        formatDevErrorMessage(`Expected node ${this.__key} to have a top parent element.`);\n      }\n    }\n    return parent;\n  }\n\n  /**\n   * Returns a list of the every ancestor of this node,\n   * all the way up to the RootNode.\n   *\n   */\n  getParents() {\n    const parents = [];\n    let node = this.getParent();\n    while (node !== null) {\n      parents.push(node);\n      node = node.getParent();\n    }\n    return parents;\n  }\n\n  /**\n   * Returns a list of the keys of every ancestor of this node,\n   * all the way up to the RootNode.\n   *\n   */\n  getParentKeys() {\n    const parents = [];\n    let node = this.getParent();\n    while (node !== null) {\n      parents.push(node.__key);\n      node = node.getParent();\n    }\n    return parents;\n  }\n\n  /**\n   * Returns the \"previous\" siblings - that is, the node that comes\n   * before this one in the same parent.\n   *\n   */\n  getPreviousSibling() {\n    const self = this.getLatest();\n    const prevKey = self.__prev;\n    return prevKey === null ? null : $getNodeByKey(prevKey);\n  }\n\n  /**\n   * Returns the \"previous\" siblings - that is, the nodes that come between\n   * this one and the first child of it's parent, inclusive.\n   *\n   */\n  getPreviousSiblings() {\n    const siblings = [];\n    const parent = this.getParent();\n    if (parent === null) {\n      return siblings;\n    }\n    let node = parent.getFirstChild();\n    while (node !== null) {\n      if (node.is(this)) {\n        break;\n      }\n      siblings.push(node);\n      node = node.getNextSibling();\n    }\n    return siblings;\n  }\n\n  /**\n   * Returns the \"next\" siblings - that is, the node that comes\n   * after this one in the same parent\n   *\n   */\n  getNextSibling() {\n    const self = this.getLatest();\n    const nextKey = self.__next;\n    return nextKey === null ? null : $getNodeByKey(nextKey);\n  }\n\n  /**\n   * Returns all \"next\" siblings - that is, the nodes that come between this\n   * one and the last child of it's parent, inclusive.\n   *\n   */\n  getNextSiblings() {\n    const siblings = [];\n    let node = this.getNextSibling();\n    while (node !== null) {\n      siblings.push(node);\n      node = node.getNextSibling();\n    }\n    return siblings;\n  }\n\n  /**\n   * @deprecated use {@link $getCommonAncestor}\n   *\n   * Returns the closest common ancestor of this node and the provided one or null\n   * if one cannot be found.\n   *\n   * @param node - the other node to find the common ancestor of.\n   */\n  getCommonAncestor(node) {\n    const a = $isElementNode(this) ? this : this.getParent();\n    const b = $isElementNode(node) ? node : node.getParent();\n    const result = a && b ? $getCommonAncestor(a, b) : null;\n    return result ? result.commonAncestor /* TODO this type cast is a lie, but fixing it would break backwards compatibility */ : null;\n  }\n\n  /**\n   * Returns true if the provided node is the exact same one as this node, from Lexical's perspective.\n   * Always use this instead of referential equality.\n   *\n   * @param object - the node to perform the equality comparison on.\n   */\n  is(object) {\n    if (object == null) {\n      return false;\n    }\n    return this.__key === object.__key;\n  }\n\n  /**\n   * Returns true if this node logically precedes the target node in the\n   * editor state, false otherwise (including if there is no common ancestor).\n   *\n   * Note that this notion of isBefore is based on post-order; a descendant\n   * node is always before its ancestors. See also\n   * {@link $getCommonAncestor} and {@link $comparePointCaretNext} for\n   * more flexible ways to determine the relative positions of nodes.\n   *\n   * @param targetNode - the node we're testing to see if it's after this one.\n   */\n  isBefore(targetNode) {\n    const compare = $getCommonAncestor(this, targetNode);\n    if (compare === null) {\n      return false;\n    }\n    if (compare.type === 'descendant') {\n      return true;\n    }\n    if (compare.type === 'branch') {\n      return $getCommonAncestorResultBranchOrder(compare) === -1;\n    }\n    if (!(compare.type === 'same' || compare.type === 'ancestor')) {\n      formatDevErrorMessage(`LexicalNode.isBefore: exhaustiveness check`);\n    }\n    return false;\n  }\n\n  /**\n   * Returns true if this node is an ancestor of and distinct from the target node, false otherwise.\n   *\n   * @param targetNode - the would-be child node.\n   */\n  isParentOf(targetNode) {\n    const result = $getCommonAncestor(this, targetNode);\n    return result !== null && result.type === 'ancestor';\n  }\n\n  // TO-DO: this function can be simplified a lot\n  /**\n   * Returns a list of nodes that are between this node and\n   * the target node in the EditorState.\n   *\n   * @param targetNode - the node that marks the other end of the range of nodes to be returned.\n   */\n  getNodesBetween(targetNode) {\n    const isBefore = this.isBefore(targetNode);\n    const nodes = [];\n    const visited = new Set();\n    let node = this;\n    while (true) {\n      if (node === null) {\n        break;\n      }\n      const key = node.__key;\n      if (!visited.has(key)) {\n        visited.add(key);\n        nodes.push(node);\n      }\n      if (node === targetNode) {\n        break;\n      }\n      const child = $isElementNode(node) ? isBefore ? node.getFirstChild() : node.getLastChild() : null;\n      if (child !== null) {\n        node = child;\n        continue;\n      }\n      const nextSibling = isBefore ? node.getNextSibling() : node.getPreviousSibling();\n      if (nextSibling !== null) {\n        node = nextSibling;\n        continue;\n      }\n      const parent = node.getParentOrThrow();\n      if (!visited.has(parent.__key)) {\n        nodes.push(parent);\n      }\n      if (parent === targetNode) {\n        break;\n      }\n      let parentSibling = null;\n      let ancestor = parent;\n      do {\n        if (ancestor === null) {\n          {\n            formatDevErrorMessage(`getNodesBetween: ancestor is null`);\n          }\n        }\n        parentSibling = isBefore ? ancestor.getNextSibling() : ancestor.getPreviousSibling();\n        ancestor = ancestor.getParent();\n        if (ancestor !== null) {\n          if (parentSibling === null && !visited.has(ancestor.__key)) {\n            nodes.push(ancestor);\n          }\n        } else {\n          break;\n        }\n      } while (parentSibling === null);\n      node = parentSibling;\n    }\n    if (!isBefore) {\n      nodes.reverse();\n    }\n    return nodes;\n  }\n\n  /**\n   * Returns true if this node has been marked dirty during this update cycle.\n   *\n   */\n  isDirty() {\n    const editor = getActiveEditor();\n    const dirtyLeaves = editor._dirtyLeaves;\n    return dirtyLeaves !== null && dirtyLeaves.has(this.__key);\n  }\n\n  /**\n   * Returns the latest version of the node from the active EditorState.\n   * This is used to avoid getting values from stale node references.\n   *\n   */\n  getLatest() {\n    const latest = $getNodeByKey(this.__key);\n    if (latest === null) {\n      {\n        formatDevErrorMessage(`Lexical node does not exist in active editor state. Avoid using the same node references between nested closures from editorState.read/editor.update.`);\n      }\n    }\n    return latest;\n  }\n\n  /**\n   * Returns a mutable version of the node using {@link $cloneWithProperties}\n   * if necessary. Will throw an error if called outside of a Lexical Editor\n   * {@link LexicalEditor.update} callback.\n   *\n   */\n  getWritable() {\n    errorOnReadOnly();\n    const editorState = getActiveEditorState();\n    const editor = getActiveEditor();\n    const nodeMap = editorState._nodeMap;\n    const key = this.__key;\n    // Ensure we get the latest node from pending state\n    const latestNode = this.getLatest();\n    const cloneNotNeeded = editor._cloneNotNeeded;\n    const selection = $getSelection();\n    if (selection !== null) {\n      selection.setCachedNodes(null);\n    }\n    if (cloneNotNeeded.has(key)) {\n      // Transforms clear the dirty node set on each iteration to keep track on newly dirty nodes\n      internalMarkNodeAsDirty(latestNode);\n      return latestNode;\n    }\n    const mutableNode = $cloneWithProperties(latestNode);\n    cloneNotNeeded.add(key);\n    internalMarkNodeAsDirty(mutableNode);\n    // Update reference in node map\n    nodeMap.set(key, mutableNode);\n    return mutableNode;\n  }\n\n  /**\n   * Returns the text content of the node. Override this for\n   * custom nodes that should have a representation in plain text\n   * format (for copy + paste, for example)\n   *\n   */\n  getTextContent() {\n    return '';\n  }\n\n  /**\n   * Returns the length of the string produced by calling getTextContent on this node.\n   *\n   */\n  getTextContentSize() {\n    return this.getTextContent().length;\n  }\n\n  // View\n\n  /**\n   * Called during the reconciliation process to determine which nodes\n   * to insert into the DOM for this Lexical Node.\n   *\n   * This method must return exactly one HTMLElement. Nested elements are not supported.\n   *\n   * Do not attempt to update the Lexical EditorState during this phase of the update lifecyle.\n   *\n   * @param _config - allows access to things like the EditorTheme (to apply classes) during reconciliation.\n   * @param _editor - allows access to the editor for context during reconciliation.\n   *\n   * */\n  createDOM(_config, _editor) {\n    {\n      formatDevErrorMessage(`createDOM: base method not extended`);\n    }\n  }\n\n  /**\n   * Called when a node changes and should update the DOM\n   * in whatever way is necessary to make it align with any changes that might\n   * have happened during the update.\n   *\n   * Returning \"true\" here will cause lexical to unmount and recreate the DOM node\n   * (by calling createDOM). You would need to do this if the element tag changes,\n   * for instance.\n   *\n   * */\n  updateDOM(_prevNode, _dom, _config) {\n    {\n      formatDevErrorMessage(`updateDOM: base method not extended`);\n    }\n  }\n\n  /**\n   * Controls how the this node is serialized to HTML. This is important for\n   * copy and paste between Lexical and non-Lexical editors, or Lexical editors with different namespaces,\n   * in which case the primary transfer format is HTML. It's also important if you're serializing\n   * to HTML for any other reason via {@link @lexical/html!$generateHtmlFromNodes}. You could\n   * also use this method to build your own HTML renderer.\n   *\n   * */\n  exportDOM(editor) {\n    const element = this.createDOM(editor._config, editor);\n    return {\n      element\n    };\n  }\n\n  /**\n   * Controls how the this node is serialized to JSON. This is important for\n   * copy and paste between Lexical editors sharing the same namespace. It's also important\n   * if you're serializing to JSON for persistent storage somewhere.\n   * See [Serialization & Deserialization](https://lexical.dev/docs/concepts/serialization#lexical---html).\n   *\n   * */\n  exportJSON() {\n    // eslint-disable-next-line dot-notation\n    const state = this.__state ? this.__state.toJSON() : undefined;\n    return {\n      type: this.__type,\n      version: 1,\n      ...state\n    };\n  }\n\n  /**\n   * Controls how the this node is deserialized from JSON. This is usually boilerplate,\n   * but provides an abstraction between the node implementation and serialized interface that can\n   * be important if you ever make breaking changes to a node schema (by adding or removing properties).\n   * See [Serialization & Deserialization](https://lexical.dev/docs/concepts/serialization#lexical---html).\n   *\n   * */\n  static importJSON(_serializedNode) {\n    {\n      formatDevErrorMessage(`LexicalNode: Node ${this.name} does not implement .importJSON().`);\n    }\n  }\n\n  /**\n   * Update this LexicalNode instance from serialized JSON. It's recommended\n   * to implement as much logic as possible in this method instead of the\n   * static importJSON method, so that the functionality can be inherited in subclasses.\n   *\n   * The LexicalUpdateJSON utility type should be used to ignore any type, version,\n   * or children properties in the JSON so that the extended JSON from subclasses\n   * are acceptable parameters for the super call.\n   *\n   * If overridden, this method must call super.\n   *\n   * @example\n   * ```ts\n   * class MyTextNode extends TextNode {\n   *   // ...\n   *   static importJSON(serializedNode: SerializedMyTextNode): MyTextNode {\n   *     return $createMyTextNode()\n   *       .updateFromJSON(serializedNode);\n   *   }\n   *   updateFromJSON(\n   *     serializedNode: LexicalUpdateJSON<SerializedMyTextNode>,\n   *   ): this {\n   *     return super.updateFromJSON(serializedNode)\n   *       .setMyProperty(serializedNode.myProperty);\n   *   }\n   * }\n   * ```\n   **/\n  updateFromJSON(serializedNode) {\n    return $updateStateFromJSON(this, serializedNode[NODE_STATE_KEY]);\n  }\n\n  /**\n   * @experimental\n   *\n   * Registers the returned function as a transform on the node during\n   * Editor initialization. Most such use cases should be addressed via\n   * the {@link LexicalEditor.registerNodeTransform} API.\n   *\n   * Experimental - use at your own risk.\n   */\n  static transform() {\n    return null;\n  }\n\n  // Setters and mutators\n\n  /**\n   * Removes this LexicalNode from the EditorState. If the node isn't re-inserted\n   * somewhere, the Lexical garbage collector will eventually clean it up.\n   *\n   * @param preserveEmptyParent - If falsy, the node's parent will be removed if\n   * it's empty after the removal operation. This is the default behavior, subject to\n   * other node heuristics such as {@link ElementNode#canBeEmpty}\n   * */\n  remove(preserveEmptyParent) {\n    $removeNode(this, true, preserveEmptyParent);\n  }\n\n  /**\n   * Replaces this LexicalNode with the provided node, optionally transferring the children\n   * of the replaced node to the replacing node.\n   *\n   * @param replaceWith - The node to replace this one with.\n   * @param includeChildren - Whether or not to transfer the children of this node to the replacing node.\n   * */\n  replace(replaceWith, includeChildren) {\n    errorOnReadOnly();\n    let selection = $getSelection();\n    if (selection !== null) {\n      selection = selection.clone();\n    }\n    errorOnInsertTextNodeOnRoot(this, replaceWith);\n    const self = this.getLatest();\n    const toReplaceKey = this.__key;\n    const key = replaceWith.__key;\n    const writableReplaceWith = replaceWith.getWritable();\n    const writableParent = this.getParentOrThrow().getWritable();\n    const size = writableParent.__size;\n    removeFromParent(writableReplaceWith);\n    const prevSibling = self.getPreviousSibling();\n    const nextSibling = self.getNextSibling();\n    const prevKey = self.__prev;\n    const nextKey = self.__next;\n    const parentKey = self.__parent;\n    $removeNode(self, false, true);\n    if (prevSibling === null) {\n      writableParent.__first = key;\n    } else {\n      const writablePrevSibling = prevSibling.getWritable();\n      writablePrevSibling.__next = key;\n    }\n    writableReplaceWith.__prev = prevKey;\n    if (nextSibling === null) {\n      writableParent.__last = key;\n    } else {\n      const writableNextSibling = nextSibling.getWritable();\n      writableNextSibling.__prev = key;\n    }\n    writableReplaceWith.__next = nextKey;\n    writableReplaceWith.__parent = parentKey;\n    writableParent.__size = size;\n    if (includeChildren) {\n      if (!($isElementNode(this) && $isElementNode(writableReplaceWith))) {\n        formatDevErrorMessage(`includeChildren should only be true for ElementNodes`);\n      }\n      this.getChildren().forEach(child => {\n        writableReplaceWith.append(child);\n      });\n    }\n    if ($isRangeSelection(selection)) {\n      $setSelection(selection);\n      const anchor = selection.anchor;\n      const focus = selection.focus;\n      if (anchor.key === toReplaceKey) {\n        $moveSelectionPointToEnd(anchor, writableReplaceWith);\n      }\n      if (focus.key === toReplaceKey) {\n        $moveSelectionPointToEnd(focus, writableReplaceWith);\n      }\n    }\n    if ($getCompositionKey() === toReplaceKey) {\n      $setCompositionKey(key);\n    }\n    return writableReplaceWith;\n  }\n\n  /**\n   * Inserts a node after this LexicalNode (as the next sibling).\n   *\n   * @param nodeToInsert - The node to insert after this one.\n   * @param restoreSelection - Whether or not to attempt to resolve the\n   * selection to the appropriate place after the operation is complete.\n   * */\n  insertAfter(nodeToInsert, restoreSelection = true) {\n    errorOnReadOnly();\n    errorOnInsertTextNodeOnRoot(this, nodeToInsert);\n    const writableSelf = this.getWritable();\n    const writableNodeToInsert = nodeToInsert.getWritable();\n    const oldParent = writableNodeToInsert.getParent();\n    const selection = $getSelection();\n    let elementAnchorSelectionOnNode = false;\n    let elementFocusSelectionOnNode = false;\n    if (oldParent !== null) {\n      // TODO: this is O(n), can we improve?\n      const oldIndex = nodeToInsert.getIndexWithinParent();\n      removeFromParent(writableNodeToInsert);\n      if ($isRangeSelection(selection)) {\n        const oldParentKey = oldParent.__key;\n        const anchor = selection.anchor;\n        const focus = selection.focus;\n        elementAnchorSelectionOnNode = anchor.type === 'element' && anchor.key === oldParentKey && anchor.offset === oldIndex + 1;\n        elementFocusSelectionOnNode = focus.type === 'element' && focus.key === oldParentKey && focus.offset === oldIndex + 1;\n      }\n    }\n    const nextSibling = this.getNextSibling();\n    const writableParent = this.getParentOrThrow().getWritable();\n    const insertKey = writableNodeToInsert.__key;\n    const nextKey = writableSelf.__next;\n    if (nextSibling === null) {\n      writableParent.__last = insertKey;\n    } else {\n      const writableNextSibling = nextSibling.getWritable();\n      writableNextSibling.__prev = insertKey;\n    }\n    writableParent.__size++;\n    writableSelf.__next = insertKey;\n    writableNodeToInsert.__next = nextKey;\n    writableNodeToInsert.__prev = writableSelf.__key;\n    writableNodeToInsert.__parent = writableSelf.__parent;\n    if (restoreSelection && $isRangeSelection(selection)) {\n      const index = this.getIndexWithinParent();\n      $updateElementSelectionOnCreateDeleteNode(selection, writableParent, index + 1);\n      const writableParentKey = writableParent.__key;\n      if (elementAnchorSelectionOnNode) {\n        selection.anchor.set(writableParentKey, index + 2, 'element');\n      }\n      if (elementFocusSelectionOnNode) {\n        selection.focus.set(writableParentKey, index + 2, 'element');\n      }\n    }\n    return nodeToInsert;\n  }\n\n  /**\n   * Inserts a node before this LexicalNode (as the previous sibling).\n   *\n   * @param nodeToInsert - The node to insert before this one.\n   * @param restoreSelection - Whether or not to attempt to resolve the\n   * selection to the appropriate place after the operation is complete.\n   * */\n  insertBefore(nodeToInsert, restoreSelection = true) {\n    errorOnReadOnly();\n    errorOnInsertTextNodeOnRoot(this, nodeToInsert);\n    const writableSelf = this.getWritable();\n    const writableNodeToInsert = nodeToInsert.getWritable();\n    const insertKey = writableNodeToInsert.__key;\n    removeFromParent(writableNodeToInsert);\n    const prevSibling = this.getPreviousSibling();\n    const writableParent = this.getParentOrThrow().getWritable();\n    const prevKey = writableSelf.__prev;\n    // TODO: this is O(n), can we improve?\n    const index = this.getIndexWithinParent();\n    if (prevSibling === null) {\n      writableParent.__first = insertKey;\n    } else {\n      const writablePrevSibling = prevSibling.getWritable();\n      writablePrevSibling.__next = insertKey;\n    }\n    writableParent.__size++;\n    writableSelf.__prev = insertKey;\n    writableNodeToInsert.__prev = prevKey;\n    writableNodeToInsert.__next = writableSelf.__key;\n    writableNodeToInsert.__parent = writableSelf.__parent;\n    const selection = $getSelection();\n    if (restoreSelection && $isRangeSelection(selection)) {\n      const parent = this.getParentOrThrow();\n      $updateElementSelectionOnCreateDeleteNode(selection, parent, index);\n    }\n    return nodeToInsert;\n  }\n\n  /**\n   * Whether or not this node has a required parent. Used during copy + paste operations\n   * to normalize nodes that would otherwise be orphaned. For example, ListItemNodes without\n   * a ListNode parent or TextNodes with a ParagraphNode parent.\n   *\n   * */\n  isParentRequired() {\n    return false;\n  }\n\n  /**\n   * The creation logic for any required parent. Should be implemented if {@link isParentRequired} returns true.\n   *\n   * */\n  createParentElementNode() {\n    return $createParagraphNode();\n  }\n  selectStart() {\n    return this.selectPrevious();\n  }\n  selectEnd() {\n    return this.selectNext(0, 0);\n  }\n\n  /**\n   * Moves selection to the previous sibling of this node, at the specified offsets.\n   *\n   * @param anchorOffset - The anchor offset for selection.\n   * @param focusOffset -  The focus offset for selection\n   * */\n  selectPrevious(anchorOffset, focusOffset) {\n    errorOnReadOnly();\n    const prevSibling = this.getPreviousSibling();\n    const parent = this.getParentOrThrow();\n    if (prevSibling === null) {\n      return parent.select(0, 0);\n    }\n    if ($isElementNode(prevSibling)) {\n      return prevSibling.select();\n    } else if (!$isTextNode(prevSibling)) {\n      const index = prevSibling.getIndexWithinParent() + 1;\n      return parent.select(index, index);\n    }\n    return prevSibling.select(anchorOffset, focusOffset);\n  }\n\n  /**\n   * Moves selection to the next sibling of this node, at the specified offsets.\n   *\n   * @param anchorOffset - The anchor offset for selection.\n   * @param focusOffset -  The focus offset for selection\n   * */\n  selectNext(anchorOffset, focusOffset) {\n    errorOnReadOnly();\n    const nextSibling = this.getNextSibling();\n    const parent = this.getParentOrThrow();\n    if (nextSibling === null) {\n      return parent.select();\n    }\n    if ($isElementNode(nextSibling)) {\n      return nextSibling.select(0, 0);\n    } else if (!$isTextNode(nextSibling)) {\n      const index = nextSibling.getIndexWithinParent();\n      return parent.select(index, index);\n    }\n    return nextSibling.select(anchorOffset, focusOffset);\n  }\n\n  /**\n   * Marks a node dirty, triggering transforms and\n   * forcing it to be reconciled during the update cycle.\n   *\n   * */\n  markDirty() {\n    this.getWritable();\n  }\n\n  /**\n   * @internal\n   *\n   * When the reconciler detects that a node was mutated, this method\n   * may be called to restore the node to a known good state.\n   */\n  reconcileObservedMutation(dom, editor) {\n    this.markDirty();\n  }\n}\nfunction errorOnTypeKlassMismatch(type, klass) {\n  const registeredNode = getActiveEditor()._nodes.get(type);\n  // Common error - split in its own invariant\n  if (registeredNode === undefined) {\n    {\n      formatDevErrorMessage(`Create node: Attempted to create node ${klass.name} that was not configured to be used on the editor.`);\n    }\n  }\n  const editorKlass = registeredNode.klass;\n  if (editorKlass !== klass) {\n    {\n      formatDevErrorMessage(`Create node: Type ${type} in node ${klass.name} does not match registered node ${editorKlass.name} with the same type`);\n    }\n  }\n}\n\n/**\n * Insert a series of nodes after this LexicalNode (as next siblings)\n *\n * @param firstToInsert - The first node to insert after this one.\n * @param lastToInsert - The last node to insert after this one. Must be a\n * later sibling of FirstNode. If not provided, it will be its last sibling.\n */\nfunction insertRangeAfter(node, firstToInsert, lastToInsert) {\n  const lastToInsert2 = firstToInsert.getParentOrThrow().getLastChild();\n  let current = firstToInsert;\n  const nodesToInsert = [firstToInsert];\n  while (current !== lastToInsert2) {\n    if (!current.getNextSibling()) {\n      {\n        formatDevErrorMessage(`insertRangeAfter: lastToInsert must be a later sibling of firstToInsert`);\n      }\n    }\n    current = current.getNextSibling();\n    nodesToInsert.push(current);\n  }\n  let currentNode = node;\n  for (const nodeToInsert of nodesToInsert) {\n    currentNode = currentNode.insertAfter(nodeToInsert);\n  }\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/** @noInheritDoc */\nclass LineBreakNode extends LexicalNode {\n  static getType() {\n    return 'linebreak';\n  }\n  static clone(node) {\n    return new LineBreakNode(node.__key);\n  }\n  constructor(key) {\n    super(key);\n  }\n  getTextContent() {\n    return '\\n';\n  }\n  createDOM() {\n    return document.createElement('br');\n  }\n  updateDOM() {\n    return false;\n  }\n  isInline() {\n    return true;\n  }\n  static importDOM() {\n    return {\n      br: node => {\n        if (isOnlyChildInBlockNode(node) || isLastChildInBlockNode(node)) {\n          return null;\n        }\n        return {\n          conversion: $convertLineBreakElement,\n          priority: 0\n        };\n      }\n    };\n  }\n  static importJSON(serializedLineBreakNode) {\n    return $createLineBreakNode().updateFromJSON(serializedLineBreakNode);\n  }\n}\nfunction $convertLineBreakElement(node) {\n  return {\n    node: $createLineBreakNode()\n  };\n}\nfunction $createLineBreakNode() {\n  return $applyNodeReplacement(new LineBreakNode());\n}\nfunction $isLineBreakNode(node) {\n  return node instanceof LineBreakNode;\n}\nfunction isOnlyChildInBlockNode(node) {\n  const parentElement = node.parentElement;\n  if (parentElement !== null && isBlockDomNode(parentElement)) {\n    const firstChild = parentElement.firstChild;\n    if (firstChild === node || firstChild.nextSibling === node && isWhitespaceDomTextNode(firstChild)) {\n      const lastChild = parentElement.lastChild;\n      if (lastChild === node || lastChild.previousSibling === node && isWhitespaceDomTextNode(lastChild)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isLastChildInBlockNode(node) {\n  const parentElement = node.parentElement;\n  if (parentElement !== null && isBlockDomNode(parentElement)) {\n    // check if node is first child, because only childs dont count\n    const firstChild = parentElement.firstChild;\n    if (firstChild === node || firstChild.nextSibling === node && isWhitespaceDomTextNode(firstChild)) {\n      return false;\n    }\n\n    // check if its last child\n    const lastChild = parentElement.lastChild;\n    if (lastChild === node || lastChild.previousSibling === node && isWhitespaceDomTextNode(lastChild)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isWhitespaceDomTextNode(node) {\n  return isDOMTextNode(node) && /^( |\\t|\\r?\\n)+$/.test(node.textContent || '');\n}\n\nfunction getElementOuterTag(node, format) {\n  if (format & IS_CODE) {\n    return 'code';\n  }\n  if (format & IS_HIGHLIGHT) {\n    return 'mark';\n  }\n  if (format & IS_SUBSCRIPT) {\n    return 'sub';\n  }\n  if (format & IS_SUPERSCRIPT) {\n    return 'sup';\n  }\n  return null;\n}\nfunction getElementInnerTag(node, format) {\n  if (format & IS_BOLD) {\n    return 'strong';\n  }\n  if (format & IS_ITALIC) {\n    return 'em';\n  }\n  return 'span';\n}\nfunction setTextThemeClassNames(tag, prevFormat, nextFormat, dom, textClassNames) {\n  const domClassList = dom.classList;\n  // Firstly we handle the base theme.\n  let classNames = getCachedClassNameArray(textClassNames, 'base');\n  if (classNames !== undefined) {\n    domClassList.add(...classNames);\n  }\n  // Secondly we handle the special case: underline + strikethrough.\n  // We have to do this as we need a way to compose the fact that\n  // the same CSS property will need to be used: text-decoration.\n  // In an ideal world we shouldn't have to do this, but there's no\n  // easy workaround for many atomic CSS systems today.\n  classNames = getCachedClassNameArray(textClassNames, 'underlineStrikethrough');\n  let hasUnderlineStrikethrough = false;\n  const prevUnderlineStrikethrough = prevFormat & IS_UNDERLINE && prevFormat & IS_STRIKETHROUGH;\n  const nextUnderlineStrikethrough = nextFormat & IS_UNDERLINE && nextFormat & IS_STRIKETHROUGH;\n  if (classNames !== undefined) {\n    if (nextUnderlineStrikethrough) {\n      hasUnderlineStrikethrough = true;\n      if (!prevUnderlineStrikethrough) {\n        domClassList.add(...classNames);\n      }\n    } else if (prevUnderlineStrikethrough) {\n      domClassList.remove(...classNames);\n    }\n  }\n  for (const key in TEXT_TYPE_TO_FORMAT) {\n    const format = key;\n    const flag = TEXT_TYPE_TO_FORMAT[format];\n    classNames = getCachedClassNameArray(textClassNames, key);\n    if (classNames !== undefined) {\n      if (nextFormat & flag) {\n        if (hasUnderlineStrikethrough && (key === 'underline' || key === 'strikethrough')) {\n          if (prevFormat & flag) {\n            domClassList.remove(...classNames);\n          }\n          continue;\n        }\n        if ((prevFormat & flag) === 0 || prevUnderlineStrikethrough && key === 'underline' || key === 'strikethrough') {\n          domClassList.add(...classNames);\n        }\n      } else if (prevFormat & flag) {\n        domClassList.remove(...classNames);\n      }\n    }\n  }\n}\nfunction diffComposedText(a, b) {\n  const aLength = a.length;\n  const bLength = b.length;\n  let left = 0;\n  let right = 0;\n  while (left < aLength && left < bLength && a[left] === b[left]) {\n    left++;\n  }\n  while (right + left < aLength && right + left < bLength && a[aLength - right - 1] === b[bLength - right - 1]) {\n    right++;\n  }\n  return [left, aLength - left - right, b.slice(left, bLength - right)];\n}\nfunction setTextContent(nextText, dom, node) {\n  const firstChild = dom.firstChild;\n  const isComposing = node.isComposing();\n  // Always add a suffix if we're composing a node\n  const suffix = isComposing ? COMPOSITION_SUFFIX : '';\n  const text = nextText + suffix;\n  if (firstChild == null) {\n    dom.textContent = text;\n  } else {\n    const nodeValue = firstChild.nodeValue;\n    if (nodeValue !== text) {\n      if (isComposing || IS_FIREFOX) {\n        // We also use the diff composed text for general text in FF to avoid\n        // the spellcheck red line from flickering.\n        const [index, remove, insert] = diffComposedText(nodeValue, text);\n        if (remove !== 0) {\n          // @ts-expect-error\n          firstChild.deleteData(index, remove);\n        }\n        // @ts-expect-error\n        firstChild.insertData(index, insert);\n      } else {\n        firstChild.nodeValue = text;\n      }\n    }\n  }\n}\nfunction createTextInnerDOM(innerDOM, node, innerTag, format, text, config) {\n  setTextContent(text, innerDOM, node);\n  const theme = config.theme;\n  // Apply theme class names\n  const textClassNames = theme.text;\n  if (textClassNames !== undefined) {\n    setTextThemeClassNames(innerTag, 0, format, innerDOM, textClassNames);\n  }\n}\nfunction wrapElementWith(element, tag) {\n  const el = document.createElement(tag);\n  el.appendChild(element);\n  return el;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\n\n/** @noInheritDoc */\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nclass TextNode extends LexicalNode {\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  static getType() {\n    return 'text';\n  }\n  static clone(node) {\n    return new TextNode(node.__text, node.__key);\n  }\n  afterCloneFrom(prevNode) {\n    super.afterCloneFrom(prevNode);\n    this.__text = prevNode.__text;\n    this.__format = prevNode.__format;\n    this.__style = prevNode.__style;\n    this.__mode = prevNode.__mode;\n    this.__detail = prevNode.__detail;\n  }\n  constructor(text = '', key) {\n    super(key);\n    this.__text = text;\n    this.__format = 0;\n    this.__style = '';\n    this.__mode = 0;\n    this.__detail = 0;\n  }\n\n  /**\n   * Returns a 32-bit integer that represents the TextFormatTypes currently applied to the\n   * TextNode. You probably don't want to use this method directly - consider using TextNode.hasFormat instead.\n   *\n   * @returns a number representing the format of the text node.\n   */\n  getFormat() {\n    const self = this.getLatest();\n    return self.__format;\n  }\n\n  /**\n   * Returns a 32-bit integer that represents the TextDetailTypes currently applied to the\n   * TextNode. You probably don't want to use this method directly - consider using TextNode.isDirectionless\n   * or TextNode.isUnmergeable instead.\n   *\n   * @returns a number representing the detail of the text node.\n   */\n  getDetail() {\n    const self = this.getLatest();\n    return self.__detail;\n  }\n\n  /**\n   * Returns the mode (TextModeType) of the TextNode, which may be \"normal\", \"token\", or \"segmented\"\n   *\n   * @returns TextModeType.\n   */\n  getMode() {\n    const self = this.getLatest();\n    return TEXT_TYPE_TO_MODE[self.__mode];\n  }\n\n  /**\n   * Returns the styles currently applied to the node. This is analogous to CSSText in the DOM.\n   *\n   * @returns CSSText-like string of styles applied to the underlying DOM node.\n   */\n  getStyle() {\n    const self = this.getLatest();\n    return self.__style;\n  }\n\n  /**\n   * Returns whether or not the node is in \"token\" mode. TextNodes in token mode can be navigated through character-by-character\n   * with a RangeSelection, but are deleted as a single entity (not invdividually by character).\n   *\n   * @returns true if the node is in token mode, false otherwise.\n   */\n  isToken() {\n    const self = this.getLatest();\n    return self.__mode === IS_TOKEN;\n  }\n\n  /**\n   *\n   * @returns true if Lexical detects that an IME or other 3rd-party script is attempting to\n   * mutate the TextNode, false otherwise.\n   */\n  isComposing() {\n    return this.__key === $getCompositionKey();\n  }\n\n  /**\n   * Returns whether or not the node is in \"segemented\" mode. TextNodes in segemented mode can be navigated through character-by-character\n   * with a RangeSelection, but are deleted in space-delimited \"segments\".\n   *\n   * @returns true if the node is in segmented mode, false otherwise.\n   */\n  isSegmented() {\n    const self = this.getLatest();\n    return self.__mode === IS_SEGMENTED;\n  }\n  /**\n   * Returns whether or not the node is \"directionless\". Directionless nodes don't respect changes between RTL and LTR modes.\n   *\n   * @returns true if the node is directionless, false otherwise.\n   */\n  isDirectionless() {\n    const self = this.getLatest();\n    return (self.__detail & IS_DIRECTIONLESS) !== 0;\n  }\n  /**\n   * Returns whether or not the node is unmergeable. In some scenarios, Lexical tries to merge\n   * adjacent TextNodes into a single TextNode. If a TextNode is unmergeable, this won't happen.\n   *\n   * @returns true if the node is unmergeable, false otherwise.\n   */\n  isUnmergeable() {\n    const self = this.getLatest();\n    return (self.__detail & IS_UNMERGEABLE) !== 0;\n  }\n\n  /**\n   * Returns whether or not the node has the provided format applied. Use this with the human-readable TextFormatType\n   * string values to get the format of a TextNode.\n   *\n   * @param type - the TextFormatType to check for.\n   *\n   * @returns true if the node has the provided format, false otherwise.\n   */\n  hasFormat(type) {\n    const formatFlag = TEXT_TYPE_TO_FORMAT[type];\n    return (this.getFormat() & formatFlag) !== 0;\n  }\n\n  /**\n   * Returns whether or not the node is simple text. Simple text is defined as a TextNode that has the string type \"text\"\n   * (i.e., not a subclass) and has no mode applied to it (i.e., not segmented or token).\n   *\n   * @returns true if the node is simple text, false otherwise.\n   */\n  isSimpleText() {\n    return this.__type === 'text' && this.__mode === 0;\n  }\n\n  /**\n   * Returns the text content of the node as a string.\n   *\n   * @returns a string representing the text content of the node.\n   */\n  getTextContent() {\n    const self = this.getLatest();\n    return self.__text;\n  }\n\n  /**\n   * Returns the format flags applied to the node as a 32-bit integer.\n   *\n   * @returns a number representing the TextFormatTypes applied to the node.\n   */\n  getFormatFlags(type, alignWithFormat) {\n    const self = this.getLatest();\n    const format = self.__format;\n    return toggleTextFormatType(format, type, alignWithFormat);\n  }\n\n  /**\n   *\n   * @returns true if the text node supports font styling, false otherwise.\n   */\n  canHaveFormat() {\n    return true;\n  }\n\n  /**\n   * @returns true if the text node is inline, false otherwise.\n   */\n  isInline() {\n    return true;\n  }\n\n  // View\n\n  createDOM(config, editor) {\n    const format = this.__format;\n    const outerTag = getElementOuterTag(this, format);\n    const innerTag = getElementInnerTag(this, format);\n    const tag = outerTag === null ? innerTag : outerTag;\n    const dom = document.createElement(tag);\n    let innerDOM = dom;\n    if (this.hasFormat('code')) {\n      dom.setAttribute('spellcheck', 'false');\n    }\n    if (outerTag !== null) {\n      innerDOM = document.createElement(innerTag);\n      dom.appendChild(innerDOM);\n    }\n    const text = this.__text;\n    createTextInnerDOM(innerDOM, this, innerTag, format, text, config);\n    const style = this.__style;\n    if (style !== '') {\n      dom.style.cssText = style;\n    }\n    return dom;\n  }\n  updateDOM(prevNode, dom, config) {\n    const nextText = this.__text;\n    const prevFormat = prevNode.__format;\n    const nextFormat = this.__format;\n    const prevOuterTag = getElementOuterTag(this, prevFormat);\n    const nextOuterTag = getElementOuterTag(this, nextFormat);\n    const prevInnerTag = getElementInnerTag(this, prevFormat);\n    const nextInnerTag = getElementInnerTag(this, nextFormat);\n    const prevTag = prevOuterTag === null ? prevInnerTag : prevOuterTag;\n    const nextTag = nextOuterTag === null ? nextInnerTag : nextOuterTag;\n    if (prevTag !== nextTag) {\n      return true;\n    }\n    if (prevOuterTag === nextOuterTag && prevInnerTag !== nextInnerTag) {\n      // should always be an element\n      const prevInnerDOM = dom.firstChild;\n      if (prevInnerDOM == null) {\n        {\n          formatDevErrorMessage(`updateDOM: prevInnerDOM is null or undefined`);\n        }\n      }\n      const nextInnerDOM = document.createElement(nextInnerTag);\n      createTextInnerDOM(nextInnerDOM, this, nextInnerTag, nextFormat, nextText, config);\n      dom.replaceChild(nextInnerDOM, prevInnerDOM);\n      return false;\n    }\n    let innerDOM = dom;\n    if (nextOuterTag !== null) {\n      if (prevOuterTag !== null) {\n        innerDOM = dom.firstChild;\n        if (innerDOM == null) {\n          {\n            formatDevErrorMessage(`updateDOM: innerDOM is null or undefined`);\n          }\n        }\n      }\n    }\n    setTextContent(nextText, innerDOM, this);\n    const theme = config.theme;\n    // Apply theme class names\n    const textClassNames = theme.text;\n    if (textClassNames !== undefined && prevFormat !== nextFormat) {\n      setTextThemeClassNames(nextInnerTag, prevFormat, nextFormat, innerDOM, textClassNames);\n    }\n    const prevStyle = prevNode.__style;\n    const nextStyle = this.__style;\n    if (prevStyle !== nextStyle) {\n      dom.style.cssText = nextStyle;\n    }\n    return false;\n  }\n  static importDOM() {\n    return {\n      '#text': () => ({\n        conversion: $convertTextDOMNode,\n        priority: 0\n      }),\n      b: () => ({\n        conversion: convertBringAttentionToElement,\n        priority: 0\n      }),\n      code: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      }),\n      em: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      }),\n      i: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      }),\n      mark: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      }),\n      s: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      }),\n      span: () => ({\n        conversion: convertSpanElement,\n        priority: 0\n      }),\n      strong: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      }),\n      sub: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      }),\n      sup: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      }),\n      u: () => ({\n        conversion: convertTextFormatElement,\n        priority: 0\n      })\n    };\n  }\n  static importJSON(serializedNode) {\n    return $createTextNode().updateFromJSON(serializedNode);\n  }\n  updateFromJSON(serializedNode) {\n    return super.updateFromJSON(serializedNode).setTextContent(serializedNode.text).setFormat(serializedNode.format).setDetail(serializedNode.detail).setMode(serializedNode.mode).setStyle(serializedNode.style);\n  }\n\n  // This improves Lexical's basic text output in copy+paste plus\n  // for headless mode where people might use Lexical to generate\n  // HTML content and not have the ability to use CSS classes.\n  exportDOM(editor) {\n    let {\n      element\n    } = super.exportDOM(editor);\n    if (!isHTMLElement(element)) {\n      formatDevErrorMessage(`Expected TextNode createDOM to always return a HTMLElement`);\n    }\n    element.style.whiteSpace = 'pre-wrap';\n    // This is the only way to properly add support for most clients,\n    // even if it's semantically incorrect to have to resort to using\n    // <b>, <u>, <s>, <i> elements.\n    if (this.hasFormat('bold')) {\n      element = wrapElementWith(element, 'b');\n    }\n    if (this.hasFormat('italic')) {\n      element = wrapElementWith(element, 'i');\n    }\n    if (this.hasFormat('strikethrough')) {\n      element = wrapElementWith(element, 's');\n    }\n    if (this.hasFormat('underline')) {\n      element = wrapElementWith(element, 'u');\n    }\n    return {\n      element\n    };\n  }\n  exportJSON() {\n    return {\n      detail: this.getDetail(),\n      format: this.getFormat(),\n      mode: this.getMode(),\n      style: this.getStyle(),\n      text: this.getTextContent(),\n      // As an exception here we invoke super at the end for historical reasons.\n      // Namely, to preserve the order of the properties and not to break the tests\n      // that use the serialized string representation.\n      ...super.exportJSON()\n    };\n  }\n\n  // Mutators\n  selectionTransform(prevSelection, nextSelection) {\n    return;\n  }\n\n  /**\n   * Sets the node format to the provided TextFormatType or 32-bit integer. Note that the TextFormatType\n   * version of the argument can only specify one format and doing so will remove all other formats that\n   * may be applied to the node. For toggling behavior, consider using {@link TextNode.toggleFormat}\n   *\n   * @param format - TextFormatType or 32-bit integer representing the node format.\n   *\n   * @returns this TextNode.\n   * // TODO 0.12 This should just be a `string`.\n   */\n  setFormat(format) {\n    const self = this.getWritable();\n    self.__format = typeof format === 'string' ? TEXT_TYPE_TO_FORMAT[format] : format;\n    return self;\n  }\n\n  /**\n   * Sets the node detail to the provided TextDetailType or 32-bit integer. Note that the TextDetailType\n   * version of the argument can only specify one detail value and doing so will remove all other detail values that\n   * may be applied to the node. For toggling behavior, consider using {@link TextNode.toggleDirectionless}\n   * or {@link TextNode.toggleUnmergeable}\n   *\n   * @param detail - TextDetailType or 32-bit integer representing the node detail.\n   *\n   * @returns this TextNode.\n   * // TODO 0.12 This should just be a `string`.\n   */\n  setDetail(detail) {\n    const self = this.getWritable();\n    self.__detail = typeof detail === 'string' ? DETAIL_TYPE_TO_DETAIL[detail] : detail;\n    return self;\n  }\n\n  /**\n   * Sets the node style to the provided CSSText-like string. Set this property as you\n   * would an HTMLElement style attribute to apply inline styles to the underlying DOM Element.\n   *\n   * @param style - CSSText to be applied to the underlying HTMLElement.\n   *\n   * @returns this TextNode.\n   */\n  setStyle(style) {\n    const self = this.getWritable();\n    self.__style = style;\n    return self;\n  }\n\n  /**\n   * Applies the provided format to this TextNode if it's not present. Removes it if it's present.\n   * The subscript and superscript formats are mutually exclusive.\n   * Prefer using this method to turn specific formats on and off.\n   *\n   * @param type - TextFormatType to toggle.\n   *\n   * @returns this TextNode.\n   */\n  toggleFormat(type) {\n    const format = this.getFormat();\n    const newFormat = toggleTextFormatType(format, type, null);\n    return this.setFormat(newFormat);\n  }\n\n  /**\n   * Toggles the directionless detail value of the node. Prefer using this method over setDetail.\n   *\n   * @returns this TextNode.\n   */\n  toggleDirectionless() {\n    const self = this.getWritable();\n    self.__detail ^= IS_DIRECTIONLESS;\n    return self;\n  }\n\n  /**\n   * Toggles the unmergeable detail value of the node. Prefer using this method over setDetail.\n   *\n   * @returns this TextNode.\n   */\n  toggleUnmergeable() {\n    const self = this.getWritable();\n    self.__detail ^= IS_UNMERGEABLE;\n    return self;\n  }\n\n  /**\n   * Sets the mode of the node.\n   *\n   * @returns this TextNode.\n   */\n  setMode(type) {\n    const mode = TEXT_MODE_TO_TYPE[type];\n    if (this.__mode === mode) {\n      return this;\n    }\n    const self = this.getWritable();\n    self.__mode = mode;\n    return self;\n  }\n\n  /**\n   * Sets the text content of the node.\n   *\n   * @param text - the string to set as the text value of the node.\n   *\n   * @returns this TextNode.\n   */\n  setTextContent(text) {\n    if (this.__text === text) {\n      return this;\n    }\n    const self = this.getWritable();\n    self.__text = text;\n    return self;\n  }\n\n  /**\n   * Sets the current Lexical selection to be a RangeSelection with anchor and focus on this TextNode at the provided offsets.\n   *\n   * @param _anchorOffset - the offset at which the Selection anchor will be placed.\n   * @param _focusOffset - the offset at which the Selection focus will be placed.\n   *\n   * @returns the new RangeSelection.\n   */\n  select(_anchorOffset, _focusOffset) {\n    errorOnReadOnly();\n    let anchorOffset = _anchorOffset;\n    let focusOffset = _focusOffset;\n    const selection = $getSelection();\n    const text = this.getTextContent();\n    const key = this.__key;\n    if (typeof text === 'string') {\n      const lastOffset = text.length;\n      if (anchorOffset === undefined) {\n        anchorOffset = lastOffset;\n      }\n      if (focusOffset === undefined) {\n        focusOffset = lastOffset;\n      }\n    } else {\n      anchorOffset = 0;\n      focusOffset = 0;\n    }\n    if (!$isRangeSelection(selection)) {\n      return $internalMakeRangeSelection(key, anchorOffset, key, focusOffset, 'text', 'text');\n    } else {\n      const compositionKey = $getCompositionKey();\n      if (compositionKey === selection.anchor.key || compositionKey === selection.focus.key) {\n        $setCompositionKey(key);\n      }\n      selection.setTextNodeRange(this, anchorOffset, this, focusOffset);\n    }\n    return selection;\n  }\n  selectStart() {\n    return this.select(0, 0);\n  }\n  selectEnd() {\n    const size = this.getTextContentSize();\n    return this.select(size, size);\n  }\n\n  /**\n   * Inserts the provided text into this TextNode at the provided offset, deleting the number of characters\n   * specified. Can optionally calculate a new selection after the operation is complete.\n   *\n   * @param offset - the offset at which the splice operation should begin.\n   * @param delCount - the number of characters to delete, starting from the offset.\n   * @param newText - the text to insert into the TextNode at the offset.\n   * @param moveSelection - optional, whether or not to move selection to the end of the inserted substring.\n   *\n   * @returns this TextNode.\n   */\n  spliceText(offset, delCount, newText, moveSelection) {\n    const writableSelf = this.getWritable();\n    const text = writableSelf.__text;\n    const handledTextLength = newText.length;\n    let index = offset;\n    if (index < 0) {\n      index = handledTextLength + index;\n      if (index < 0) {\n        index = 0;\n      }\n    }\n    const selection = $getSelection();\n    if (moveSelection && $isRangeSelection(selection)) {\n      const newOffset = offset + handledTextLength;\n      selection.setTextNodeRange(writableSelf, newOffset, writableSelf, newOffset);\n    }\n    const updatedText = text.slice(0, index) + newText + text.slice(index + delCount);\n    writableSelf.__text = updatedText;\n    return writableSelf;\n  }\n\n  /**\n   * This method is meant to be overriden by TextNode subclasses to control the behavior of those nodes\n   * when a user event would cause text to be inserted before them in the editor. If true, Lexical will attempt\n   * to insert text into this node. If false, it will insert the text in a new sibling node.\n   *\n   * @returns true if text can be inserted before the node, false otherwise.\n   */\n  canInsertTextBefore() {\n    return true;\n  }\n\n  /**\n   * This method is meant to be overriden by TextNode subclasses to control the behavior of those nodes\n   * when a user event would cause text to be inserted after them in the editor. If true, Lexical will attempt\n   * to insert text into this node. If false, it will insert the text in a new sibling node.\n   *\n   * @returns true if text can be inserted after the node, false otherwise.\n   */\n  canInsertTextAfter() {\n    return true;\n  }\n\n  /**\n   * Splits this TextNode at the provided character offsets, forming new TextNodes from the substrings\n   * formed by the split, and inserting those new TextNodes into the editor, replacing the one that was split.\n   *\n   * @param splitOffsets - rest param of the text content character offsets at which this node should be split.\n   *\n   * @returns an Array containing the newly-created TextNodes.\n   */\n  splitText(...splitOffsets) {\n    errorOnReadOnly();\n    const self = this.getLatest();\n    const textContent = self.getTextContent();\n    if (textContent === '') {\n      return [];\n    }\n    const key = self.__key;\n    const compositionKey = $getCompositionKey();\n    const textLength = textContent.length;\n    splitOffsets.sort((a, b) => a - b);\n    splitOffsets.push(textLength);\n    const parts = [];\n    const splitOffsetsLength = splitOffsets.length;\n    for (let start = 0, offsetIndex = 0; start < textLength && offsetIndex <= splitOffsetsLength; offsetIndex++) {\n      const end = splitOffsets[offsetIndex];\n      if (end > start) {\n        parts.push(textContent.slice(start, end));\n        start = end;\n      }\n    }\n    const partsLength = parts.length;\n    if (partsLength === 1) {\n      return [self];\n    }\n    const firstPart = parts[0];\n    const parent = self.getParent();\n    let writableNode;\n    const format = self.getFormat();\n    const style = self.getStyle();\n    const detail = self.__detail;\n    let hasReplacedSelf = false;\n\n    // Prepare to handle selection\n    let startTextPoint = null;\n    let endTextPoint = null;\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      const [startPoint, endPoint] = selection.isBackward() ? [selection.focus, selection.anchor] : [selection.anchor, selection.focus];\n      if (startPoint.type === 'text' && startPoint.key === key) {\n        startTextPoint = startPoint;\n      }\n      if (endPoint.type === 'text' && endPoint.key === key) {\n        endTextPoint = endPoint;\n      }\n    }\n    if (self.isSegmented()) {\n      // Create a new TextNode\n      writableNode = $createTextNode(firstPart);\n      writableNode.__format = format;\n      writableNode.__style = style;\n      writableNode.__detail = detail;\n      hasReplacedSelf = true;\n    } else {\n      // For the first part, update the existing node\n      writableNode = self.getWritable();\n      writableNode.__text = firstPart;\n    }\n\n    // Then handle all other parts\n    const splitNodes = [writableNode];\n    for (let i = 1; i < partsLength; i++) {\n      const part = parts[i];\n      const sibling = $createTextNode(part);\n      sibling.__format = format;\n      sibling.__style = style;\n      sibling.__detail = detail;\n      const siblingKey = sibling.__key;\n      if (compositionKey === key) {\n        $setCompositionKey(siblingKey);\n      }\n      splitNodes.push(sibling);\n    }\n\n    // Move the selection to the best location in the split string.\n    // The end point is always left-biased, and the start point is\n    // generally left biased unless the end point would land on a\n    // later node in the split in which case it will prefer the start\n    // of that node so they will tend to be on the same node.\n    const originalStartOffset = startTextPoint ? startTextPoint.offset : null;\n    const originalEndOffset = endTextPoint ? endTextPoint.offset : null;\n    let startOffset = 0;\n    for (const node of splitNodes) {\n      if (!(startTextPoint || endTextPoint)) {\n        break;\n      }\n      const endOffset = startOffset + node.getTextContentSize();\n      if (startTextPoint !== null && originalStartOffset !== null && originalStartOffset <= endOffset && originalStartOffset >= startOffset) {\n        // Set the start point to the first valid node\n        startTextPoint.set(node.getKey(), originalStartOffset - startOffset, 'text');\n        if (originalStartOffset < endOffset) {\n          // The start isn't on a border so we can stop checking\n          startTextPoint = null;\n        }\n      }\n      if (endTextPoint !== null && originalEndOffset !== null && originalEndOffset <= endOffset && originalEndOffset >= startOffset) {\n        endTextPoint.set(node.getKey(), originalEndOffset - startOffset, 'text');\n        break;\n      }\n      startOffset = endOffset;\n    }\n\n    // Insert the nodes into the parent's children\n    if (parent !== null) {\n      internalMarkSiblingsAsDirty(this);\n      const writableParent = parent.getWritable();\n      const insertionIndex = this.getIndexWithinParent();\n      if (hasReplacedSelf) {\n        writableParent.splice(insertionIndex, 0, splitNodes);\n        this.remove();\n      } else {\n        writableParent.splice(insertionIndex, 1, splitNodes);\n      }\n      if ($isRangeSelection(selection)) {\n        $updateElementSelectionOnCreateDeleteNode(selection, parent, insertionIndex, partsLength - 1);\n      }\n    }\n    return splitNodes;\n  }\n\n  /**\n   * Merges the target TextNode into this TextNode, removing the target node.\n   *\n   * @param target - the TextNode to merge into this one.\n   *\n   * @returns this TextNode.\n   */\n  mergeWithSibling(target) {\n    const isBefore = target === this.getPreviousSibling();\n    if (!isBefore && target !== this.getNextSibling()) {\n      {\n        formatDevErrorMessage(`mergeWithSibling: sibling must be a previous or next sibling`);\n      }\n    }\n    const key = this.__key;\n    const targetKey = target.__key;\n    const text = this.__text;\n    const textLength = text.length;\n    const compositionKey = $getCompositionKey();\n    if (compositionKey === targetKey) {\n      $setCompositionKey(key);\n    }\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      const anchor = selection.anchor;\n      const focus = selection.focus;\n      if (anchor !== null && anchor.key === targetKey) {\n        adjustPointOffsetForMergedSibling(anchor, isBefore, key, target, textLength);\n      }\n      if (focus !== null && focus.key === targetKey) {\n        adjustPointOffsetForMergedSibling(focus, isBefore, key, target, textLength);\n      }\n    }\n    const targetText = target.__text;\n    const newText = isBefore ? targetText + text : text + targetText;\n    this.setTextContent(newText);\n    const writableSelf = this.getWritable();\n    target.remove();\n    return writableSelf;\n  }\n\n  /**\n   * This method is meant to be overriden by TextNode subclasses to control the behavior of those nodes\n   * when used with the registerLexicalTextEntity function. If you're using registerLexicalTextEntity, the\n   * node class that you create and replace matched text with should return true from this method.\n   *\n   * @returns true if the node is to be treated as a \"text entity\", false otherwise.\n   */\n  isTextEntity() {\n    return false;\n  }\n}\nfunction convertSpanElement(domNode) {\n  // domNode is a <span> since we matched it by nodeName\n  const span = domNode;\n  const style = span.style;\n  return {\n    forChild: applyTextFormatFromStyle(style),\n    node: null\n  };\n}\nfunction convertBringAttentionToElement(domNode) {\n  // domNode is a <b> since we matched it by nodeName\n  const b = domNode;\n  // Google Docs wraps all copied HTML in a <b> with font-weight normal\n  const hasNormalFontWeight = b.style.fontWeight === 'normal';\n  return {\n    forChild: applyTextFormatFromStyle(b.style, hasNormalFontWeight ? undefined : 'bold'),\n    node: null\n  };\n}\nconst preParentCache = new WeakMap();\nfunction isNodePre(node) {\n  if (!isHTMLElement(node)) {\n    return false;\n  } else if (node.nodeName === 'PRE') {\n    return true;\n  }\n  const whiteSpace = node.style.whiteSpace;\n  return typeof whiteSpace === 'string' && whiteSpace.startsWith('pre');\n}\nfunction findParentPreDOMNode(node) {\n  let cached;\n  let parent = node.parentNode;\n  const visited = [node];\n  while (parent !== null && (cached = preParentCache.get(parent)) === undefined && !isNodePre(parent)) {\n    visited.push(parent);\n    parent = parent.parentNode;\n  }\n  const resultNode = cached === undefined ? parent : cached;\n  for (let i = 0; i < visited.length; i++) {\n    preParentCache.set(visited[i], resultNode);\n  }\n  return resultNode;\n}\nfunction $convertTextDOMNode(domNode) {\n  const domNode_ = domNode;\n  const parentDom = domNode.parentElement;\n  if (!(parentDom !== null)) {\n    formatDevErrorMessage(`Expected parentElement of Text not to be null`);\n  }\n  let textContent = domNode_.textContent || '';\n  // No collapse and preserve segment break for pre, pre-wrap and pre-line\n  if (findParentPreDOMNode(domNode_) !== null) {\n    const parts = textContent.split(/(\\r?\\n|\\t)/);\n    const nodes = [];\n    const length = parts.length;\n    for (let i = 0; i < length; i++) {\n      const part = parts[i];\n      if (part === '\\n' || part === '\\r\\n') {\n        nodes.push($createLineBreakNode());\n      } else if (part === '\\t') {\n        nodes.push($createTabNode());\n      } else if (part !== '') {\n        nodes.push($createTextNode(part));\n      }\n    }\n    return {\n      node: nodes\n    };\n  }\n  textContent = textContent.replace(/\\r/g, '').replace(/[ \\t\\n]+/g, ' ');\n  if (textContent === '') {\n    return {\n      node: null\n    };\n  }\n  if (textContent[0] === ' ') {\n    // Traverse backward while in the same line. If content contains new line or tab -> pontential\n    // delete, other elements can borrow from this one. Deletion depends on whether it's also the\n    // last space (see next condition: textContent[textContent.length - 1] === ' '))\n    let previousText = domNode_;\n    let isStartOfLine = true;\n    while (previousText !== null && (previousText = findTextInLine(previousText, false)) !== null) {\n      const previousTextContent = previousText.textContent || '';\n      if (previousTextContent.length > 0) {\n        if (/[ \\t\\n]$/.test(previousTextContent)) {\n          textContent = textContent.slice(1);\n        }\n        isStartOfLine = false;\n        break;\n      }\n    }\n    if (isStartOfLine) {\n      textContent = textContent.slice(1);\n    }\n  }\n  if (textContent[textContent.length - 1] === ' ') {\n    // Traverse forward while in the same line, preserve if next inline will require a space\n    let nextText = domNode_;\n    let isEndOfLine = true;\n    while (nextText !== null && (nextText = findTextInLine(nextText, true)) !== null) {\n      const nextTextContent = (nextText.textContent || '').replace(/^( |\\t|\\r?\\n)+/, '');\n      if (nextTextContent.length > 0) {\n        isEndOfLine = false;\n        break;\n      }\n    }\n    if (isEndOfLine) {\n      textContent = textContent.slice(0, textContent.length - 1);\n    }\n  }\n  if (textContent === '') {\n    return {\n      node: null\n    };\n  }\n  return {\n    node: $createTextNode(textContent)\n  };\n}\nfunction findTextInLine(text, forward) {\n  let node = text;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    let sibling;\n    while ((sibling = forward ? node.nextSibling : node.previousSibling) === null) {\n      const parentElement = node.parentElement;\n      if (parentElement === null) {\n        return null;\n      }\n      node = parentElement;\n    }\n    node = sibling;\n    if (isHTMLElement(node)) {\n      const display = node.style.display;\n      if (display === '' && !isInlineDomNode(node) || display !== '' && !display.startsWith('inline')) {\n        return null;\n      }\n    }\n    let descendant = node;\n    while ((descendant = forward ? node.firstChild : node.lastChild) !== null) {\n      node = descendant;\n    }\n    if (isDOMTextNode(node)) {\n      return node;\n    } else if (node.nodeName === 'BR') {\n      return null;\n    }\n  }\n}\nconst nodeNameToTextFormat = {\n  code: 'code',\n  em: 'italic',\n  i: 'italic',\n  mark: 'highlight',\n  s: 'strikethrough',\n  strong: 'bold',\n  sub: 'subscript',\n  sup: 'superscript',\n  u: 'underline'\n};\nfunction convertTextFormatElement(domNode) {\n  const format = nodeNameToTextFormat[domNode.nodeName.toLowerCase()];\n  if (format === undefined) {\n    return {\n      node: null\n    };\n  }\n  return {\n    forChild: applyTextFormatFromStyle(domNode.style, format),\n    node: null\n  };\n}\nfunction $createTextNode(text = '') {\n  return $applyNodeReplacement(new TextNode(text));\n}\nfunction $isTextNode(node) {\n  return node instanceof TextNode;\n}\nfunction applyTextFormatFromStyle(style, shouldApply) {\n  const fontWeight = style.fontWeight;\n  const textDecoration = style.textDecoration.split(' ');\n  // Google Docs uses span tags + font-weight for bold text\n  const hasBoldFontWeight = fontWeight === '700' || fontWeight === 'bold';\n  // Google Docs uses span tags + text-decoration: line-through for strikethrough text\n  const hasLinethroughTextDecoration = textDecoration.includes('line-through');\n  // Google Docs uses span tags + font-style for italic text\n  const hasItalicFontStyle = style.fontStyle === 'italic';\n  // Google Docs uses span tags + text-decoration: underline for underline text\n  const hasUnderlineTextDecoration = textDecoration.includes('underline');\n  // Google Docs uses span tags + vertical-align to specify subscript and superscript\n  const verticalAlign = style.verticalAlign;\n  return lexicalNode => {\n    if (!$isTextNode(lexicalNode)) {\n      return lexicalNode;\n    }\n    if (hasBoldFontWeight && !lexicalNode.hasFormat('bold')) {\n      lexicalNode.toggleFormat('bold');\n    }\n    if (hasLinethroughTextDecoration && !lexicalNode.hasFormat('strikethrough')) {\n      lexicalNode.toggleFormat('strikethrough');\n    }\n    if (hasItalicFontStyle && !lexicalNode.hasFormat('italic')) {\n      lexicalNode.toggleFormat('italic');\n    }\n    if (hasUnderlineTextDecoration && !lexicalNode.hasFormat('underline')) {\n      lexicalNode.toggleFormat('underline');\n    }\n    if (verticalAlign === 'sub' && !lexicalNode.hasFormat('subscript')) {\n      lexicalNode.toggleFormat('subscript');\n    }\n    if (verticalAlign === 'super' && !lexicalNode.hasFormat('superscript')) {\n      lexicalNode.toggleFormat('superscript');\n    }\n    if (shouldApply && !lexicalNode.hasFormat(shouldApply)) {\n      lexicalNode.toggleFormat(shouldApply);\n    }\n    return lexicalNode;\n  };\n}\n\n/** @noInheritDoc */\nclass TabNode extends TextNode {\n  static getType() {\n    return 'tab';\n  }\n  static clone(node) {\n    return new TabNode(node.__key);\n  }\n  constructor(key) {\n    super('\\t', key);\n    this.__detail = IS_UNMERGEABLE;\n  }\n  static importDOM() {\n    return null;\n  }\n  createDOM(config) {\n    const dom = super.createDOM(config);\n    const classNames = getCachedClassNameArray(config.theme, 'tab');\n    if (classNames !== undefined) {\n      const domClassList = dom.classList;\n      domClassList.add(...classNames);\n    }\n    return dom;\n  }\n  static importJSON(serializedTabNode) {\n    return $createTabNode().updateFromJSON(serializedTabNode);\n  }\n  setTextContent(text) {\n    if (!(text === '\\t' || text === '')) {\n      formatDevErrorMessage(`TabNode does not support setTextContent`);\n    }\n    return super.setTextContent(text);\n  }\n  setDetail(detail) {\n    if (!(detail === IS_UNMERGEABLE)) {\n      formatDevErrorMessage(`TabNode does not support setDetail`);\n    }\n    return this;\n  }\n  setMode(type) {\n    if (!(type === 'normal')) {\n      formatDevErrorMessage(`TabNode does not support setMode`);\n    }\n    return this;\n  }\n  canInsertTextBefore() {\n    return false;\n  }\n  canInsertTextAfter() {\n    return false;\n  }\n}\nfunction $createTabNode() {\n  return $applyNodeReplacement(new TabNode());\n}\nfunction $isTabNode(node) {\n  return node instanceof TabNode;\n}\n\nclass Point {\n  constructor(key, offset, type) {\n    {\n      // This prevents a circular reference error when serialized as JSON,\n      // which happens on unit test failures\n      Object.defineProperty(this, '_selection', {\n        enumerable: false,\n        writable: true\n      });\n    }\n    this._selection = null;\n    this.key = key;\n    this.offset = offset;\n    this.type = type;\n  }\n  is(point) {\n    return this.key === point.key && this.offset === point.offset && this.type === point.type;\n  }\n  isBefore(b) {\n    if (this.key === b.key) {\n      return this.offset < b.offset;\n    }\n    const aCaret = $normalizeCaret($caretFromPoint(this, 'next'));\n    const bCaret = $normalizeCaret($caretFromPoint(b, 'next'));\n    return $comparePointCaretNext(aCaret, bCaret) < 0;\n  }\n  getNode() {\n    const key = this.key;\n    const node = $getNodeByKey(key);\n    if (node === null) {\n      {\n        formatDevErrorMessage(`Point.getNode: node not found`);\n      }\n    }\n    return node;\n  }\n  set(key, offset, type, onlyIfChanged) {\n    const selection = this._selection;\n    const oldKey = this.key;\n    if (onlyIfChanged && this.key === key && this.offset === offset && this.type === type) {\n      return;\n    }\n    this.key = key;\n    this.offset = offset;\n    this.type = type;\n    {\n      const node = $getNodeByKey(key);\n      if (!(type === 'text' ? $isTextNode(node) : $isElementNode(node))) {\n        formatDevErrorMessage(`PointType.set: node with key ${key} is ${node ? node.__type : '[not found]'} and can not be used for a ${type} point`);\n      }\n    }\n    if (!isCurrentlyReadOnlyMode()) {\n      if ($getCompositionKey() === oldKey) {\n        $setCompositionKey(key);\n      }\n      if (selection !== null) {\n        selection.setCachedNodes(null);\n        selection.dirty = true;\n      }\n    }\n  }\n}\nfunction $createPoint(key, offset, type) {\n  // @ts-expect-error: intentionally cast as we use a class for perf reasons\n  return new Point(key, offset, type);\n}\nfunction selectPointOnNode(point, node) {\n  let key = node.__key;\n  let offset = point.offset;\n  let type = 'element';\n  if ($isTextNode(node)) {\n    type = 'text';\n    const textContentLength = node.getTextContentSize();\n    if (offset > textContentLength) {\n      offset = textContentLength;\n    }\n  } else if (!$isElementNode(node)) {\n    const nextSibling = node.getNextSibling();\n    if ($isTextNode(nextSibling)) {\n      key = nextSibling.__key;\n      offset = 0;\n      type = 'text';\n    } else {\n      const parentNode = node.getParent();\n      if (parentNode) {\n        key = parentNode.__key;\n        offset = node.getIndexWithinParent() + 1;\n      }\n    }\n  }\n  point.set(key, offset, type);\n}\nfunction $moveSelectionPointToEnd(point, node) {\n  if ($isElementNode(node)) {\n    const lastNode = node.getLastDescendant();\n    if ($isElementNode(lastNode) || $isTextNode(lastNode)) {\n      selectPointOnNode(point, lastNode);\n    } else {\n      selectPointOnNode(point, node);\n    }\n  } else {\n    selectPointOnNode(point, node);\n  }\n}\nfunction $transferStartingElementPointToTextPoint(start, end, format, style) {\n  const element = start.getNode();\n  const placementNode = element.getChildAtIndex(start.offset);\n  const textNode = $createTextNode();\n  const target = $isRootNode(element) ? $createParagraphNode().append(textNode) : textNode;\n  textNode.setFormat(format);\n  textNode.setStyle(style);\n  if (placementNode === null) {\n    element.append(target);\n  } else {\n    placementNode.insertBefore(target);\n  }\n  // Transfer the element point to a text point.\n  if (start.is(end)) {\n    end.set(textNode.__key, 0, 'text');\n  }\n  start.set(textNode.__key, 0, 'text');\n}\nclass NodeSelection {\n  constructor(objects) {\n    this._cachedNodes = null;\n    this._nodes = objects;\n    this.dirty = false;\n  }\n  getCachedNodes() {\n    return this._cachedNodes;\n  }\n  setCachedNodes(nodes) {\n    this._cachedNodes = nodes;\n  }\n  is(selection) {\n    if (!$isNodeSelection(selection)) {\n      return false;\n    }\n    const a = this._nodes;\n    const b = selection._nodes;\n    return a.size === b.size && Array.from(a).every(key => b.has(key));\n  }\n  isCollapsed() {\n    return false;\n  }\n  isBackward() {\n    return false;\n  }\n  getStartEndPoints() {\n    return null;\n  }\n  add(key) {\n    this.dirty = true;\n    this._nodes.add(key);\n    this._cachedNodes = null;\n  }\n  delete(key) {\n    this.dirty = true;\n    this._nodes.delete(key);\n    this._cachedNodes = null;\n  }\n  clear() {\n    this.dirty = true;\n    this._nodes.clear();\n    this._cachedNodes = null;\n  }\n  has(key) {\n    return this._nodes.has(key);\n  }\n  clone() {\n    return new NodeSelection(new Set(this._nodes));\n  }\n  extract() {\n    return this.getNodes();\n  }\n  insertRawText(text) {\n    // Do nothing?\n  }\n  insertText() {\n    // Do nothing?\n  }\n  insertNodes(nodes) {\n    const selectedNodes = this.getNodes();\n    const selectedNodesLength = selectedNodes.length;\n    const lastSelectedNode = selectedNodes[selectedNodesLength - 1];\n    let selectionAtEnd;\n    // Insert nodes\n    if ($isTextNode(lastSelectedNode)) {\n      selectionAtEnd = lastSelectedNode.select();\n    } else {\n      const index = lastSelectedNode.getIndexWithinParent() + 1;\n      selectionAtEnd = lastSelectedNode.getParentOrThrow().select(index, index);\n    }\n    selectionAtEnd.insertNodes(nodes);\n    // Remove selected nodes\n    for (let i = 0; i < selectedNodesLength; i++) {\n      selectedNodes[i].remove();\n    }\n  }\n  getNodes() {\n    const cachedNodes = this._cachedNodes;\n    if (cachedNodes !== null) {\n      return cachedNodes;\n    }\n    const objects = this._nodes;\n    const nodes = [];\n    for (const object of objects) {\n      const node = $getNodeByKey(object);\n      if (node !== null) {\n        nodes.push(node);\n      }\n    }\n    if (!isCurrentlyReadOnlyMode()) {\n      this._cachedNodes = nodes;\n    }\n    return nodes;\n  }\n  getTextContent() {\n    const nodes = this.getNodes();\n    let textContent = '';\n    for (let i = 0; i < nodes.length; i++) {\n      textContent += nodes[i].getTextContent();\n    }\n    return textContent;\n  }\n}\nfunction $isRangeSelection(x) {\n  return x instanceof RangeSelection;\n}\nclass RangeSelection {\n  constructor(anchor, focus, format, style) {\n    this.anchor = anchor;\n    this.focus = focus;\n    anchor._selection = this;\n    focus._selection = this;\n    this._cachedNodes = null;\n    this.format = format;\n    this.style = style;\n    this.dirty = false;\n  }\n  getCachedNodes() {\n    return this._cachedNodes;\n  }\n  setCachedNodes(nodes) {\n    this._cachedNodes = nodes;\n  }\n\n  /**\n   * Used to check if the provided selections is equal to this one by value,\n   * inluding anchor, focus, format, and style properties.\n   * @param selection - the Selection to compare this one to.\n   * @returns true if the Selections are equal, false otherwise.\n   */\n  is(selection) {\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    return this.anchor.is(selection.anchor) && this.focus.is(selection.focus) && this.format === selection.format && this.style === selection.style;\n  }\n\n  /**\n   * Returns whether the Selection is \"collapsed\", meaning the anchor and focus are\n   * the same node and have the same offset.\n   *\n   * @returns true if the Selection is collapsed, false otherwise.\n   */\n  isCollapsed() {\n    return this.anchor.is(this.focus);\n  }\n\n  /**\n   * Gets all the nodes in the Selection. Uses caching to make it generally suitable\n   * for use in hot paths.\n   *\n   * See also the {@link CaretRange} APIs (starting with\n   * {@link $caretRangeFromSelection}), which are likely to provide a better\n   * foundation for any operation where partial selection is relevant\n   * (e.g. the anchor or focus are inside an ElementNode and TextNode)\n   *\n   * @returns an Array containing all the nodes in the Selection\n   */\n  getNodes() {\n    const cachedNodes = this._cachedNodes;\n    if (cachedNodes !== null) {\n      return cachedNodes;\n    }\n    const range = $getCaretRangeInDirection($caretRangeFromSelection(this), 'next');\n    const nodes = $getNodesFromCaretRangeCompat(range);\n    {\n      if (this.isCollapsed() && nodes.length > 1) {\n        {\n          formatDevErrorMessage(`RangeSelection.getNodes() returned ${String(nodes.length)} > 1 nodes in a collapsed selection`);\n        }\n      }\n    }\n    if (!isCurrentlyReadOnlyMode()) {\n      this._cachedNodes = nodes;\n    }\n    return nodes;\n  }\n\n  /**\n   * Sets this Selection to be of type \"text\" at the provided anchor and focus values.\n   *\n   * @param anchorNode - the anchor node to set on the Selection\n   * @param anchorOffset - the offset to set on the Selection\n   * @param focusNode - the focus node to set on the Selection\n   * @param focusOffset - the focus offset to set on the Selection\n   */\n  setTextNodeRange(anchorNode, anchorOffset, focusNode, focusOffset) {\n    this.anchor.set(anchorNode.__key, anchorOffset, 'text');\n    this.focus.set(focusNode.__key, focusOffset, 'text');\n  }\n\n  /**\n   * Gets the (plain) text content of all the nodes in the selection.\n   *\n   * @returns a string representing the text content of all the nodes in the Selection\n   */\n  getTextContent() {\n    const nodes = this.getNodes();\n    if (nodes.length === 0) {\n      return '';\n    }\n    const firstNode = nodes[0];\n    const lastNode = nodes[nodes.length - 1];\n    const anchor = this.anchor;\n    const focus = this.focus;\n    const isBefore = anchor.isBefore(focus);\n    const [anchorOffset, focusOffset] = $getCharacterOffsets(this);\n    let textContent = '';\n    let prevWasElement = true;\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      if ($isElementNode(node) && !node.isInline()) {\n        if (!prevWasElement) {\n          textContent += '\\n';\n        }\n        if (node.isEmpty()) {\n          prevWasElement = false;\n        } else {\n          prevWasElement = true;\n        }\n      } else {\n        prevWasElement = false;\n        if ($isTextNode(node)) {\n          let text = node.getTextContent();\n          if (node === firstNode) {\n            if (node === lastNode) {\n              if (anchor.type !== 'element' || focus.type !== 'element' || focus.offset === anchor.offset) {\n                text = anchorOffset < focusOffset ? text.slice(anchorOffset, focusOffset) : text.slice(focusOffset, anchorOffset);\n              }\n            } else {\n              text = isBefore ? text.slice(anchorOffset) : text.slice(focusOffset);\n            }\n          } else if (node === lastNode) {\n            text = isBefore ? text.slice(0, focusOffset) : text.slice(0, anchorOffset);\n          }\n          textContent += text;\n        } else if (($isDecoratorNode(node) || $isLineBreakNode(node)) && (node !== lastNode || !this.isCollapsed())) {\n          textContent += node.getTextContent();\n        }\n      }\n    }\n    return textContent;\n  }\n\n  /**\n   * Attempts to map a DOM selection range onto this Lexical Selection,\n   * setting the anchor, focus, and type accordingly\n   *\n   * @param range a DOM Selection range conforming to the StaticRange interface.\n   */\n  applyDOMRange(range) {\n    const editor = getActiveEditor();\n    const currentEditorState = editor.getEditorState();\n    const lastSelection = currentEditorState._selection;\n    const resolvedSelectionPoints = $internalResolveSelectionPoints(range.startContainer, range.startOffset, range.endContainer, range.endOffset, editor, lastSelection);\n    if (resolvedSelectionPoints === null) {\n      return;\n    }\n    const [anchorPoint, focusPoint] = resolvedSelectionPoints;\n    this.anchor.set(anchorPoint.key, anchorPoint.offset, anchorPoint.type, true);\n    this.focus.set(focusPoint.key, focusPoint.offset, focusPoint.type, true);\n    // Firefox will use an element point rather than a text point in some cases,\n    // so we normalize for that\n    $normalizeSelection(this);\n  }\n\n  /**\n   * Creates a new RangeSelection, copying over all the property values from this one.\n   *\n   * @returns a new RangeSelection with the same property values as this one.\n   */\n  clone() {\n    const anchor = this.anchor;\n    const focus = this.focus;\n    const selection = new RangeSelection($createPoint(anchor.key, anchor.offset, anchor.type), $createPoint(focus.key, focus.offset, focus.type), this.format, this.style);\n    return selection;\n  }\n\n  /**\n   * Toggles the provided format on all the TextNodes in the Selection.\n   *\n   * @param format a string TextFormatType to toggle on the TextNodes in the selection\n   */\n  toggleFormat(format) {\n    this.format = toggleTextFormatType(this.format, format, null);\n    this.dirty = true;\n  }\n\n  /**\n   * Sets the value of the style property on the Selection\n   *\n   * @param style - the style to set at the value of the style property.\n   */\n  setStyle(style) {\n    this.style = style;\n    this.dirty = true;\n  }\n\n  /**\n   * Returns whether the provided TextFormatType is present on the Selection. This will be true if any node in the Selection\n   * has the specified format.\n   *\n   * @param type the TextFormatType to check for.\n   * @returns true if the provided format is currently toggled on on the Selection, false otherwise.\n   */\n  hasFormat(type) {\n    const formatFlag = TEXT_TYPE_TO_FORMAT[type];\n    return (this.format & formatFlag) !== 0;\n  }\n\n  /**\n   * Attempts to insert the provided text into the EditorState at the current Selection.\n   * converts tabs, newlines, and carriage returns into LexicalNodes.\n   *\n   * @param text the text to insert into the Selection\n   */\n  insertRawText(text) {\n    const parts = text.split(/(\\r?\\n|\\t)/);\n    const nodes = [];\n    const length = parts.length;\n    for (let i = 0; i < length; i++) {\n      const part = parts[i];\n      if (part === '\\n' || part === '\\r\\n') {\n        nodes.push($createLineBreakNode());\n      } else if (part === '\\t') {\n        nodes.push($createTabNode());\n      } else {\n        nodes.push($createTextNode(part));\n      }\n    }\n    this.insertNodes(nodes);\n  }\n\n  /**\n   * Insert the provided text into the EditorState at the current Selection.\n   *\n   * @param text the text to insert into the Selection\n   */\n  insertText(text) {\n    // Now that \"removeText\" has been improved and does not depend on\n    // insertText, insertText can be greatly simplified. The next\n    // commented version is a WIP (about 5 tests fail).\n    //\n    // this.removeText();\n    // if (text === '') {\n    //   return;\n    // }\n    // const anchorNode = this.anchor.getNode();\n    // const textNode = $createTextNode(text);\n    // textNode.setFormat(this.format);\n    // textNode.setStyle(this.style);\n    // if ($isTextNode(anchorNode)) {\n    //   const parent = anchorNode.getParentOrThrow();\n    //   if (this.anchor.offset === 0) {\n    //     if (parent.isInline() && !anchorNode.__prev) {\n    //       parent.insertBefore(textNode);\n    //     } else {\n    //       anchorNode.insertBefore(textNode);\n    //     }\n    //   } else if (this.anchor.offset === anchorNode.getTextContentSize()) {\n    //     if (parent.isInline() && !anchorNode.__next) {\n    //       parent.insertAfter(textNode);\n    //     } else {\n    //       anchorNode.insertAfter(textNode);\n    //     }\n    //   } else {\n    //     const [before] = anchorNode.splitText(this.anchor.offset);\n    //     before.insertAfter(textNode);\n    //   }\n    // } else {\n    //   anchorNode.splice(this.anchor.offset, 0, [textNode]);\n    // }\n    // const nodeToSelect = textNode.isAttached() ? textNode : anchorNode;\n    // nodeToSelect.selectEnd();\n    // // When composing, we need to adjust the anchor offset so that\n    // // we correctly replace that right range.\n    // if (\n    //   textNode.isComposing() &&\n    //   this.anchor.type === 'text' &&\n    //   anchorNode.getTextContent() !== ''\n    // ) {\n    //   this.anchor.offset -= text.length;\n    // }\n\n    const anchor = this.anchor;\n    const focus = this.focus;\n    const format = this.format;\n    const style = this.style;\n    let firstPoint = anchor;\n    let endPoint = focus;\n    if (!this.isCollapsed() && focus.isBefore(anchor)) {\n      firstPoint = focus;\n      endPoint = anchor;\n    }\n    if (firstPoint.type === 'element') {\n      $transferStartingElementPointToTextPoint(firstPoint, endPoint, format, style);\n    }\n    if (endPoint.type === 'element') {\n      $setPointFromCaret(endPoint, $normalizeCaret($caretFromPoint(endPoint, 'next')));\n    }\n    const startOffset = firstPoint.offset;\n    let endOffset = endPoint.offset;\n    const selectedNodes = this.getNodes();\n    const selectedNodesLength = selectedNodes.length;\n    let firstNode = selectedNodes[0];\n    if (!$isTextNode(firstNode)) {\n      {\n        formatDevErrorMessage(`insertText: first node is not a text node`);\n      }\n    }\n    const firstNodeText = firstNode.getTextContent();\n    const firstNodeTextLength = firstNodeText.length;\n    const firstNodeParent = firstNode.getParentOrThrow();\n    const lastIndex = selectedNodesLength - 1;\n    let lastNode = selectedNodes[lastIndex];\n    if (selectedNodesLength === 1 && endPoint.type === 'element') {\n      endOffset = firstNodeTextLength;\n      endPoint.set(firstPoint.key, endOffset, 'text');\n    }\n    if (this.isCollapsed() && startOffset === firstNodeTextLength && (firstNode.isSegmented() || firstNode.isToken() || !firstNode.canInsertTextAfter() || !firstNodeParent.canInsertTextAfter() && firstNode.getNextSibling() === null)) {\n      let nextSibling = firstNode.getNextSibling();\n      if (!$isTextNode(nextSibling) || !nextSibling.canInsertTextBefore() || $isTokenOrSegmented(nextSibling)) {\n        nextSibling = $createTextNode();\n        nextSibling.setFormat(format);\n        nextSibling.setStyle(style);\n        if (!firstNodeParent.canInsertTextAfter()) {\n          firstNodeParent.insertAfter(nextSibling);\n        } else {\n          firstNode.insertAfter(nextSibling);\n        }\n      }\n      nextSibling.select(0, 0);\n      firstNode = nextSibling;\n      if (text !== '') {\n        this.insertText(text);\n        return;\n      }\n    } else if (this.isCollapsed() && startOffset === 0 && (firstNode.isSegmented() || firstNode.isToken() || !firstNode.canInsertTextBefore() || !firstNodeParent.canInsertTextBefore() && firstNode.getPreviousSibling() === null)) {\n      let prevSibling = firstNode.getPreviousSibling();\n      if (!$isTextNode(prevSibling) || $isTokenOrSegmented(prevSibling)) {\n        prevSibling = $createTextNode();\n        prevSibling.setFormat(format);\n        if (!firstNodeParent.canInsertTextBefore()) {\n          firstNodeParent.insertBefore(prevSibling);\n        } else {\n          firstNode.insertBefore(prevSibling);\n        }\n      }\n      prevSibling.select();\n      firstNode = prevSibling;\n      if (text !== '') {\n        this.insertText(text);\n        return;\n      }\n    } else if (firstNode.isSegmented() && startOffset !== firstNodeTextLength) {\n      const textNode = $createTextNode(firstNode.getTextContent());\n      textNode.setFormat(format);\n      firstNode.replace(textNode);\n      firstNode = textNode;\n    } else if (!this.isCollapsed() && text !== '') {\n      // When the firstNode or lastNode parents are elements that\n      // do not allow text to be inserted before or after, we first\n      // clear the content. Then we normalize selection, then insert\n      // the new content.\n      const lastNodeParent = lastNode.getParent();\n      if (!firstNodeParent.canInsertTextBefore() || !firstNodeParent.canInsertTextAfter() || $isElementNode(lastNodeParent) && (!lastNodeParent.canInsertTextBefore() || !lastNodeParent.canInsertTextAfter())) {\n        this.insertText('');\n        $normalizeSelectionPointsForBoundaries(this.anchor, this.focus, null);\n        this.insertText(text);\n        return;\n      }\n    }\n    if (selectedNodesLength === 1) {\n      if (firstNode.isToken()) {\n        const textNode = $createTextNode(text);\n        textNode.select();\n        firstNode.replace(textNode);\n        return;\n      }\n      const firstNodeFormat = firstNode.getFormat();\n      const firstNodeStyle = firstNode.getStyle();\n      if (startOffset === endOffset && (firstNodeFormat !== format || firstNodeStyle !== style)) {\n        if (firstNode.getTextContent() === '') {\n          firstNode.setFormat(format);\n          firstNode.setStyle(style);\n        } else {\n          const textNode = $createTextNode(text);\n          textNode.setFormat(format);\n          textNode.setStyle(style);\n          textNode.select();\n          if (startOffset === 0) {\n            firstNode.insertBefore(textNode, false);\n          } else {\n            const [targetNode] = firstNode.splitText(startOffset);\n            targetNode.insertAfter(textNode, false);\n          }\n          // When composing, we need to adjust the anchor offset so that\n          // we correctly replace that right range.\n          if (textNode.isComposing() && this.anchor.type === 'text') {\n            this.anchor.offset -= text.length;\n          }\n          return;\n        }\n      } else if ($isTabNode(firstNode)) {\n        // We don't need to check for delCount because there is only the entire selected node case\n        // that can hit here for content size 1 and with canInsertTextBeforeAfter false\n        const textNode = $createTextNode(text);\n        textNode.setFormat(format);\n        textNode.setStyle(style);\n        textNode.select();\n        firstNode.replace(textNode);\n        return;\n      }\n      const delCount = endOffset - startOffset;\n      firstNode = firstNode.spliceText(startOffset, delCount, text, true);\n      if (firstNode.getTextContent() === '') {\n        firstNode.remove();\n      } else if (this.anchor.type === 'text') {\n        if (firstNode.isComposing()) {\n          // When composing, we need to adjust the anchor offset so that\n          // we correctly replace that right range.\n          this.anchor.offset -= text.length;\n        } else {\n          this.format = firstNodeFormat;\n          this.style = firstNodeStyle;\n        }\n      }\n    } else {\n      const markedNodeKeysForKeep = new Set([...firstNode.getParentKeys(), ...lastNode.getParentKeys()]);\n\n      // We have to get the parent elements before the next section,\n      // as in that section we might mutate the lastNode.\n      const firstElement = $isElementNode(firstNode) ? firstNode : firstNode.getParentOrThrow();\n      let lastElement = $isElementNode(lastNode) ? lastNode : lastNode.getParentOrThrow();\n      let lastElementChild = lastNode;\n\n      // If the last element is inline, we should instead look at getting\n      // the nodes of its parent, rather than itself. This behavior will\n      // then better match how text node insertions work. We will need to\n      // also update the last element's child accordingly as we do this.\n      if (!firstElement.is(lastElement) && lastElement.isInline()) {\n        // Keep traversing till we have a non-inline element parent.\n        do {\n          lastElementChild = lastElement;\n          lastElement = lastElement.getParentOrThrow();\n        } while (lastElement.isInline());\n      }\n\n      // Handle mutations to the last node.\n      if (endPoint.type === 'text' && (endOffset !== 0 || lastNode.getTextContent() === '') || endPoint.type === 'element' && lastNode.getIndexWithinParent() < endOffset) {\n        if ($isTextNode(lastNode) && !lastNode.isToken() && endOffset !== lastNode.getTextContentSize()) {\n          if (lastNode.isSegmented()) {\n            const textNode = $createTextNode(lastNode.getTextContent());\n            lastNode.replace(textNode);\n            lastNode = textNode;\n          }\n          // root node selections only select whole nodes, so no text splice is necessary\n          if (!$isRootNode(endPoint.getNode()) && endPoint.type === 'text') {\n            lastNode = lastNode.spliceText(0, endOffset, '');\n          }\n          markedNodeKeysForKeep.add(lastNode.__key);\n        } else {\n          const lastNodeParent = lastNode.getParentOrThrow();\n          if (!lastNodeParent.canBeEmpty() && lastNodeParent.getChildrenSize() === 1) {\n            lastNodeParent.remove();\n          } else {\n            lastNode.remove();\n          }\n        }\n      } else {\n        markedNodeKeysForKeep.add(lastNode.__key);\n      }\n\n      // Either move the remaining nodes of the last parent to after\n      // the first child, or remove them entirely. If the last parent\n      // is the same as the first parent, this logic also works.\n      const lastNodeChildren = lastElement.getChildren();\n      const selectedNodesSet = new Set(selectedNodes);\n      const firstAndLastElementsAreEqual = firstElement.is(lastElement);\n\n      // We choose a target to insert all nodes after. In the case of having\n      // and inline starting parent element with a starting node that has no\n      // siblings, we should insert after the starting parent element, otherwise\n      // we will incorrectly merge into the starting parent element.\n      // TODO: should we keep on traversing parents if we're inside another\n      // nested inline element?\n      const insertionTarget = firstElement.isInline() && firstNode.getNextSibling() === null ? firstElement : firstNode;\n      for (let i = lastNodeChildren.length - 1; i >= 0; i--) {\n        const lastNodeChild = lastNodeChildren[i];\n        if (lastNodeChild.is(firstNode) || $isElementNode(lastNodeChild) && lastNodeChild.isParentOf(firstNode)) {\n          break;\n        }\n        if (lastNodeChild.isAttached()) {\n          if (!selectedNodesSet.has(lastNodeChild) || lastNodeChild.is(lastElementChild)) {\n            if (!firstAndLastElementsAreEqual) {\n              insertionTarget.insertAfter(lastNodeChild, false);\n            }\n          } else {\n            lastNodeChild.remove();\n          }\n        }\n      }\n      if (!firstAndLastElementsAreEqual) {\n        // Check if we have already moved out all the nodes of the\n        // last parent, and if so, traverse the parent tree and mark\n        // them all as being able to deleted too.\n        let parent = lastElement;\n        let lastRemovedParent = null;\n        while (parent !== null) {\n          const children = parent.getChildren();\n          const childrenLength = children.length;\n          if (childrenLength === 0 || children[childrenLength - 1].is(lastRemovedParent)) {\n            markedNodeKeysForKeep.delete(parent.__key);\n            lastRemovedParent = parent;\n          }\n          parent = parent.getParent();\n        }\n      }\n\n      // Ensure we do splicing after moving of nodes, as splicing\n      // can have side-effects (in the case of hashtags).\n      if (!firstNode.isToken()) {\n        firstNode = firstNode.spliceText(startOffset, firstNodeTextLength - startOffset, text, true);\n        if (firstNode.getTextContent() === '') {\n          firstNode.remove();\n        } else if (firstNode.isComposing() && this.anchor.type === 'text') {\n          // When composing, we need to adjust the anchor offset so that\n          // we correctly replace that right range.\n          this.anchor.offset -= text.length;\n        }\n      } else if (startOffset === firstNodeTextLength) {\n        firstNode.select();\n      } else {\n        const textNode = $createTextNode(text);\n        textNode.select();\n        firstNode.replace(textNode);\n      }\n\n      // Remove all selected nodes that haven't already been removed.\n      for (let i = 1; i < selectedNodesLength; i++) {\n        const selectedNode = selectedNodes[i];\n        const key = selectedNode.__key;\n        if (!markedNodeKeysForKeep.has(key)) {\n          selectedNode.remove();\n        }\n      }\n    }\n  }\n\n  /**\n   * Removes the text in the Selection, adjusting the EditorState accordingly.\n   */\n  removeText() {\n    const isCurrentSelection = $getSelection() === this;\n    const newRange = $removeTextFromCaretRange($caretRangeFromSelection(this));\n    $updateRangeSelectionFromCaretRange(this, newRange);\n    if (isCurrentSelection && $getSelection() !== this) {\n      $setSelection(this);\n    }\n  }\n\n  // TO-DO: Migrate this method to the new utility function $forEachSelectedTextNode (share similar logic)\n  /**\n   * Applies the provided format to the TextNodes in the Selection, splitting or\n   * merging nodes as necessary.\n   *\n   * @param formatType the format type to apply to the nodes in the Selection.\n   * @param alignWithFormat a 32-bit integer representing formatting flags to align with.\n   */\n  formatText(formatType, alignWithFormat = null) {\n    if (this.isCollapsed()) {\n      this.toggleFormat(formatType);\n      // When changing format, we should stop composition\n      $setCompositionKey(null);\n      return;\n    }\n    const selectedNodes = this.getNodes();\n    const selectedTextNodes = [];\n    for (const selectedNode of selectedNodes) {\n      if ($isTextNode(selectedNode)) {\n        selectedTextNodes.push(selectedNode);\n      }\n    }\n    const applyFormatToElements = alignWith => {\n      selectedNodes.forEach(node => {\n        if ($isElementNode(node)) {\n          const newFormat = node.getFormatFlags(formatType, alignWith);\n          node.setTextFormat(newFormat);\n        }\n      });\n    };\n    const selectedTextNodesLength = selectedTextNodes.length;\n    if (selectedTextNodesLength === 0) {\n      this.toggleFormat(formatType);\n      // When changing format, we should stop composition\n      $setCompositionKey(null);\n      applyFormatToElements(alignWithFormat);\n      return;\n    }\n    const anchor = this.anchor;\n    const focus = this.focus;\n    const isBackward = this.isBackward();\n    const startPoint = isBackward ? focus : anchor;\n    const endPoint = isBackward ? anchor : focus;\n    let firstIndex = 0;\n    let firstNode = selectedTextNodes[0];\n    let startOffset = startPoint.type === 'element' ? 0 : startPoint.offset;\n\n    // In case selection started at the end of text node use next text node\n    if (startPoint.type === 'text' && startOffset === firstNode.getTextContentSize()) {\n      firstIndex = 1;\n      firstNode = selectedTextNodes[1];\n      startOffset = 0;\n    }\n    if (firstNode == null) {\n      return;\n    }\n    const firstNextFormat = firstNode.getFormatFlags(formatType, alignWithFormat);\n    applyFormatToElements(firstNextFormat);\n    const lastIndex = selectedTextNodesLength - 1;\n    let lastNode = selectedTextNodes[lastIndex];\n    const endOffset = endPoint.type === 'text' ? endPoint.offset : lastNode.getTextContentSize();\n\n    // Single node selected\n    if (firstNode.is(lastNode)) {\n      // No actual text is selected, so do nothing.\n      if (startOffset === endOffset) {\n        return;\n      }\n      // The entire node is selected or it is token, so just format it\n      if ($isTokenOrSegmented(firstNode) || startOffset === 0 && endOffset === firstNode.getTextContentSize()) {\n        firstNode.setFormat(firstNextFormat);\n      } else {\n        // Node is partially selected, so split it into two nodes\n        // add style the selected one.\n        const splitNodes = firstNode.splitText(startOffset, endOffset);\n        const replacement = startOffset === 0 ? splitNodes[0] : splitNodes[1];\n        replacement.setFormat(firstNextFormat);\n\n        // Update selection only if starts/ends on text node\n        if (startPoint.type === 'text') {\n          startPoint.set(replacement.__key, 0, 'text');\n        }\n        if (endPoint.type === 'text') {\n          endPoint.set(replacement.__key, endOffset - startOffset, 'text');\n        }\n      }\n      this.format = firstNextFormat;\n      return;\n    }\n    // Multiple nodes selected\n    // The entire first node isn't selected, so split it\n    if (startOffset !== 0 && !$isTokenOrSegmented(firstNode)) {\n      [, firstNode] = firstNode.splitText(startOffset);\n      startOffset = 0;\n    }\n    firstNode.setFormat(firstNextFormat);\n    const lastNextFormat = lastNode.getFormatFlags(formatType, firstNextFormat);\n    // If the offset is 0, it means no actual characters are selected,\n    // so we skip formatting the last node altogether.\n    if (endOffset > 0) {\n      if (endOffset !== lastNode.getTextContentSize() && !$isTokenOrSegmented(lastNode)) {\n        [lastNode] = lastNode.splitText(endOffset);\n      }\n      lastNode.setFormat(lastNextFormat);\n    }\n\n    // Process all text nodes in between\n    for (let i = firstIndex + 1; i < lastIndex; i++) {\n      const textNode = selectedTextNodes[i];\n      const nextFormat = textNode.getFormatFlags(formatType, lastNextFormat);\n      textNode.setFormat(nextFormat);\n    }\n\n    // Update selection only if starts/ends on text node\n    if (startPoint.type === 'text') {\n      startPoint.set(firstNode.__key, startOffset, 'text');\n    }\n    if (endPoint.type === 'text') {\n      endPoint.set(lastNode.__key, endOffset, 'text');\n    }\n    this.format = firstNextFormat | lastNextFormat;\n  }\n\n  /**\n   * Attempts to \"intelligently\" insert an arbitrary list of Lexical nodes into the EditorState at the\n   * current Selection according to a set of heuristics that determine how surrounding nodes\n   * should be changed, replaced, or moved to accommodate the incoming ones.\n   *\n   * @param nodes - the nodes to insert\n   */\n  insertNodes(nodes) {\n    if (nodes.length === 0) {\n      return;\n    }\n    if (!this.isCollapsed()) {\n      this.removeText();\n    }\n    if (this.anchor.key === 'root') {\n      this.insertParagraph();\n      const selection = $getSelection();\n      if (!$isRangeSelection(selection)) {\n        formatDevErrorMessage(`Expected RangeSelection after insertParagraph`);\n      }\n      return selection.insertNodes(nodes);\n    }\n    const firstPoint = this.isBackward() ? this.focus : this.anchor;\n    const firstNode = firstPoint.getNode();\n    const firstBlock = $getAncestor(firstNode, INTERNAL_$isBlock);\n    const last = nodes[nodes.length - 1];\n\n    // CASE 1: insert inside a code block\n    if ($isElementNode(firstBlock) && '__language' in firstBlock) {\n      if ('__language' in nodes[0]) {\n        this.insertText(nodes[0].getTextContent());\n      } else {\n        const index = $removeTextAndSplitBlock(this);\n        firstBlock.splice(index, 0, nodes);\n        last.selectEnd();\n      }\n      return;\n    }\n\n    // CASE 2: All elements of the array are inline\n    const notInline = node => ($isElementNode(node) || $isDecoratorNode(node)) && !node.isInline();\n    if (!nodes.some(notInline)) {\n      if (!$isElementNode(firstBlock)) {\n        formatDevErrorMessage(`Expected node ${firstNode.constructor.name} of type ${firstNode.getType()} to have a block ElementNode ancestor`);\n      }\n      const index = $removeTextAndSplitBlock(this);\n      firstBlock.splice(index, 0, nodes);\n      last.selectEnd();\n      return;\n    }\n\n    // CASE 3: At least 1 element of the array is not inline\n    const blocksParent = $wrapInlineNodes(nodes);\n    const nodeToSelect = blocksParent.getLastDescendant();\n    const blocks = blocksParent.getChildren();\n    const isMergeable = node => $isElementNode(node) && INTERNAL_$isBlock(node) && !node.isEmpty() && $isElementNode(firstBlock) && (!firstBlock.isEmpty() || firstBlock.canMergeWhenEmpty());\n    const shouldInsert = !$isElementNode(firstBlock) || !firstBlock.isEmpty();\n    const insertedParagraph = shouldInsert ? this.insertParagraph() : null;\n    const lastToInsert = blocks[blocks.length - 1];\n    let firstToInsert = blocks[0];\n    if (isMergeable(firstToInsert)) {\n      if (!$isElementNode(firstBlock)) {\n        formatDevErrorMessage(`Expected node ${firstNode.constructor.name} of type ${firstNode.getType()} to have a block ElementNode ancestor`);\n      }\n      firstBlock.append(...firstToInsert.getChildren());\n      firstToInsert = blocks[1];\n    }\n    if (firstToInsert) {\n      if (!(firstBlock !== null)) {\n        formatDevErrorMessage(`Expected node ${firstNode.constructor.name} of type ${firstNode.getType()} to have a block ancestor`);\n      }\n      insertRangeAfter(firstBlock, firstToInsert);\n    }\n    const lastInsertedBlock = $getAncestor(nodeToSelect, INTERNAL_$isBlock);\n    if (insertedParagraph && $isElementNode(lastInsertedBlock) && (insertedParagraph.canMergeWhenEmpty() || INTERNAL_$isBlock(lastToInsert))) {\n      lastInsertedBlock.append(...insertedParagraph.getChildren());\n      insertedParagraph.remove();\n    }\n    if ($isElementNode(firstBlock) && firstBlock.isEmpty()) {\n      firstBlock.remove();\n    }\n    nodeToSelect.selectEnd();\n\n    // To understand this take a look at the test \"can wrap post-linebreak nodes into new element\"\n    const lastChild = $isElementNode(firstBlock) ? firstBlock.getLastChild() : null;\n    if ($isLineBreakNode(lastChild) && lastInsertedBlock !== firstBlock) {\n      lastChild.remove();\n    }\n  }\n\n  /**\n   * Inserts a new ParagraphNode into the EditorState at the current Selection\n   *\n   * @returns the newly inserted node.\n   */\n  insertParagraph() {\n    if (this.anchor.key === 'root') {\n      const paragraph = $createParagraphNode();\n      $getRoot().splice(this.anchor.offset, 0, [paragraph]);\n      paragraph.select();\n      return paragraph;\n    }\n    const index = $removeTextAndSplitBlock(this);\n    const block = $getAncestor(this.anchor.getNode(), INTERNAL_$isBlock);\n    if (!$isElementNode(block)) {\n      formatDevErrorMessage(`Expected ancestor to be a block ElementNode`);\n    }\n    const firstToAppend = block.getChildAtIndex(index);\n    const nodesToInsert = firstToAppend ? [firstToAppend, ...firstToAppend.getNextSiblings()] : [];\n    const newBlock = block.insertNewAfter(this, false);\n    if (newBlock) {\n      newBlock.append(...nodesToInsert);\n      newBlock.selectStart();\n      return newBlock;\n    }\n    // if newBlock is null, it means that block is of type CodeNode.\n    return null;\n  }\n\n  /**\n   * Inserts a logical linebreak, which may be a new LineBreakNode or a new ParagraphNode, into the EditorState at the\n   * current Selection.\n   */\n  insertLineBreak(selectStart) {\n    const lineBreak = $createLineBreakNode();\n    this.insertNodes([lineBreak]);\n    // this is used in MacOS with the command 'ctrl-O' (openLineBreak)\n    if (selectStart) {\n      const parent = lineBreak.getParentOrThrow();\n      const index = lineBreak.getIndexWithinParent();\n      parent.select(index, index);\n    }\n  }\n\n  /**\n   * Extracts the nodes in the Selection, splitting nodes where necessary\n   * to get offset-level precision.\n   *\n   * @returns The nodes in the Selection\n   */\n  extract() {\n    const selectedNodes = this.getNodes();\n    const selectedNodesLength = selectedNodes.length;\n    const lastIndex = selectedNodesLength - 1;\n    const anchor = this.anchor;\n    const focus = this.focus;\n    let firstNode = selectedNodes[0];\n    let lastNode = selectedNodes[lastIndex];\n    const [anchorOffset, focusOffset] = $getCharacterOffsets(this);\n    if (selectedNodesLength === 0) {\n      return [];\n    } else if (selectedNodesLength === 1) {\n      if ($isTextNode(firstNode) && !this.isCollapsed()) {\n        const startOffset = anchorOffset > focusOffset ? focusOffset : anchorOffset;\n        const endOffset = anchorOffset > focusOffset ? anchorOffset : focusOffset;\n        const splitNodes = firstNode.splitText(startOffset, endOffset);\n        const node = startOffset === 0 ? splitNodes[0] : splitNodes[1];\n        return node != null ? [node] : [];\n      }\n      return [firstNode];\n    }\n    const isBefore = anchor.isBefore(focus);\n    if ($isTextNode(firstNode)) {\n      const startOffset = isBefore ? anchorOffset : focusOffset;\n      if (startOffset === firstNode.getTextContentSize()) {\n        selectedNodes.shift();\n      } else if (startOffset !== 0) {\n        [, firstNode] = firstNode.splitText(startOffset);\n        selectedNodes[0] = firstNode;\n      }\n    }\n    if ($isTextNode(lastNode)) {\n      const lastNodeText = lastNode.getTextContent();\n      const lastNodeTextLength = lastNodeText.length;\n      const endOffset = isBefore ? focusOffset : anchorOffset;\n      if (endOffset === 0) {\n        selectedNodes.pop();\n      } else if (endOffset !== lastNodeTextLength) {\n        [lastNode] = lastNode.splitText(endOffset);\n        selectedNodes[lastIndex] = lastNode;\n      }\n    }\n    return selectedNodes;\n  }\n\n  /**\n   * Modifies the Selection according to the parameters and a set of heuristics that account for\n   * various node types. Can be used to safely move or extend selection by one logical \"unit\" without\n   * dealing explicitly with all the possible node types.\n   *\n   * @param alter the type of modification to perform\n   * @param isBackward whether or not selection is backwards\n   * @param granularity the granularity at which to apply the modification\n   */\n  modify(alter, isBackward, granularity) {\n    if ($modifySelectionAroundDecoratorsAndBlocks(this, alter, isBackward, granularity)) {\n      return;\n    }\n    const collapse = alter === 'move';\n    const editor = getActiveEditor();\n    const domSelection = getDOMSelection(getWindow(editor));\n    if (!domSelection) {\n      return;\n    }\n    const blockCursorElement = editor._blockCursorElement;\n    const rootElement = editor._rootElement;\n    const focusNode = this.focus.getNode();\n    // Remove the block cursor element if it exists. This will ensure selection\n    // works as intended. If we leave it in the DOM all sorts of strange bugs\n    // occur. :/\n    if (rootElement !== null && blockCursorElement !== null && $isElementNode(focusNode) && !focusNode.isInline() && !focusNode.canBeEmpty()) {\n      removeDOMBlockCursorElement(blockCursorElement, editor, rootElement);\n    }\n    if (this.dirty) {\n      let nextAnchorDOM = getElementByKeyOrThrow(editor, this.anchor.key);\n      let nextFocusDOM = getElementByKeyOrThrow(editor, this.focus.key);\n      if (this.anchor.type === 'text') {\n        nextAnchorDOM = getDOMTextNode(nextAnchorDOM);\n      }\n      if (this.focus.type === 'text') {\n        nextFocusDOM = getDOMTextNode(nextFocusDOM);\n      }\n      if (nextAnchorDOM && nextFocusDOM) {\n        setDOMSelectionBaseAndExtent(domSelection, nextAnchorDOM, this.anchor.offset, nextFocusDOM, this.focus.offset);\n      }\n    }\n    // We use the DOM selection.modify API here to \"tell\" us what the selection\n    // will be. We then use it to update the Lexical selection accordingly. This\n    // is much more reliable than waiting for a beforeinput and using the ranges\n    // from getTargetRanges(), and is also better than trying to do it ourselves\n    // using Intl.Segmenter or other workarounds that struggle with word segments\n    // and line segments (especially with word wrapping and non-Roman languages).\n    moveNativeSelection(domSelection, alter, isBackward ? 'backward' : 'forward', granularity);\n    // Guard against no ranges\n    if (domSelection.rangeCount > 0) {\n      const range = domSelection.getRangeAt(0);\n      // Apply the DOM selection to our Lexical selection.\n      const anchorNode = this.anchor.getNode();\n      const root = $isRootNode(anchorNode) ? anchorNode : $getNearestRootOrShadowRoot(anchorNode);\n      this.applyDOMRange(range);\n      this.dirty = true;\n      if (!collapse) {\n        // Validate selection; make sure that the new extended selection respects shadow roots\n        const nodes = this.getNodes();\n        const validNodes = [];\n        let shrinkSelection = false;\n        for (let i = 0; i < nodes.length; i++) {\n          const nextNode = nodes[i];\n          if ($hasAncestor(nextNode, root)) {\n            validNodes.push(nextNode);\n          } else {\n            shrinkSelection = true;\n          }\n        }\n        if (shrinkSelection && validNodes.length > 0) {\n          // validNodes length check is a safeguard against an invalid selection; as getNodes()\n          // will return an empty array in this case\n          if (isBackward) {\n            const firstValidNode = validNodes[0];\n            if ($isElementNode(firstValidNode)) {\n              firstValidNode.selectStart();\n            } else {\n              firstValidNode.getParentOrThrow().selectStart();\n            }\n          } else {\n            const lastValidNode = validNodes[validNodes.length - 1];\n            if ($isElementNode(lastValidNode)) {\n              lastValidNode.selectEnd();\n            } else {\n              lastValidNode.getParentOrThrow().selectEnd();\n            }\n          }\n        }\n\n        // Because a range works on start and end, we might need to flip\n        // the anchor and focus points to match what the DOM has, not what\n        // the range has specifically.\n        if (domSelection.anchorNode !== range.startContainer || domSelection.anchorOffset !== range.startOffset) {\n          $swapPoints(this);\n        }\n      }\n    }\n    if (granularity === 'lineboundary') {\n      $modifySelectionAroundDecoratorsAndBlocks(this, alter, isBackward, granularity, 'decorators');\n    }\n  }\n  /**\n   * Helper for handling forward character and word deletion that prevents element nodes\n   * like a table, columns layout being destroyed\n   *\n   * @param anchor the anchor\n   * @param anchorNode the anchor node in the selection\n   * @param isBackward whether or not selection is backwards\n   */\n  forwardDeletion(anchor, anchorNode, isBackward) {\n    if (!isBackward && (\n    // Delete forward handle case\n    anchor.type === 'element' && $isElementNode(anchorNode) && anchor.offset === anchorNode.getChildrenSize() || anchor.type === 'text' && anchor.offset === anchorNode.getTextContentSize())) {\n      const parent = anchorNode.getParent();\n      const nextSibling = anchorNode.getNextSibling() || (parent === null ? null : parent.getNextSibling());\n      if ($isElementNode(nextSibling) && nextSibling.isShadowRoot()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Performs one logical character deletion operation on the EditorState based on the current Selection.\n   * Handles different node types.\n   *\n   * @param isBackward whether or not the selection is backwards.\n   */\n  deleteCharacter(isBackward) {\n    const wasCollapsed = this.isCollapsed();\n    if (this.isCollapsed()) {\n      const anchor = this.anchor;\n      let anchorNode = anchor.getNode();\n      if (this.forwardDeletion(anchor, anchorNode, isBackward)) {\n        return;\n      }\n      const direction = isBackward ? 'previous' : 'next';\n      const initialCaret = $caretFromPoint(anchor, direction);\n      const initialRange = $extendCaretToRange(initialCaret);\n      if (initialRange.getTextSlices().every(slice => slice === null || slice.distance === 0)) {\n        // There's no text in the direction of the deletion so we can explore our options\n        let state = {\n          type: 'initial'\n        };\n        for (const caret of initialRange.iterNodeCarets('shadowRoot')) {\n          if ($isChildCaret(caret)) {\n            if (caret.origin.isInline()) ; else if (caret.origin.isShadowRoot()) {\n              if (state.type === 'merge-block') {\n                break;\n              }\n              // Don't merge with a shadow root block\n              if ($isElementNode(initialRange.anchor.origin) && initialRange.anchor.origin.isEmpty()) {\n                // delete an empty paragraph like the DecoratorNode case\n                const normCaret = $normalizeCaret(caret);\n                $updateRangeSelectionFromCaretRange(this, $getCaretRange(normCaret, normCaret));\n                initialRange.anchor.origin.remove();\n              }\n              return;\n            } else if (state.type === 'merge-next-block' || state.type === 'merge-block') {\n              // Keep descending ChildCaret to find which block to merge with\n              state = {\n                block: state.block,\n                caret,\n                type: 'merge-block'\n              };\n            }\n          } else if (state.type === 'merge-block') {\n            break;\n          } else if ($isSiblingCaret(caret)) {\n            if ($isElementNode(caret.origin)) {\n              if (!caret.origin.isInline()) {\n                state = {\n                  block: caret.origin,\n                  type: 'merge-next-block'\n                };\n              } else if (!caret.origin.isParentOf(initialRange.anchor.origin)) {\n                break;\n              }\n              continue;\n            } else if ($isDecoratorNode(caret.origin)) {\n              if (caret.origin.isIsolated()) ; else if (state.type === 'merge-next-block' && (caret.origin.isKeyboardSelectable() || !caret.origin.isInline()) && $isElementNode(initialRange.anchor.origin) && initialRange.anchor.origin.isEmpty()) {\n                // If the anchor is an empty element that is adjacent to a\n                // decorator then we remove the paragraph and select the\n                // decorator\n                initialRange.anchor.origin.remove();\n                const nodeSelection = $createNodeSelection();\n                nodeSelection.add(caret.origin.getKey());\n                $setSelection(nodeSelection);\n              } else {\n                // When the anchor is not an empty element then the\n                // adjacent decorator is removed\n                caret.origin.remove();\n              }\n              // always stop when a decorator is encountered\n              return;\n            }\n            break;\n          }\n        }\n        if (state.type === 'merge-block') {\n          const {\n            caret,\n            block\n          } = state;\n          $updateRangeSelectionFromCaretRange(this, $getCaretRange(!caret.origin.isEmpty() && block.isEmpty() ? $rewindSiblingCaret($getSiblingCaret(block, caret.direction)) : initialRange.anchor, caret));\n          return this.removeText();\n        }\n      }\n\n      // Handle the deletion around decorators.\n      const focus = this.focus;\n      this.modify('extend', isBackward, 'character');\n      if (!this.isCollapsed()) {\n        const focusNode = focus.type === 'text' ? focus.getNode() : null;\n        anchorNode = anchor.type === 'text' ? anchor.getNode() : null;\n        if (focusNode !== null && focusNode.isSegmented()) {\n          const offset = focus.offset;\n          const textContentSize = focusNode.getTextContentSize();\n          if (focusNode.is(anchorNode) || isBackward && offset !== textContentSize || !isBackward && offset !== 0) {\n            $removeSegment(focusNode, isBackward, offset);\n            return;\n          }\n        } else if (anchorNode !== null && anchorNode.isSegmented()) {\n          const offset = anchor.offset;\n          const textContentSize = anchorNode.getTextContentSize();\n          if (anchorNode.is(focusNode) || isBackward && offset !== 0 || !isBackward && offset !== textContentSize) {\n            $removeSegment(anchorNode, isBackward, offset);\n            return;\n          }\n        }\n        $updateCaretSelectionForUnicodeCharacter(this, isBackward);\n      } else if (isBackward && anchor.offset === 0) {\n        // Special handling around rich text nodes\n        if ($collapseAtStart(this, anchor.getNode())) {\n          return;\n        }\n      }\n    }\n    this.removeText();\n    if (isBackward && !wasCollapsed && this.isCollapsed() && this.anchor.type === 'element' && this.anchor.offset === 0) {\n      const anchorNode = this.anchor.getNode();\n      if (anchorNode.isEmpty() && $isRootNode(anchorNode.getParent()) && anchorNode.getPreviousSibling() === null) {\n        $collapseAtStart(this, anchorNode);\n      }\n    }\n  }\n\n  /**\n   * Performs one logical line deletion operation on the EditorState based on the current Selection.\n   * Handles different node types.\n   *\n   * @param isBackward whether or not the selection is backwards.\n   */\n  deleteLine(isBackward) {\n    if (this.isCollapsed()) {\n      this.modify('extend', isBackward, 'lineboundary');\n    }\n    if (this.isCollapsed()) {\n      // If the selection was already collapsed at the lineboundary,\n      // use the deleteCharacter operation to handle all of the logic associated\n      // with navigating through the parent element\n      this.deleteCharacter(isBackward);\n    } else {\n      this.removeText();\n    }\n  }\n\n  /**\n   * Performs one logical word deletion operation on the EditorState based on the current Selection.\n   * Handles different node types.\n   *\n   * @param isBackward whether or not the selection is backwards.\n   */\n  deleteWord(isBackward) {\n    if (this.isCollapsed()) {\n      const anchor = this.anchor;\n      const anchorNode = anchor.getNode();\n      if (this.forwardDeletion(anchor, anchorNode, isBackward)) {\n        return;\n      }\n      this.modify('extend', isBackward, 'word');\n    }\n    this.removeText();\n  }\n\n  /**\n   * Returns whether the Selection is \"backwards\", meaning the focus\n   * logically precedes the anchor in the EditorState.\n   * @returns true if the Selection is backwards, false otherwise.\n   */\n  isBackward() {\n    return this.focus.isBefore(this.anchor);\n  }\n  getStartEndPoints() {\n    return [this.anchor, this.focus];\n  }\n}\nfunction $isNodeSelection(x) {\n  return x instanceof NodeSelection;\n}\nfunction getCharacterOffset(point) {\n  const offset = point.offset;\n  if (point.type === 'text') {\n    return offset;\n  }\n  const parent = point.getNode();\n  return offset === parent.getChildrenSize() ? parent.getTextContent().length : 0;\n}\nfunction $getCharacterOffsets(selection) {\n  const anchorAndFocus = selection.getStartEndPoints();\n  if (anchorAndFocus === null) {\n    return [0, 0];\n  }\n  const [anchor, focus] = anchorAndFocus;\n  if (anchor.type === 'element' && focus.type === 'element' && anchor.key === focus.key && anchor.offset === focus.offset) {\n    return [0, 0];\n  }\n  return [getCharacterOffset(anchor), getCharacterOffset(focus)];\n}\nfunction $collapseAtStart(selection, startNode) {\n  for (let node = startNode; node; node = node.getParent()) {\n    if ($isElementNode(node)) {\n      if (node.collapseAtStart(selection)) {\n        return true;\n      }\n      if ($isRootOrShadowRoot(node)) {\n        break;\n      }\n    }\n    if (node.getPreviousSibling()) {\n      break;\n    }\n  }\n  return false;\n}\nfunction $swapPoints(selection) {\n  const focus = selection.focus;\n  const anchor = selection.anchor;\n  const anchorKey = anchor.key;\n  const anchorOffset = anchor.offset;\n  const anchorType = anchor.type;\n  anchor.set(focus.key, focus.offset, focus.type, true);\n  focus.set(anchorKey, anchorOffset, anchorType, true);\n}\nfunction moveNativeSelection(domSelection, alter, direction, granularity) {\n  // Selection.modify() method applies a change to the current selection or cursor position,\n  // but is still non-standard in some browsers.\n  domSelection.modify(alter, direction, granularity);\n}\n\n/**\n * Called by `RangeSelection.deleteCharacter` to determine if\n * `this.modify('extend', isBackward, 'character')` extended the selection\n * further than a user would expect for that operation.\n *\n * A short(?) JavaScript string vs. Unicode primer:\n *\n * Strings in JavaScript use an UTF-16 encoding, and the offsets into a\n * string are based on those UTF-16 *code units*. This is basically a\n * historical mistake (though logical at that time, decades ago), but\n * can never really be fixed for compatibility reasons.\n *\n * In Unicode, a *code point* is the combination of one or more *code units*.\n * and the range of a *code point* can fit into 21 bits.\n *\n * Every valid *code point* can be represented with one or two\n * *UTF-16 code units*. One unit is used when the code point is in the\n * Basic Multilingual Plane (BMP) and is `< 0xFFFF`. Anything outside\n * of that plane is encoded with a *surrogate pair* of *code units* and\n * `/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/` is a regex that you could use to\n * find any valid *surrogate pair*. As far as Unicode is concerned, these\n * pairs represent a single *code point*, but in JavaScript, these pairs\n * have a length of 2 (`pair.charCodeAt(n)` is really returning a\n * UTF-16 *code unit*, not a unicode *code point*). It is possible to request\n * a *code point* with `pair.codePointAt(0)` and enumerate code points\n * in a string with `[...string]` but the offsets we work with, and\n * the string length, are based in *code units* so that functionality\n * is unfortunately not very useful here.\n *\n * This only gets us as far as *code points*. We now know that we must\n * consider that each *code point* can have a length of 1 or 2 in JavaScript\n * string distance. It gets even trickier because the visual representation\n * of a character is a *grapheme* (approximately what the user thinks of\n * as a character). A *grapheme* is one or more *code points*, and can\n * essentially be arbitrarily long, as there are many ways to combine\n * them.\n *\n * The `this.modify(…)` call has already extended our selection by one\n * *grapheme* in the direction we want to delete. Sounds great, it's done\n * a lot of awfully tricky work for us because this functionality has only\n * recently become available in JavaScript via `Intl.Segmenter`. The\n * problem is that in many cases the expected behavior of backspace or\n * delete is *not always to delete a whole grapheme*. In some languages\n * it's always expected that backspace ought to delete one code point, not the\n * whole grapheme. In other situations such as emoji that use variation\n * selectors you *do* want to delete the whole *grapheme*.\n *\n * In a few situations the behavior is even application dependent, such as\n * with latin languages where you have multiple ways to represent the same\n * character visually (e.g. a letter with an accent in one code point, or a\n * letter followed by a combining mark in a second code point); some apps will\n * delete the whole grapheme and others will delete only the combining mark,\n * probably based on whether they perform some sort of *normalization* on their\n * input to ensure that only one form is used when two sequences of code points\n * can represent the same visual character. Lexical currently chooses not\n * to perform any normalization so this type of combining marks will be\n * deleted as a *code point* without deleting the whole *grapheme*.\n *\n * See also:\n * https://www.unicode.org/versions/Unicode16.0.0/core-spec/chapter-2/#G25564\n * https://www.unicode.org/versions/Unicode16.0.0/core-spec/chapter-3/#G30602\n * https://www.unicode.org/versions/Unicode16.0.0/core-spec/chapter-3/#G49537\n * https://mathiasbynens.be/notes/javascript-unicode\n */\nfunction $updateCaretSelectionForUnicodeCharacter(selection, isBackward) {\n  const anchor = selection.anchor;\n  const focus = selection.focus;\n  const anchorNode = anchor.getNode();\n  const focusNode = focus.getNode();\n  if (anchorNode === focusNode && anchor.type === 'text' && focus.type === 'text') {\n    // Handling of multibyte characters\n    const anchorOffset = anchor.offset;\n    const focusOffset = focus.offset;\n    const isBefore = anchorOffset < focusOffset;\n    const startOffset = isBefore ? anchorOffset : focusOffset;\n    const endOffset = isBefore ? focusOffset : anchorOffset;\n    const characterOffset = endOffset - 1;\n    if (startOffset !== characterOffset) {\n      const text = anchorNode.getTextContent().slice(startOffset, endOffset);\n      if (shouldDeleteExactlyOneCodeUnit(text)) {\n        if (isBackward) {\n          focus.set(focus.key, characterOffset, focus.type);\n        } else {\n          anchor.set(anchor.key, characterOffset, anchor.type);\n        }\n      }\n    }\n  }\n}\nfunction shouldDeleteExactlyOneCodeUnit(text) {\n  {\n    if (!(text.length > 1)) {\n      formatDevErrorMessage(`shouldDeleteExactlyOneCodeUnit: expecting to be called only with sequences of two or more code units`);\n    }\n  }\n  return !(doesContainSurrogatePair(text) || doesContainEmoji(text));\n}\n\n/**\n * Given the wall of text in $updateCaretSelectionForUnicodeCharacter, you'd\n * think that the solution might be complex, but the only currently known\n * cases given the above constraints where we want to delete a whole grapheme\n * are when emoji is involved. Since ES6 we can use unicode character classes\n * in regexp which makes this simple.\n *\n * It may make sense to add to this heuristic in the future if other\n * edge cases are discovered, which is why detailed notes remain.\n *\n * This is implemented with runtime feature detection and will always\n * return false on pre-2020 platforms that do not have unicode character\n * class support.\n */\nconst doesContainEmoji = (() => {\n  try {\n    const re = new RegExp('\\\\p{Emoji}', 'u');\n    const test = re.test.bind(re);\n    // Sanity check a few emoji to make sure the regexp was parsed\n    // and works correctly. Any one of these should be sufficient,\n    // but they're cheap and it only runs once.\n    if (\n    // Emoji in the BMP (heart) with variation selector\n    test('\\u2764\\ufe0f') &&\n    // Emoji in the BMP (#) with variation selector\n    test('#\\ufe0f\\u20e3') &&\n    // Emoji outside the BMP (thumbs up) that is encoded with a surrogate pair\n    test('\\ud83d\\udc4d')) {\n      return test;\n    }\n  } catch (e) {\n    // SyntaxError\n  }\n  // fallback, surrogate pair already checked\n  return () => false;\n})();\nfunction $removeSegment(node, isBackward, offset) {\n  const textNode = node;\n  const textContent = textNode.getTextContent();\n  const split = textContent.split(/(?=\\s)/g);\n  const splitLength = split.length;\n  let segmentOffset = 0;\n  let restoreOffset = 0;\n  for (let i = 0; i < splitLength; i++) {\n    const text = split[i];\n    const isLast = i === splitLength - 1;\n    restoreOffset = segmentOffset;\n    segmentOffset += text.length;\n    if (isBackward && segmentOffset === offset || segmentOffset > offset || isLast) {\n      split.splice(i, 1);\n      if (isLast) {\n        restoreOffset = undefined;\n      }\n      break;\n    }\n  }\n  const nextTextContent = split.join('').trim();\n  if (nextTextContent === '') {\n    textNode.remove();\n  } else {\n    textNode.setTextContent(nextTextContent);\n    textNode.select(restoreOffset, restoreOffset);\n  }\n}\nfunction shouldResolveAncestor(resolvedElement, resolvedOffset, lastPoint) {\n  const parent = resolvedElement.getParent();\n  return lastPoint === null || parent === null || !parent.canBeEmpty() || parent !== lastPoint.getNode();\n}\nfunction $internalResolveSelectionPoint(dom, offset, lastPoint, editor) {\n  let resolvedOffset = offset;\n  let resolvedNode;\n  // If we have selection on an element, we will\n  // need to figure out (using the offset) what text\n  // node should be selected.\n\n  if (isHTMLElement(dom)) {\n    // Resolve element to a ElementNode, or TextNode, or null\n    let moveSelectionToEnd = false;\n    // Given we're moving selection to another node, selection is\n    // definitely dirty.\n    // We use the anchor to find which child node to select\n    const childNodes = dom.childNodes;\n    const childNodesLength = childNodes.length;\n    const blockCursorElement = editor._blockCursorElement;\n    // If the anchor is the same as length, then this means we\n    // need to select the very last text node.\n    if (resolvedOffset === childNodesLength) {\n      moveSelectionToEnd = true;\n      resolvedOffset = childNodesLength - 1;\n    }\n    let childDOM = childNodes[resolvedOffset];\n    let hasBlockCursor = false;\n    if (childDOM === blockCursorElement) {\n      childDOM = childNodes[resolvedOffset + 1];\n      hasBlockCursor = true;\n    } else if (blockCursorElement !== null) {\n      const blockCursorElementParent = blockCursorElement.parentNode;\n      if (dom === blockCursorElementParent) {\n        const blockCursorOffset = Array.prototype.indexOf.call(blockCursorElementParent.children, blockCursorElement);\n        if (offset > blockCursorOffset) {\n          resolvedOffset--;\n        }\n      }\n    }\n    resolvedNode = $getNodeFromDOM(childDOM);\n    if ($isTextNode(resolvedNode)) {\n      resolvedOffset = getTextNodeOffset(resolvedNode, moveSelectionToEnd);\n    } else {\n      let resolvedElement = $getNodeFromDOM(dom);\n      // Ensure resolvedElement is actually a element.\n      if (resolvedElement === null) {\n        return null;\n      }\n      if ($isElementNode(resolvedElement)) {\n        const elementDOM = editor.getElementByKey(resolvedElement.getKey());\n        if (!(elementDOM !== null)) {\n          formatDevErrorMessage(`$internalResolveSelectionPoint: node in DOM but not keyToDOMMap`);\n        }\n        const slot = resolvedElement.getDOMSlot(elementDOM);\n        [resolvedElement, resolvedOffset] = slot.resolveChildIndex(resolvedElement, elementDOM, dom, offset);\n        // This is just a typescript workaround, it is true but lost due to mutability\n        if (!$isElementNode(resolvedElement)) {\n          formatDevErrorMessage(`$internalResolveSelectionPoint: resolvedElement is not an ElementNode`);\n        }\n        if (moveSelectionToEnd && resolvedOffset >= resolvedElement.getChildrenSize()) {\n          resolvedOffset = Math.max(0, resolvedElement.getChildrenSize() - 1);\n        }\n        let child = resolvedElement.getChildAtIndex(resolvedOffset);\n        if ($isElementNode(child) && shouldResolveAncestor(child, resolvedOffset, lastPoint)) {\n          const descendant = moveSelectionToEnd ? child.getLastDescendant() : child.getFirstDescendant();\n          if (descendant === null) {\n            resolvedElement = child;\n          } else {\n            child = descendant;\n            resolvedElement = $isElementNode(child) ? child : child.getParentOrThrow();\n          }\n          resolvedOffset = 0;\n        }\n        if ($isTextNode(child)) {\n          resolvedNode = child;\n          resolvedElement = null;\n          resolvedOffset = getTextNodeOffset(child, moveSelectionToEnd);\n        } else if (child !== resolvedElement && moveSelectionToEnd && !hasBlockCursor) {\n          if (!$isElementNode(resolvedElement)) {\n            formatDevErrorMessage(`invariant`);\n          }\n          resolvedOffset = Math.min(resolvedElement.getChildrenSize(), resolvedOffset + 1);\n        }\n      } else {\n        const index = resolvedElement.getIndexWithinParent();\n        // When selecting decorators, there can be some selection issues when using resolvedOffset,\n        // and instead we should be checking if we're using the offset\n        if (offset === 0 && $isDecoratorNode(resolvedElement) && $getNodeFromDOM(dom) === resolvedElement) {\n          resolvedOffset = index;\n        } else {\n          resolvedOffset = index + 1;\n        }\n        resolvedElement = resolvedElement.getParentOrThrow();\n      }\n      if ($isElementNode(resolvedElement)) {\n        return $createPoint(resolvedElement.__key, resolvedOffset, 'element');\n      }\n    }\n  } else {\n    // TextNode or null\n    resolvedNode = $getNodeFromDOM(dom);\n  }\n  if (!$isTextNode(resolvedNode)) {\n    return null;\n  }\n  return $createPoint(resolvedNode.__key, resolvedOffset, 'text');\n}\nfunction resolveSelectionPointOnBoundary(point, isBackward, isCollapsed) {\n  const offset = point.offset;\n  const node = point.getNode();\n  if (offset === 0) {\n    const prevSibling = node.getPreviousSibling();\n    const parent = node.getParent();\n    if (!isBackward) {\n      if ($isElementNode(prevSibling) && !isCollapsed && prevSibling.isInline()) {\n        point.set(prevSibling.__key, prevSibling.getChildrenSize(), 'element');\n      } else if ($isTextNode(prevSibling)) {\n        point.set(prevSibling.__key, prevSibling.getTextContent().length, 'text');\n      }\n    } else if ((isCollapsed || !isBackward) && prevSibling === null && $isElementNode(parent) && parent.isInline()) {\n      const parentSibling = parent.getPreviousSibling();\n      if ($isTextNode(parentSibling)) {\n        point.set(parentSibling.__key, parentSibling.getTextContent().length, 'text');\n      }\n    }\n  } else if (offset === node.getTextContent().length) {\n    const nextSibling = node.getNextSibling();\n    const parent = node.getParent();\n    if (isBackward && $isElementNode(nextSibling) && nextSibling.isInline()) {\n      point.set(nextSibling.__key, 0, 'element');\n    } else if ((isCollapsed || isBackward) && nextSibling === null && $isElementNode(parent) && parent.isInline() && !parent.canInsertTextAfter()) {\n      const parentSibling = parent.getNextSibling();\n      if ($isTextNode(parentSibling)) {\n        point.set(parentSibling.__key, 0, 'text');\n      }\n    }\n  }\n}\nfunction $normalizeSelectionPointsForBoundaries(anchor, focus, lastSelection) {\n  if (anchor.type === 'text' && focus.type === 'text') {\n    const isBackward = anchor.isBefore(focus);\n    const isCollapsed = anchor.is(focus);\n\n    // Attempt to normalize the offset to the previous sibling if we're at the\n    // start of a text node and the sibling is a text node or inline element.\n    resolveSelectionPointOnBoundary(anchor, isBackward, isCollapsed);\n    resolveSelectionPointOnBoundary(focus, !isBackward, isCollapsed);\n    if (isCollapsed) {\n      focus.set(anchor.key, anchor.offset, anchor.type);\n    }\n    const editor = getActiveEditor();\n    if (editor.isComposing() && editor._compositionKey !== anchor.key && $isRangeSelection(lastSelection)) {\n      const lastAnchor = lastSelection.anchor;\n      const lastFocus = lastSelection.focus;\n      anchor.set(lastAnchor.key, lastAnchor.offset, lastAnchor.type, true);\n      focus.set(lastFocus.key, lastFocus.offset, lastFocus.type, true);\n    }\n  }\n}\nfunction $internalResolveSelectionPoints(anchorDOM, anchorOffset, focusDOM, focusOffset, editor, lastSelection) {\n  if (anchorDOM === null || focusDOM === null || !isSelectionWithinEditor(editor, anchorDOM, focusDOM)) {\n    return null;\n  }\n  const resolvedAnchorPoint = $internalResolveSelectionPoint(anchorDOM, anchorOffset, $isRangeSelection(lastSelection) ? lastSelection.anchor : null, editor);\n  if (resolvedAnchorPoint === null) {\n    return null;\n  }\n  const resolvedFocusPoint = $internalResolveSelectionPoint(focusDOM, focusOffset, $isRangeSelection(lastSelection) ? lastSelection.focus : null, editor);\n  if (resolvedFocusPoint === null) {\n    return null;\n  }\n  {\n    $validatePoint(editor, 'anchor', resolvedAnchorPoint);\n    $validatePoint(editor, 'focus', resolvedAnchorPoint);\n  }\n  if (resolvedAnchorPoint.type === 'element' && resolvedFocusPoint.type === 'element') {\n    const anchorNode = $getNodeFromDOM(anchorDOM);\n    const focusNode = $getNodeFromDOM(focusDOM);\n    // Ensure if we're selecting the content of a decorator that we\n    // return null for this point, as it's not in the controlled scope\n    // of Lexical.\n    if ($isDecoratorNode(anchorNode) && $isDecoratorNode(focusNode)) {\n      return null;\n    }\n  }\n\n  // Handle normalization of selection when it is at the boundaries.\n  $normalizeSelectionPointsForBoundaries(resolvedAnchorPoint, resolvedFocusPoint, lastSelection);\n  return [resolvedAnchorPoint, resolvedFocusPoint];\n}\nfunction $isBlockElementNode(node) {\n  return $isElementNode(node) && !node.isInline();\n}\n\n// This is used to make a selection when the existing\n// selection is null, i.e. forcing selection on the editor\n// when it current exists outside the editor.\n\nfunction $internalMakeRangeSelection(anchorKey, anchorOffset, focusKey, focusOffset, anchorType, focusType) {\n  const editorState = getActiveEditorState();\n  const selection = new RangeSelection($createPoint(anchorKey, anchorOffset, anchorType), $createPoint(focusKey, focusOffset, focusType), 0, '');\n  selection.dirty = true;\n  editorState._selection = selection;\n  return selection;\n}\nfunction $createRangeSelection() {\n  const anchor = $createPoint('root', 0, 'element');\n  const focus = $createPoint('root', 0, 'element');\n  return new RangeSelection(anchor, focus, 0, '');\n}\nfunction $createNodeSelection() {\n  return new NodeSelection(new Set());\n}\nfunction $internalCreateSelection(editor, event) {\n  const currentEditorState = editor.getEditorState();\n  const lastSelection = currentEditorState._selection;\n  const domSelection = getDOMSelection(getWindow(editor));\n  if ($isRangeSelection(lastSelection) || lastSelection == null) {\n    return $internalCreateRangeSelection(lastSelection, domSelection, editor, event);\n  }\n  return lastSelection.clone();\n}\nfunction $createRangeSelectionFromDom(domSelection, editor) {\n  return $internalCreateRangeSelection(null, domSelection, editor, null);\n}\nfunction $internalCreateRangeSelection(lastSelection, domSelection, editor, event) {\n  const windowObj = editor._window;\n  if (windowObj === null) {\n    return null;\n  }\n  // When we create a selection, we try to use the previous\n  // selection where possible, unless an actual user selection\n  // change has occurred. When we do need to create a new selection\n  // we validate we can have text nodes for both anchor and focus\n  // nodes. If that holds true, we then return that selection\n  // as a mutable object that we use for the editor state for this\n  // update cycle. If a selection gets changed, and requires a\n  // update to native DOM selection, it gets marked as \"dirty\".\n  // If the selection changes, but matches with the existing\n  // DOM selection, then we only need to sync it. Otherwise,\n  // we generally bail out of doing an update to selection during\n  // reconciliation unless there are dirty nodes that need\n  // reconciling.\n\n  const windowEvent = event || windowObj.event;\n  const eventType = windowEvent ? windowEvent.type : undefined;\n  const isSelectionChange = eventType === 'selectionchange';\n  const useDOMSelection = !getIsProcessingMutations() && (isSelectionChange || eventType === 'beforeinput' || eventType === 'compositionstart' || eventType === 'compositionend' || eventType === 'click' && windowEvent && windowEvent.detail === 3 || eventType === 'drop' || eventType === undefined);\n  let anchorDOM, focusDOM, anchorOffset, focusOffset;\n  if (!$isRangeSelection(lastSelection) || useDOMSelection) {\n    if (domSelection === null) {\n      return null;\n    }\n    anchorDOM = domSelection.anchorNode;\n    focusDOM = domSelection.focusNode;\n    anchorOffset = domSelection.anchorOffset;\n    focusOffset = domSelection.focusOffset;\n    if (isSelectionChange && $isRangeSelection(lastSelection) && !isSelectionWithinEditor(editor, anchorDOM, focusDOM)) {\n      return lastSelection.clone();\n    }\n  } else {\n    return lastSelection.clone();\n  }\n  // Let's resolve the text nodes from the offsets and DOM nodes we have from\n  // native selection.\n  const resolvedSelectionPoints = $internalResolveSelectionPoints(anchorDOM, anchorOffset, focusDOM, focusOffset, editor, lastSelection);\n  if (resolvedSelectionPoints === null) {\n    return null;\n  }\n  const [resolvedAnchorPoint, resolvedFocusPoint] = resolvedSelectionPoints;\n  return new RangeSelection(resolvedAnchorPoint, resolvedFocusPoint, !$isRangeSelection(lastSelection) ? 0 : lastSelection.format, !$isRangeSelection(lastSelection) ? '' : lastSelection.style);\n}\nfunction $validatePoint(editor, name, point) {\n  const node = $getNodeByKey(point.key);\n  if (!(node !== undefined)) {\n    formatDevErrorMessage(`$validatePoint: ${name} key ${point.key} not found in current editorState`);\n  }\n  if (point.type === 'text') {\n    if (!$isTextNode(node)) {\n      formatDevErrorMessage(`$validatePoint: ${name} key ${point.key} is not a TextNode`);\n    }\n    const size = node.getTextContentSize();\n    if (!(point.offset <= size)) {\n      formatDevErrorMessage(`$validatePoint: ${name} point.offset > node.getTextContentSize() (${String(point.offset)} > ${String(size)})`);\n    }\n  } else {\n    if (!$isElementNode(node)) {\n      formatDevErrorMessage(`$validatePoint: ${name} key ${point.key} is not an ElementNode`);\n    }\n    const size = node.getChildrenSize();\n    if (!(point.offset <= size)) {\n      formatDevErrorMessage(`$validatePoint: ${name} point.offset > node.getChildrenSize() (${String(point.offset)} > ${String(size)})`);\n    }\n  }\n}\nfunction $getSelection() {\n  const editorState = getActiveEditorState();\n  return editorState._selection;\n}\nfunction $getPreviousSelection() {\n  const editor = getActiveEditor();\n  return editor._editorState._selection;\n}\nfunction $updateElementSelectionOnCreateDeleteNode(selection, parentNode, nodeOffset, times = 1) {\n  const anchor = selection.anchor;\n  const focus = selection.focus;\n  const anchorNode = anchor.getNode();\n  const focusNode = focus.getNode();\n  if (!parentNode.is(anchorNode) && !parentNode.is(focusNode)) {\n    return;\n  }\n  const parentKey = parentNode.__key;\n  // Single node. We shift selection but never redimension it\n  if (selection.isCollapsed()) {\n    const selectionOffset = anchor.offset;\n    if (nodeOffset <= selectionOffset && times > 0 || nodeOffset < selectionOffset && times < 0) {\n      const newSelectionOffset = Math.max(0, selectionOffset + times);\n      anchor.set(parentKey, newSelectionOffset, 'element');\n      focus.set(parentKey, newSelectionOffset, 'element');\n      // The new selection might point to text nodes, try to resolve them\n      $updateSelectionResolveTextNodes(selection);\n    }\n  } else {\n    // Multiple nodes selected. We shift or redimension selection\n    const isBackward = selection.isBackward();\n    const firstPoint = isBackward ? focus : anchor;\n    const firstPointNode = firstPoint.getNode();\n    const lastPoint = isBackward ? anchor : focus;\n    const lastPointNode = lastPoint.getNode();\n    if (parentNode.is(firstPointNode)) {\n      const firstPointOffset = firstPoint.offset;\n      if (nodeOffset <= firstPointOffset && times > 0 || nodeOffset < firstPointOffset && times < 0) {\n        firstPoint.set(parentKey, Math.max(0, firstPointOffset + times), 'element');\n      }\n    }\n    if (parentNode.is(lastPointNode)) {\n      const lastPointOffset = lastPoint.offset;\n      if (nodeOffset <= lastPointOffset && times > 0 || nodeOffset < lastPointOffset && times < 0) {\n        lastPoint.set(parentKey, Math.max(0, lastPointOffset + times), 'element');\n      }\n    }\n  }\n  // The new selection might point to text nodes, try to resolve them\n  $updateSelectionResolveTextNodes(selection);\n}\nfunction $updateSelectionResolveTextNodes(selection) {\n  const anchor = selection.anchor;\n  const anchorOffset = anchor.offset;\n  const focus = selection.focus;\n  const focusOffset = focus.offset;\n  const anchorNode = anchor.getNode();\n  const focusNode = focus.getNode();\n  if (selection.isCollapsed()) {\n    if (!$isElementNode(anchorNode)) {\n      return;\n    }\n    const childSize = anchorNode.getChildrenSize();\n    const anchorOffsetAtEnd = anchorOffset >= childSize;\n    const child = anchorOffsetAtEnd ? anchorNode.getChildAtIndex(childSize - 1) : anchorNode.getChildAtIndex(anchorOffset);\n    if ($isTextNode(child)) {\n      let newOffset = 0;\n      if (anchorOffsetAtEnd) {\n        newOffset = child.getTextContentSize();\n      }\n      anchor.set(child.__key, newOffset, 'text');\n      focus.set(child.__key, newOffset, 'text');\n    }\n    return;\n  }\n  if ($isElementNode(anchorNode)) {\n    const childSize = anchorNode.getChildrenSize();\n    const anchorOffsetAtEnd = anchorOffset >= childSize;\n    const child = anchorOffsetAtEnd ? anchorNode.getChildAtIndex(childSize - 1) : anchorNode.getChildAtIndex(anchorOffset);\n    if ($isTextNode(child)) {\n      let newOffset = 0;\n      if (anchorOffsetAtEnd) {\n        newOffset = child.getTextContentSize();\n      }\n      anchor.set(child.__key, newOffset, 'text');\n    }\n  }\n  if ($isElementNode(focusNode)) {\n    const childSize = focusNode.getChildrenSize();\n    const focusOffsetAtEnd = focusOffset >= childSize;\n    const child = focusOffsetAtEnd ? focusNode.getChildAtIndex(childSize - 1) : focusNode.getChildAtIndex(focusOffset);\n    if ($isTextNode(child)) {\n      let newOffset = 0;\n      if (focusOffsetAtEnd) {\n        newOffset = child.getTextContentSize();\n      }\n      focus.set(child.__key, newOffset, 'text');\n    }\n  }\n}\nfunction applySelectionTransforms(nextEditorState, editor) {\n  const prevEditorState = editor.getEditorState();\n  const prevSelection = prevEditorState._selection;\n  const nextSelection = nextEditorState._selection;\n  if ($isRangeSelection(nextSelection)) {\n    const anchor = nextSelection.anchor;\n    const focus = nextSelection.focus;\n    let anchorNode;\n    if (anchor.type === 'text') {\n      anchorNode = anchor.getNode();\n      anchorNode.selectionTransform(prevSelection, nextSelection);\n    }\n    if (focus.type === 'text') {\n      const focusNode = focus.getNode();\n      if (anchorNode !== focusNode) {\n        focusNode.selectionTransform(prevSelection, nextSelection);\n      }\n    }\n  }\n}\nfunction moveSelectionPointToSibling(point, node, parent, prevSibling, nextSibling) {\n  let siblingKey = null;\n  let offset = 0;\n  let type = null;\n  if (prevSibling !== null) {\n    siblingKey = prevSibling.__key;\n    if ($isTextNode(prevSibling)) {\n      offset = prevSibling.getTextContentSize();\n      type = 'text';\n    } else if ($isElementNode(prevSibling)) {\n      offset = prevSibling.getChildrenSize();\n      type = 'element';\n    }\n  } else {\n    if (nextSibling !== null) {\n      siblingKey = nextSibling.__key;\n      if ($isTextNode(nextSibling)) {\n        type = 'text';\n      } else if ($isElementNode(nextSibling)) {\n        type = 'element';\n      }\n    }\n  }\n  if (siblingKey !== null && type !== null) {\n    point.set(siblingKey, offset, type);\n  } else {\n    offset = node.getIndexWithinParent();\n    if (offset === -1) {\n      // Move selection to end of parent\n      offset = parent.getChildrenSize();\n    }\n    point.set(parent.__key, offset, 'element');\n  }\n}\nfunction adjustPointOffsetForMergedSibling(point, isBefore, key, target, textLength) {\n  if (point.type === 'text') {\n    point.set(key, point.offset + (isBefore ? 0 : textLength), 'text');\n  } else if (point.offset > target.getIndexWithinParent()) {\n    point.set(point.key, point.offset - 1, 'element');\n  }\n}\nfunction setDOMSelectionBaseAndExtent(domSelection, nextAnchorDOM, nextAnchorOffset, nextFocusDOM, nextFocusOffset) {\n  // Apply the updated selection to the DOM. Note: this will trigger\n  // a \"selectionchange\" event, although it will be asynchronous.\n  try {\n    domSelection.setBaseAndExtent(nextAnchorDOM, nextAnchorOffset, nextFocusDOM, nextFocusOffset);\n  } catch (error) {\n    // If we encounter an error, continue. This can sometimes\n    // occur with FF and there's no good reason as to why it\n    // should happen.\n    {\n      console.warn(error);\n    }\n  }\n}\nfunction updateDOMSelection(prevSelection, nextSelection, editor, domSelection, tags, rootElement, nodeCount) {\n  const anchorDOMNode = domSelection.anchorNode;\n  const focusDOMNode = domSelection.focusNode;\n  const anchorOffset = domSelection.anchorOffset;\n  const focusOffset = domSelection.focusOffset;\n  const activeElement = document.activeElement;\n\n  // TODO: make this not hard-coded, and add another config option\n  // that makes this configurable.\n  if (tags.has('collaboration') && activeElement !== rootElement || activeElement !== null && isSelectionCapturedInDecoratorInput(activeElement)) {\n    return;\n  }\n  if (!$isRangeSelection(nextSelection)) {\n    // We don't remove selection if the prevSelection is null because\n    // of editor.setRootElement(). If this occurs on init when the\n    // editor is already focused, then this can cause the editor to\n    // lose focus.\n    if (prevSelection !== null && isSelectionWithinEditor(editor, anchorDOMNode, focusDOMNode)) {\n      domSelection.removeAllRanges();\n    }\n    return;\n  }\n  const anchor = nextSelection.anchor;\n  const focus = nextSelection.focus;\n  const anchorKey = anchor.key;\n  const focusKey = focus.key;\n  const anchorDOM = getElementByKeyOrThrow(editor, anchorKey);\n  const focusDOM = getElementByKeyOrThrow(editor, focusKey);\n  const nextAnchorOffset = anchor.offset;\n  const nextFocusOffset = focus.offset;\n  const nextFormat = nextSelection.format;\n  const nextStyle = nextSelection.style;\n  const isCollapsed = nextSelection.isCollapsed();\n  let nextAnchorNode = anchorDOM;\n  let nextFocusNode = focusDOM;\n  let anchorFormatOrStyleChanged = false;\n  if (anchor.type === 'text') {\n    nextAnchorNode = getDOMTextNode(anchorDOM);\n    const anchorNode = anchor.getNode();\n    anchorFormatOrStyleChanged = anchorNode.getFormat() !== nextFormat || anchorNode.getStyle() !== nextStyle;\n  } else if ($isRangeSelection(prevSelection) && prevSelection.anchor.type === 'text') {\n    anchorFormatOrStyleChanged = true;\n  }\n  if (focus.type === 'text') {\n    nextFocusNode = getDOMTextNode(focusDOM);\n  }\n\n  // If we can't get an underlying text node for selection, then\n  // we should avoid setting selection to something incorrect.\n  if (nextAnchorNode === null || nextFocusNode === null) {\n    return;\n  }\n  if (isCollapsed && (prevSelection === null || anchorFormatOrStyleChanged || $isRangeSelection(prevSelection) && (prevSelection.format !== nextFormat || prevSelection.style !== nextStyle))) {\n    markCollapsedSelectionFormat(nextFormat, nextStyle, nextAnchorOffset, anchorKey, performance.now());\n  }\n\n  // Diff against the native DOM selection to ensure we don't do\n  // an unnecessary selection update. We also skip this check if\n  // we're moving selection to within an element, as this can\n  // sometimes be problematic around scrolling.\n  if (anchorOffset === nextAnchorOffset && focusOffset === nextFocusOffset && anchorDOMNode === nextAnchorNode && focusDOMNode === nextFocusNode &&\n  // Badly interpreted range selection when collapsed - #1482\n  !(domSelection.type === 'Range' && isCollapsed)) {\n    // If the root element does not have focus, ensure it has focus\n    if (activeElement === null || !rootElement.contains(activeElement)) {\n      rootElement.focus({\n        preventScroll: true\n      });\n    }\n    if (anchor.type !== 'element') {\n      return;\n    }\n  }\n\n  // Apply the updated selection to the DOM. Note: this will trigger\n  // a \"selectionchange\" event, although it will be asynchronous.\n  setDOMSelectionBaseAndExtent(domSelection, nextAnchorNode, nextAnchorOffset, nextFocusNode, nextFocusOffset);\n  if (!tags.has('skip-scroll-into-view') && nextSelection.isCollapsed() && rootElement !== null && rootElement === document.activeElement) {\n    const selectionTarget = $isRangeSelection(nextSelection) && nextSelection.anchor.type === 'element' ? nextAnchorNode.childNodes[nextAnchorOffset] || null : domSelection.rangeCount > 0 ? domSelection.getRangeAt(0) : null;\n    if (selectionTarget !== null) {\n      let selectionRect;\n      if (selectionTarget instanceof Text) {\n        const range = document.createRange();\n        range.selectNode(selectionTarget);\n        selectionRect = range.getBoundingClientRect();\n      } else {\n        selectionRect = selectionTarget.getBoundingClientRect();\n      }\n      scrollIntoViewIfNeeded(editor, selectionRect, rootElement);\n    }\n  }\n  markSelectionChangeFromDOMUpdate();\n}\nfunction $insertNodes(nodes) {\n  let selection = $getSelection() || $getPreviousSelection();\n  if (selection === null) {\n    selection = $getRoot().selectEnd();\n  }\n  selection.insertNodes(nodes);\n}\nfunction $getTextContent() {\n  const selection = $getSelection();\n  if (selection === null) {\n    return '';\n  }\n  return selection.getTextContent();\n}\nfunction $removeTextAndSplitBlock(selection) {\n  let selection_ = selection;\n  if (!selection.isCollapsed()) {\n    selection_.removeText();\n  }\n  // A new selection can originate as a result of node replacement, in which case is registered via\n  // $setSelection\n  const newSelection = $getSelection();\n  if ($isRangeSelection(newSelection)) {\n    selection_ = newSelection;\n  }\n  if (!$isRangeSelection(selection_)) {\n    formatDevErrorMessage(`Unexpected dirty selection to be null`);\n  }\n  const anchor = selection_.anchor;\n  let node = anchor.getNode();\n  let offset = anchor.offset;\n  while (!INTERNAL_$isBlock(node)) {\n    const prevNode = node;\n    [node, offset] = $splitNodeAtPoint(node, offset);\n    if (prevNode.is(node)) {\n      break;\n    }\n  }\n  return offset;\n}\nfunction $splitNodeAtPoint(node, offset) {\n  const parent = node.getParent();\n  if (!parent) {\n    const paragraph = $createParagraphNode();\n    $getRoot().append(paragraph);\n    paragraph.select();\n    return [$getRoot(), 0];\n  }\n  if ($isTextNode(node)) {\n    const split = node.splitText(offset);\n    if (split.length === 0) {\n      return [parent, node.getIndexWithinParent()];\n    }\n    const x = offset === 0 ? 0 : 1;\n    const index = split[0].getIndexWithinParent() + x;\n    return [parent, index];\n  }\n  if (!$isElementNode(node) || offset === 0) {\n    return [parent, node.getIndexWithinParent()];\n  }\n  const firstToAppend = node.getChildAtIndex(offset);\n  if (firstToAppend) {\n    const insertPoint = new RangeSelection($createPoint(node.__key, offset, 'element'), $createPoint(node.__key, offset, 'element'), 0, '');\n    const newElement = node.insertNewAfter(insertPoint);\n    if (newElement) {\n      newElement.append(firstToAppend, ...firstToAppend.getNextSiblings());\n    }\n  }\n  return [parent, node.getIndexWithinParent() + 1];\n}\nfunction $wrapInlineNodes(nodes) {\n  // We temporarily insert the topLevelNodes into an arbitrary ElementNode,\n  // since insertAfter does not work on nodes that have no parent (TO-DO: fix that).\n  const virtualRoot = $createParagraphNode();\n  let currentBlock = null;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    const isLineBreakNode = $isLineBreakNode(node);\n    if (isLineBreakNode || $isDecoratorNode(node) && node.isInline() || $isElementNode(node) && node.isInline() || $isTextNode(node) || node.isParentRequired()) {\n      if (currentBlock === null) {\n        currentBlock = node.createParentElementNode();\n        virtualRoot.append(currentBlock);\n        // In the case of LineBreakNode, we just need to\n        // add an empty ParagraphNode to the topLevelBlocks.\n        if (isLineBreakNode) {\n          continue;\n        }\n      }\n      if (currentBlock !== null) {\n        currentBlock.append(node);\n      }\n    } else {\n      virtualRoot.append(node);\n      currentBlock = null;\n    }\n  }\n  return virtualRoot;\n}\n\n/**\n * Get all nodes in a CaretRange in a way that complies with all of the\n * quirks of the original RangeSelection.getNodes().\n *\n * @param range The CaretRange\n */\nfunction $getNodesFromCaretRangeCompat(\n// getNodes returned nodes in document order\nrange) {\n  const nodes = [];\n  const [beforeSlice, afterSlice] = range.getTextSlices();\n  if (beforeSlice) {\n    nodes.push(beforeSlice.caret.origin);\n  }\n  const seenAncestors = new Set();\n  const seenElements = new Set();\n  for (const caret of range) {\n    if ($isChildCaret(caret)) {\n      // Emulate the leading under-selection behavior of getNodes by\n      // ignoring the 'enter' of any ElementNode until we've seen a\n      // SiblingCaret\n      const {\n        origin\n      } = caret;\n      if (nodes.length === 0) {\n        seenAncestors.add(origin);\n      } else {\n        seenElements.add(origin);\n        nodes.push(origin);\n      }\n    } else {\n      const {\n        origin\n      } = caret;\n      if (!$isElementNode(origin) || !seenElements.has(origin)) {\n        nodes.push(origin);\n      }\n    }\n  }\n  if (afterSlice) {\n    nodes.push(afterSlice.caret.origin);\n  }\n  // Emulate the trailing underselection behavior when the last offset of\n  // an element is selected\n  if ($isSiblingCaret(range.focus) && $isElementNode(range.focus.origin) && range.focus.getNodeAtCaret() === null) {\n    for (let reverseCaret = $getChildCaret(range.focus.origin, 'previous'); $isChildCaret(reverseCaret) && seenAncestors.has(reverseCaret.origin) && !reverseCaret.origin.isEmpty() && reverseCaret.origin.is(nodes[nodes.length - 1]); reverseCaret = $getAdjacentChildCaret(reverseCaret)) {\n      seenAncestors.delete(reverseCaret.origin);\n      nodes.pop();\n    }\n  }\n  while (nodes.length > 1) {\n    const lastIncludedNode = nodes[nodes.length - 1];\n    if ($isElementNode(lastIncludedNode)) {\n      if (seenElements.has(lastIncludedNode) || lastIncludedNode.isEmpty() || seenAncestors.has(lastIncludedNode)) ; else {\n        nodes.pop();\n        continue;\n      }\n    }\n    break;\n  }\n  if (nodes.length === 0 && range.isCollapsed()) {\n    // Emulate the collapsed behavior of getNodes by returning the descendant\n    const normCaret = $normalizeCaret(range.anchor);\n    const flippedNormCaret = $normalizeCaret(range.anchor.getFlipped());\n    const $getCandidate = caret => $isTextPointCaret(caret) ? caret.origin : caret.getNodeAtCaret();\n    const node = $getCandidate(normCaret) || $getCandidate(flippedNormCaret) || (range.anchor.getNodeAtCaret() ? normCaret.origin : flippedNormCaret.origin);\n    nodes.push(node);\n  }\n  return nodes;\n}\n\n/**\n * @internal\n *\n * Modify the focus of the focus around possible decorators and blocks and return true\n * if the movement is done.\n */\nfunction $modifySelectionAroundDecoratorsAndBlocks(selection, alter, isBackward, granularity, mode = 'decorators-and-blocks') {\n  if (alter === 'move' && granularity === 'character' && !selection.isCollapsed()) {\n    // moving left or right when the selection isn't collapsed will\n    // just set the anchor to the focus or vice versa depending on\n    // direction\n    const [src, dst] = isBackward === selection.isBackward() ? [selection.focus, selection.anchor] : [selection.anchor, selection.focus];\n    dst.set(src.key, src.offset, src.type);\n    return true;\n  }\n  const initialFocus = $caretFromPoint(selection.focus, isBackward ? 'previous' : 'next');\n  const isLineBoundary = granularity === 'lineboundary';\n  const collapse = alter === 'move';\n  let focus = initialFocus;\n  let checkForBlock = mode === 'decorators-and-blocks';\n  if (!$isExtendableTextPointCaret(focus)) {\n    for (const siblingCaret of focus) {\n      checkForBlock = false;\n      const {\n        origin\n      } = siblingCaret;\n      if ($isDecoratorNode(origin) && !origin.isIsolated()) {\n        focus = siblingCaret;\n        if (isLineBoundary && origin.isInline()) {\n          continue;\n        }\n      }\n      break;\n    }\n    if (checkForBlock) {\n      for (const nextCaret of $extendCaretToRange(initialFocus).iterNodeCarets(alter === 'extend' ? 'shadowRoot' : 'root')) {\n        if ($isChildCaret(nextCaret)) {\n          if (!nextCaret.origin.isInline()) {\n            focus = nextCaret;\n          }\n        } else if ($isElementNode(nextCaret.origin)) {\n          continue;\n        } else if ($isDecoratorNode(nextCaret.origin) && !nextCaret.origin.isInline()) {\n          focus = nextCaret;\n        }\n        break;\n      }\n    }\n  }\n  if (focus === initialFocus) {\n    return false;\n  }\n  // After this point checkForBlock is true if and only if we moved to a\n  // different block, so we should stop regardless of the granularity\n  if (collapse && !isLineBoundary && $isDecoratorNode(focus.origin) && focus.origin.isKeyboardSelectable()) {\n    // Make it possible to move selection from range selection to\n    // node selection on the node.\n    const nodeSelection = $createNodeSelection();\n    nodeSelection.add(focus.origin.getKey());\n    $setSelection(nodeSelection);\n    return true;\n  }\n  focus = $normalizeCaret(focus);\n  if (collapse) {\n    $setPointFromCaret(selection.anchor, focus);\n  }\n  $setPointFromCaret(selection.focus, focus);\n  return checkForBlock || !isLineBoundary;\n}\n\nlet activeEditorState = null;\nlet activeEditor = null;\nlet isReadOnlyMode = false;\nlet isAttemptingToRecoverFromReconcilerError = false;\nlet infiniteTransformCount = 0;\nconst observerOptions = {\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nfunction isCurrentlyReadOnlyMode() {\n  return isReadOnlyMode || activeEditorState !== null && activeEditorState._readOnly;\n}\nfunction errorOnReadOnly() {\n  if (isReadOnlyMode) {\n    {\n      formatDevErrorMessage(`Cannot use method in read-only mode.`);\n    }\n  }\n}\nfunction errorOnInfiniteTransforms() {\n  if (infiniteTransformCount > 99) {\n    {\n      formatDevErrorMessage(`One or more transforms are endlessly triggering additional transforms. May have encountered infinite recursion caused by transforms that have their preconditions too lose and/or conflict with each other.`);\n    }\n  }\n}\nfunction getActiveEditorState() {\n  if (activeEditorState === null) {\n    {\n      formatDevErrorMessage(`Unable to find an active editor state. State helpers or node methods can only be used synchronously during the callback of editor.update(), editor.read(), or editorState.read().${collectBuildInformation()}`);\n    }\n  }\n  return activeEditorState;\n}\nfunction getActiveEditor() {\n  if (activeEditor === null) {\n    {\n      formatDevErrorMessage(`Unable to find an active editor. This method can only be used synchronously during the callback of editor.update() or editor.read().${collectBuildInformation()}`);\n    }\n  }\n  return activeEditor;\n}\nfunction collectBuildInformation() {\n  let compatibleEditors = 0;\n  const incompatibleEditors = new Set();\n  const thisVersion = LexicalEditor.version;\n  if (typeof window !== 'undefined') {\n    for (const node of document.querySelectorAll('[contenteditable]')) {\n      const editor = getEditorPropertyFromDOMNode(node);\n      if (isLexicalEditor(editor)) {\n        compatibleEditors++;\n      } else if (editor) {\n        let version = String(editor.constructor.version || '<0.17.1');\n        if (version === thisVersion) {\n          version += ' (separately built, likely a bundler configuration issue)';\n        }\n        incompatibleEditors.add(version);\n      }\n    }\n  }\n  let output = ` Detected on the page: ${compatibleEditors} compatible editor(s) with version ${thisVersion}`;\n  if (incompatibleEditors.size) {\n    output += ` and incompatible editors with versions ${Array.from(incompatibleEditors).join(', ')}`;\n  }\n  return output;\n}\nfunction internalGetActiveEditor() {\n  return activeEditor;\n}\nfunction internalGetActiveEditorState() {\n  return activeEditorState;\n}\nfunction $applyTransforms(editor, node, transformsCache) {\n  const type = node.__type;\n  const registeredNode = getRegisteredNodeOrThrow(editor, type);\n  let transformsArr = transformsCache.get(type);\n  if (transformsArr === undefined) {\n    transformsArr = Array.from(registeredNode.transforms);\n    transformsCache.set(type, transformsArr);\n  }\n  const transformsArrLength = transformsArr.length;\n  for (let i = 0; i < transformsArrLength; i++) {\n    transformsArr[i](node);\n    if (!node.isAttached()) {\n      break;\n    }\n  }\n}\nfunction $isNodeValidForTransform(node, compositionKey) {\n  return node !== undefined &&\n  // We don't want to transform nodes being composed\n  node.__key !== compositionKey && node.isAttached();\n}\nfunction $normalizeAllDirtyTextNodes(editorState, editor) {\n  const dirtyLeaves = editor._dirtyLeaves;\n  const nodeMap = editorState._nodeMap;\n  for (const nodeKey of dirtyLeaves) {\n    const node = nodeMap.get(nodeKey);\n    if ($isTextNode(node) && node.isAttached() && node.isSimpleText() && !node.isUnmergeable()) {\n      $normalizeTextNode(node);\n    }\n  }\n}\nfunction addTags(editor, tags) {\n  if (!tags) {\n    return;\n  }\n  const updateTags = editor._updateTags;\n  let tags_ = tags;\n  if (!Array.isArray(tags)) {\n    tags_ = [tags];\n  }\n  for (const tag of tags_) {\n    updateTags.add(tag);\n  }\n}\n\n/**\n * Transform heuristic:\n * 1. We transform leaves first. If transforms generate additional dirty nodes we repeat step 1.\n * The reasoning behind this is that marking a leaf as dirty marks all its parent elements as dirty too.\n * 2. We transform elements. If element transforms generate additional dirty nodes we repeat step 1.\n * If element transforms only generate additional dirty elements we only repeat step 2.\n *\n * Note that to keep track of newly dirty nodes and subtrees we leverage the editor._dirtyNodes and\n * editor._subtrees which we reset in every loop.\n */\nfunction $applyAllTransforms(editorState, editor) {\n  const dirtyLeaves = editor._dirtyLeaves;\n  const dirtyElements = editor._dirtyElements;\n  const nodeMap = editorState._nodeMap;\n  const compositionKey = $getCompositionKey();\n  const transformsCache = new Map();\n  let untransformedDirtyLeaves = dirtyLeaves;\n  let untransformedDirtyLeavesLength = untransformedDirtyLeaves.size;\n  let untransformedDirtyElements = dirtyElements;\n  let untransformedDirtyElementsLength = untransformedDirtyElements.size;\n  while (untransformedDirtyLeavesLength > 0 || untransformedDirtyElementsLength > 0) {\n    if (untransformedDirtyLeavesLength > 0) {\n      // We leverage editor._dirtyLeaves to track the new dirty leaves after the transforms\n      editor._dirtyLeaves = new Set();\n      for (const nodeKey of untransformedDirtyLeaves) {\n        const node = nodeMap.get(nodeKey);\n        if ($isTextNode(node) && node.isAttached() && node.isSimpleText() && !node.isUnmergeable()) {\n          $normalizeTextNode(node);\n        }\n        if (node !== undefined && $isNodeValidForTransform(node, compositionKey)) {\n          $applyTransforms(editor, node, transformsCache);\n        }\n        dirtyLeaves.add(nodeKey);\n      }\n      untransformedDirtyLeaves = editor._dirtyLeaves;\n      untransformedDirtyLeavesLength = untransformedDirtyLeaves.size;\n\n      // We want to prioritize node transforms over element transforms\n      if (untransformedDirtyLeavesLength > 0) {\n        infiniteTransformCount++;\n        continue;\n      }\n    }\n\n    // All dirty leaves have been processed. Let's do elements!\n    // We have previously processed dirty leaves, so let's restart the editor leaves Set to track\n    // new ones caused by element transforms\n    editor._dirtyLeaves = new Set();\n    editor._dirtyElements = new Map();\n    for (const currentUntransformedDirtyElement of untransformedDirtyElements) {\n      const nodeKey = currentUntransformedDirtyElement[0];\n      const intentionallyMarkedAsDirty = currentUntransformedDirtyElement[1];\n      if (nodeKey !== 'root' && !intentionallyMarkedAsDirty) {\n        continue;\n      }\n      const node = nodeMap.get(nodeKey);\n      if (node !== undefined && $isNodeValidForTransform(node, compositionKey)) {\n        $applyTransforms(editor, node, transformsCache);\n      }\n      dirtyElements.set(nodeKey, intentionallyMarkedAsDirty);\n    }\n    untransformedDirtyLeaves = editor._dirtyLeaves;\n    untransformedDirtyLeavesLength = untransformedDirtyLeaves.size;\n    untransformedDirtyElements = editor._dirtyElements;\n    untransformedDirtyElementsLength = untransformedDirtyElements.size;\n    infiniteTransformCount++;\n  }\n  editor._dirtyLeaves = dirtyLeaves;\n  editor._dirtyElements = dirtyElements;\n}\nfunction $parseSerializedNode(serializedNode) {\n  const internalSerializedNode = serializedNode;\n  return $parseSerializedNodeImpl(internalSerializedNode, getActiveEditor()._nodes);\n}\nfunction $parseSerializedNodeImpl(serializedNode, registeredNodes) {\n  const type = serializedNode.type;\n  const registeredNode = registeredNodes.get(type);\n  if (registeredNode === undefined) {\n    {\n      formatDevErrorMessage(`parseEditorState: type \"${type}\" + not found`);\n    }\n  }\n  const nodeClass = registeredNode.klass;\n  if (serializedNode.type !== nodeClass.getType()) {\n    {\n      formatDevErrorMessage(`LexicalNode: Node ${nodeClass.name} does not implement .importJSON().`);\n    }\n  }\n  const node = nodeClass.importJSON(serializedNode);\n  const children = serializedNode.children;\n  if ($isElementNode(node) && Array.isArray(children)) {\n    for (let i = 0; i < children.length; i++) {\n      const serializedJSONChildNode = children[i];\n      const childNode = $parseSerializedNodeImpl(serializedJSONChildNode, registeredNodes);\n      node.append(childNode);\n    }\n  }\n  return node;\n}\nfunction parseEditorState(serializedEditorState, editor, updateFn) {\n  const editorState = createEmptyEditorState();\n  const previousActiveEditorState = activeEditorState;\n  const previousReadOnlyMode = isReadOnlyMode;\n  const previousActiveEditor = activeEditor;\n  const previousDirtyElements = editor._dirtyElements;\n  const previousDirtyLeaves = editor._dirtyLeaves;\n  const previousCloneNotNeeded = editor._cloneNotNeeded;\n  const previousDirtyType = editor._dirtyType;\n  editor._dirtyElements = new Map();\n  editor._dirtyLeaves = new Set();\n  editor._cloneNotNeeded = new Set();\n  editor._dirtyType = 0;\n  activeEditorState = editorState;\n  isReadOnlyMode = false;\n  activeEditor = editor;\n  try {\n    const registeredNodes = editor._nodes;\n    const serializedNode = serializedEditorState.root;\n    $parseSerializedNodeImpl(serializedNode, registeredNodes);\n    if (updateFn) {\n      updateFn();\n    }\n\n    // Make the editorState immutable\n    editorState._readOnly = true;\n    {\n      handleDEVOnlyPendingUpdateGuarantees(editorState);\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      editor._onError(error);\n    }\n  } finally {\n    editor._dirtyElements = previousDirtyElements;\n    editor._dirtyLeaves = previousDirtyLeaves;\n    editor._cloneNotNeeded = previousCloneNotNeeded;\n    editor._dirtyType = previousDirtyType;\n    activeEditorState = previousActiveEditorState;\n    isReadOnlyMode = previousReadOnlyMode;\n    activeEditor = previousActiveEditor;\n  }\n  return editorState;\n}\n\n// This technically isn't an update but given we need\n// exposure to the module's active bindings, we have this\n// function here\n\nfunction readEditorState(editor, editorState, callbackFn) {\n  const previousActiveEditorState = activeEditorState;\n  const previousReadOnlyMode = isReadOnlyMode;\n  const previousActiveEditor = activeEditor;\n  activeEditorState = editorState;\n  isReadOnlyMode = true;\n  activeEditor = editor;\n  try {\n    return callbackFn();\n  } finally {\n    activeEditorState = previousActiveEditorState;\n    isReadOnlyMode = previousReadOnlyMode;\n    activeEditor = previousActiveEditor;\n  }\n}\nfunction handleDEVOnlyPendingUpdateGuarantees(pendingEditorState) {\n  // Given we can't Object.freeze the nodeMap as it's a Map,\n  // we instead replace its set, clear and delete methods.\n  const nodeMap = pendingEditorState._nodeMap;\n  nodeMap.set = () => {\n    throw new Error('Cannot call set() on a frozen Lexical node map');\n  };\n  nodeMap.clear = () => {\n    throw new Error('Cannot call clear() on a frozen Lexical node map');\n  };\n  nodeMap.delete = () => {\n    throw new Error('Cannot call delete() on a frozen Lexical node map');\n  };\n}\nfunction $commitPendingUpdates(editor, recoveryEditorState) {\n  const pendingEditorState = editor._pendingEditorState;\n  const rootElement = editor._rootElement;\n  const shouldSkipDOM = editor._headless || rootElement === null;\n  if (pendingEditorState === null) {\n    return;\n  }\n\n  // ======\n  // Reconciliation has started.\n  // ======\n\n  const currentEditorState = editor._editorState;\n  const currentSelection = currentEditorState._selection;\n  const pendingSelection = pendingEditorState._selection;\n  const needsUpdate = editor._dirtyType !== NO_DIRTY_NODES;\n  const previousActiveEditorState = activeEditorState;\n  const previousReadOnlyMode = isReadOnlyMode;\n  const previousActiveEditor = activeEditor;\n  const previouslyUpdating = editor._updating;\n  const observer = editor._observer;\n  let mutatedNodes = null;\n  editor._pendingEditorState = null;\n  editor._editorState = pendingEditorState;\n  if (!shouldSkipDOM && needsUpdate && observer !== null) {\n    activeEditor = editor;\n    activeEditorState = pendingEditorState;\n    isReadOnlyMode = false;\n    // We don't want updates to sync block the reconciliation.\n    editor._updating = true;\n    try {\n      const dirtyType = editor._dirtyType;\n      const dirtyElements = editor._dirtyElements;\n      const dirtyLeaves = editor._dirtyLeaves;\n      observer.disconnect();\n      mutatedNodes = $reconcileRoot(currentEditorState, pendingEditorState, editor, dirtyType, dirtyElements, dirtyLeaves);\n    } catch (error) {\n      // Report errors\n      if (error instanceof Error) {\n        editor._onError(error);\n      }\n\n      // Reset editor and restore incoming editor state to the DOM\n      if (!isAttemptingToRecoverFromReconcilerError) {\n        resetEditor(editor, null, rootElement, pendingEditorState);\n        initMutationObserver(editor);\n        editor._dirtyType = FULL_RECONCILE;\n        isAttemptingToRecoverFromReconcilerError = true;\n        $commitPendingUpdates(editor, currentEditorState);\n        isAttemptingToRecoverFromReconcilerError = false;\n      } else {\n        // To avoid a possible situation of infinite loops, lets throw\n        throw error;\n      }\n      return;\n    } finally {\n      observer.observe(rootElement, observerOptions);\n      editor._updating = previouslyUpdating;\n      activeEditorState = previousActiveEditorState;\n      isReadOnlyMode = previousReadOnlyMode;\n      activeEditor = previousActiveEditor;\n    }\n  }\n  if (!pendingEditorState._readOnly) {\n    pendingEditorState._readOnly = true;\n    {\n      handleDEVOnlyPendingUpdateGuarantees(pendingEditorState);\n      if ($isRangeSelection(pendingSelection)) {\n        Object.freeze(pendingSelection.anchor);\n        Object.freeze(pendingSelection.focus);\n      }\n      Object.freeze(pendingSelection);\n    }\n  }\n  const dirtyLeaves = editor._dirtyLeaves;\n  const dirtyElements = editor._dirtyElements;\n  const normalizedNodes = editor._normalizedNodes;\n  const tags = editor._updateTags;\n  const deferred = editor._deferred;\n  if (needsUpdate) {\n    editor._dirtyType = NO_DIRTY_NODES;\n    editor._cloneNotNeeded.clear();\n    editor._dirtyLeaves = new Set();\n    editor._dirtyElements = new Map();\n    editor._normalizedNodes = new Set();\n    editor._updateTags = new Set();\n  }\n  $garbageCollectDetachedDecorators(editor, pendingEditorState);\n\n  // ======\n  // Reconciliation has finished. Now update selection and trigger listeners.\n  // ======\n\n  const domSelection = shouldSkipDOM ? null : getDOMSelection(getWindow(editor));\n\n  // Attempt to update the DOM selection, including focusing of the root element,\n  // and scroll into view if needed.\n  if (editor._editable &&\n  // domSelection will be null in headless\n  domSelection !== null && (needsUpdate || pendingSelection === null || pendingSelection.dirty) && rootElement !== null && !tags.has('skip-dom-selection')) {\n    activeEditor = editor;\n    activeEditorState = pendingEditorState;\n    try {\n      if (observer !== null) {\n        observer.disconnect();\n      }\n      if (needsUpdate || pendingSelection === null || pendingSelection.dirty) {\n        const blockCursorElement = editor._blockCursorElement;\n        if (blockCursorElement !== null) {\n          removeDOMBlockCursorElement(blockCursorElement, editor, rootElement);\n        }\n        updateDOMSelection(currentSelection, pendingSelection, editor, domSelection, tags, rootElement);\n      }\n      updateDOMBlockCursorElement(editor, rootElement, pendingSelection);\n    } finally {\n      if (observer !== null) {\n        observer.observe(rootElement, observerOptions);\n      }\n      activeEditor = previousActiveEditor;\n      activeEditorState = previousActiveEditorState;\n    }\n  }\n  if (mutatedNodes !== null) {\n    triggerMutationListeners(editor, mutatedNodes, tags, dirtyLeaves, currentEditorState);\n  }\n  if (!$isRangeSelection(pendingSelection) && pendingSelection !== null && (currentSelection === null || !currentSelection.is(pendingSelection))) {\n    editor.dispatchCommand(SELECTION_CHANGE_COMMAND, undefined);\n  }\n  /**\n   * Capture pendingDecorators after garbage collecting detached decorators\n   */\n  const pendingDecorators = editor._pendingDecorators;\n  if (pendingDecorators !== null) {\n    editor._decorators = pendingDecorators;\n    editor._pendingDecorators = null;\n    triggerListeners('decorator', editor, true, pendingDecorators);\n  }\n\n  // If reconciler fails, we reset whole editor (so current editor state becomes empty)\n  // and attempt to re-render pendingEditorState. If that goes through we trigger\n  // listeners, but instead use recoverEditorState which is current editor state before reset\n  // This specifically important for collab that relies on prevEditorState from update\n  // listener to calculate delta of changed nodes/properties\n  triggerTextContentListeners(editor, recoveryEditorState || currentEditorState, pendingEditorState);\n  triggerListeners('update', editor, true, {\n    dirtyElements,\n    dirtyLeaves,\n    editorState: pendingEditorState,\n    normalizedNodes,\n    prevEditorState: recoveryEditorState || currentEditorState,\n    tags\n  });\n  triggerDeferredUpdateCallbacks(editor, deferred);\n  $triggerEnqueuedUpdates(editor);\n}\nfunction triggerTextContentListeners(editor, currentEditorState, pendingEditorState) {\n  const currentTextContent = getEditorStateTextContent(currentEditorState);\n  const latestTextContent = getEditorStateTextContent(pendingEditorState);\n  if (currentTextContent !== latestTextContent) {\n    triggerListeners('textcontent', editor, true, latestTextContent);\n  }\n}\nfunction triggerMutationListeners(editor, mutatedNodes, updateTags, dirtyLeaves, prevEditorState) {\n  const listeners = Array.from(editor._listeners.mutation);\n  const listenersLength = listeners.length;\n  for (let i = 0; i < listenersLength; i++) {\n    const [listener, klass] = listeners[i];\n    const mutatedNodesByType = mutatedNodes.get(klass);\n    if (mutatedNodesByType !== undefined) {\n      listener(mutatedNodesByType, {\n        dirtyLeaves,\n        prevEditorState,\n        updateTags\n      });\n    }\n  }\n}\nfunction triggerListeners(type, editor, isCurrentlyEnqueuingUpdates, ...payload) {\n  const previouslyUpdating = editor._updating;\n  editor._updating = isCurrentlyEnqueuingUpdates;\n  try {\n    const listeners = Array.from(editor._listeners[type]);\n    for (let i = 0; i < listeners.length; i++) {\n      // @ts-ignore\n      listeners[i].apply(null, payload);\n    }\n  } finally {\n    editor._updating = previouslyUpdating;\n  }\n}\nfunction triggerCommandListeners(editor, type, payload) {\n  if (editor._updating === false || activeEditor !== editor) {\n    let returnVal = false;\n    editor.update(() => {\n      returnVal = triggerCommandListeners(editor, type, payload);\n    });\n    return returnVal;\n  }\n  const editors = getEditorsToPropagate(editor);\n  for (let i = 4; i >= 0; i--) {\n    for (let e = 0; e < editors.length; e++) {\n      const currentEditor = editors[e];\n      const commandListeners = currentEditor._commands;\n      const listenerInPriorityOrder = commandListeners.get(type);\n      if (listenerInPriorityOrder !== undefined) {\n        const listenersSet = listenerInPriorityOrder[i];\n        if (listenersSet !== undefined) {\n          const listeners = Array.from(listenersSet);\n          const listenersLength = listeners.length;\n          for (let j = 0; j < listenersLength; j++) {\n            if (listeners[j](payload, editor) === true) {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  }\n  return false;\n}\nfunction $triggerEnqueuedUpdates(editor) {\n  const queuedUpdates = editor._updates;\n  if (queuedUpdates.length !== 0) {\n    const queuedUpdate = queuedUpdates.shift();\n    if (queuedUpdate) {\n      const [updateFn, options] = queuedUpdate;\n      $beginUpdate(editor, updateFn, options);\n    }\n  }\n}\nfunction triggerDeferredUpdateCallbacks(editor, deferred) {\n  editor._deferred = [];\n  if (deferred.length !== 0) {\n    const previouslyUpdating = editor._updating;\n    editor._updating = true;\n    try {\n      for (let i = 0; i < deferred.length; i++) {\n        deferred[i]();\n      }\n    } finally {\n      editor._updating = previouslyUpdating;\n    }\n  }\n}\nfunction processNestedUpdates(editor, initialSkipTransforms) {\n  const queuedUpdates = editor._updates;\n  let skipTransforms = initialSkipTransforms || false;\n\n  // Updates might grow as we process them, we so we'll need\n  // to handle each update as we go until the updates array is\n  // empty.\n  while (queuedUpdates.length !== 0) {\n    const queuedUpdate = queuedUpdates.shift();\n    if (queuedUpdate) {\n      const [nextUpdateFn, options] = queuedUpdate;\n      let onUpdate;\n      if (options !== undefined) {\n        onUpdate = options.onUpdate;\n        if (options.skipTransforms) {\n          skipTransforms = true;\n        }\n        if (options.discrete) {\n          const pendingEditorState = editor._pendingEditorState;\n          if (!(pendingEditorState !== null)) {\n            formatDevErrorMessage(`Unexpected empty pending editor state on discrete nested update`);\n          }\n          pendingEditorState._flushSync = true;\n        }\n        if (onUpdate) {\n          editor._deferred.push(onUpdate);\n        }\n        addTags(editor, options.tag);\n      }\n      nextUpdateFn();\n    }\n  }\n  return skipTransforms;\n}\nfunction $beginUpdate(editor, updateFn, options) {\n  const updateTags = editor._updateTags;\n  let onUpdate;\n  let skipTransforms = false;\n  let discrete = false;\n  if (options !== undefined) {\n    onUpdate = options.onUpdate;\n    addTags(editor, options.tag);\n    skipTransforms = options.skipTransforms || false;\n    discrete = options.discrete || false;\n  }\n  if (onUpdate) {\n    editor._deferred.push(onUpdate);\n  }\n  const currentEditorState = editor._editorState;\n  let pendingEditorState = editor._pendingEditorState;\n  let editorStateWasCloned = false;\n  if (pendingEditorState === null || pendingEditorState._readOnly) {\n    pendingEditorState = editor._pendingEditorState = cloneEditorState(pendingEditorState || currentEditorState);\n    editorStateWasCloned = true;\n  }\n  pendingEditorState._flushSync = discrete;\n  const previousActiveEditorState = activeEditorState;\n  const previousReadOnlyMode = isReadOnlyMode;\n  const previousActiveEditor = activeEditor;\n  const previouslyUpdating = editor._updating;\n  activeEditorState = pendingEditorState;\n  isReadOnlyMode = false;\n  editor._updating = true;\n  activeEditor = editor;\n  const headless = editor._headless || editor.getRootElement() === null;\n  try {\n    if (editorStateWasCloned) {\n      if (headless) {\n        if (currentEditorState._selection !== null) {\n          pendingEditorState._selection = currentEditorState._selection.clone();\n        }\n      } else {\n        pendingEditorState._selection = $internalCreateSelection(editor, options && options.event || null);\n      }\n    }\n    const startingCompositionKey = editor._compositionKey;\n    updateFn();\n    skipTransforms = processNestedUpdates(editor, skipTransforms);\n    applySelectionTransforms(pendingEditorState, editor);\n    if (editor._dirtyType !== NO_DIRTY_NODES) {\n      if (skipTransforms) {\n        $normalizeAllDirtyTextNodes(pendingEditorState, editor);\n      } else {\n        $applyAllTransforms(pendingEditorState, editor);\n      }\n      processNestedUpdates(editor);\n      $garbageCollectDetachedNodes(currentEditorState, pendingEditorState, editor._dirtyLeaves, editor._dirtyElements);\n    }\n    const endingCompositionKey = editor._compositionKey;\n    if (startingCompositionKey !== endingCompositionKey) {\n      pendingEditorState._flushSync = true;\n    }\n    const pendingSelection = pendingEditorState._selection;\n    if ($isRangeSelection(pendingSelection)) {\n      const pendingNodeMap = pendingEditorState._nodeMap;\n      const anchorKey = pendingSelection.anchor.key;\n      const focusKey = pendingSelection.focus.key;\n      if (pendingNodeMap.get(anchorKey) === undefined || pendingNodeMap.get(focusKey) === undefined) {\n        {\n          formatDevErrorMessage(`updateEditor: selection has been lost because the previously selected nodes have been removed and selection wasn't moved to another node. Ensure selection changes after removing/replacing a selected node.`);\n        }\n      }\n    } else if ($isNodeSelection(pendingSelection)) {\n      // TODO: we should also validate node selection?\n      if (pendingSelection._nodes.size === 0) {\n        pendingEditorState._selection = null;\n      }\n    }\n  } catch (error) {\n    // Report errors\n    if (error instanceof Error) {\n      editor._onError(error);\n    }\n\n    // Restore existing editor state to the DOM\n    editor._pendingEditorState = currentEditorState;\n    editor._dirtyType = FULL_RECONCILE;\n    editor._cloneNotNeeded.clear();\n    editor._dirtyLeaves = new Set();\n    editor._dirtyElements.clear();\n    $commitPendingUpdates(editor);\n    return;\n  } finally {\n    activeEditorState = previousActiveEditorState;\n    isReadOnlyMode = previousReadOnlyMode;\n    activeEditor = previousActiveEditor;\n    editor._updating = previouslyUpdating;\n    infiniteTransformCount = 0;\n  }\n  const shouldUpdate = editor._dirtyType !== NO_DIRTY_NODES || editor._deferred.length > 0 || editorStateHasDirtySelection(pendingEditorState, editor);\n  if (shouldUpdate) {\n    if (pendingEditorState._flushSync) {\n      pendingEditorState._flushSync = false;\n      $commitPendingUpdates(editor);\n    } else if (editorStateWasCloned) {\n      scheduleMicroTask(() => {\n        $commitPendingUpdates(editor);\n      });\n    }\n  } else {\n    pendingEditorState._flushSync = false;\n    if (editorStateWasCloned) {\n      updateTags.clear();\n      editor._deferred = [];\n      editor._pendingEditorState = null;\n    }\n  }\n}\n\n/**\n * A variant of updateEditor that will not defer if it is nested in an update\n * to the same editor, much like if it was an editor.dispatchCommand issued\n * within an update\n */\nfunction updateEditorSync(editor, updateFn, options) {\n  if (!editor._updating) {\n    $beginUpdate(editor, updateFn, options);\n  } else if (activeEditor === editor) {\n    updateFn();\n  } else {\n    editor._updates.push([updateFn, options]);\n  }\n}\nfunction updateEditor(editor, updateFn, options) {\n  if (editor._updating) {\n    editor._updates.push([updateFn, options]);\n  } else {\n    $beginUpdate(editor, updateFn, options);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\n\n/**\n * A utility class for managing the DOM children of an ElementNode\n */\nclass ElementDOMSlot {\n  constructor(/** The element returned by createDOM */\n  element, /** All managed children will be inserted before this node, if defined */\n  before, /** All managed children will be inserted after this node, if defined */\n  after) {\n    this.element = element;\n    this.before = before || null;\n    this.after = after || null;\n  }\n  /**\n   * Return a new ElementDOMSlot where all managed children will be inserted before this node\n   */\n  withBefore(before) {\n    return new ElementDOMSlot(this.element, before, this.after);\n  }\n  /**\n   * Return a new ElementDOMSlot where all managed children will be inserted after this node\n   */\n  withAfter(after) {\n    return new ElementDOMSlot(this.element, this.before, after);\n  }\n  /**\n   * Return a new ElementDOMSlot with an updated root element\n   */\n  withElement(element) {\n    return new ElementDOMSlot(element, this.before, this.after);\n  }\n  /**\n   * Insert the given child before this.before and any reconciler managed line break node,\n   * or append it if this.before is not defined\n   */\n  insertChild(dom) {\n    const before = this.before || this.getManagedLineBreak();\n    if (!(before === null || before.parentElement === this.element)) {\n      formatDevErrorMessage(`ElementDOMSlot.insertChild: before is not in element`);\n    }\n    this.element.insertBefore(dom, before);\n    return this;\n  }\n  /**\n   * Remove the managed child from this container, will throw if it was not already there\n   */\n  removeChild(dom) {\n    if (!(dom.parentElement === this.element)) {\n      formatDevErrorMessage(`ElementDOMSlot.removeChild: dom is not in element`);\n    }\n    this.element.removeChild(dom);\n    return this;\n  }\n  /**\n   * Replace managed child prevDom with dom. Will throw if prevDom is not a child\n   *\n   * @param dom The new node to replace prevDom\n   * @param prevDom the node that will be replaced\n   */\n  replaceChild(dom, prevDom) {\n    if (!(prevDom.parentElement === this.element)) {\n      formatDevErrorMessage(`ElementDOMSlot.replaceChild: prevDom is not in element`);\n    }\n    this.element.replaceChild(dom, prevDom);\n    return this;\n  }\n  /**\n   * Returns the first managed child of this node,\n   * which will either be this.after.nextSibling or this.element.firstChild,\n   * and will never be this.before if it is defined.\n   */\n  getFirstChild() {\n    const firstChild = this.after ? this.after.nextSibling : this.element.firstChild;\n    return firstChild === this.before || firstChild === this.getManagedLineBreak() ? null : firstChild;\n  }\n  /**\n   * @internal\n   */\n  getManagedLineBreak() {\n    const element = this.element;\n    return element.__lexicalLineBreak || null;\n  }\n  /** @internal */\n  setManagedLineBreak(lineBreakType) {\n    if (lineBreakType === null) {\n      this.removeManagedLineBreak();\n    } else {\n      const webkitHack = lineBreakType === 'decorator' && (IS_IOS || IS_SAFARI);\n      this.insertManagedLineBreak(webkitHack);\n    }\n  }\n\n  /** @internal */\n  removeManagedLineBreak() {\n    const br = this.getManagedLineBreak();\n    if (br) {\n      const element = this.element;\n      const sibling = br.nodeName === 'IMG' ? br.nextSibling : null;\n      if (sibling) {\n        element.removeChild(sibling);\n      }\n      element.removeChild(br);\n      element.__lexicalLineBreak = undefined;\n    }\n  }\n  /** @internal */\n  insertManagedLineBreak(webkitHack) {\n    const prevBreak = this.getManagedLineBreak();\n    if (prevBreak) {\n      if (webkitHack === (prevBreak.nodeName === 'IMG')) {\n        return;\n      }\n      this.removeManagedLineBreak();\n    }\n    const element = this.element;\n    const before = this.before;\n    const br = document.createElement('br');\n    element.insertBefore(br, before);\n    if (webkitHack) {\n      const img = document.createElement('img');\n      img.setAttribute('data-lexical-linebreak', 'true');\n      img.style.cssText = 'display: inline !important; border: 0px !important; margin: 0px !important;';\n      img.alt = '';\n      element.insertBefore(img, br);\n      element.__lexicalLineBreak = img;\n    } else {\n      element.__lexicalLineBreak = br;\n    }\n  }\n\n  /**\n   * @internal\n   *\n   * Returns the offset of the first child\n   */\n  getFirstChildOffset() {\n    let i = 0;\n    for (let node = this.after; node !== null; node = node.previousSibling) {\n      i++;\n    }\n    return i;\n  }\n\n  /**\n   * @internal\n   */\n  resolveChildIndex(element, elementDOM, initialDOM, initialOffset) {\n    if (initialDOM === this.element) {\n      const firstChildOffset = this.getFirstChildOffset();\n      return [element, Math.min(firstChildOffset + element.getChildrenSize(), Math.max(firstChildOffset, initialOffset))];\n    }\n    // The resolved offset must be before or after the children\n    const initialPath = indexPath(elementDOM, initialDOM);\n    initialPath.push(initialOffset);\n    const elementPath = indexPath(elementDOM, this.element);\n    let offset = element.getIndexWithinParent();\n    for (let i = 0; i < elementPath.length; i++) {\n      const target = initialPath[i];\n      const source = elementPath[i];\n      if (target === undefined || target < source) {\n        break;\n      } else if (target > source) {\n        offset += 1;\n        break;\n      }\n    }\n    return [element.getParentOrThrow(), offset];\n  }\n}\nfunction indexPath(root, child) {\n  const path = [];\n  let node = child;\n  for (; node !== root && node !== null; node = child.parentNode) {\n    let i = 0;\n    for (let sibling = node.previousSibling; sibling !== null; sibling = sibling.previousSibling) {\n      i++;\n    }\n    path.push(i);\n  }\n  if (!(node === root)) {\n    formatDevErrorMessage(`indexPath: root is not a parent of child`);\n  }\n  return path.reverse();\n}\n\n/** @noInheritDoc */\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nclass ElementNode extends LexicalNode {\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  constructor(key) {\n    super(key);\n    this.__first = null;\n    this.__last = null;\n    this.__size = 0;\n    this.__format = 0;\n    this.__style = '';\n    this.__indent = 0;\n    this.__dir = null;\n    this.__textFormat = 0;\n    this.__textStyle = '';\n  }\n  afterCloneFrom(prevNode) {\n    super.afterCloneFrom(prevNode);\n    this.__first = prevNode.__first;\n    this.__last = prevNode.__last;\n    this.__size = prevNode.__size;\n    this.__indent = prevNode.__indent;\n    this.__format = prevNode.__format;\n    this.__style = prevNode.__style;\n    this.__dir = prevNode.__dir;\n    this.__textFormat = prevNode.__textFormat;\n    this.__textStyle = prevNode.__textStyle;\n  }\n  getFormat() {\n    const self = this.getLatest();\n    return self.__format;\n  }\n  getFormatType() {\n    const format = this.getFormat();\n    return ELEMENT_FORMAT_TO_TYPE[format] || '';\n  }\n  getStyle() {\n    const self = this.getLatest();\n    return self.__style;\n  }\n  getIndent() {\n    const self = this.getLatest();\n    return self.__indent;\n  }\n  getChildren() {\n    const children = [];\n    let child = this.getFirstChild();\n    while (child !== null) {\n      children.push(child);\n      child = child.getNextSibling();\n    }\n    return children;\n  }\n  getChildrenKeys() {\n    const children = [];\n    let child = this.getFirstChild();\n    while (child !== null) {\n      children.push(child.__key);\n      child = child.getNextSibling();\n    }\n    return children;\n  }\n  getChildrenSize() {\n    const self = this.getLatest();\n    return self.__size;\n  }\n  isEmpty() {\n    return this.getChildrenSize() === 0;\n  }\n  isDirty() {\n    const editor = getActiveEditor();\n    const dirtyElements = editor._dirtyElements;\n    return dirtyElements !== null && dirtyElements.has(this.__key);\n  }\n  isLastChild() {\n    const self = this.getLatest();\n    const parentLastChild = this.getParentOrThrow().getLastChild();\n    return parentLastChild !== null && parentLastChild.is(self);\n  }\n  getAllTextNodes() {\n    const textNodes = [];\n    let child = this.getFirstChild();\n    while (child !== null) {\n      if ($isTextNode(child)) {\n        textNodes.push(child);\n      }\n      if ($isElementNode(child)) {\n        const subChildrenNodes = child.getAllTextNodes();\n        textNodes.push(...subChildrenNodes);\n      }\n      child = child.getNextSibling();\n    }\n    return textNodes;\n  }\n  getFirstDescendant() {\n    let node = this.getFirstChild();\n    while ($isElementNode(node)) {\n      const child = node.getFirstChild();\n      if (child === null) {\n        break;\n      }\n      node = child;\n    }\n    return node;\n  }\n  getLastDescendant() {\n    let node = this.getLastChild();\n    while ($isElementNode(node)) {\n      const child = node.getLastChild();\n      if (child === null) {\n        break;\n      }\n      node = child;\n    }\n    return node;\n  }\n  getDescendantByIndex(index) {\n    const children = this.getChildren();\n    const childrenLength = children.length;\n    // For non-empty element nodes, we resolve its descendant\n    // (either a leaf node or the bottom-most element)\n    if (index >= childrenLength) {\n      const resolvedNode = children[childrenLength - 1];\n      return $isElementNode(resolvedNode) && resolvedNode.getLastDescendant() || resolvedNode || null;\n    }\n    const resolvedNode = children[index];\n    return $isElementNode(resolvedNode) && resolvedNode.getFirstDescendant() || resolvedNode || null;\n  }\n  getFirstChild() {\n    const self = this.getLatest();\n    const firstKey = self.__first;\n    return firstKey === null ? null : $getNodeByKey(firstKey);\n  }\n  getFirstChildOrThrow() {\n    const firstChild = this.getFirstChild();\n    if (firstChild === null) {\n      {\n        formatDevErrorMessage(`Expected node ${this.__key} to have a first child.`);\n      }\n    }\n    return firstChild;\n  }\n  getLastChild() {\n    const self = this.getLatest();\n    const lastKey = self.__last;\n    return lastKey === null ? null : $getNodeByKey(lastKey);\n  }\n  getLastChildOrThrow() {\n    const lastChild = this.getLastChild();\n    if (lastChild === null) {\n      {\n        formatDevErrorMessage(`Expected node ${this.__key} to have a last child.`);\n      }\n    }\n    return lastChild;\n  }\n  getChildAtIndex(index) {\n    const size = this.getChildrenSize();\n    let node;\n    let i;\n    if (index < size / 2) {\n      node = this.getFirstChild();\n      i = 0;\n      while (node !== null && i <= index) {\n        if (i === index) {\n          return node;\n        }\n        node = node.getNextSibling();\n        i++;\n      }\n      return null;\n    }\n    node = this.getLastChild();\n    i = size - 1;\n    while (node !== null && i >= index) {\n      if (i === index) {\n        return node;\n      }\n      node = node.getPreviousSibling();\n      i--;\n    }\n    return null;\n  }\n  getTextContent() {\n    let textContent = '';\n    const children = this.getChildren();\n    const childrenLength = children.length;\n    for (let i = 0; i < childrenLength; i++) {\n      const child = children[i];\n      textContent += child.getTextContent();\n      if ($isElementNode(child) && i !== childrenLength - 1 && !child.isInline()) {\n        textContent += DOUBLE_LINE_BREAK;\n      }\n    }\n    return textContent;\n  }\n  getTextContentSize() {\n    let textContentSize = 0;\n    const children = this.getChildren();\n    const childrenLength = children.length;\n    for (let i = 0; i < childrenLength; i++) {\n      const child = children[i];\n      textContentSize += child.getTextContentSize();\n      if ($isElementNode(child) && i !== childrenLength - 1 && !child.isInline()) {\n        textContentSize += DOUBLE_LINE_BREAK.length;\n      }\n    }\n    return textContentSize;\n  }\n  getDirection() {\n    const self = this.getLatest();\n    return self.__dir;\n  }\n  getTextFormat() {\n    const self = this.getLatest();\n    return self.__textFormat;\n  }\n  hasFormat(type) {\n    if (type !== '') {\n      const formatFlag = ELEMENT_TYPE_TO_FORMAT[type];\n      return (this.getFormat() & formatFlag) !== 0;\n    }\n    return false;\n  }\n  hasTextFormat(type) {\n    const formatFlag = TEXT_TYPE_TO_FORMAT[type];\n    return (this.getTextFormat() & formatFlag) !== 0;\n  }\n  /**\n   * Returns the format flags applied to the node as a 32-bit integer.\n   *\n   * @returns a number representing the TextFormatTypes applied to the node.\n   */\n  getFormatFlags(type, alignWithFormat) {\n    const self = this.getLatest();\n    const format = self.__textFormat;\n    return toggleTextFormatType(format, type, alignWithFormat);\n  }\n  getTextStyle() {\n    const self = this.getLatest();\n    return self.__textStyle;\n  }\n\n  // Mutators\n\n  select(_anchorOffset, _focusOffset) {\n    errorOnReadOnly();\n    const selection = $getSelection();\n    let anchorOffset = _anchorOffset;\n    let focusOffset = _focusOffset;\n    const childrenCount = this.getChildrenSize();\n    if (!this.canBeEmpty()) {\n      if (_anchorOffset === 0 && _focusOffset === 0) {\n        const firstChild = this.getFirstChild();\n        if ($isTextNode(firstChild) || $isElementNode(firstChild)) {\n          return firstChild.select(0, 0);\n        }\n      } else if ((_anchorOffset === undefined || _anchorOffset === childrenCount) && (_focusOffset === undefined || _focusOffset === childrenCount)) {\n        const lastChild = this.getLastChild();\n        if ($isTextNode(lastChild) || $isElementNode(lastChild)) {\n          return lastChild.select();\n        }\n      }\n    }\n    if (anchorOffset === undefined) {\n      anchorOffset = childrenCount;\n    }\n    if (focusOffset === undefined) {\n      focusOffset = childrenCount;\n    }\n    const key = this.__key;\n    if (!$isRangeSelection(selection)) {\n      return $internalMakeRangeSelection(key, anchorOffset, key, focusOffset, 'element', 'element');\n    } else {\n      selection.anchor.set(key, anchorOffset, 'element');\n      selection.focus.set(key, focusOffset, 'element');\n      selection.dirty = true;\n    }\n    return selection;\n  }\n  selectStart() {\n    const firstNode = this.getFirstDescendant();\n    return firstNode ? firstNode.selectStart() : this.select();\n  }\n  selectEnd() {\n    const lastNode = this.getLastDescendant();\n    return lastNode ? lastNode.selectEnd() : this.select();\n  }\n  clear() {\n    const writableSelf = this.getWritable();\n    const children = this.getChildren();\n    children.forEach(child => child.remove());\n    return writableSelf;\n  }\n  append(...nodesToAppend) {\n    return this.splice(this.getChildrenSize(), 0, nodesToAppend);\n  }\n  setDirection(direction) {\n    const self = this.getWritable();\n    self.__dir = direction;\n    return self;\n  }\n  setFormat(type) {\n    const self = this.getWritable();\n    self.__format = type !== '' ? ELEMENT_TYPE_TO_FORMAT[type] : 0;\n    return this;\n  }\n  setStyle(style) {\n    const self = this.getWritable();\n    self.__style = style || '';\n    return this;\n  }\n  setTextFormat(type) {\n    const self = this.getWritable();\n    self.__textFormat = type;\n    return self;\n  }\n  setTextStyle(style) {\n    const self = this.getWritable();\n    self.__textStyle = style;\n    return self;\n  }\n  setIndent(indentLevel) {\n    const self = this.getWritable();\n    self.__indent = indentLevel;\n    return this;\n  }\n  splice(start, deleteCount, nodesToInsert) {\n    const nodesToInsertLength = nodesToInsert.length;\n    const oldSize = this.getChildrenSize();\n    const writableSelf = this.getWritable();\n    if (!(start + deleteCount <= oldSize)) {\n      formatDevErrorMessage(`ElementNode.splice: start + deleteCount > oldSize (${String(start)} + ${String(deleteCount)} > ${String(oldSize)})`);\n    }\n    const writableSelfKey = writableSelf.__key;\n    const nodesToInsertKeys = [];\n    const nodesToRemoveKeys = [];\n    const nodeAfterRange = this.getChildAtIndex(start + deleteCount);\n    let nodeBeforeRange = null;\n    let newSize = oldSize - deleteCount + nodesToInsertLength;\n    if (start !== 0) {\n      if (start === oldSize) {\n        nodeBeforeRange = this.getLastChild();\n      } else {\n        const node = this.getChildAtIndex(start);\n        if (node !== null) {\n          nodeBeforeRange = node.getPreviousSibling();\n        }\n      }\n    }\n    if (deleteCount > 0) {\n      let nodeToDelete = nodeBeforeRange === null ? this.getFirstChild() : nodeBeforeRange.getNextSibling();\n      for (let i = 0; i < deleteCount; i++) {\n        if (nodeToDelete === null) {\n          {\n            formatDevErrorMessage(`splice: sibling not found`);\n          }\n        }\n        const nextSibling = nodeToDelete.getNextSibling();\n        const nodeKeyToDelete = nodeToDelete.__key;\n        const writableNodeToDelete = nodeToDelete.getWritable();\n        removeFromParent(writableNodeToDelete);\n        nodesToRemoveKeys.push(nodeKeyToDelete);\n        nodeToDelete = nextSibling;\n      }\n    }\n    let prevNode = nodeBeforeRange;\n    for (let i = 0; i < nodesToInsertLength; i++) {\n      const nodeToInsert = nodesToInsert[i];\n      if (prevNode !== null && nodeToInsert.is(prevNode)) {\n        nodeBeforeRange = prevNode = prevNode.getPreviousSibling();\n      }\n      const writableNodeToInsert = nodeToInsert.getWritable();\n      if (writableNodeToInsert.__parent === writableSelfKey) {\n        newSize--;\n      }\n      removeFromParent(writableNodeToInsert);\n      const nodeKeyToInsert = nodeToInsert.__key;\n      if (prevNode === null) {\n        writableSelf.__first = nodeKeyToInsert;\n        writableNodeToInsert.__prev = null;\n      } else {\n        const writablePrevNode = prevNode.getWritable();\n        writablePrevNode.__next = nodeKeyToInsert;\n        writableNodeToInsert.__prev = writablePrevNode.__key;\n      }\n      if (nodeToInsert.__key === writableSelfKey) {\n        {\n          formatDevErrorMessage(`append: attempting to append self`);\n        }\n      }\n      // Set child parent to self\n      writableNodeToInsert.__parent = writableSelfKey;\n      nodesToInsertKeys.push(nodeKeyToInsert);\n      prevNode = nodeToInsert;\n    }\n    if (start + deleteCount === oldSize) {\n      if (prevNode !== null) {\n        const writablePrevNode = prevNode.getWritable();\n        writablePrevNode.__next = null;\n        writableSelf.__last = prevNode.__key;\n      }\n    } else if (nodeAfterRange !== null) {\n      const writableNodeAfterRange = nodeAfterRange.getWritable();\n      if (prevNode !== null) {\n        const writablePrevNode = prevNode.getWritable();\n        writableNodeAfterRange.__prev = prevNode.__key;\n        writablePrevNode.__next = nodeAfterRange.__key;\n      } else {\n        writableNodeAfterRange.__prev = null;\n      }\n    }\n    writableSelf.__size = newSize;\n\n    // In case of deletion we need to adjust selection, unlink removed nodes\n    // and clean up node itself if it becomes empty. None of these needed\n    // for insertion-only cases\n    if (nodesToRemoveKeys.length) {\n      // Adjusting selection, in case node that was anchor/focus will be deleted\n      const selection = $getSelection();\n      if ($isRangeSelection(selection)) {\n        const nodesToRemoveKeySet = new Set(nodesToRemoveKeys);\n        const nodesToInsertKeySet = new Set(nodesToInsertKeys);\n        const {\n          anchor,\n          focus\n        } = selection;\n        if (isPointRemoved(anchor, nodesToRemoveKeySet, nodesToInsertKeySet)) {\n          moveSelectionPointToSibling(anchor, anchor.getNode(), this, nodeBeforeRange, nodeAfterRange);\n        }\n        if (isPointRemoved(focus, nodesToRemoveKeySet, nodesToInsertKeySet)) {\n          moveSelectionPointToSibling(focus, focus.getNode(), this, nodeBeforeRange, nodeAfterRange);\n        }\n        // Cleanup if node can't be empty\n        if (newSize === 0 && !this.canBeEmpty() && !$isRootOrShadowRoot(this)) {\n          this.remove();\n        }\n      }\n    }\n    return writableSelf;\n  }\n  /**\n   * @internal\n   *\n   * An experimental API that an ElementNode can override to control where its\n   * children are inserted into the DOM, this is useful to add a wrapping node\n   * or accessory nodes before or after the children. The root of the node returned\n   * by createDOM must still be exactly one HTMLElement.\n   */\n  getDOMSlot(element) {\n    return new ElementDOMSlot(element);\n  }\n  exportDOM(editor) {\n    const {\n      element\n    } = super.exportDOM(editor);\n    if (isHTMLElement(element)) {\n      const indent = this.getIndent();\n      if (indent > 0) {\n        // padding-inline-start is not widely supported in email HTML\n        // (see https://www.caniemail.com/features/css-padding-inline-start-end/),\n        // If you want to use HTML output for email, consider overriding the serialization\n        // to use `padding-right` in RTL languages, `padding-left` in `LTR` languages, or\n        // `text-indent` if you are ok with first-line indents.\n        // We recommend keeping multiples of 40px to maintain consistency with list-items\n        // (see https://github.com/facebook/lexical/pull/4025)\n        element.style.paddingInlineStart = `${indent * 40}px`;\n      }\n      const direction = this.getDirection();\n      if (direction) {\n        element.dir = direction;\n      }\n    }\n    return {\n      element\n    };\n  }\n  // JSON serialization\n  exportJSON() {\n    const json = {\n      children: [],\n      direction: this.getDirection(),\n      format: this.getFormatType(),\n      indent: this.getIndent(),\n      // As an exception here we invoke super at the end for historical reasons.\n      // Namely, to preserve the order of the properties and not to break the tests\n      // that use the serialized string representation.\n      ...super.exportJSON()\n    };\n    const textFormat = this.getTextFormat();\n    const textStyle = this.getTextStyle();\n    if (textFormat !== 0) {\n      json.textFormat = textFormat;\n    }\n    if (textStyle !== '') {\n      json.textStyle = textStyle;\n    }\n    return json;\n  }\n  updateFromJSON(serializedNode) {\n    return super.updateFromJSON(serializedNode).setFormat(serializedNode.format).setIndent(serializedNode.indent).setDirection(serializedNode.direction).setTextFormat(serializedNode.textFormat || 0).setTextStyle(serializedNode.textStyle || '');\n  }\n  // These are intended to be extends for specific element heuristics.\n  insertNewAfter(selection, restoreSelection) {\n    return null;\n  }\n  canIndent() {\n    return true;\n  }\n  /*\n   * This method controls the behavior of the node during backwards\n   * deletion (i.e., backspace) when selection is at the beginning of\n   * the node (offset 0). You may use this to have the node replace\n   * itself, change its state, or do nothing. When you do make such\n   * a change, you should return true.\n   *\n   * When true is returned, the collapse phase will stop.\n   * When false is returned, and isInline() is true, and getPreviousSibling() is null,\n   * then this function will be called on its parent.\n   */\n  collapseAtStart(selection) {\n    return false;\n  }\n  excludeFromCopy(destination) {\n    return false;\n  }\n  /** @deprecated @internal */\n  canReplaceWith(replacement) {\n    return true;\n  }\n  /** @deprecated @internal */\n  canInsertAfter(node) {\n    return true;\n  }\n  canBeEmpty() {\n    return true;\n  }\n  canInsertTextBefore() {\n    return true;\n  }\n  canInsertTextAfter() {\n    return true;\n  }\n  isInline() {\n    return false;\n  }\n  // A shadow root is a Node that behaves like RootNode. The shadow root (and RootNode) mark the\n  // end of the hiercharchy, most implementations should treat it as there's nothing (upwards)\n  // beyond this point. For example, node.getTopLevelElement(), when performed inside a TableCellNode\n  // will return the immediate first child underneath TableCellNode instead of RootNode.\n  isShadowRoot() {\n    return false;\n  }\n  /** @deprecated @internal */\n  canMergeWith(node) {\n    return false;\n  }\n  extractWithChild(child, selection, destination) {\n    return false;\n  }\n\n  /**\n   * Determines whether this node, when empty, can merge with a first block\n   * of nodes being inserted.\n   *\n   * This method is specifically called in {@link RangeSelection.insertNodes}\n   * to determine merging behavior during nodes insertion.\n   *\n   * @example\n   * // In a ListItemNode or QuoteNode implementation:\n   * canMergeWhenEmpty(): true {\n   *  return true;\n   * }\n   */\n  canMergeWhenEmpty() {\n    return false;\n  }\n\n  /** @internal */\n  reconcileObservedMutation(dom, editor) {\n    const slot = this.getDOMSlot(dom);\n    let currentDOM = slot.getFirstChild();\n    for (let currentNode = this.getFirstChild(); currentNode; currentNode = currentNode.getNextSibling()) {\n      const correctDOM = editor.getElementByKey(currentNode.getKey());\n      if (correctDOM === null) {\n        continue;\n      }\n      if (currentDOM == null) {\n        slot.insertChild(correctDOM);\n        currentDOM = correctDOM;\n      } else if (currentDOM !== correctDOM) {\n        slot.replaceChild(correctDOM, currentDOM);\n      }\n      currentDOM = currentDOM.nextSibling;\n    }\n  }\n}\nfunction $isElementNode(node) {\n  return node instanceof ElementNode;\n}\nfunction isPointRemoved(point, nodesToRemoveKeySet, nodesToInsertKeySet) {\n  let node = point.getNode();\n  while (node) {\n    const nodeKey = node.__key;\n    if (nodesToRemoveKeySet.has(nodeKey) && !nodesToInsertKeySet.has(nodeKey)) {\n      return true;\n    }\n    node = node.getParent();\n  }\n  return false;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n/** @noInheritDoc */\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nclass DecoratorNode extends LexicalNode {\n  /**\n   * The returned value is added to the LexicalEditor._decorators\n   */\n  decorate(editor, config) {\n    {\n      formatDevErrorMessage(`decorate: base method not extended`);\n    }\n  }\n  isIsolated() {\n    return false;\n  }\n  isInline() {\n    return true;\n  }\n  isKeyboardSelectable() {\n    return true;\n  }\n}\nfunction $isDecoratorNode(node) {\n  return node instanceof DecoratorNode;\n}\n\n/** @noInheritDoc */\nclass RootNode extends ElementNode {\n  /** @internal */\n\n  static getType() {\n    return 'root';\n  }\n  static clone() {\n    return new RootNode();\n  }\n  constructor() {\n    super('root');\n    this.__cachedText = null;\n  }\n  getTopLevelElementOrThrow() {\n    {\n      formatDevErrorMessage(`getTopLevelElementOrThrow: root nodes are not top level elements`);\n    }\n  }\n  getTextContent() {\n    const cachedText = this.__cachedText;\n    if (isCurrentlyReadOnlyMode() || getActiveEditor()._dirtyType === NO_DIRTY_NODES) {\n      if (cachedText !== null) {\n        return cachedText;\n      }\n    }\n    return super.getTextContent();\n  }\n  remove() {\n    {\n      formatDevErrorMessage(`remove: cannot be called on root nodes`);\n    }\n  }\n  replace(node) {\n    {\n      formatDevErrorMessage(`replace: cannot be called on root nodes`);\n    }\n  }\n  insertBefore(nodeToInsert) {\n    {\n      formatDevErrorMessage(`insertBefore: cannot be called on root nodes`);\n    }\n  }\n  insertAfter(nodeToInsert) {\n    {\n      formatDevErrorMessage(`insertAfter: cannot be called on root nodes`);\n    }\n  }\n\n  // View\n\n  updateDOM(prevNode, dom) {\n    return false;\n  }\n\n  // Mutate\n\n  append(...nodesToAppend) {\n    for (let i = 0; i < nodesToAppend.length; i++) {\n      const node = nodesToAppend[i];\n      if (!$isElementNode(node) && !$isDecoratorNode(node)) {\n        {\n          formatDevErrorMessage(`rootNode.append: Only element or decorator nodes can be appended to the root node`);\n        }\n      }\n    }\n    return super.append(...nodesToAppend);\n  }\n  static importJSON(serializedNode) {\n    // We don't create a root, and instead use the existing root.\n    return $getRoot().updateFromJSON(serializedNode);\n  }\n  collapseAtStart() {\n    return true;\n  }\n}\nfunction $createRootNode() {\n  return new RootNode();\n}\nfunction $isRootNode(node) {\n  return node instanceof RootNode;\n}\n\nfunction editorStateHasDirtySelection(editorState, editor) {\n  const currentSelection = editor.getEditorState()._selection;\n  const pendingSelection = editorState._selection;\n\n  // Check if we need to update because of changes in selection\n  if (pendingSelection !== null) {\n    if (pendingSelection.dirty || !pendingSelection.is(currentSelection)) {\n      return true;\n    }\n  } else if (currentSelection !== null) {\n    return true;\n  }\n  return false;\n}\nfunction cloneEditorState(current) {\n  return new EditorState(new Map(current._nodeMap));\n}\nfunction createEmptyEditorState() {\n  return new EditorState(new Map([['root', $createRootNode()]]));\n}\nfunction exportNodeToJSON(node) {\n  const serializedNode = node.exportJSON();\n  const nodeClass = node.constructor;\n  if (serializedNode.type !== nodeClass.getType()) {\n    {\n      formatDevErrorMessage(`LexicalNode: Node ${nodeClass.name} does not match the serialized type. Check if .exportJSON() is implemented and it is returning the correct type.`);\n    }\n  }\n  if ($isElementNode(node)) {\n    const serializedChildren = serializedNode.children;\n    if (!Array.isArray(serializedChildren)) {\n      {\n        formatDevErrorMessage(`LexicalNode: Node ${nodeClass.name} is an element but .exportJSON() does not have a children array.`);\n      }\n    }\n    const children = node.getChildren();\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const serializedChildNode = exportNodeToJSON(child);\n      serializedChildren.push(serializedChildNode);\n    }\n  }\n\n  // @ts-expect-error\n  return serializedNode;\n}\nclass EditorState {\n  constructor(nodeMap, selection) {\n    this._nodeMap = nodeMap;\n    this._selection = selection || null;\n    this._flushSync = false;\n    this._readOnly = false;\n  }\n  isEmpty() {\n    return this._nodeMap.size === 1 && this._selection === null;\n  }\n  read(callbackFn, options) {\n    return readEditorState(options && options.editor || null, this, callbackFn);\n  }\n  clone(selection) {\n    const editorState = new EditorState(this._nodeMap, selection === undefined ? this._selection : selection);\n    editorState._readOnly = true;\n    return editorState;\n  }\n  toJSON() {\n    return readEditorState(null, this, () => ({\n      root: exportNodeToJSON($getRoot())\n    }));\n  }\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// TODO: Cleanup ArtificialNode__DO_NOT_USE #5966\nclass ArtificialNode__DO_NOT_USE extends ElementNode {\n  static getType() {\n    return 'artificial';\n  }\n  createDOM(config) {\n    // this isnt supposed to be used and is not used anywhere but defining it to appease the API\n    const dom = document.createElement('div');\n    return dom;\n  }\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/** @noInheritDoc */\nclass ParagraphNode extends ElementNode {\n  static getType() {\n    return 'paragraph';\n  }\n  static clone(node) {\n    return new ParagraphNode(node.__key);\n  }\n\n  // View\n\n  createDOM(config) {\n    const dom = document.createElement('p');\n    const classNames = getCachedClassNameArray(config.theme, 'paragraph');\n    if (classNames !== undefined) {\n      const domClassList = dom.classList;\n      domClassList.add(...classNames);\n    }\n    return dom;\n  }\n  updateDOM(prevNode, dom, config) {\n    return false;\n  }\n  static importDOM() {\n    return {\n      p: node => ({\n        conversion: $convertParagraphElement,\n        priority: 0\n      })\n    };\n  }\n  exportDOM(editor) {\n    const {\n      element\n    } = super.exportDOM(editor);\n    if (isHTMLElement(element)) {\n      if (this.isEmpty()) {\n        element.append(document.createElement('br'));\n      }\n      const formatType = this.getFormatType();\n      element.style.textAlign = formatType;\n    }\n    return {\n      element\n    };\n  }\n  static importJSON(serializedNode) {\n    return $createParagraphNode().updateFromJSON(serializedNode);\n  }\n  exportJSON() {\n    return {\n      ...super.exportJSON(),\n      // These are included explicitly for backwards compatibility\n      textFormat: this.getTextFormat(),\n      textStyle: this.getTextStyle()\n    };\n  }\n\n  // Mutation\n\n  insertNewAfter(rangeSelection, restoreSelection) {\n    const newElement = $createParagraphNode();\n    newElement.setTextFormat(rangeSelection.format);\n    newElement.setTextStyle(rangeSelection.style);\n    const direction = this.getDirection();\n    newElement.setDirection(direction);\n    newElement.setFormat(this.getFormatType());\n    newElement.setStyle(this.getStyle());\n    this.insertAfter(newElement, restoreSelection);\n    return newElement;\n  }\n  collapseAtStart() {\n    const children = this.getChildren();\n    // If we have an empty (trimmed) first paragraph and try and remove it,\n    // delete the paragraph as long as we have another sibling to go to\n    if (children.length === 0 || $isTextNode(children[0]) && children[0].getTextContent().trim() === '') {\n      const nextSibling = this.getNextSibling();\n      if (nextSibling !== null) {\n        this.selectNext();\n        this.remove();\n        return true;\n      }\n      const prevSibling = this.getPreviousSibling();\n      if (prevSibling !== null) {\n        this.selectPrevious();\n        this.remove();\n        return true;\n      }\n    }\n    return false;\n  }\n}\nfunction $convertParagraphElement(element) {\n  const node = $createParagraphNode();\n  if (element.style) {\n    node.setFormat(element.style.textAlign);\n    setNodeIndentFromDOM(element, node);\n  }\n  return {\n    node\n  };\n}\nfunction $createParagraphNode() {\n  return $applyNodeReplacement(new ParagraphNode());\n}\nfunction $isParagraphNode(node) {\n  return node instanceof ParagraphNode;\n}\n\n// https://github.com/microsoft/TypeScript/issues/3841\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nconst DEFAULT_SKIP_INITIALIZATION = false;\nconst COMMAND_PRIORITY_EDITOR = 0;\nconst COMMAND_PRIORITY_LOW = 1;\nconst COMMAND_PRIORITY_NORMAL = 2;\nconst COMMAND_PRIORITY_HIGH = 3;\nconst COMMAND_PRIORITY_CRITICAL = 4;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n/**\n * Type helper for extracting the payload type from a command.\n *\n * @example\n * ```ts\n * const MY_COMMAND = createCommand<SomeType>();\n *\n * // ...\n *\n * editor.registerCommand(MY_COMMAND, payload => {\n *   // Type of `payload` is inferred here. But lets say we want to extract a function to delegate to\n *   $handleMyCommand(editor, payload);\n *   return true;\n * });\n *\n * function $handleMyCommand(editor: LexicalEditor, payload: CommandPayloadType<typeof MY_COMMAND>) {\n *   // `payload` is of type `SomeType`, extracted from the command.\n * }\n * ```\n */\n\nfunction resetEditor(editor, prevRootElement, nextRootElement, pendingEditorState) {\n  const keyNodeMap = editor._keyToDOMMap;\n  keyNodeMap.clear();\n  editor._editorState = createEmptyEditorState();\n  editor._pendingEditorState = pendingEditorState;\n  editor._compositionKey = null;\n  editor._dirtyType = NO_DIRTY_NODES;\n  editor._cloneNotNeeded.clear();\n  editor._dirtyLeaves = new Set();\n  editor._dirtyElements.clear();\n  editor._normalizedNodes = new Set();\n  editor._updateTags = new Set();\n  editor._updates = [];\n  editor._blockCursorElement = null;\n  const observer = editor._observer;\n  if (observer !== null) {\n    observer.disconnect();\n    editor._observer = null;\n  }\n\n  // Remove all the DOM nodes from the root element\n  if (prevRootElement !== null) {\n    prevRootElement.textContent = '';\n  }\n  if (nextRootElement !== null) {\n    nextRootElement.textContent = '';\n    keyNodeMap.set('root', nextRootElement);\n  }\n}\nfunction initializeConversionCache(nodes, additionalConversions) {\n  const conversionCache = new Map();\n  const handledConversions = new Set();\n  const addConversionsToCache = map => {\n    Object.keys(map).forEach(key => {\n      let currentCache = conversionCache.get(key);\n      if (currentCache === undefined) {\n        currentCache = [];\n        conversionCache.set(key, currentCache);\n      }\n      currentCache.push(map[key]);\n    });\n  };\n  nodes.forEach(node => {\n    const importDOM = node.klass.importDOM;\n    if (importDOM == null || handledConversions.has(importDOM)) {\n      return;\n    }\n    handledConversions.add(importDOM);\n    const map = importDOM.call(node.klass);\n    if (map !== null) {\n      addConversionsToCache(map);\n    }\n  });\n  if (additionalConversions) {\n    addConversionsToCache(additionalConversions);\n  }\n  return conversionCache;\n}\n\n/**\n * Creates a new LexicalEditor attached to a single contentEditable (provided in the config). This is\n * the lowest-level initialization API for a LexicalEditor. If you're using React or another framework,\n * consider using the appropriate abstractions, such as LexicalComposer\n * @param editorConfig - the editor configuration.\n * @returns a LexicalEditor instance\n */\nfunction createEditor(editorConfig) {\n  const config = editorConfig || {};\n  const activeEditor = internalGetActiveEditor();\n  const theme = config.theme || {};\n  const parentEditor = editorConfig === undefined ? activeEditor : config.parentEditor || null;\n  const disableEvents = config.disableEvents || false;\n  const editorState = createEmptyEditorState();\n  const namespace = config.namespace || (parentEditor !== null ? parentEditor._config.namespace : createUID());\n  const initialEditorState = config.editorState;\n  const nodes = [RootNode, TextNode, LineBreakNode, TabNode, ParagraphNode, ArtificialNode__DO_NOT_USE, ...(config.nodes || [])];\n  const {\n    onError,\n    html\n  } = config;\n  const isEditable = config.editable !== undefined ? config.editable : true;\n  let registeredNodes;\n  if (editorConfig === undefined && activeEditor !== null) {\n    registeredNodes = activeEditor._nodes;\n  } else {\n    registeredNodes = new Map();\n    for (let i = 0; i < nodes.length; i++) {\n      let klass = nodes[i];\n      let replace = null;\n      let replaceWithKlass = null;\n      if (typeof klass !== 'function') {\n        const options = klass;\n        klass = options.replace;\n        replace = options.with;\n        replaceWithKlass = options.withKlass || null;\n      }\n      // Ensure custom nodes implement required methods and replaceWithKlass is instance of base klass.\n      {\n        // ArtificialNode__DO_NOT_USE can get renamed, so we use the type\n        const nodeType = Object.prototype.hasOwnProperty.call(klass, 'getType') && klass.getType();\n        const name = klass.name;\n        if (replaceWithKlass) {\n          if (!(replaceWithKlass.prototype instanceof klass)) {\n            formatDevErrorMessage(`${replaceWithKlass.name} doesn't extend the ${name}`);\n          }\n        }\n        if (name !== 'RootNode' && nodeType !== 'root' && nodeType !== 'artificial') {\n          const proto = klass.prototype;\n          ['getType', 'clone'].forEach(method => {\n            // eslint-disable-next-line no-prototype-builtins\n            if (!klass.hasOwnProperty(method)) {\n              console.warn(`${name} must implement static \"${method}\" method`);\n            }\n          });\n          if (\n          // eslint-disable-next-line no-prototype-builtins\n          !klass.hasOwnProperty('importDOM') &&\n          // eslint-disable-next-line no-prototype-builtins\n          klass.hasOwnProperty('exportDOM')) {\n            console.warn(`${name} should implement \"importDOM\" if using a custom \"exportDOM\" method to ensure HTML serialization (important for copy & paste) works as expected`);\n          }\n          if ($isDecoratorNode(proto)) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (!proto.hasOwnProperty('decorate')) {\n              console.warn(`${proto.constructor.name} must implement \"decorate\" method`);\n            }\n          }\n          if (\n          // eslint-disable-next-line no-prototype-builtins\n          !klass.hasOwnProperty('importJSON')) {\n            console.warn(`${name} should implement \"importJSON\" method to ensure JSON and default HTML serialization works as expected`);\n          }\n        }\n      }\n      const type = klass.getType();\n      const transform = klass.transform();\n      const transforms = new Set();\n      if (transform !== null) {\n        transforms.add(transform);\n      }\n      registeredNodes.set(type, {\n        exportDOM: html && html.export ? html.export.get(klass) : undefined,\n        klass,\n        replace,\n        replaceWithKlass,\n        transforms\n      });\n    }\n  }\n  const editor = new LexicalEditor(editorState, parentEditor, registeredNodes, {\n    disableEvents,\n    namespace,\n    theme\n  }, onError ? onError : console.error, initializeConversionCache(registeredNodes, html ? html.import : undefined), isEditable);\n  if (initialEditorState !== undefined) {\n    editor._pendingEditorState = initialEditorState;\n    editor._dirtyType = FULL_RECONCILE;\n  }\n  return editor;\n}\nclass LexicalEditor {\n  /** The version with build identifiers for this editor (since 0.17.1) */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n\n  /** @internal */\n  constructor(editorState, parentEditor, nodes, config, onError, htmlConversions, editable) {\n    this._parentEditor = parentEditor;\n    // The root element associated with this editor\n    this._rootElement = null;\n    // The current editor state\n    this._editorState = editorState;\n    // Handling of drafts and updates\n    this._pendingEditorState = null;\n    // Used to help co-ordinate selection and events\n    this._compositionKey = null;\n    this._deferred = [];\n    // Used during reconciliation\n    this._keyToDOMMap = new Map();\n    this._updates = [];\n    this._updating = false;\n    // Listeners\n    this._listeners = {\n      decorator: new Set(),\n      editable: new Set(),\n      mutation: new Map(),\n      root: new Set(),\n      textcontent: new Set(),\n      update: new Set()\n    };\n    // Commands\n    this._commands = new Map();\n    // Editor configuration for theme/context.\n    this._config = config;\n    // Mapping of types to their nodes\n    this._nodes = nodes;\n    // React node decorators for portals\n    this._decorators = {};\n    this._pendingDecorators = null;\n    // Used to optimize reconciliation\n    this._dirtyType = NO_DIRTY_NODES;\n    this._cloneNotNeeded = new Set();\n    this._dirtyLeaves = new Set();\n    this._dirtyElements = new Map();\n    this._normalizedNodes = new Set();\n    this._updateTags = new Set();\n    // Handling of DOM mutations\n    this._observer = null;\n    // Used for identifying owning editors\n    this._key = createUID();\n    this._onError = onError;\n    this._htmlConversions = htmlConversions;\n    this._editable = editable;\n    this._headless = parentEditor !== null && parentEditor._headless;\n    this._window = null;\n    this._blockCursorElement = null;\n  }\n\n  /**\n   *\n   * @returns true if the editor is currently in \"composition\" mode due to receiving input\n   * through an IME, or 3P extension, for example. Returns false otherwise.\n   */\n  isComposing() {\n    return this._compositionKey != null;\n  }\n  /**\n   * Registers a listener for Editor update event. Will trigger the provided callback\n   * each time the editor goes through an update (via {@link LexicalEditor.update}) until the\n   * teardown function is called.\n   *\n   * @returns a teardown function that can be used to cleanup the listener.\n   */\n  registerUpdateListener(listener) {\n    const listenerSetOrMap = this._listeners.update;\n    listenerSetOrMap.add(listener);\n    return () => {\n      listenerSetOrMap.delete(listener);\n    };\n  }\n  /**\n   * Registers a listener for for when the editor changes between editable and non-editable states.\n   * Will trigger the provided callback each time the editor transitions between these states until the\n   * teardown function is called.\n   *\n   * @returns a teardown function that can be used to cleanup the listener.\n   */\n  registerEditableListener(listener) {\n    const listenerSetOrMap = this._listeners.editable;\n    listenerSetOrMap.add(listener);\n    return () => {\n      listenerSetOrMap.delete(listener);\n    };\n  }\n  /**\n   * Registers a listener for when the editor's decorator object changes. The decorator object contains\n   * all DecoratorNode keys -> their decorated value. This is primarily used with external UI frameworks.\n   *\n   * Will trigger the provided callback each time the editor transitions between these states until the\n   * teardown function is called.\n   *\n   * @returns a teardown function that can be used to cleanup the listener.\n   */\n  registerDecoratorListener(listener) {\n    const listenerSetOrMap = this._listeners.decorator;\n    listenerSetOrMap.add(listener);\n    return () => {\n      listenerSetOrMap.delete(listener);\n    };\n  }\n  /**\n   * Registers a listener for when Lexical commits an update to the DOM and the text content of\n   * the editor changes from the previous state of the editor. If the text content is the\n   * same between updates, no notifications to the listeners will happen.\n   *\n   * Will trigger the provided callback each time the editor transitions between these states until the\n   * teardown function is called.\n   *\n   * @returns a teardown function that can be used to cleanup the listener.\n   */\n  registerTextContentListener(listener) {\n    const listenerSetOrMap = this._listeners.textcontent;\n    listenerSetOrMap.add(listener);\n    return () => {\n      listenerSetOrMap.delete(listener);\n    };\n  }\n  /**\n   * Registers a listener for when the editor's root DOM element (the content editable\n   * Lexical attaches to) changes. This is primarily used to attach event listeners to the root\n   *  element. The root listener function is executed directly upon registration and then on\n   * any subsequent update.\n   *\n   * Will trigger the provided callback each time the editor transitions between these states until the\n   * teardown function is called.\n   *\n   * @returns a teardown function that can be used to cleanup the listener.\n   */\n  registerRootListener(listener) {\n    const listenerSetOrMap = this._listeners.root;\n    listener(this._rootElement, null);\n    listenerSetOrMap.add(listener);\n    return () => {\n      listener(null, this._rootElement);\n      listenerSetOrMap.delete(listener);\n    };\n  }\n  /**\n   * Registers a listener that will trigger anytime the provided command\n   * is dispatched with {@link LexicalEditor.dispatch}, subject to priority.\n   * Listeners that run at a higher priority can \"intercept\" commands and\n   * prevent them from propagating to other handlers by returning true.\n   *\n   * Listeners are always invoked in an {@link LexicalEditor.update} and can\n   * call dollar functions.\n   *\n   * Listeners registered at the same priority level will run\n   * deterministically in the order of registration.\n   *\n   * @param command - the command that will trigger the callback.\n   * @param listener - the function that will execute when the command is dispatched.\n   * @param priority - the relative priority of the listener. 0 | 1 | 2 | 3 | 4\n   *   (or {@link COMMAND_PRIORITY_EDITOR} |\n   *     {@link COMMAND_PRIORITY_LOW} |\n   *     {@link COMMAND_PRIORITY_NORMAL} |\n   *     {@link COMMAND_PRIORITY_HIGH} |\n   *     {@link COMMAND_PRIORITY_CRITICAL})\n   * @returns a teardown function that can be used to cleanup the listener.\n   */\n  registerCommand(command, listener, priority) {\n    if (priority === undefined) {\n      {\n        formatDevErrorMessage(`Listener for type \"command\" requires a \"priority\".`);\n      }\n    }\n    const commandsMap = this._commands;\n    if (!commandsMap.has(command)) {\n      commandsMap.set(command, [new Set(), new Set(), new Set(), new Set(), new Set()]);\n    }\n    const listenersInPriorityOrder = commandsMap.get(command);\n    if (listenersInPriorityOrder === undefined) {\n      {\n        formatDevErrorMessage(`registerCommand: Command ${String(command)} not found in command map`);\n      }\n    }\n    const listeners = listenersInPriorityOrder[priority];\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n      if (listenersInPriorityOrder.every(listenersSet => listenersSet.size === 0)) {\n        commandsMap.delete(command);\n      }\n    };\n  }\n\n  /**\n   * Registers a listener that will run when a Lexical node of the provided class is\n   * mutated. The listener will receive a list of nodes along with the type of mutation\n   * that was performed on each: created, destroyed, or updated.\n   *\n   * One common use case for this is to attach DOM event listeners to the underlying DOM nodes as Lexical nodes are created.\n   * {@link LexicalEditor.getElementByKey} can be used for this.\n   *\n   * If any existing nodes are in the DOM, and skipInitialization is not true, the listener\n   * will be called immediately with an updateTag of 'registerMutationListener' where all\n   * nodes have the 'created' NodeMutation. This can be controlled with the skipInitialization option\n   * (whose default was previously true for backwards compatibility with &lt;=0.16.1 but has been changed to false as of 0.21.0).\n   *\n   * @param klass - The class of the node that you want to listen to mutations on.\n   * @param listener - The logic you want to run when the node is mutated.\n   * @param options - see {@link MutationListenerOptions}\n   * @returns a teardown function that can be used to cleanup the listener.\n   */\n  registerMutationListener(klass, listener, options) {\n    const klassToMutate = this.resolveRegisteredNodeAfterReplacements(this.getRegisteredNode(klass)).klass;\n    const mutations = this._listeners.mutation;\n    mutations.set(listener, klassToMutate);\n    const skipInitialization = options && options.skipInitialization;\n    if (!(skipInitialization === undefined ? DEFAULT_SKIP_INITIALIZATION : skipInitialization)) {\n      this.initializeMutationListener(listener, klassToMutate);\n    }\n    return () => {\n      mutations.delete(listener);\n    };\n  }\n\n  /** @internal */\n  getRegisteredNode(klass) {\n    const registeredNode = this._nodes.get(klass.getType());\n    if (registeredNode === undefined) {\n      {\n        formatDevErrorMessage(`Node ${klass.name} has not been registered. Ensure node has been passed to createEditor.`);\n      }\n    }\n    return registeredNode;\n  }\n\n  /** @internal */\n  resolveRegisteredNodeAfterReplacements(registeredNode) {\n    while (registeredNode.replaceWithKlass) {\n      registeredNode = this.getRegisteredNode(registeredNode.replaceWithKlass);\n    }\n    return registeredNode;\n  }\n\n  /** @internal */\n  initializeMutationListener(listener, klass) {\n    const prevEditorState = this._editorState;\n    const nodeMap = getCachedTypeToNodeMap(prevEditorState).get(klass.getType());\n    if (!nodeMap) {\n      return;\n    }\n    const nodeMutationMap = new Map();\n    for (const k of nodeMap.keys()) {\n      nodeMutationMap.set(k, 'created');\n    }\n    if (nodeMutationMap.size > 0) {\n      listener(nodeMutationMap, {\n        dirtyLeaves: new Set(),\n        prevEditorState,\n        updateTags: new Set(['registerMutationListener'])\n      });\n    }\n  }\n\n  /** @internal */\n  registerNodeTransformToKlass(klass, listener) {\n    const registeredNode = this.getRegisteredNode(klass);\n    registeredNode.transforms.add(listener);\n    return registeredNode;\n  }\n\n  /**\n   * Registers a listener that will run when a Lexical node of the provided class is\n   * marked dirty during an update. The listener will continue to run as long as the node\n   * is marked dirty. There are no guarantees around the order of transform execution!\n   *\n   * Watch out for infinite loops. See [Node Transforms](https://lexical.dev/docs/concepts/transforms)\n   * @param klass - The class of the node that you want to run transforms on.\n   * @param listener - The logic you want to run when the node is updated.\n   * @returns a teardown function that can be used to cleanup the listener.\n   */\n  registerNodeTransform(klass, listener) {\n    const registeredNode = this.registerNodeTransformToKlass(klass, listener);\n    const registeredNodes = [registeredNode];\n    const replaceWithKlass = registeredNode.replaceWithKlass;\n    if (replaceWithKlass != null) {\n      const registeredReplaceWithNode = this.registerNodeTransformToKlass(replaceWithKlass, listener);\n      registeredNodes.push(registeredReplaceWithNode);\n    }\n    markNodesWithTypesAsDirty(this, registeredNodes.map(node => node.klass.getType()));\n    return () => {\n      registeredNodes.forEach(node => node.transforms.delete(listener));\n    };\n  }\n\n  /**\n   * Used to assert that a certain node is registered, usually by plugins to ensure nodes that they\n   * depend on have been registered.\n   * @returns True if the editor has registered the provided node type, false otherwise.\n   */\n  hasNode(node) {\n    return this._nodes.has(node.getType());\n  }\n\n  /**\n   * Used to assert that certain nodes are registered, usually by plugins to ensure nodes that they\n   * depend on have been registered.\n   * @returns True if the editor has registered all of the provided node types, false otherwise.\n   */\n  hasNodes(nodes) {\n    return nodes.every(this.hasNode.bind(this));\n  }\n\n  /**\n   * Dispatches a command of the specified type with the specified payload.\n   * This triggers all command listeners (set by {@link LexicalEditor.registerCommand})\n   * for this type, passing them the provided payload. The command listeners\n   * will be triggered in an implicit {@link LexicalEditor.update}, unless\n   * this was invoked from inside an update in which case that update context\n   * will be re-used (as if this was a dollar function itself).\n   * @param type - the type of command listeners to trigger.\n   * @param payload - the data to pass as an argument to the command listeners.\n   */\n  dispatchCommand(type, payload) {\n    return dispatchCommand(this, type, payload);\n  }\n\n  /**\n   * Gets a map of all decorators in the editor.\n   * @returns A mapping of call decorator keys to their decorated content\n   */\n  getDecorators() {\n    return this._decorators;\n  }\n\n  /**\n   *\n   * @returns the current root element of the editor. If you want to register\n   * an event listener, do it via {@link LexicalEditor.registerRootListener}, since\n   * this reference may not be stable.\n   */\n  getRootElement() {\n    return this._rootElement;\n  }\n\n  /**\n   * Gets the key of the editor\n   * @returns The editor key\n   */\n  getKey() {\n    return this._key;\n  }\n\n  /**\n   * Imperatively set the root contenteditable element that Lexical listens\n   * for events on.\n   */\n  setRootElement(nextRootElement) {\n    const prevRootElement = this._rootElement;\n    if (nextRootElement !== prevRootElement) {\n      const classNames = getCachedClassNameArray(this._config.theme, 'root');\n      const pendingEditorState = this._pendingEditorState || this._editorState;\n      this._rootElement = nextRootElement;\n      resetEditor(this, prevRootElement, nextRootElement, pendingEditorState);\n      if (prevRootElement !== null) {\n        // TODO: remove this flag once we no longer use UEv2 internally\n        if (!this._config.disableEvents) {\n          removeRootElementEvents(prevRootElement);\n        }\n        if (classNames != null) {\n          prevRootElement.classList.remove(...classNames);\n        }\n      }\n      if (nextRootElement !== null) {\n        const windowObj = getDefaultView(nextRootElement);\n        const style = nextRootElement.style;\n        style.userSelect = 'text';\n        style.whiteSpace = 'pre-wrap';\n        style.wordBreak = 'break-word';\n        nextRootElement.setAttribute('data-lexical-editor', 'true');\n        this._window = windowObj;\n        this._dirtyType = FULL_RECONCILE;\n        initMutationObserver(this);\n        this._updateTags.add('history-merge');\n        $commitPendingUpdates(this);\n\n        // TODO: remove this flag once we no longer use UEv2 internally\n        if (!this._config.disableEvents) {\n          addRootElementEvents(nextRootElement, this);\n        }\n        if (classNames != null) {\n          nextRootElement.classList.add(...classNames);\n        }\n        {\n          const nextRootElementParent = nextRootElement.parentElement;\n          if (nextRootElementParent != null && ['flex', 'inline-flex'].includes(getComputedStyle(nextRootElementParent).display)) {\n            console.warn(`When using \"display: flex\" or \"display: inline-flex\" on an element containing content editable, Chrome may have unwanted focusing behavior when clicking outside of it. Consider wrapping the content editable within a non-flex element.`);\n          }\n        }\n      } else {\n        // When the content editable is unmounted we will still trigger a\n        // reconciliation so that any pending updates are flushed,\n        // to match the previous state change when\n        // `_editorState = pendingEditorState` was used, but by\n        // using a commit we preserve the readOnly invariant\n        // for editor.getEditorState().\n        this._window = null;\n        this._updateTags.add('history-merge');\n        $commitPendingUpdates(this);\n      }\n      triggerListeners('root', this, false, nextRootElement, prevRootElement);\n    }\n  }\n\n  /**\n   * Gets the underlying HTMLElement associated with the LexicalNode for the given key.\n   * @returns the HTMLElement rendered by the LexicalNode associated with the key.\n   * @param key - the key of the LexicalNode.\n   */\n  getElementByKey(key) {\n    return this._keyToDOMMap.get(key) || null;\n  }\n\n  /**\n   * Gets the active editor state.\n   * @returns The editor state\n   */\n  getEditorState() {\n    return this._editorState;\n  }\n\n  /**\n   * Imperatively set the EditorState. Triggers reconciliation like an update.\n   * @param editorState - the state to set the editor\n   * @param options - options for the update.\n   */\n  setEditorState(editorState, options) {\n    if (editorState.isEmpty()) {\n      {\n        formatDevErrorMessage(`setEditorState: the editor state is empty. Ensure the editor state's root node never becomes empty.`);\n      }\n    }\n\n    // Ensure that we have a writable EditorState so that transforms can run\n    // during a historic operation\n    let writableEditorState = editorState;\n    if (writableEditorState._readOnly) {\n      writableEditorState = cloneEditorState(editorState);\n      writableEditorState._selection = editorState._selection ? editorState._selection.clone() : null;\n    }\n    flushRootMutations(this);\n    const pendingEditorState = this._pendingEditorState;\n    const tags = this._updateTags;\n    const tag = options !== undefined ? options.tag : null;\n    if (pendingEditorState !== null && !pendingEditorState.isEmpty()) {\n      if (tag != null) {\n        tags.add(tag);\n      }\n      $commitPendingUpdates(this);\n    }\n    this._pendingEditorState = writableEditorState;\n    this._dirtyType = FULL_RECONCILE;\n    this._dirtyElements.set('root', false);\n    this._compositionKey = null;\n    if (tag != null) {\n      tags.add(tag);\n    }\n\n    // Only commit pending updates if not already in an editor.update\n    // (e.g. dispatchCommand) otherwise this will cause a second commit\n    // with an already read-only state and selection\n    if (!this._updating) {\n      $commitPendingUpdates(this);\n    }\n  }\n\n  /**\n   * Parses a SerializedEditorState (usually produced by {@link EditorState.toJSON}) and returns\n   * and EditorState object that can be, for example, passed to {@link LexicalEditor.setEditorState}. Typically,\n   * deserialization from JSON stored in a database uses this method.\n   * @param maybeStringifiedEditorState\n   * @param updateFn\n   * @returns\n   */\n  parseEditorState(maybeStringifiedEditorState, updateFn) {\n    const serializedEditorState = typeof maybeStringifiedEditorState === 'string' ? JSON.parse(maybeStringifiedEditorState) : maybeStringifiedEditorState;\n    return parseEditorState(serializedEditorState, this, updateFn);\n  }\n\n  /**\n   * Executes a read of the editor's state, with the\n   * editor context available (useful for exporting and read-only DOM\n   * operations). Much like update, but prevents any mutation of the\n   * editor's state. Any pending updates will be flushed immediately before\n   * the read.\n   * @param callbackFn - A function that has access to read-only editor state.\n   */\n  read(callbackFn) {\n    $commitPendingUpdates(this);\n    return this.getEditorState().read(callbackFn, {\n      editor: this\n    });\n  }\n\n  /**\n   * Executes an update to the editor state. The updateFn callback is the ONLY place\n   * where Lexical editor state can be safely mutated.\n   * @param updateFn - A function that has access to writable editor state.\n   * @param options - A bag of options to control the behavior of the update.\n   * @param options.onUpdate - A function to run once the update is complete.\n   * Useful for synchronizing updates in some cases.\n   * @param options.skipTransforms - Setting this to true will suppress all node\n   * transforms for this update cycle.\n   * @param options.tag - A tag to identify this update, in an update listener, for instance.\n   * Some tags are reserved by the core and control update behavior in different ways.\n   * @param options.discrete - If true, prevents this update from being batched, forcing it to\n   * run synchronously.\n   */\n  update(updateFn, options) {\n    updateEditor(this, updateFn, options);\n  }\n\n  /**\n   * Focuses the editor\n   * @param callbackFn - A function to run after the editor is focused.\n   * @param options - A bag of options\n   * @param options.defaultSelection - Where to move selection when the editor is\n   * focused. Can be rootStart, rootEnd, or undefined. Defaults to rootEnd.\n   */\n  focus(callbackFn, options = {}) {\n    const rootElement = this._rootElement;\n    if (rootElement !== null) {\n      // This ensures that iOS does not trigger caps lock upon focus\n      rootElement.setAttribute('autocapitalize', 'off');\n      updateEditorSync(this, () => {\n        const selection = $getSelection();\n        const root = $getRoot();\n        if (selection !== null) {\n          // Marking the selection dirty will force the selection back to it\n          selection.dirty = true;\n        } else if (root.getChildrenSize() !== 0) {\n          if (options.defaultSelection === 'rootStart') {\n            root.selectStart();\n          } else {\n            root.selectEnd();\n          }\n        }\n        $addUpdateTag('focus');\n        $onUpdate(() => {\n          rootElement.removeAttribute('autocapitalize');\n          if (callbackFn) {\n            callbackFn();\n          }\n        });\n      });\n      // In the case where onUpdate doesn't fire (due to the focus update not\n      // occuring).\n      if (this._pendingEditorState === null) {\n        rootElement.removeAttribute('autocapitalize');\n      }\n    }\n  }\n\n  /**\n   * Removes focus from the editor.\n   */\n  blur() {\n    const rootElement = this._rootElement;\n    if (rootElement !== null) {\n      rootElement.blur();\n    }\n    const domSelection = getDOMSelection(this._window);\n    if (domSelection !== null) {\n      domSelection.removeAllRanges();\n    }\n  }\n  /**\n   * Returns true if the editor is editable, false otherwise.\n   * @returns True if the editor is editable, false otherwise.\n   */\n  isEditable() {\n    return this._editable;\n  }\n  /**\n   * Sets the editable property of the editor. When false, the\n   * editor will not listen for user events on the underling contenteditable.\n   * @param editable - the value to set the editable mode to.\n   */\n  setEditable(editable) {\n    if (this._editable !== editable) {\n      this._editable = editable;\n      triggerListeners('editable', this, true, editable);\n    }\n  }\n  /**\n   * Returns a JSON-serializable javascript object NOT a JSON string.\n   * You still must call JSON.stringify (or something else) to turn the\n   * state into a string you can transfer over the wire and store in a database.\n   *\n   * See {@link LexicalNode.exportJSON}\n   *\n   * @returns A JSON-serializable javascript object\n   */\n  toJSON() {\n    return {\n      editorState: this._editorState.toJSON()\n    };\n  }\n}\nLexicalEditor.version = \"0.27.2+dev.esm\";\n\nlet keyCounter = 1;\nfunction resetRandomKey() {\n  keyCounter = 1;\n}\nfunction generateRandomKey() {\n  return '' + keyCounter++;\n}\nfunction getRegisteredNodeOrThrow(editor, nodeType) {\n  const registeredNode = editor._nodes.get(nodeType);\n  if (registeredNode === undefined) {\n    {\n      formatDevErrorMessage(`registeredNode: Type ${nodeType} not found`);\n    }\n  }\n  return registeredNode;\n}\nconst scheduleMicroTask = typeof queueMicrotask === 'function' ? queueMicrotask : fn => {\n  // No window prefix intended (#1400)\n  Promise.resolve().then(fn);\n};\nfunction $isSelectionCapturedInDecorator(node) {\n  return $isDecoratorNode($getNearestNodeFromDOMNode(node));\n}\nfunction isSelectionCapturedInDecoratorInput(anchorDOM) {\n  const activeElement = document.activeElement;\n  if (!isHTMLElement(activeElement)) {\n    return false;\n  }\n  const nodeName = activeElement.nodeName;\n  return $isDecoratorNode($getNearestNodeFromDOMNode(anchorDOM)) && (nodeName === 'INPUT' || nodeName === 'TEXTAREA' || activeElement.contentEditable === 'true' && getEditorPropertyFromDOMNode(activeElement) == null);\n}\nfunction isSelectionWithinEditor(editor, anchorDOM, focusDOM) {\n  const rootElement = editor.getRootElement();\n  try {\n    return rootElement !== null && rootElement.contains(anchorDOM) && rootElement.contains(focusDOM) &&\n    // Ignore if selection is within nested editor\n    anchorDOM !== null && !isSelectionCapturedInDecoratorInput(anchorDOM) && getNearestEditorFromDOMNode(anchorDOM) === editor;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * @returns true if the given argument is a LexicalEditor instance from this build of Lexical\n */\nfunction isLexicalEditor(editor) {\n  // Check instanceof to prevent issues with multiple embedded Lexical installations\n  return editor instanceof LexicalEditor;\n}\nfunction getNearestEditorFromDOMNode(node) {\n  let currentNode = node;\n  while (currentNode != null) {\n    const editor = getEditorPropertyFromDOMNode(currentNode);\n    if (isLexicalEditor(editor)) {\n      return editor;\n    }\n    currentNode = getParentElement(currentNode);\n  }\n  return null;\n}\n\n/** @internal */\nfunction getEditorPropertyFromDOMNode(node) {\n  // @ts-expect-error: internal field\n  return node ? node.__lexicalEditor : null;\n}\nfunction getTextDirection(text) {\n  if (RTL_REGEX.test(text)) {\n    return 'rtl';\n  }\n  if (LTR_REGEX.test(text)) {\n    return 'ltr';\n  }\n  return null;\n}\nfunction $isTokenOrSegmented(node) {\n  return node.isToken() || node.isSegmented();\n}\n\n/**\n * @param node - The element being tested\n * @returns Returns true if node is an DOM Text node, false otherwise.\n */\nfunction isDOMTextNode(node) {\n  return isDOMNode(node) && node.nodeType === DOM_TEXT_TYPE;\n}\n\n/**\n * @param node - The element being tested\n * @returns Returns true if node is an DOM Document node, false otherwise.\n */\nfunction isDOMDocumentNode(node) {\n  return isDOMNode(node) && node.nodeType === DOM_DOCUMENT_TYPE;\n}\nfunction getDOMTextNode(element) {\n  let node = element;\n  while (node != null) {\n    if (isDOMTextNode(node)) {\n      return node;\n    }\n    node = node.firstChild;\n  }\n  return null;\n}\nfunction toggleTextFormatType(format, type, alignWithFormat) {\n  const activeFormat = TEXT_TYPE_TO_FORMAT[type];\n  if (alignWithFormat !== null && (format & activeFormat) === (alignWithFormat & activeFormat)) {\n    return format;\n  }\n  let newFormat = format ^ activeFormat;\n  if (type === 'subscript') {\n    newFormat &= ~TEXT_TYPE_TO_FORMAT.superscript;\n  } else if (type === 'superscript') {\n    newFormat &= ~TEXT_TYPE_TO_FORMAT.subscript;\n  } else if (type === 'lowercase') {\n    newFormat &= ~TEXT_TYPE_TO_FORMAT.uppercase;\n    newFormat &= ~TEXT_TYPE_TO_FORMAT.capitalize;\n  } else if (type === 'uppercase') {\n    newFormat &= ~TEXT_TYPE_TO_FORMAT.lowercase;\n    newFormat &= ~TEXT_TYPE_TO_FORMAT.capitalize;\n  } else if (type === 'capitalize') {\n    newFormat &= ~TEXT_TYPE_TO_FORMAT.lowercase;\n    newFormat &= ~TEXT_TYPE_TO_FORMAT.uppercase;\n  }\n  return newFormat;\n}\nfunction $isLeafNode(node) {\n  return $isTextNode(node) || $isLineBreakNode(node) || $isDecoratorNode(node);\n}\nfunction $setNodeKey(node, existingKey) {\n  if (existingKey != null) {\n    {\n      errorOnNodeKeyConstructorMismatch(node, existingKey);\n    }\n    node.__key = existingKey;\n    return;\n  }\n  errorOnReadOnly();\n  errorOnInfiniteTransforms();\n  const editor = getActiveEditor();\n  const editorState = getActiveEditorState();\n  const key = generateRandomKey();\n  editorState._nodeMap.set(key, node);\n  // TODO Split this function into leaf/element\n  if ($isElementNode(node)) {\n    editor._dirtyElements.set(key, true);\n  } else {\n    editor._dirtyLeaves.add(key);\n  }\n  editor._cloneNotNeeded.add(key);\n  editor._dirtyType = HAS_DIRTY_NODES;\n  node.__key = key;\n}\nfunction errorOnNodeKeyConstructorMismatch(node, existingKey) {\n  const editorState = internalGetActiveEditorState();\n  if (!editorState) {\n    // tests expect to be able to do this kind of clone without an active editor state\n    return;\n  }\n  const existingNode = editorState._nodeMap.get(existingKey);\n  if (existingNode && existingNode.constructor !== node.constructor) {\n    // Lifted condition to if statement because the inverted logic is a bit confusing\n    if (node.constructor.name !== existingNode.constructor.name) {\n      {\n        formatDevErrorMessage(`Lexical node with constructor ${node.constructor.name} attempted to re-use key from node in active editor state with constructor ${existingNode.constructor.name}. Keys must not be re-used when the type is changed.`);\n      }\n    } else {\n      {\n        formatDevErrorMessage(`Lexical node with constructor ${node.constructor.name} attempted to re-use key from node in active editor state with different constructor with the same name (possibly due to invalid Hot Module Replacement). Keys must not be re-used when the type is changed.`);\n      }\n    }\n  }\n}\nfunction internalMarkParentElementsAsDirty(parentKey, nodeMap, dirtyElements) {\n  let nextParentKey = parentKey;\n  while (nextParentKey !== null) {\n    if (dirtyElements.has(nextParentKey)) {\n      return;\n    }\n    const node = nodeMap.get(nextParentKey);\n    if (node === undefined) {\n      break;\n    }\n    dirtyElements.set(nextParentKey, false);\n    nextParentKey = node.__parent;\n  }\n}\n\n// TODO #6031 this function or their callers have to adjust selection (i.e. insertBefore)\nfunction removeFromParent(node) {\n  const oldParent = node.getParent();\n  if (oldParent !== null) {\n    const writableNode = node.getWritable();\n    const writableParent = oldParent.getWritable();\n    const prevSibling = node.getPreviousSibling();\n    const nextSibling = node.getNextSibling();\n    // TODO: this function duplicates a bunch of operations, can be simplified.\n    if (prevSibling === null) {\n      if (nextSibling !== null) {\n        const writableNextSibling = nextSibling.getWritable();\n        writableParent.__first = nextSibling.__key;\n        writableNextSibling.__prev = null;\n      } else {\n        writableParent.__first = null;\n      }\n    } else {\n      const writablePrevSibling = prevSibling.getWritable();\n      if (nextSibling !== null) {\n        const writableNextSibling = nextSibling.getWritable();\n        writableNextSibling.__prev = writablePrevSibling.__key;\n        writablePrevSibling.__next = writableNextSibling.__key;\n      } else {\n        writablePrevSibling.__next = null;\n      }\n      writableNode.__prev = null;\n    }\n    if (nextSibling === null) {\n      if (prevSibling !== null) {\n        const writablePrevSibling = prevSibling.getWritable();\n        writableParent.__last = prevSibling.__key;\n        writablePrevSibling.__next = null;\n      } else {\n        writableParent.__last = null;\n      }\n    } else {\n      const writableNextSibling = nextSibling.getWritable();\n      if (prevSibling !== null) {\n        const writablePrevSibling = prevSibling.getWritable();\n        writablePrevSibling.__next = writableNextSibling.__key;\n        writableNextSibling.__prev = writablePrevSibling.__key;\n      } else {\n        writableNextSibling.__prev = null;\n      }\n      writableNode.__next = null;\n    }\n    writableParent.__size--;\n    writableNode.__parent = null;\n  }\n}\n\n// Never use this function directly! It will break\n// the cloning heuristic. Instead use node.getWritable().\nfunction internalMarkNodeAsDirty(node) {\n  errorOnInfiniteTransforms();\n  const latest = node.getLatest();\n  const parent = latest.__parent;\n  const editorState = getActiveEditorState();\n  const editor = getActiveEditor();\n  const nodeMap = editorState._nodeMap;\n  const dirtyElements = editor._dirtyElements;\n  if (parent !== null) {\n    internalMarkParentElementsAsDirty(parent, nodeMap, dirtyElements);\n  }\n  const key = latest.__key;\n  editor._dirtyType = HAS_DIRTY_NODES;\n  if ($isElementNode(node)) {\n    dirtyElements.set(key, true);\n  } else {\n    // TODO split internally MarkNodeAsDirty into two dedicated Element/leave functions\n    editor._dirtyLeaves.add(key);\n  }\n}\nfunction internalMarkSiblingsAsDirty(node) {\n  const previousNode = node.getPreviousSibling();\n  const nextNode = node.getNextSibling();\n  if (previousNode !== null) {\n    internalMarkNodeAsDirty(previousNode);\n  }\n  if (nextNode !== null) {\n    internalMarkNodeAsDirty(nextNode);\n  }\n}\nfunction $setCompositionKey(compositionKey) {\n  errorOnReadOnly();\n  const editor = getActiveEditor();\n  const previousCompositionKey = editor._compositionKey;\n  if (compositionKey !== previousCompositionKey) {\n    editor._compositionKey = compositionKey;\n    if (previousCompositionKey !== null) {\n      const node = $getNodeByKey(previousCompositionKey);\n      if (node !== null) {\n        node.getWritable();\n      }\n    }\n    if (compositionKey !== null) {\n      const node = $getNodeByKey(compositionKey);\n      if (node !== null) {\n        node.getWritable();\n      }\n    }\n  }\n}\nfunction $getCompositionKey() {\n  if (isCurrentlyReadOnlyMode()) {\n    return null;\n  }\n  const editor = getActiveEditor();\n  return editor._compositionKey;\n}\nfunction $getNodeByKey(key, _editorState) {\n  const editorState = _editorState || getActiveEditorState();\n  const node = editorState._nodeMap.get(key);\n  if (node === undefined) {\n    return null;\n  }\n  return node;\n}\nfunction $getNodeFromDOMNode(dom, editorState) {\n  const editor = getActiveEditor();\n  const key = getNodeKeyFromDOMNode(dom, editor);\n  if (key !== undefined) {\n    return $getNodeByKey(key, editorState);\n  }\n  return null;\n}\nfunction setNodeKeyOnDOMNode(dom, editor, key) {\n  const prop = `__lexicalKey_${editor._key}`;\n  dom[prop] = key;\n}\nfunction getNodeKeyFromDOMNode(dom, editor) {\n  const prop = `__lexicalKey_${editor._key}`;\n  return dom[prop];\n}\nfunction $getNearestNodeFromDOMNode(startingDOM, editorState) {\n  let dom = startingDOM;\n  while (dom != null) {\n    const node = $getNodeFromDOMNode(dom, editorState);\n    if (node !== null) {\n      return node;\n    }\n    dom = getParentElement(dom);\n  }\n  return null;\n}\nfunction cloneDecorators(editor) {\n  const currentDecorators = editor._decorators;\n  const pendingDecorators = Object.assign({}, currentDecorators);\n  editor._pendingDecorators = pendingDecorators;\n  return pendingDecorators;\n}\nfunction getEditorStateTextContent(editorState) {\n  return editorState.read(() => $getRoot().getTextContent());\n}\nfunction markNodesWithTypesAsDirty(editor, types) {\n  // We only need to mark nodes dirty if they were in the previous state.\n  // If they aren't, then they are by definition dirty already.\n  const cachedMap = getCachedTypeToNodeMap(editor.getEditorState());\n  const dirtyNodeMaps = [];\n  for (const type of types) {\n    const nodeMap = cachedMap.get(type);\n    if (nodeMap) {\n      // By construction these are non-empty\n      dirtyNodeMaps.push(nodeMap);\n    }\n  }\n  // Nothing to mark dirty, no update necessary\n  if (dirtyNodeMaps.length === 0) {\n    return;\n  }\n  editor.update(() => {\n    for (const nodeMap of dirtyNodeMaps) {\n      for (const nodeKey of nodeMap.keys()) {\n        // We are only concerned with nodes that are still in the latest NodeMap,\n        // if they no longer exist then markDirty would raise an exception\n        const latest = $getNodeByKey(nodeKey);\n        if (latest) {\n          latest.markDirty();\n        }\n      }\n    }\n  }, editor._pendingEditorState === null ? {\n    tag: 'history-merge'\n  } : undefined);\n}\nfunction $getRoot() {\n  return internalGetRoot(getActiveEditorState());\n}\nfunction internalGetRoot(editorState) {\n  return editorState._nodeMap.get('root');\n}\nfunction $setSelection(selection) {\n  errorOnReadOnly();\n  const editorState = getActiveEditorState();\n  if (selection !== null) {\n    {\n      if (Object.isFrozen(selection)) {\n        {\n          formatDevErrorMessage(`$setSelection called on frozen selection object. Ensure selection is cloned before passing in.`);\n        }\n      }\n    }\n    selection.dirty = true;\n    selection.setCachedNodes(null);\n  }\n  editorState._selection = selection;\n}\nfunction $flushMutations() {\n  errorOnReadOnly();\n  const editor = getActiveEditor();\n  flushRootMutations(editor);\n}\nfunction $getNodeFromDOM(dom) {\n  const editor = getActiveEditor();\n  const nodeKey = getNodeKeyFromDOMTree(dom, editor);\n  if (nodeKey === null) {\n    const rootElement = editor.getRootElement();\n    if (dom === rootElement) {\n      return $getNodeByKey('root');\n    }\n    return null;\n  }\n  return $getNodeByKey(nodeKey);\n}\nfunction getTextNodeOffset(node, moveSelectionToEnd) {\n  return moveSelectionToEnd ? node.getTextContentSize() : 0;\n}\nfunction getNodeKeyFromDOMTree(\n// Note that node here refers to a DOM Node, not an Lexical Node\ndom, editor) {\n  let node = dom;\n  while (node != null) {\n    const key = getNodeKeyFromDOMNode(node, editor);\n    if (key !== undefined) {\n      return key;\n    }\n    node = getParentElement(node);\n  }\n  return null;\n}\n\n/**\n * Return true if `str` contains any valid surrogate pair.\n *\n * See also $updateCaretSelectionForUnicodeCharacter for\n * a discussion on when and why this is useful.\n */\nfunction doesContainSurrogatePair(str) {\n  return /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g.test(str);\n}\nfunction getEditorsToPropagate(editor) {\n  const editorsToPropagate = [];\n  let currentEditor = editor;\n  while (currentEditor !== null) {\n    editorsToPropagate.push(currentEditor);\n    currentEditor = currentEditor._parentEditor;\n  }\n  return editorsToPropagate;\n}\nfunction createUID() {\n  return Math.random().toString(36).replace(/[^a-z]+/g, '').substring(0, 5);\n}\nfunction getAnchorTextFromDOM(anchorNode) {\n  return isDOMTextNode(anchorNode) ? anchorNode.nodeValue : null;\n}\nfunction $updateSelectedTextFromDOM(isCompositionEnd, editor, data) {\n  // Update the text content with the latest composition text\n  const domSelection = getDOMSelection(getWindow(editor));\n  if (domSelection === null) {\n    return;\n  }\n  const anchorNode = domSelection.anchorNode;\n  let {\n    anchorOffset,\n    focusOffset\n  } = domSelection;\n  if (anchorNode !== null) {\n    let textContent = getAnchorTextFromDOM(anchorNode);\n    const node = $getNearestNodeFromDOMNode(anchorNode);\n    if (textContent !== null && $isTextNode(node)) {\n      // Data is intentionally truthy, as we check for boolean, null and empty string.\n      if (textContent === COMPOSITION_SUFFIX && data) {\n        const offset = data.length;\n        textContent = data;\n        anchorOffset = offset;\n        focusOffset = offset;\n      }\n      if (textContent !== null) {\n        $updateTextNodeFromDOMContent(node, textContent, anchorOffset, focusOffset, isCompositionEnd);\n      }\n    }\n  }\n}\nfunction $updateTextNodeFromDOMContent(textNode, textContent, anchorOffset, focusOffset, compositionEnd) {\n  let node = textNode;\n  if (node.isAttached() && (compositionEnd || !node.isDirty())) {\n    const isComposing = node.isComposing();\n    let normalizedTextContent = textContent;\n    if ((isComposing || compositionEnd) && textContent[textContent.length - 1] === COMPOSITION_SUFFIX) {\n      normalizedTextContent = textContent.slice(0, -1);\n    }\n    const prevTextContent = node.getTextContent();\n    if (compositionEnd || normalizedTextContent !== prevTextContent) {\n      if (normalizedTextContent === '') {\n        $setCompositionKey(null);\n        if (!IS_SAFARI && !IS_IOS && !IS_APPLE_WEBKIT) {\n          // For composition (mainly Android), we have to remove the node on a later update\n          const editor = getActiveEditor();\n          setTimeout(() => {\n            editor.update(() => {\n              if (node.isAttached()) {\n                node.remove();\n              }\n            });\n          }, 20);\n        } else {\n          node.remove();\n        }\n        return;\n      }\n      const parent = node.getParent();\n      const prevSelection = $getPreviousSelection();\n      const prevTextContentSize = node.getTextContentSize();\n      const compositionKey = $getCompositionKey();\n      const nodeKey = node.getKey();\n      if (node.isToken() || compositionKey !== null && nodeKey === compositionKey && !isComposing ||\n      // Check if character was added at the start or boundaries when not insertable, and we need\n      // to clear this input from occurring as that action wasn't permitted.\n      $isRangeSelection(prevSelection) && (parent !== null && !parent.canInsertTextBefore() && prevSelection.anchor.offset === 0 || prevSelection.anchor.key === textNode.__key && prevSelection.anchor.offset === 0 && !node.canInsertTextBefore() && !isComposing || prevSelection.focus.key === textNode.__key && prevSelection.focus.offset === prevTextContentSize && !node.canInsertTextAfter() && !isComposing)) {\n        node.markDirty();\n        return;\n      }\n      const selection = $getSelection();\n      if (!$isRangeSelection(selection) || anchorOffset === null || focusOffset === null) {\n        node.setTextContent(normalizedTextContent);\n        return;\n      }\n      selection.setTextNodeRange(node, anchorOffset, node, focusOffset);\n      if (node.isSegmented()) {\n        const originalTextContent = node.getTextContent();\n        const replacement = $createTextNode(originalTextContent);\n        node.replace(replacement);\n        node = replacement;\n      }\n      node.setTextContent(normalizedTextContent);\n    }\n  }\n}\nfunction $previousSiblingDoesNotAcceptText(node) {\n  const previousSibling = node.getPreviousSibling();\n  return ($isTextNode(previousSibling) || $isElementNode(previousSibling) && previousSibling.isInline()) && !previousSibling.canInsertTextAfter();\n}\n\n// This function is connected to $shouldPreventDefaultAndInsertText and determines whether the\n// TextNode boundaries are writable or we should use the previous/next sibling instead. For example,\n// in the case of a LinkNode, boundaries are not writable.\nfunction $shouldInsertTextAfterOrBeforeTextNode(selection, node) {\n  if (node.isSegmented()) {\n    return true;\n  }\n  if (!selection.isCollapsed()) {\n    return false;\n  }\n  const offset = selection.anchor.offset;\n  const parent = node.getParentOrThrow();\n  const isToken = node.isToken();\n  if (offset === 0) {\n    return !node.canInsertTextBefore() || !parent.canInsertTextBefore() && !node.isComposing() || isToken || $previousSiblingDoesNotAcceptText(node);\n  } else if (offset === node.getTextContentSize()) {\n    return !node.canInsertTextAfter() || !parent.canInsertTextAfter() && !node.isComposing() || isToken;\n  } else {\n    return false;\n  }\n}\nfunction isTab(key, altKey, ctrlKey, metaKey) {\n  return key === 'Tab' && !altKey && !ctrlKey && !metaKey;\n}\nfunction isBold(key, altKey, metaKey, ctrlKey) {\n  return key.toLowerCase() === 'b' && !altKey && controlOrMeta(metaKey, ctrlKey);\n}\nfunction isItalic(key, altKey, metaKey, ctrlKey) {\n  return key.toLowerCase() === 'i' && !altKey && controlOrMeta(metaKey, ctrlKey);\n}\nfunction isUnderline(key, altKey, metaKey, ctrlKey) {\n  return key.toLowerCase() === 'u' && !altKey && controlOrMeta(metaKey, ctrlKey);\n}\nfunction isParagraph(key, shiftKey) {\n  return isReturn(key) && !shiftKey;\n}\nfunction isLineBreak(key, shiftKey) {\n  return isReturn(key) && shiftKey;\n}\n\n// Inserts a new line after the selection\n\nfunction isOpenLineBreak(key, ctrlKey) {\n  // 79 = KeyO\n  return IS_APPLE && ctrlKey && key.toLowerCase() === 'o';\n}\nfunction isDeleteWordBackward(key, altKey, ctrlKey) {\n  return isBackspace(key) && (IS_APPLE ? altKey : ctrlKey);\n}\nfunction isDeleteWordForward(key, altKey, ctrlKey) {\n  return isDelete(key) && (IS_APPLE ? altKey : ctrlKey);\n}\nfunction isDeleteLineBackward(key, metaKey) {\n  return IS_APPLE && metaKey && isBackspace(key);\n}\nfunction isDeleteLineForward(key, metaKey) {\n  return IS_APPLE && metaKey && isDelete(key);\n}\nfunction isDeleteBackward(key, altKey, metaKey, ctrlKey) {\n  if (IS_APPLE) {\n    if (altKey || metaKey) {\n      return false;\n    }\n    return isBackspace(key) || key.toLowerCase() === 'h' && ctrlKey;\n  }\n  if (ctrlKey || altKey || metaKey) {\n    return false;\n  }\n  return isBackspace(key);\n}\nfunction isDeleteForward(key, ctrlKey, shiftKey, altKey, metaKey) {\n  if (IS_APPLE) {\n    if (shiftKey || altKey || metaKey) {\n      return false;\n    }\n    return isDelete(key) || key.toLowerCase() === 'd' && ctrlKey;\n  }\n  if (ctrlKey || altKey || metaKey) {\n    return false;\n  }\n  return isDelete(key);\n}\nfunction isUndo(key, shiftKey, metaKey, ctrlKey) {\n  return key.toLowerCase() === 'z' && !shiftKey && controlOrMeta(metaKey, ctrlKey);\n}\nfunction isRedo(key, shiftKey, metaKey, ctrlKey) {\n  if (IS_APPLE) {\n    return key.toLowerCase() === 'z' && metaKey && shiftKey;\n  }\n  return key.toLowerCase() === 'y' && ctrlKey || key.toLowerCase() === 'z' && ctrlKey && shiftKey;\n}\nfunction isCopy(key, shiftKey, metaKey, ctrlKey) {\n  if (shiftKey) {\n    return false;\n  }\n  if (key.toLowerCase() === 'c') {\n    return IS_APPLE ? metaKey : ctrlKey;\n  }\n  return false;\n}\nfunction isCut(key, shiftKey, metaKey, ctrlKey) {\n  if (shiftKey) {\n    return false;\n  }\n  if (key.toLowerCase() === 'x') {\n    return IS_APPLE ? metaKey : ctrlKey;\n  }\n  return false;\n}\nfunction isArrowLeft(key) {\n  return key === 'ArrowLeft';\n}\nfunction isArrowRight(key) {\n  return key === 'ArrowRight';\n}\nfunction isArrowUp(key) {\n  return key === 'ArrowUp';\n}\nfunction isArrowDown(key) {\n  return key === 'ArrowDown';\n}\nfunction isMoveBackward(key, ctrlKey, altKey, metaKey) {\n  return isArrowLeft(key) && !ctrlKey && !metaKey && !altKey;\n}\nfunction isMoveToStart(key, ctrlKey, shiftKey, altKey, metaKey) {\n  return isArrowLeft(key) && !altKey && !shiftKey && (ctrlKey || metaKey);\n}\nfunction isMoveForward(key, ctrlKey, altKey, metaKey) {\n  return isArrowRight(key) && !ctrlKey && !metaKey && !altKey;\n}\nfunction isMoveToEnd(key, ctrlKey, shiftKey, altKey, metaKey) {\n  return isArrowRight(key) && !altKey && !shiftKey && (ctrlKey || metaKey);\n}\nfunction isMoveUp(key, ctrlKey, metaKey) {\n  return isArrowUp(key) && !ctrlKey && !metaKey;\n}\nfunction isMoveDown(key, ctrlKey, metaKey) {\n  return isArrowDown(key) && !ctrlKey && !metaKey;\n}\nfunction isModifier(ctrlKey, shiftKey, altKey, metaKey) {\n  return ctrlKey || shiftKey || altKey || metaKey;\n}\nfunction isSpace(key) {\n  return key === ' ';\n}\nfunction controlOrMeta(metaKey, ctrlKey) {\n  if (IS_APPLE) {\n    return metaKey;\n  }\n  return ctrlKey;\n}\nfunction isReturn(key) {\n  return key === 'Enter';\n}\nfunction isBackspace(key) {\n  return key === 'Backspace';\n}\nfunction isEscape(key) {\n  return key === 'Escape';\n}\nfunction isDelete(key) {\n  return key === 'Delete';\n}\nfunction isSelectAll(key, metaKey, ctrlKey) {\n  return key.toLowerCase() === 'a' && controlOrMeta(metaKey, ctrlKey);\n}\nfunction $selectAll(selection) {\n  const root = $getRoot();\n  if ($isRangeSelection(selection)) {\n    const anchor = selection.anchor;\n    const focus = selection.focus;\n    const anchorNode = anchor.getNode();\n    const topParent = anchorNode.getTopLevelElementOrThrow();\n    const rootNode = topParent.getParentOrThrow();\n    anchor.set(rootNode.getKey(), 0, 'element');\n    focus.set(rootNode.getKey(), rootNode.getChildrenSize(), 'element');\n    $normalizeSelection(selection);\n    return selection;\n  } else {\n    // Create a new RangeSelection\n    const newSelection = root.select(0, root.getChildrenSize());\n    $setSelection($normalizeSelection(newSelection));\n    return newSelection;\n  }\n}\nfunction getCachedClassNameArray(classNamesTheme, classNameThemeType) {\n  if (classNamesTheme.__lexicalClassNameCache === undefined) {\n    classNamesTheme.__lexicalClassNameCache = {};\n  }\n  const classNamesCache = classNamesTheme.__lexicalClassNameCache;\n  const cachedClassNames = classNamesCache[classNameThemeType];\n  if (cachedClassNames !== undefined) {\n    return cachedClassNames;\n  }\n  const classNames = classNamesTheme[classNameThemeType];\n  // As we're using classList, we need\n  // to handle className tokens that have spaces.\n  // The easiest way to do this to convert the\n  // className tokens to an array that can be\n  // applied to classList.add()/remove().\n  if (typeof classNames === 'string') {\n    const classNamesArr = normalizeClassNames(classNames);\n    classNamesCache[classNameThemeType] = classNamesArr;\n    return classNamesArr;\n  }\n  return classNames;\n}\nfunction setMutatedNode(mutatedNodes, registeredNodes, mutationListeners, node, mutation) {\n  if (mutationListeners.size === 0) {\n    return;\n  }\n  const nodeType = node.__type;\n  const nodeKey = node.__key;\n  const registeredNode = registeredNodes.get(nodeType);\n  if (registeredNode === undefined) {\n    {\n      formatDevErrorMessage(`Type ${nodeType} not in registeredNodes`);\n    }\n  }\n  const klass = registeredNode.klass;\n  let mutatedNodesByType = mutatedNodes.get(klass);\n  if (mutatedNodesByType === undefined) {\n    mutatedNodesByType = new Map();\n    mutatedNodes.set(klass, mutatedNodesByType);\n  }\n  const prevMutation = mutatedNodesByType.get(nodeKey);\n  // If the node has already been \"destroyed\", yet we are\n  // re-making it, then this means a move likely happened.\n  // We should change the mutation to be that of \"updated\"\n  // instead.\n  const isMove = prevMutation === 'destroyed' && mutation === 'created';\n  if (prevMutation === undefined || isMove) {\n    mutatedNodesByType.set(nodeKey, isMove ? 'updated' : mutation);\n  }\n}\n/**\n * @deprecated Use {@link LexicalEditor.registerMutationListener} with `skipInitialization: false` instead.\n */\nfunction $nodesOfType(klass) {\n  const klassType = klass.getType();\n  const editorState = getActiveEditorState();\n  if (editorState._readOnly) {\n    const nodes = getCachedTypeToNodeMap(editorState).get(klassType);\n    return nodes ? Array.from(nodes.values()) : [];\n  }\n  const nodes = editorState._nodeMap;\n  const nodesOfType = [];\n  for (const [, node] of nodes) {\n    if (node instanceof klass && node.__type === klassType && node.isAttached()) {\n      nodesOfType.push(node);\n    }\n  }\n  return nodesOfType;\n}\nfunction resolveElement(element, isBackward, focusOffset) {\n  const parent = element.getParent();\n  let offset = focusOffset;\n  let block = element;\n  if (parent !== null) {\n    if (isBackward && focusOffset === 0) {\n      offset = block.getIndexWithinParent();\n      block = parent;\n    } else if (!isBackward && focusOffset === block.getChildrenSize()) {\n      offset = block.getIndexWithinParent() + 1;\n      block = parent;\n    }\n  }\n  return block.getChildAtIndex(isBackward ? offset - 1 : offset);\n}\nfunction $getAdjacentNode(focus, isBackward) {\n  const focusOffset = focus.offset;\n  if (focus.type === 'element') {\n    const block = focus.getNode();\n    return resolveElement(block, isBackward, focusOffset);\n  } else {\n    const focusNode = focus.getNode();\n    if (isBackward && focusOffset === 0 || !isBackward && focusOffset === focusNode.getTextContentSize()) {\n      const possibleNode = isBackward ? focusNode.getPreviousSibling() : focusNode.getNextSibling();\n      if (possibleNode === null) {\n        return resolveElement(focusNode.getParentOrThrow(), isBackward, focusNode.getIndexWithinParent() + (isBackward ? 0 : 1));\n      }\n      return possibleNode;\n    }\n  }\n  return null;\n}\nfunction isFirefoxClipboardEvents(editor) {\n  const event = getWindow(editor).event;\n  const inputType = event && event.inputType;\n  return inputType === 'insertFromPaste' || inputType === 'insertFromPasteAsQuotation';\n}\nfunction dispatchCommand(editor, command, payload) {\n  return triggerCommandListeners(editor, command, payload);\n}\nfunction $textContentRequiresDoubleLinebreakAtEnd(node) {\n  return !$isRootNode(node) && !node.isLastChild() && !node.isInline();\n}\nfunction getElementByKeyOrThrow(editor, key) {\n  const element = editor._keyToDOMMap.get(key);\n  if (element === undefined) {\n    {\n      formatDevErrorMessage(`Reconciliation: could not find DOM element for node key ${key}`);\n    }\n  }\n  return element;\n}\nfunction getParentElement(node) {\n  const parentElement = node.assignedSlot || node.parentElement;\n  return isDocumentFragment(parentElement) ? parentElement.host : parentElement;\n}\nfunction getDOMOwnerDocument(target) {\n  return isDOMDocumentNode(target) ? target : isHTMLElement(target) ? target.ownerDocument : null;\n}\nfunction scrollIntoViewIfNeeded(editor, selectionRect, rootElement) {\n  const doc = getDOMOwnerDocument(rootElement);\n  const defaultView = getDefaultView(doc);\n  if (doc === null || defaultView === null) {\n    return;\n  }\n  let {\n    top: currentTop,\n    bottom: currentBottom\n  } = selectionRect;\n  let targetTop = 0;\n  let targetBottom = 0;\n  let element = rootElement;\n  while (element !== null) {\n    const isBodyElement = element === doc.body;\n    if (isBodyElement) {\n      targetTop = 0;\n      targetBottom = getWindow(editor).innerHeight;\n    } else {\n      const targetRect = element.getBoundingClientRect();\n      targetTop = targetRect.top;\n      targetBottom = targetRect.bottom;\n    }\n    let diff = 0;\n    if (currentTop < targetTop) {\n      diff = -(targetTop - currentTop);\n    } else if (currentBottom > targetBottom) {\n      diff = currentBottom - targetBottom;\n    }\n    if (diff !== 0) {\n      if (isBodyElement) {\n        // Only handles scrolling of Y axis\n        defaultView.scrollBy(0, diff);\n      } else {\n        const scrollTop = element.scrollTop;\n        element.scrollTop += diff;\n        const yOffset = element.scrollTop - scrollTop;\n        currentTop -= yOffset;\n        currentBottom -= yOffset;\n      }\n    }\n    if (isBodyElement) {\n      break;\n    }\n    element = getParentElement(element);\n  }\n}\nfunction $hasUpdateTag(tag) {\n  const editor = getActiveEditor();\n  return editor._updateTags.has(tag);\n}\nfunction $addUpdateTag(tag) {\n  errorOnReadOnly();\n  const editor = getActiveEditor();\n  editor._updateTags.add(tag);\n}\n\n/**\n * Add a function to run after the current update. This will run after any\n * `onUpdate` function already supplied to `editor.update()`, as well as any\n * functions added with previous calls to `$onUpdate`.\n *\n * @param updateFn The function to run after the current update.\n */\nfunction $onUpdate(updateFn) {\n  errorOnReadOnly();\n  const editor = getActiveEditor();\n  editor._deferred.push(updateFn);\n}\nfunction $maybeMoveChildrenSelectionToParent(parentNode) {\n  const selection = $getSelection();\n  if (!$isRangeSelection(selection) || !$isElementNode(parentNode)) {\n    return selection;\n  }\n  const {\n    anchor,\n    focus\n  } = selection;\n  const anchorNode = anchor.getNode();\n  const focusNode = focus.getNode();\n  if ($hasAncestor(anchorNode, parentNode)) {\n    anchor.set(parentNode.__key, 0, 'element');\n  }\n  if ($hasAncestor(focusNode, parentNode)) {\n    focus.set(parentNode.__key, 0, 'element');\n  }\n  return selection;\n}\nfunction $hasAncestor(child, targetNode) {\n  let parent = child.getParent();\n  while (parent !== null) {\n    if (parent.is(targetNode)) {\n      return true;\n    }\n    parent = parent.getParent();\n  }\n  return false;\n}\nfunction getDefaultView(domElem) {\n  const ownerDoc = getDOMOwnerDocument(domElem);\n  return ownerDoc ? ownerDoc.defaultView : null;\n}\nfunction getWindow(editor) {\n  const windowObj = editor._window;\n  if (windowObj === null) {\n    {\n      formatDevErrorMessage(`window object not found`);\n    }\n  }\n  return windowObj;\n}\nfunction $isInlineElementOrDecoratorNode(node) {\n  return $isElementNode(node) && node.isInline() || $isDecoratorNode(node) && node.isInline();\n}\nfunction $getNearestRootOrShadowRoot(node) {\n  let parent = node.getParentOrThrow();\n  while (parent !== null) {\n    if ($isRootOrShadowRoot(parent)) {\n      return parent;\n    }\n    parent = parent.getParentOrThrow();\n  }\n  return parent;\n}\nfunction $isRootOrShadowRoot(node) {\n  return $isRootNode(node) || $isElementNode(node) && node.isShadowRoot();\n}\n\n/**\n * Returns a shallow clone of node with a new key\n *\n * @param node - The node to be copied.\n * @returns The copy of the node.\n */\nfunction $copyNode(node) {\n  const copy = node.constructor.clone(node);\n  $setNodeKey(copy, null);\n  return copy;\n}\nfunction $applyNodeReplacement(node) {\n  const editor = getActiveEditor();\n  const nodeType = node.constructor.getType();\n  const registeredNode = editor._nodes.get(nodeType);\n  if (!(registeredNode !== undefined)) {\n    formatDevErrorMessage(`$applyNodeReplacement node ${node.constructor.name} with type ${nodeType} must be registered to the editor. You can do this by passing the node class via the \"nodes\" array in the editor config.`);\n  }\n  const {\n    replace,\n    replaceWithKlass\n  } = registeredNode;\n  if (replace !== null) {\n    const replacementNode = replace(node);\n    const replacementNodeKlass = replacementNode.constructor;\n    if (replaceWithKlass !== null) {\n      if (!(replacementNode instanceof replaceWithKlass)) {\n        formatDevErrorMessage(`$applyNodeReplacement failed. Expected replacement node to be an instance of ${replaceWithKlass.name} with type ${replaceWithKlass.getType()} but returned ${replacementNodeKlass.name} with type ${replacementNodeKlass.getType()} from original node ${node.constructor.name} with type ${nodeType}`);\n      }\n    } else {\n      if (!(replacementNode instanceof node.constructor && replacementNodeKlass !== node.constructor)) {\n        formatDevErrorMessage(`$applyNodeReplacement failed. Ensure replacement node ${replacementNodeKlass.name} with type ${replacementNodeKlass.getType()} is a subclass of the original node ${node.constructor.name} with type ${nodeType}.`);\n      }\n    }\n    if (!(replacementNode.__key !== node.__key)) {\n      formatDevErrorMessage(`$applyNodeReplacement failed. Ensure that the key argument is *not* used in your replace function (from node ${node.constructor.name} with type ${nodeType} to node ${replacementNodeKlass.name} with type ${replacementNodeKlass.getType()}), Node keys must never be re-used except by the static clone method.`);\n    }\n    return replacementNode;\n  }\n  return node;\n}\nfunction errorOnInsertTextNodeOnRoot(node, insertNode) {\n  const parentNode = node.getParent();\n  if ($isRootNode(parentNode) && !$isElementNode(insertNode) && !$isDecoratorNode(insertNode)) {\n    {\n      formatDevErrorMessage(`Only element or decorator nodes can be inserted in to the root node`);\n    }\n  }\n}\nfunction $getNodeByKeyOrThrow(key) {\n  const node = $getNodeByKey(key);\n  if (node === null) {\n    {\n      formatDevErrorMessage(`Expected node with key ${key} to exist but it's not in the nodeMap.`);\n    }\n  }\n  return node;\n}\nfunction createBlockCursorElement(editorConfig) {\n  const theme = editorConfig.theme;\n  const element = document.createElement('div');\n  element.contentEditable = 'false';\n  element.setAttribute('data-lexical-cursor', 'true');\n  let blockCursorTheme = theme.blockCursor;\n  if (blockCursorTheme !== undefined) {\n    if (typeof blockCursorTheme === 'string') {\n      const classNamesArr = normalizeClassNames(blockCursorTheme);\n      // @ts-expect-error: intentional\n      blockCursorTheme = theme.blockCursor = classNamesArr;\n    }\n    if (blockCursorTheme !== undefined) {\n      element.classList.add(...blockCursorTheme);\n    }\n  }\n  return element;\n}\nfunction needsBlockCursor(node) {\n  return ($isDecoratorNode(node) || $isElementNode(node) && !node.canBeEmpty()) && !node.isInline();\n}\nfunction removeDOMBlockCursorElement(blockCursorElement, editor, rootElement) {\n  rootElement.style.removeProperty('caret-color');\n  editor._blockCursorElement = null;\n  const parentElement = blockCursorElement.parentElement;\n  if (parentElement !== null) {\n    parentElement.removeChild(blockCursorElement);\n  }\n}\nfunction updateDOMBlockCursorElement(editor, rootElement, nextSelection) {\n  let blockCursorElement = editor._blockCursorElement;\n  if ($isRangeSelection(nextSelection) && nextSelection.isCollapsed() && nextSelection.anchor.type === 'element' && rootElement.contains(document.activeElement)) {\n    const anchor = nextSelection.anchor;\n    const elementNode = anchor.getNode();\n    const offset = anchor.offset;\n    const elementNodeSize = elementNode.getChildrenSize();\n    let isBlockCursor = false;\n    let insertBeforeElement = null;\n    if (offset === elementNodeSize) {\n      const child = elementNode.getChildAtIndex(offset - 1);\n      if (needsBlockCursor(child)) {\n        isBlockCursor = true;\n      }\n    } else {\n      const child = elementNode.getChildAtIndex(offset);\n      if (child !== null && needsBlockCursor(child)) {\n        const sibling = child.getPreviousSibling();\n        if (sibling === null || needsBlockCursor(sibling)) {\n          isBlockCursor = true;\n          insertBeforeElement = editor.getElementByKey(child.__key);\n        }\n      }\n    }\n    if (isBlockCursor) {\n      const elementDOM = editor.getElementByKey(elementNode.__key);\n      if (blockCursorElement === null) {\n        editor._blockCursorElement = blockCursorElement = createBlockCursorElement(editor._config);\n      }\n      rootElement.style.caretColor = 'transparent';\n      if (insertBeforeElement === null) {\n        elementDOM.appendChild(blockCursorElement);\n      } else {\n        elementDOM.insertBefore(blockCursorElement, insertBeforeElement);\n      }\n      return;\n    }\n  }\n  // Remove cursor\n  if (blockCursorElement !== null) {\n    removeDOMBlockCursorElement(blockCursorElement, editor, rootElement);\n  }\n}\n\n/**\n * Returns the selection for the given window, or the global window if null.\n * Will return null if {@link CAN_USE_DOM} is false.\n *\n * @param targetWindow The window to get the selection from\n * @returns a Selection or null\n */\nfunction getDOMSelection(targetWindow) {\n  return !CAN_USE_DOM ? null : (targetWindow || window).getSelection();\n}\n\n/**\n * Returns the selection for the defaultView of the ownerDocument of given EventTarget.\n *\n * @param eventTarget The node to get the selection from\n * @returns a Selection or null\n */\nfunction getDOMSelectionFromTarget(eventTarget) {\n  const defaultView = getDefaultView(eventTarget);\n  return defaultView ? defaultView.getSelection() : null;\n}\nfunction $splitNode(node, offset) {\n  let startNode = node.getChildAtIndex(offset);\n  if (startNode == null) {\n    startNode = node;\n  }\n  if (!!$isRootOrShadowRoot(node)) {\n    formatDevErrorMessage(`Can not call $splitNode() on root element`);\n  }\n  const recurse = currentNode => {\n    const parent = currentNode.getParentOrThrow();\n    const isParentRoot = $isRootOrShadowRoot(parent);\n    // The node we start split from (leaf) is moved, but its recursive\n    // parents are copied to create separate tree\n    const nodeToMove = currentNode === startNode && !isParentRoot ? currentNode : $copyNode(currentNode);\n    if (isParentRoot) {\n      if (!($isElementNode(currentNode) && $isElementNode(nodeToMove))) {\n        formatDevErrorMessage(`Children of a root must be ElementNode`);\n      }\n      currentNode.insertAfter(nodeToMove);\n      return [currentNode, nodeToMove, nodeToMove];\n    } else {\n      const [leftTree, rightTree, newParent] = recurse(parent);\n      const nextSiblings = currentNode.getNextSiblings();\n      newParent.append(nodeToMove, ...nextSiblings);\n      return [leftTree, rightTree, nodeToMove];\n    }\n  };\n  const [leftTree, rightTree] = recurse(startNode);\n  return [leftTree, rightTree];\n}\nfunction $findMatchingParent(startingNode, findFn) {\n  let curr = startingNode;\n  while (curr !== $getRoot() && curr != null) {\n    if (findFn(curr)) {\n      return curr;\n    }\n    curr = curr.getParent();\n  }\n  return null;\n}\n\n/**\n * @param x - The element being tested\n * @returns Returns true if x is an HTML anchor tag, false otherwise\n */\nfunction isHTMLAnchorElement(x) {\n  return isHTMLElement(x) && x.tagName === 'A';\n}\n\n/**\n * @param x - The element being tested\n * @returns Returns true if x is an HTML element, false otherwise.\n */\nfunction isHTMLElement(x) {\n  return isDOMNode(x) && x.nodeType === DOM_ELEMENT_TYPE;\n}\n\n/**\n * @param x - The element being tested\n * @returns Returns true if x is a DOM Node, false otherwise.\n */\nfunction isDOMNode(x) {\n  return typeof x === 'object' && x !== null && 'nodeType' in x && typeof x.nodeType === 'number';\n}\n\n/**\n * @param x - The element being testing\n * @returns Returns true if x is a document fragment, false otherwise.\n */\nfunction isDocumentFragment(x) {\n  return isDOMNode(x) && x.nodeType === DOM_DOCUMENT_FRAGMENT_TYPE;\n}\n\n/**\n *\n * @param node - the Dom Node to check\n * @returns if the Dom Node is an inline node\n */\nfunction isInlineDomNode(node) {\n  const inlineNodes = new RegExp(/^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|mark|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var|#text)$/, 'i');\n  return node.nodeName.match(inlineNodes) !== null;\n}\n\n/**\n *\n * @param node - the Dom Node to check\n * @returns if the Dom Node is a block node\n */\nfunction isBlockDomNode(node) {\n  const blockNodes = new RegExp(/^(address|article|aside|blockquote|canvas|dd|div|dl|dt|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|header|hr|li|main|nav|noscript|ol|p|pre|section|table|td|tfoot|ul|video)$/, 'i');\n  return node.nodeName.match(blockNodes) !== null;\n}\n\n/**\n * @internal\n *\n * This function is for internal use of the library.\n * Please do not use it as it may change in the future.\n *\n * This function returns true for a DecoratorNode that is not inline OR\n * an ElementNode that is:\n * - not a root or shadow root\n * - not inline\n * - can't be empty\n * - has no children or an inline first child\n */\nfunction INTERNAL_$isBlock(node) {\n  if ($isDecoratorNode(node) && !node.isInline()) {\n    return true;\n  }\n  if (!$isElementNode(node) || $isRootOrShadowRoot(node)) {\n    return false;\n  }\n  const firstChild = node.getFirstChild();\n  const isLeafElement = firstChild === null || $isLineBreakNode(firstChild) || $isTextNode(firstChild) || firstChild.isInline();\n  return !node.isInline() && node.canBeEmpty() !== false && isLeafElement;\n}\nfunction $getAncestor(node, predicate) {\n  let parent = node;\n  while (parent !== null && parent.getParent() !== null && !predicate(parent)) {\n    parent = parent.getParentOrThrow();\n  }\n  return predicate(parent) ? parent : null;\n}\n\n/**\n * Utility function for accessing current active editor instance.\n * @returns Current active editor\n */\nfunction $getEditor() {\n  return getActiveEditor();\n}\n\n/** @internal */\n\n/**\n * @internal\n * Compute a cached Map of node type to nodes for a frozen EditorState\n */\nconst cachedNodeMaps = new WeakMap();\nconst EMPTY_TYPE_TO_NODE_MAP = new Map();\nfunction getCachedTypeToNodeMap(editorState) {\n  // If this is a new Editor it may have a writable this._editorState\n  // with only a 'root' entry.\n  if (!editorState._readOnly && editorState.isEmpty()) {\n    return EMPTY_TYPE_TO_NODE_MAP;\n  }\n  if (!editorState._readOnly) {\n    formatDevErrorMessage(`getCachedTypeToNodeMap called with a writable EditorState`);\n  }\n  let typeToNodeMap = cachedNodeMaps.get(editorState);\n  if (!typeToNodeMap) {\n    typeToNodeMap = computeTypeToNodeMap(editorState);\n    cachedNodeMaps.set(editorState, typeToNodeMap);\n  }\n  return typeToNodeMap;\n}\n\n/**\n * @internal\n * Compute a Map of node type to nodes for an EditorState\n */\nfunction computeTypeToNodeMap(editorState) {\n  const typeToNodeMap = new Map();\n  for (const [nodeKey, node] of editorState._nodeMap) {\n    const nodeType = node.__type;\n    let nodeMap = typeToNodeMap.get(nodeType);\n    if (!nodeMap) {\n      nodeMap = new Map();\n      typeToNodeMap.set(nodeType, nodeMap);\n    }\n    nodeMap.set(nodeKey, node);\n  }\n  return typeToNodeMap;\n}\n\n/**\n * Returns a clone of a node using `node.constructor.clone()` followed by\n * `clone.afterCloneFrom(node)`. The resulting clone must have the same key,\n * parent/next/prev pointers, and other properties that are not set by\n * `node.constructor.clone` (format, style, etc.). This is primarily used by\n * {@link LexicalNode.getWritable} to create a writable version of an\n * existing node. The clone is the same logical node as the original node,\n * do not try and use this function to duplicate or copy an existing node.\n *\n * Does not mutate the EditorState.\n * @param node - The node to be cloned.\n * @returns The clone of the node.\n */\nfunction $cloneWithProperties(latestNode) {\n  const constructor = latestNode.constructor;\n  const mutableNode = constructor.clone(latestNode);\n  mutableNode.afterCloneFrom(latestNode);\n  {\n    if (!(mutableNode.__key === latestNode.__key)) {\n      formatDevErrorMessage(`$cloneWithProperties: ${constructor.name}.clone(node) (with type '${constructor.getType()}') did not return a node with the same key, make sure to specify node.__key as the last argument to the constructor`);\n    }\n    if (!(mutableNode.__parent === latestNode.__parent && mutableNode.__next === latestNode.__next && mutableNode.__prev === latestNode.__prev)) {\n      formatDevErrorMessage(`$cloneWithProperties: ${constructor.name}.clone(node) (with type '${constructor.getType()}') overrided afterCloneFrom but did not call super.afterCloneFrom(prevNode)`);\n    }\n  }\n  return mutableNode;\n}\nfunction setNodeIndentFromDOM(elementDom, elementNode) {\n  const indentSize = parseInt(elementDom.style.paddingInlineStart, 10) || 0;\n  const indent = indentSize / 40;\n  elementNode.setIndent(indent);\n}\n\n/**\n * @internal\n *\n * Mark this node as unmanaged by lexical's mutation observer like\n * decorator nodes\n */\nfunction setDOMUnmanaged(elementDom) {\n  const el = elementDom;\n  el.__lexicalUnmanaged = true;\n}\n\n/**\n * @internal\n *\n * True if this DOM node was marked with {@link setDOMUnmanaged}\n */\nfunction isDOMUnmanaged(elementDom) {\n  const el = elementDom;\n  return el.__lexicalUnmanaged === true;\n}\n\n/**\n * The direction of a caret, 'next' points towards the end of the document\n * and 'previous' points towards the beginning\n */\n\n/**\n * A type utility to flip next and previous\n */\n\n/**\n * A sibling caret type points from a LexicalNode origin to its next or previous sibling,\n * and a child caret type points from an ElementNode origin to its first or last child.\n */\n\n/**\n * The RootMode is specified in all caret traversals where the traversal can go up\n * towards the root. 'root' means that it will stop at the document root,\n * and 'shadowRoot' will stop at the document root or any shadow root\n * (per {@link $isRootOrShadowRoot}).\n */\n\nconst FLIP_DIRECTION = {\n  next: 'previous',\n  previous: 'next'\n};\n\n/** @noInheritDoc */\n\n/**\n * A RangeSelection expressed as a pair of Carets\n */\n\n/**\n * A NodeCaret is the combination of an origin node and a direction\n * that points towards where a connected node will be fetched, inserted,\n * or replaced. A SiblingCaret points from a node to its next or previous\n * sibling, and a ChildCaret points to its first or last child\n * (using next or previous as direction, for symmetry with SiblingCaret).\n *\n * The differences between NodeCaret and PointType are:\n * - NodeCaret can only be used to refer to an entire node (PointCaret is used when a full analog is needed). A PointType of text type can be used to refer to a specific location inside of a TextNode.\n * - NodeCaret stores an origin node, type (sibling or child), and direction (next or previous). A PointType stores a type (text or element), the key of a node, and a text or child offset within that node.\n * - NodeCaret is directional and always refers to a very specific node, eliminating all ambiguity. PointType can refer to the location before or at a node depending on context.\n * - NodeCaret is more robust to nearby mutations, as it relies only on a node's direct connections. An element Any change to the count of previous siblings in an element PointType will invalidate it.\n * - NodeCaret is designed to work more directly with the internal representation of the document tree, making it suitable for use in traversals without performing any redundant work.\n *\n * The caret does *not* update in response to any mutations, you should\n * not persist it across editor updates, and using a caret after its origin\n * node has been removed or replaced may result in runtime errors.\n */\n\n/**\n * A PointCaret is a NodeCaret that also includes a\n * TextPointCaret type which refers to a specific offset of a TextNode.\n * This type is separate because it is not relevant to general node traversal\n * so it doesn't make sense to have it show up except when defining\n * a CaretRange and in those cases there will be at most two of them only\n * at the boundaries.\n *\n * The addition of TextPointCaret allows this type to represent any location\n * that is representable by PointType, as the TextPointCaret refers to a\n * specific offset within a TextNode.\n */\n\n/**\n * A SiblingCaret points from an origin LexicalNode towards its next or previous sibling.\n */\n\n/**\n * A ChildCaret points from an origin ElementNode towards its first or last child.\n */\n\n/**\n * A TextPointCaret is a special case of a SiblingCaret that also carries\n * an offset used for representing partially selected TextNode at the edges\n * of a CaretRange.\n *\n * The direction determines which part of the text is adjacent to the caret,\n * if next it's all of the text after offset. If previous, it's all of the\n * text before offset.\n *\n * While this can be used in place of any SiblingCaret of a TextNode,\n * the offset into the text will be ignored except in contexts that\n * specifically use the TextPointCaret or PointCaret types.\n */\n\n/**\n * A TextPointCaretSlice is a wrapper for a TextPointCaret that carries a signed\n * distance representing the direction and amount of text selected from the given\n * caret. A negative distance means that text before offset is selected, a\n * positive distance means that text after offset is selected. The offset+distance\n * pair is not affected in any way by the direction of the caret.\n */\n\n/**\n * A utility type to specify that a CaretRange may have zero,\n * one, or two associated TextPointCaretSlice. If the anchor\n * and focus are on the same node, the anchorSlice will contain\n * the slice and focusSlie will be null.\n */\n\nclass AbstractCaret {\n  constructor(origin) {\n    this.origin = origin;\n  }\n  [Symbol.iterator]() {\n    return makeStepwiseIterator({\n      hasNext: $isSiblingCaret,\n      initial: this.getAdjacentCaret(),\n      map: caret => caret,\n      step: caret => caret.getAdjacentCaret()\n    });\n  }\n  getAdjacentCaret() {\n    return $getSiblingCaret(this.getNodeAtCaret(), this.direction);\n  }\n  getSiblingCaret() {\n    return $getSiblingCaret(this.origin, this.direction);\n  }\n  remove() {\n    const node = this.getNodeAtCaret();\n    if (node) {\n      node.remove();\n    }\n    return this;\n  }\n  replaceOrInsert(node, includeChildren) {\n    const target = this.getNodeAtCaret();\n    if (node.is(this.origin) || node.is(target)) ; else if (target === null) {\n      this.insert(node);\n    } else {\n      target.replace(node, includeChildren);\n    }\n    return this;\n  }\n  splice(deleteCount, nodes, nodesDirection = 'next') {\n    const nodeIter = nodesDirection === this.direction ? nodes : Array.from(nodes).reverse();\n    let caret = this;\n    const parent = this.getParentAtCaret();\n    const nodesToRemove = new Map();\n    // Find all of the nodes we expect to remove first, so\n    // we don't have to worry about the cases where there is\n    // overlap between the nodes to insert and the nodes to\n    // remove\n    for (let removeCaret = caret.getAdjacentCaret(); removeCaret !== null && nodesToRemove.size < deleteCount; removeCaret = removeCaret.getAdjacentCaret()) {\n      const writableNode = removeCaret.origin.getWritable();\n      nodesToRemove.set(writableNode.getKey(), writableNode);\n    }\n    // TODO: Optimize this to work directly with node internals\n    for (const node of nodeIter) {\n      if (nodesToRemove.size > 0) {\n        // For some reason `npm run tsc-extension` needs this annotation?\n        const target = caret.getNodeAtCaret();\n        if (target) {\n          nodesToRemove.delete(target.getKey());\n          nodesToRemove.delete(node.getKey());\n          if (target.is(node) || caret.origin.is(node)) ; else {\n            const nodeParent = node.getParent();\n            if (nodeParent && nodeParent.is(parent)) {\n              // It's a sibling somewhere else in this node, so unparent it first\n              node.remove();\n            }\n            target.replace(node);\n          }\n        } else {\n          if (!(target !== null)) {\n            formatDevErrorMessage(`NodeCaret.splice: Underflow of expected nodesToRemove during splice (keys: ${Array.from(nodesToRemove).join(' ')})`);\n          }\n        }\n      } else {\n        caret.insert(node);\n      }\n      caret = $getSiblingCaret(node, this.direction);\n    }\n    for (const node of nodesToRemove.values()) {\n      node.remove();\n    }\n    return this;\n  }\n}\nclass AbstractChildCaret extends AbstractCaret {\n  type = 'child';\n  getLatest() {\n    const origin = this.origin.getLatest();\n    return origin === this.origin ? this : $getChildCaret(origin, this.direction);\n  }\n  /**\n   * Get the SiblingCaret from this origin in the same direction.\n   *\n   * @param mode 'root' to return null at the root, 'shadowRoot' to return null at the root or any shadow root\n   * @returns A SiblingCaret with this origin, or null if origin is a root according to mode.\n   */\n  getParentCaret(mode = 'root') {\n    return $getSiblingCaret($filterByMode(this.getParentAtCaret(), mode), this.direction);\n  }\n  getFlipped() {\n    const dir = flipDirection(this.direction);\n    return $getSiblingCaret(this.getNodeAtCaret(), dir) || $getChildCaret(this.origin, dir);\n  }\n  getParentAtCaret() {\n    return this.origin;\n  }\n  getChildCaret() {\n    return this;\n  }\n  isSameNodeCaret(other) {\n    return other instanceof AbstractChildCaret && this.direction === other.direction && this.origin.is(other.origin);\n  }\n  isSamePointCaret(other) {\n    return this.isSameNodeCaret(other);\n  }\n}\nclass ChildCaretFirst extends AbstractChildCaret {\n  direction = 'next';\n  getNodeAtCaret() {\n    return this.origin.getFirstChild();\n  }\n  insert(node) {\n    this.origin.splice(0, 0, [node]);\n    return this;\n  }\n}\nclass ChildCaretLast extends AbstractChildCaret {\n  direction = 'previous';\n  getNodeAtCaret() {\n    return this.origin.getLastChild();\n  }\n  insert(node) {\n    this.origin.splice(this.origin.getChildrenSize(), 0, [node]);\n    return this;\n  }\n}\nconst MODE_PREDICATE = {\n  root: $isRootNode,\n  shadowRoot: $isRootOrShadowRoot\n};\n\n/**\n * Flip a direction ('next' -> 'previous'; 'previous' -> 'next').\n *\n * Note that TypeScript can't prove that FlipDirection is its own\n * inverse (but if you have a concrete 'next' or 'previous' it will\n * simplify accordingly).\n *\n * @param direction A direction\n * @returns The opposite direction\n */\nfunction flipDirection(direction) {\n  return FLIP_DIRECTION[direction];\n}\nfunction $filterByMode(node, mode = 'root') {\n  return MODE_PREDICATE[mode](node) ? null : node;\n}\nclass AbstractSiblingCaret extends AbstractCaret {\n  type = 'sibling';\n  getLatest() {\n    const origin = this.origin.getLatest();\n    return origin === this.origin ? this : $getSiblingCaret(origin, this.direction);\n  }\n  getSiblingCaret() {\n    return this;\n  }\n  getParentAtCaret() {\n    return this.origin.getParent();\n  }\n  getChildCaret() {\n    return $isElementNode(this.origin) ? $getChildCaret(this.origin, this.direction) : null;\n  }\n  getParentCaret(mode = 'root') {\n    return $getSiblingCaret($filterByMode(this.getParentAtCaret(), mode), this.direction);\n  }\n  getFlipped() {\n    const dir = flipDirection(this.direction);\n    return $getSiblingCaret(this.getNodeAtCaret(), dir) || $getChildCaret(this.origin.getParentOrThrow(), dir);\n  }\n  isSamePointCaret(other) {\n    return other instanceof AbstractSiblingCaret && this.direction === other.direction && this.origin.is(other.origin);\n  }\n  isSameNodeCaret(other) {\n    return (other instanceof AbstractSiblingCaret || other instanceof AbstractTextPointCaret) && this.direction === other.direction && this.origin.is(other.origin);\n  }\n}\nclass AbstractTextPointCaret extends AbstractCaret {\n  type = 'text';\n  constructor(origin, offset) {\n    super(origin);\n    this.offset = offset;\n  }\n  getLatest() {\n    const origin = this.origin.getLatest();\n    return origin === this.origin ? this : $getTextPointCaret(origin, this.direction, this.offset);\n  }\n  getParentAtCaret() {\n    return this.origin.getParent();\n  }\n  getChildCaret() {\n    return null;\n  }\n  getParentCaret(mode = 'root') {\n    return $getSiblingCaret($filterByMode(this.getParentAtCaret(), mode), this.direction);\n  }\n  getFlipped() {\n    return $getTextPointCaret(this.origin, flipDirection(this.direction), this.offset);\n  }\n  isSamePointCaret(other) {\n    return other instanceof AbstractTextPointCaret && this.direction === other.direction && this.origin.is(other.origin) && this.offset === other.offset;\n  }\n  isSameNodeCaret(other) {\n    return (other instanceof AbstractSiblingCaret || other instanceof AbstractTextPointCaret) && this.direction === other.direction && this.origin.is(other.origin);\n  }\n  getSiblingCaret() {\n    return $getSiblingCaret(this.origin, this.direction);\n  }\n}\n/**\n * Guard to check if the given caret is specifically a TextPointCaret\n *\n * @param caret Any caret\n * @returns true if it is a TextPointCaret\n */\nfunction $isTextPointCaret(caret) {\n  return caret instanceof AbstractTextPointCaret;\n}\n\n/**\n * Guard to check if the given argument is any type of caret\n *\n * @param caret\n * @returns true if caret is any type of caret\n */\nfunction $isNodeCaret(caret) {\n  return caret instanceof AbstractCaret;\n}\n\n/**\n * Guard to check if the given argument is specifically a SiblingCaret (or TextPointCaret)\n *\n * @param caret\n * @returns true if caret is a SiblingCaret\n */\nfunction $isSiblingCaret(caret) {\n  return caret instanceof AbstractSiblingCaret;\n}\n\n/**\n * Guard to check if the given argument is specifically a ChildCaret\n\n * @param caret \n * @returns true if caret is a ChildCaret\n */\nfunction $isChildCaret(caret) {\n  return caret instanceof AbstractChildCaret;\n}\nclass SiblingCaretNext extends AbstractSiblingCaret {\n  direction = 'next';\n  getNodeAtCaret() {\n    return this.origin.getNextSibling();\n  }\n  insert(node) {\n    this.origin.insertAfter(node);\n    return this;\n  }\n}\nclass SiblingCaretPrevious extends AbstractSiblingCaret {\n  direction = 'previous';\n  getNodeAtCaret() {\n    return this.origin.getPreviousSibling();\n  }\n  insert(node) {\n    this.origin.insertBefore(node);\n    return this;\n  }\n}\nclass TextPointCaretNext extends AbstractTextPointCaret {\n  direction = 'next';\n  getNodeAtCaret() {\n    return this.origin.getNextSibling();\n  }\n  insert(node) {\n    this.origin.insertAfter(node);\n    return this;\n  }\n}\nclass TextPointCaretPrevious extends AbstractTextPointCaret {\n  direction = 'previous';\n  getNodeAtCaret() {\n    return this.origin.getPreviousSibling();\n  }\n  insert(node) {\n    this.origin.insertBefore(node);\n    return this;\n  }\n}\nconst TEXT_CTOR = {\n  next: TextPointCaretNext,\n  previous: TextPointCaretPrevious\n};\nconst SIBLING_CTOR = {\n  next: SiblingCaretNext,\n  previous: SiblingCaretPrevious\n};\nconst CHILD_CTOR = {\n  next: ChildCaretFirst,\n  previous: ChildCaretLast\n};\n\n/**\n * Get a caret that points at the next or previous sibling of the given origin node.\n *\n * @param origin The origin node\n * @param direction 'next' or 'previous'\n * @returns null if origin is null, otherwise a SiblingCaret for this origin and direction\n */\n\nfunction $getSiblingCaret(origin, direction) {\n  return origin ? new SIBLING_CTOR[direction](origin) : null;\n}\n\n/**\n * Construct a TextPointCaret\n *\n * @param origin The TextNode\n * @param direction The direction (next points to the end of the text, previous points to the beginning)\n * @param offset The offset into the text in absolute positive string coordinates (0 is the start)\n * @returns a TextPointCaret\n */\n\nfunction $getTextPointCaret(origin, direction, offset) {\n  return origin ? new TEXT_CTOR[direction](origin, $getTextNodeOffset(origin, offset)) : null;\n}\n\n/**\n * Get a normalized offset into a TextNode given a numeric offset or a\n * direction for which end of the string to use. Throws if the offset\n * is not in the bounds of the text content size.\n *\n * @param origin a TextNode\n * @param offset An absolute offset into the TextNode string, or a direction for which end to use as the offset\n * @returns An absolute offset into the TextNode string\n */\nfunction $getTextNodeOffset(origin, offset) {\n  const size = origin.getTextContentSize();\n  const numericOffset = offset === 'next' ? size : offset === 'previous' ? 0 : offset;\n  if (!(numericOffset >= 0 && numericOffset <= size)) {\n    formatDevErrorMessage(`$getTextNodeOffset: invalid offset ${String(offset)} for size ${String(size)}`);\n  }\n  return numericOffset;\n}\n\n/**\n * Construct a TextPointCaretSlice given a TextPointCaret and a signed distance. The\n * distance should be negative to slice text before the caret's offset, and positive\n * to slice text after the offset. The direction of the caret itself is not\n * relevant to the string coordinates when working with a TextPointCaretSlice\n * but mutation operations will preserve the direction.\n *\n * @param caret\n * @param distance\n * @returns TextPointCaretSlice\n */\nfunction $getTextPointCaretSlice(caret, distance) {\n  return new TextPointCaretSliceImpl(caret, distance);\n}\n\n/**\n * Get a caret that points at the first or last child of the given origin node,\n * which must be an ElementNode.\n *\n * @param origin The origin ElementNode\n * @param direction 'next' for first child or 'previous' for last child\n * @returns null if origin is null or not an ElementNode, otherwise a ChildCaret for this origin and direction\n */\n\nfunction $getChildCaret(origin, direction) {\n  return $isElementNode(origin) ? new CHILD_CTOR[direction](origin) : null;\n}\n\n/**\n * Gets the ChildCaret if one is possible at this caret origin, otherwise return the caret\n */\nfunction $getChildCaretOrSelf(caret) {\n  return caret && caret.getChildCaret() || caret;\n}\n\n/**\n * Gets the adjacent caret, if not-null and if the origin of the adjacent caret is an ElementNode, then return\n * the ChildCaret. This can be used along with the getParentAdjacentCaret method to perform a full DFS\n * style traversal of the tree.\n *\n * @param caret The caret to start at\n */\nfunction $getAdjacentChildCaret(caret) {\n  return caret && $getChildCaretOrSelf(caret.getAdjacentCaret());\n}\nclass CaretRangeImpl {\n  type = 'node-caret-range';\n  constructor(anchor, focus, direction) {\n    this.anchor = anchor;\n    this.focus = focus;\n    this.direction = direction;\n  }\n  getLatest() {\n    const anchor = this.anchor.getLatest();\n    const focus = this.focus.getLatest();\n    return anchor === this.anchor && focus === this.focus ? this : new CaretRangeImpl(anchor, focus, this.direction);\n  }\n  isCollapsed() {\n    return this.anchor.isSamePointCaret(this.focus);\n  }\n  getTextSlices() {\n    const getSlice = k => {\n      const caret = this[k].getLatest();\n      return $isTextPointCaret(caret) ? $getSliceFromTextPointCaret(caret, k) : null;\n    };\n    const anchorSlice = getSlice('anchor');\n    const focusSlice = getSlice('focus');\n    if (anchorSlice && focusSlice) {\n      const {\n        caret: anchorCaret\n      } = anchorSlice;\n      const {\n        caret: focusCaret\n      } = focusSlice;\n      if (anchorCaret.isSameNodeCaret(focusCaret)) {\n        return [$getTextPointCaretSlice(anchorCaret, focusCaret.offset - anchorCaret.offset), null];\n      }\n    }\n    return [anchorSlice, focusSlice];\n  }\n  iterNodeCarets(rootMode = 'root') {\n    const anchor = $isTextPointCaret(this.anchor) ? this.anchor.getSiblingCaret() : this.anchor.getLatest();\n    const focus = this.focus.getLatest();\n    const isTextFocus = $isTextPointCaret(focus);\n    const step = state => state.isSameNodeCaret(focus) ? null : $getAdjacentChildCaret(state) || state.getParentCaret(rootMode);\n    return makeStepwiseIterator({\n      hasNext: state => state !== null && !(isTextFocus && focus.isSameNodeCaret(state)),\n      initial: anchor.isSameNodeCaret(focus) ? null : step(anchor),\n      map: state => state,\n      step\n    });\n  }\n  [Symbol.iterator]() {\n    return this.iterNodeCarets('root');\n  }\n}\nclass TextPointCaretSliceImpl {\n  type = 'slice';\n  constructor(caret, distance) {\n    this.caret = caret;\n    this.distance = distance;\n  }\n  getSliceIndices() {\n    const {\n      distance,\n      caret: {\n        offset\n      }\n    } = this;\n    const offsetB = offset + distance;\n    return offsetB < offset ? [offsetB, offset] : [offset, offsetB];\n  }\n  getTextContent() {\n    const [startIndex, endIndex] = this.getSliceIndices();\n    return this.caret.origin.getTextContent().slice(startIndex, endIndex);\n  }\n  getTextContentSize() {\n    return Math.abs(this.distance);\n  }\n  removeTextSlice() {\n    const {\n      caret: {\n        origin,\n        direction\n      }\n    } = this;\n    const [indexStart, indexEnd] = this.getSliceIndices();\n    const text = origin.getTextContent();\n    return $getTextPointCaret(origin.setTextContent(text.slice(0, indexStart) + text.slice(indexEnd)), direction, indexStart);\n  }\n}\nfunction $getSliceFromTextPointCaret(caret, anchorOrFocus) {\n  const {\n    direction,\n    origin\n  } = caret;\n  const offsetB = $getTextNodeOffset(origin, anchorOrFocus === 'focus' ? flipDirection(direction) : direction);\n  return $getTextPointCaretSlice(caret, offsetB - caret.offset);\n}\n\n/**\n * Guard to check for a TextPointCaretSlice\n *\n * @param caretOrSlice A caret or slice\n * @returns true if caretOrSlice is a TextPointCaretSlice\n */\nfunction $isTextPointCaretSlice(caretOrSlice) {\n  return caretOrSlice instanceof TextPointCaretSliceImpl;\n}\n\n/**\n * Construct a CaretRange that starts at anchor and goes to the end of the\n * document in the anchor caret's direction.\n */\nfunction $extendCaretToRange(anchor) {\n  return $getCaretRange(anchor, $getSiblingCaret($getRoot(), anchor.direction));\n}\n\n/**\n * Construct a CaretRange from anchor and focus carets pointing in the\n * same direction. In order to get the expected behavior,\n * the anchor must point towards the focus or be the same point.\n *\n * In the 'next' direction the anchor should be at or before the\n * focus in the document. In the 'previous' direction the anchor\n * should be at or after the focus in the document\n * (similar to a backwards RangeSelection).\n *\n * @param anchor\n * @param focus\n * @returns a CaretRange\n */\nfunction $getCaretRange(anchor, focus) {\n  if (!(anchor.direction === focus.direction)) {\n    formatDevErrorMessage(`$getCaretRange: anchor and focus must be in the same direction`);\n  }\n  return new CaretRangeImpl(anchor, focus, anchor.direction);\n}\n\n/**\n * A generalized utility for creating a stepwise iterator\n * based on:\n *\n * - an initial state\n * - a stop guard that returns true if the iteration is over, this\n *   is typically used to detect a sentinel value such as null or\n *   undefined from the state but may return true for other conditions\n *   as well\n * - a step function that advances the state (this will be called\n *   after map each time next() is called to prepare the next state)\n * - a map function that will be called that may transform the state\n *   before returning it. It will only be called once for each next()\n *   call when stop(state) === false\n *\n * @param config\n * @returns An IterableIterator\n */\nfunction makeStepwiseIterator(config) {\n  const {\n    initial,\n    hasNext,\n    step,\n    map\n  } = config;\n  let state = initial;\n  return {\n    [Symbol.iterator]() {\n      return this;\n    },\n    next() {\n      if (!hasNext(state)) {\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      const rval = {\n        done: false,\n        value: map(state)\n      };\n      state = step(state);\n      return rval;\n    }\n  };\n}\nfunction compareNumber(a, b) {\n  return Math.sign(a - b);\n}\n\n/**\n * A total ordering for `PointCaret<'next'>`, based on\n * the same order that a {@link CaretRange} would iterate\n * them.\n *\n * For a given origin node:\n * - ChildCaret comes before SiblingCaret\n * - TextPointCaret comes before SiblingCaret\n *\n * An exception is thrown when a and b do not have any\n * common ancestor.\n *\n * This ordering is a sort of mix of pre-order and post-order\n * because each ElementNode will show up as a ChildCaret\n * on 'enter' (pre-order) and a SiblingCaret on 'leave' (post-order).\n *\n * @param a\n * @param b\n * @returns -1 if a comes before b, 0 if a and b are the same, or 1 if a comes after b\n */\nfunction $comparePointCaretNext(a, b) {\n  const compare = $getCommonAncestor(a.origin, b.origin);\n  if (!(compare !== null)) {\n    formatDevErrorMessage(`$comparePointCaretNext: a (key ${a.origin.getKey()}) and b (key ${b.origin.getKey()}) do not have a common ancestor`);\n  }\n  switch (compare.type) {\n    case 'same':\n      {\n        const aIsText = a.type === 'text';\n        const bIsText = b.type === 'text';\n        return aIsText && bIsText ? compareNumber(a.offset, b.offset) : a.type === b.type ? 0 : aIsText ? -1 : bIsText ? 1 : a.type === 'child' ? -1 : 1;\n      }\n    case 'ancestor':\n      {\n        return a.type === 'child' ? -1 : 1;\n      }\n    case 'descendant':\n      {\n        return b.type === 'child' ? 1 : -1;\n      }\n    case 'branch':\n      {\n        return $getCommonAncestorResultBranchOrder(compare);\n      }\n  }\n}\n\n/**\n * Return the ordering of siblings in a CommonAncestorResultBranch\n * @param branch Returns -1 if a precedes b, 1 otherwise\n */\nfunction $getCommonAncestorResultBranchOrder(compare) {\n  const {\n    a,\n    b\n  } = compare;\n  const aKey = a.__key;\n  const bKey = b.__key;\n  let na = a;\n  let nb = b;\n  for (; na && nb; na = na.getNextSibling(), nb = nb.getNextSibling()) {\n    if (na.__key === bKey) {\n      return -1;\n    } else if (nb.__key === aKey) {\n      return 1;\n    }\n  }\n  return na === null ? 1 : -1;\n}\n\n/**\n * The two compared nodes are the same\n */\n\n/**\n * Node a was a descendant of node b, and not the same node\n */\n\n/**\n * Node a is an ancestor of node b, and not the same node\n */\n\n/**\n * Node a and node b have a common ancestor but are on different branches,\n * the `a` and `b` properties of this result are the ancestors of a and b\n * that are children of the commonAncestor. Since they are siblings, their\n * positions are comparable to determine order in the document.\n */\n\n/**\n * The result of comparing two nodes that share some common ancestor\n */\n\nfunction $isSameNode(reference, other) {\n  return other.is(reference);\n}\nfunction $initialElementTuple(node) {\n  return $isElementNode(node) ? [node.getLatest(), null] : [node.getParent(), node.getLatest()];\n}\n\n/**\n * Find a common ancestor of a and b and return a detailed result object,\n * or null if there is no common ancestor between the two nodes.\n *\n * The result object will have a commonAncestor property, and the other\n * properties can be used to quickly compare these positions in the tree.\n *\n * @param a A LexicalNode\n * @param b A LexicalNode\n * @returns A comparison result between the two nodes or null if they have no common ancestor\n */\nfunction $getCommonAncestor(a, b) {\n  if (a.is(b)) {\n    return {\n      commonAncestor: a,\n      type: 'same'\n    };\n  }\n  // Map of parent -> child entries based on a and its ancestors\n  const aMap = new Map();\n  for (let [parent, child] = $initialElementTuple(a); parent; child = parent, parent = parent.getParent()) {\n    aMap.set(parent, child);\n  }\n  for (let [parent, child] = $initialElementTuple(b); parent; child = parent, parent = parent.getParent()) {\n    const aChild = aMap.get(parent);\n    if (aChild === undefined) ; else if (aChild === null) {\n      // a is the ancestor\n      if (!$isSameNode(a, parent)) {\n        formatDevErrorMessage(`$originComparison: ancestor logic error`);\n      }\n      return {\n        commonAncestor: parent,\n        type: 'ancestor'\n      };\n    } else if (child === null) {\n      // b is the ancestor\n      if (!$isSameNode(b, parent)) {\n        formatDevErrorMessage(`$originComparison: descendant logic error`);\n      }\n      return {\n        commonAncestor: parent,\n        type: 'descendant'\n      };\n    } else {\n      if (!(($isElementNode(aChild) || $isSameNode(a, aChild)) && ($isElementNode(child) || $isSameNode(b, child)) && parent.is(aChild.getParent()) && parent.is(child.getParent()))) {\n        formatDevErrorMessage(`$originComparison: branch logic error`);\n      }\n      return {\n        a: aChild,\n        b: child,\n        commonAncestor: parent,\n        type: 'branch'\n      };\n    }\n  }\n  return null;\n}\n\n/**\n * @param point\n * @returns a PointCaret for the point\n */\nfunction $caretFromPoint(point, direction) {\n  const {\n    type,\n    key,\n    offset\n  } = point;\n  const node = $getNodeByKeyOrThrow(point.key);\n  if (type === 'text') {\n    if (!$isTextNode(node)) {\n      formatDevErrorMessage(`$caretFromPoint: Node with type ${node.getType()} and key ${key} that does not inherit from TextNode encountered for text point`);\n    }\n    return $getTextPointCaret(node, direction, offset);\n  }\n  if (!$isElementNode(node)) {\n    formatDevErrorMessage(`$caretFromPoint: Node with type ${node.getType()} and key ${key} that does not inherit from ElementNode encountered for element point`);\n  }\n  return $getChildCaretAtIndex(node, point.offset, direction);\n}\n\n/**\n * Update the given point in-place from the PointCaret\n *\n * @param point the point to set\n * @param caret the caret to set the point from\n */\nfunction $setPointFromCaret(point, caret) {\n  const {\n    origin,\n    direction\n  } = caret;\n  const isNext = direction === 'next';\n  if ($isTextPointCaret(caret)) {\n    point.set(origin.getKey(), caret.offset, 'text');\n  } else if ($isSiblingCaret(caret)) {\n    if ($isTextNode(origin)) {\n      point.set(origin.getKey(), $getTextNodeOffset(origin, direction), 'text');\n    } else {\n      point.set(origin.getParentOrThrow().getKey(), origin.getIndexWithinParent() + (isNext ? 1 : 0), 'element');\n    }\n  } else {\n    if (!($isChildCaret(caret) && $isElementNode(origin))) {\n      formatDevErrorMessage(`$setPointFromCaret: exhaustiveness check`);\n    }\n    point.set(origin.getKey(), isNext ? 0 : origin.getChildrenSize(), 'element');\n  }\n}\n\n/**\n * Set a RangeSelection on the editor from the given CaretRange\n *\n * @returns The new RangeSelection\n */\nfunction $setSelectionFromCaretRange(caretRange) {\n  const currentSelection = $getSelection();\n  const selection = $isRangeSelection(currentSelection) ? currentSelection : $createRangeSelection();\n  $updateRangeSelectionFromCaretRange(selection, caretRange);\n  $setSelection(selection);\n  return selection;\n}\n\n/**\n * Update the points of a RangeSelection based on the given PointCaret.\n */\nfunction $updateRangeSelectionFromCaretRange(selection, caretRange) {\n  $setPointFromCaret(selection.anchor, caretRange.anchor);\n  $setPointFromCaret(selection.focus, caretRange.focus);\n}\n\n/**\n * Get a pair of carets for a RangeSelection.\n *\n * If the focus is before the anchor, then the direction will be\n * 'previous', otherwise the direction will be 'next'.\n */\nfunction $caretRangeFromSelection(selection) {\n  const {\n    anchor,\n    focus\n  } = selection;\n  const anchorCaret = $caretFromPoint(anchor, 'next');\n  const focusCaret = $caretFromPoint(focus, 'next');\n  const direction = $comparePointCaretNext(anchorCaret, focusCaret) <= 0 ? 'next' : 'previous';\n  return $getCaretRange($getCaretInDirection(anchorCaret, direction), $getCaretInDirection(focusCaret, direction));\n}\n\n/**\n * Given a SiblingCaret we can always compute a caret that points to the\n * origin of that caret in the same direction. The adjacent caret of the\n * returned caret will be equivalent to the given caret.\n *\n * @example\n * ```ts\n * siblingCaret.is($rewindSiblingCaret(siblingCaret).getAdjacentCaret())\n * ```\n *\n * @param caret The caret to \"rewind\"\n * @returns A new caret (ChildCaret or SiblingCaret) with the same direction\n */\nfunction $rewindSiblingCaret(caret) {\n  const {\n    direction,\n    origin\n  } = caret;\n  // Rotate the direction around the origin and get the adjacent node\n  const rewindOrigin = $getSiblingCaret(origin, flipDirection(direction)).getNodeAtCaret();\n  return rewindOrigin ? $getSiblingCaret(rewindOrigin, direction) : $getChildCaret(origin.getParentOrThrow(), direction);\n}\nfunction $getAnchorCandidates(anchor, rootMode = 'root') {\n  // These candidates will be the anchor itself, the pointer to the anchor (if different), and then any parents of that\n  const carets = [anchor];\n  for (let parent = $isChildCaret(anchor) ? anchor.getParentCaret(rootMode) : anchor.getSiblingCaret(); parent !== null; parent = parent.getParentCaret(rootMode)) {\n    carets.push($rewindSiblingCaret(parent));\n  }\n  return carets;\n}\nfunction $isCaretAttached(caret) {\n  return !!caret && caret.origin.isAttached();\n}\n\n/**\n * Remove all text and nodes in the given range. If the range spans multiple\n * blocks then the remaining contents of the later block will be merged with\n * the earlier block.\n *\n * @param range The range to remove text and nodes from\n * @param sliceMode If 'preserveEmptyTextPointCaret' it will leave an empty TextPointCaret at the anchor for insert if one exists, otherwise empty slices will be removed\n * @returns The new collapsed range (biased towards the earlier node)\n */\nfunction $removeTextFromCaretRange(initialRange, sliceMode = 'removeEmptySlices') {\n  if (initialRange.isCollapsed()) {\n    return initialRange;\n  }\n  // Always process removals in document order\n  const rootMode = 'root';\n  const nextDirection = 'next';\n  let sliceState = sliceMode;\n  const range = $getCaretRangeInDirection(initialRange, nextDirection);\n  const anchorCandidates = $getAnchorCandidates(range.anchor, rootMode);\n  const focusCandidates = $getAnchorCandidates(range.focus.getFlipped(), rootMode);\n\n  // Mark the start of each ElementNode\n  const seenStart = new Set();\n  // Queue removals since removing the only child can cascade to having\n  // a parent remove itself which will affect iteration\n  const removedNodes = [];\n  for (const caret of range.iterNodeCarets(rootMode)) {\n    if ($isChildCaret(caret)) {\n      seenStart.add(caret.origin.getKey());\n    } else if ($isSiblingCaret(caret)) {\n      const {\n        origin\n      } = caret;\n      if (!$isElementNode(origin) || seenStart.has(origin.getKey())) {\n        removedNodes.push(origin);\n      }\n    }\n  }\n  for (const node of removedNodes) {\n    node.remove();\n  }\n\n  // Splice text at the anchor and/or origin.\n  // If the text is entirely selected then it is removed (unless it is the first slice and sliceMode is preserveEmptyTextSliceCaret).\n  // If it's a token with a non-empty selection then it is removed.\n  // Segmented nodes will be copied to a plain text node with the same format\n  // and style and set to normal mode.\n  for (const slice of range.getTextSlices()) {\n    if (!slice) {\n      continue;\n    }\n    const {\n      origin\n    } = slice.caret;\n    const contentSize = origin.getTextContentSize();\n    const caretBefore = $rewindSiblingCaret($getSiblingCaret(origin, nextDirection));\n    const mode = origin.getMode();\n    if (Math.abs(slice.distance) === contentSize && sliceState === 'removeEmptySlices' || mode === 'token' && slice.distance !== 0) {\n      // anchorCandidates[1] should still be valid, it is caretBefore\n      caretBefore.remove();\n    } else if (slice.distance !== 0) {\n      sliceState = 'removeEmptySlices';\n      let nextCaret = slice.removeTextSlice();\n      const sliceOrigin = slice.caret.origin;\n      if (mode === 'segmented') {\n        const src = nextCaret.origin;\n        const plainTextNode = $createTextNode(src.getTextContent()).setStyle(src.getStyle()).setFormat(src.getFormat());\n        caretBefore.replaceOrInsert(plainTextNode);\n        nextCaret = $getTextPointCaret(plainTextNode, nextDirection, nextCaret.offset);\n      }\n      if (sliceOrigin.is(anchorCandidates[0].origin)) {\n        anchorCandidates[0] = nextCaret;\n      }\n      if (sliceOrigin.is(focusCandidates[0].origin)) {\n        focusCandidates[0] = nextCaret.getFlipped();\n      }\n    }\n  }\n\n  // Find the deepest anchor and focus candidates that are\n  // still attached\n  let anchorCandidate;\n  let focusCandidate;\n  for (const candidate of anchorCandidates) {\n    if ($isCaretAttached(candidate)) {\n      anchorCandidate = $normalizeCaret(candidate);\n      break;\n    }\n  }\n  for (const candidate of focusCandidates) {\n    if ($isCaretAttached(candidate)) {\n      focusCandidate = $normalizeCaret(candidate);\n      break;\n    }\n  }\n\n  // Merge blocks if necessary\n  const mergeTargets = $getBlockMergeTargets(anchorCandidate, focusCandidate, seenStart);\n  if (mergeTargets) {\n    const [anchorBlock, focusBlock] = mergeTargets;\n    // always merge blocks later in the document with\n    // blocks earlier in the document\n    $getChildCaret(anchorBlock, 'previous').splice(0, focusBlock.getChildren());\n    focusBlock.remove();\n  }\n\n  // note this caret can be in either direction\n  const bestCandidate = [anchorCandidate, focusCandidate, ...anchorCandidates, ...focusCandidates].find($isCaretAttached);\n  if (bestCandidate) {\n    const anchor = $getCaretInDirection($normalizeCaret(bestCandidate), initialRange.direction);\n    return $getCaretRange(anchor, anchor);\n  }\n  {\n    formatDevErrorMessage(`$removeTextFromCaretRange: selection was lost, could not find a new anchor given candidates with keys: ${JSON.stringify(anchorCandidates.map(n => n.origin.__key))}`);\n  }\n}\n\n/**\n * Determine if the two caret orgins are in distinct blocks that\n * should be merged.\n *\n * The returned block pair will be the closest blocks to their\n * common ancestor, and must be no shadow roots between\n * the blocks and their respective carets. If two distinct\n * blocks matching this criteria are not found, this will return\n * null.\n */\nfunction $getBlockMergeTargets(anchor, focus, seenStart) {\n  if (!anchor || !focus) {\n    return null;\n  }\n  const anchorParent = anchor.getParentAtCaret();\n  const focusParent = focus.getParentAtCaret();\n  if (!anchorParent || !focusParent) {\n    return null;\n  }\n  // TODO refactor when we have a better primitive for common ancestor\n  const anchorElements = anchorParent.getParents().reverse();\n  anchorElements.push(anchorParent);\n  const focusElements = focusParent.getParents().reverse();\n  focusElements.push(focusParent);\n  const maxLen = Math.min(anchorElements.length, focusElements.length);\n  let commonAncestorCount;\n  for (commonAncestorCount = 0; commonAncestorCount < maxLen && anchorElements[commonAncestorCount] === focusElements[commonAncestorCount]; commonAncestorCount++) {\n    // just traverse the ancestors\n  }\n  const $getBlock = (arr, predicate) => {\n    let block;\n    for (let i = commonAncestorCount; i < arr.length; i++) {\n      const ancestor = arr[i];\n      if ($isRootOrShadowRoot(ancestor)) {\n        return;\n      } else if (!block && predicate(ancestor)) {\n        block = ancestor;\n      }\n    }\n    return block;\n  };\n  const anchorBlock = $getBlock(anchorElements, INTERNAL_$isBlock);\n  const focusBlock = anchorBlock && $getBlock(focusElements, node => seenStart.has(node.getKey()) && INTERNAL_$isBlock(node));\n  return anchorBlock && focusBlock ? [anchorBlock, focusBlock] : null;\n}\n\n/**\n * Return the deepest ChildCaret that has initialCaret's origin\n * as an ancestor, or initialCaret if the origin is not an ElementNode\n * or is already the deepest ChildCaret.\n *\n * This is generally used when normalizing because there is\n * \"zero distance\" between these locations.\n *\n * @param initialCaret\n * @returns Either a deeper ChildCaret or the given initialCaret\n */\nfunction $getDeepestChildOrSelf(initialCaret) {\n  let caret = initialCaret;\n  while ($isChildCaret(caret)) {\n    const adjacent = $getAdjacentChildCaret(caret);\n    if (!$isChildCaret(adjacent)) {\n      break;\n    }\n    caret = adjacent;\n  }\n  return caret;\n}\n\n/**\n * Normalize a caret to the deepest equivalent PointCaret.\n * This will return a TextPointCaret with the offset set according\n * to the direction if given a caret with a TextNode origin\n * or a caret with an ElementNode origin with the deepest ChildCaret\n * having an adjacent TextNode.\n *\n * If given a TextPointCaret, it will be returned, as no normalization\n * is required when an offset is already present.\n *\n * @param initialCaret\n * @returns The normalized PointCaret\n */\nfunction $normalizeCaret(initialCaret) {\n  const caret = $getDeepestChildOrSelf(initialCaret.getLatest());\n  const {\n    direction\n  } = caret;\n  if ($isTextNode(caret.origin)) {\n    return $isTextPointCaret(caret) ? caret : $getTextPointCaret(caret.origin, direction, direction);\n  }\n  const adj = caret.getAdjacentCaret();\n  return $isSiblingCaret(adj) && $isTextNode(adj.origin) ? $getTextPointCaret(adj.origin, direction, flipDirection(direction)) : caret;\n}\n/**\n * Determine whether the TextPointCaret's offset can be extended further without leaving the TextNode.\n * Returns false if the given caret is not a TextPointCaret or the offset can not be moved further in\n * direction.\n *\n * @param caret A PointCaret\n * @returns true if caret is a TextPointCaret with an offset that is not at the end of the text given the direction.\n */\nfunction $isExtendableTextPointCaret(caret) {\n  return $isTextPointCaret(caret) && caret.offset !== $getTextNodeOffset(caret.origin, caret.direction);\n}\n\n/**\n * Return the caret if it's in the given direction, otherwise return\n * caret.getFlipped().\n *\n * @param caret Any PointCaret\n * @param direction The desired direction\n * @returns A PointCaret in direction\n */\nfunction $getCaretInDirection(caret, direction) {\n  return caret.direction === direction ? caret : caret.getFlipped();\n}\n\n/**\n * Return the range if it's in the given direction, otherwise\n * construct a new range using a flipped focus as the anchor\n * and a flipped anchor as the focus. This transformation\n * preserves the section of the document that it's working\n * with, but reverses the order of iteration.\n *\n * @param range Any CaretRange\n * @param direction The desired direction\n * @returns A CaretRange in direction\n */\nfunction $getCaretRangeInDirection(range, direction) {\n  if (range.direction === direction) {\n    return range;\n  }\n  return $getCaretRange(\n  // focus and anchor get flipped here\n  $getCaretInDirection(range.focus, direction), $getCaretInDirection(range.anchor, direction));\n}\n\n/**\n * Get a caret pointing at the child at the given index, or the last\n * caret in that node if out of bounds.\n *\n * @param parent An ElementNode\n * @param index The index of the origin for the caret\n * @returns A caret pointing towards the node at that index\n */\nfunction $getChildCaretAtIndex(parent, index, direction) {\n  let caret = $getChildCaret(parent, 'next');\n  for (let i = 0; i < index; i++) {\n    const nextCaret = caret.getAdjacentCaret();\n    if (nextCaret === null) {\n      break;\n    }\n    caret = nextCaret;\n  }\n  return $getCaretInDirection(caret, direction);\n}\n\n/**\n * Returns the Node sibling when this exists, otherwise the closest parent sibling. For example\n * R -> P -> T1, T2\n *   -> P2\n * returns T2 for node T1, P2 for node T2, and null for node P2.\n * @param node LexicalNode.\n * @returns An array (tuple) containing the found Lexical node and the depth difference, or null, if this node doesn't exist.\n */\nfunction $getAdjacentSiblingOrParentSiblingCaret(startCaret, rootMode = 'root') {\n  let depthDiff = 0;\n  let caret = startCaret;\n  let nextCaret = $getAdjacentChildCaret(caret);\n  while (nextCaret === null) {\n    depthDiff--;\n    nextCaret = caret.getParentCaret(rootMode);\n    if (!nextCaret) {\n      return null;\n    }\n    caret = nextCaret;\n    nextCaret = $getAdjacentChildCaret(caret);\n  }\n  return nextCaret && [nextCaret, depthDiff];\n}\n\nexport { $addUpdateTag, $applyNodeReplacement, $caretFromPoint, $caretRangeFromSelection, $cloneWithProperties, $comparePointCaretNext, $copyNode, $createLineBreakNode, $createNodeSelection, $createParagraphNode, $createPoint, $createRangeSelection, $createRangeSelectionFromDom, $createTabNode, $createTextNode, $extendCaretToRange, $getAdjacentChildCaret, $getAdjacentNode, $getAdjacentSiblingOrParentSiblingCaret, $getCaretInDirection, $getCaretRange, $getCaretRangeInDirection, $getCharacterOffsets, $getChildCaret, $getChildCaretAtIndex, $getChildCaretOrSelf, $getCommonAncestor, $getCommonAncestorResultBranchOrder, $getEditor, $getNearestNodeFromDOMNode, $getNearestRootOrShadowRoot, $getNodeByKey, $getNodeByKeyOrThrow, $getPreviousSelection, $getRoot, $getSelection, $getSiblingCaret, $getState, $getStateChange, $getTextContent, $getTextNodeOffset, $getTextPointCaret, $getTextPointCaretSlice, $getWritableNodeState, $hasAncestor, $hasUpdateTag, $insertNodes, $isBlockElementNode, $isChildCaret, $isDecoratorNode, $isElementNode, $isExtendableTextPointCaret, $isInlineElementOrDecoratorNode, $isLeafNode, $isLineBreakNode, $isNodeCaret, $isNodeSelection, $isParagraphNode, $isRangeSelection, $isRootNode, $isRootOrShadowRoot, $isSiblingCaret, $isTabNode, $isTextNode, $isTextPointCaret, $isTextPointCaretSlice, $isTokenOrSegmented, $nodesOfType, $normalizeCaret, $normalizeSelection as $normalizeSelection__EXPERIMENTAL, $onUpdate, $parseSerializedNode, $removeTextFromCaretRange, $rewindSiblingCaret, $selectAll, $setCompositionKey, $setPointFromCaret, $setSelection, $setSelectionFromCaretRange, $setState, $splitNode, $updateRangeSelectionFromCaretRange, ArtificialNode__DO_NOT_USE, BLUR_COMMAND, CAN_REDO_COMMAND, CAN_UNDO_COMMAND, CLEAR_EDITOR_COMMAND, CLEAR_HISTORY_COMMAND, CLICK_COMMAND, COMMAND_PRIORITY_CRITICAL, COMMAND_PRIORITY_EDITOR, COMMAND_PRIORITY_HIGH, COMMAND_PRIORITY_LOW, COMMAND_PRIORITY_NORMAL, CONTROLLED_TEXT_INSERTION_COMMAND, COPY_COMMAND, CUT_COMMAND, DELETE_CHARACTER_COMMAND, DELETE_LINE_COMMAND, DELETE_WORD_COMMAND, DRAGEND_COMMAND, DRAGOVER_COMMAND, DRAGSTART_COMMAND, DROP_COMMAND, DecoratorNode, ElementNode, FOCUS_COMMAND, FORMAT_ELEMENT_COMMAND, FORMAT_TEXT_COMMAND, INDENT_CONTENT_COMMAND, INSERT_LINE_BREAK_COMMAND, INSERT_PARAGRAPH_COMMAND, INSERT_TAB_COMMAND, INTERNAL_$isBlock, IS_ALL_FORMATTING, IS_BOLD, IS_CODE, IS_HIGHLIGHT, IS_ITALIC, IS_STRIKETHROUGH, IS_SUBSCRIPT, IS_SUPERSCRIPT, IS_UNDERLINE, KEY_ARROW_DOWN_COMMAND, KEY_ARROW_LEFT_COMMAND, KEY_ARROW_RIGHT_COMMAND, KEY_ARROW_UP_COMMAND, KEY_BACKSPACE_COMMAND, KEY_DELETE_COMMAND, KEY_DOWN_COMMAND, KEY_ENTER_COMMAND, KEY_ESCAPE_COMMAND, KEY_MODIFIER_COMMAND, KEY_SPACE_COMMAND, KEY_TAB_COMMAND, LineBreakNode, MOVE_TO_END, MOVE_TO_START, NODE_STATE_KEY, OUTDENT_CONTENT_COMMAND, PASTE_COMMAND, ParagraphNode, REDO_COMMAND, REMOVE_TEXT_COMMAND, RootNode, SELECTION_CHANGE_COMMAND, SELECTION_INSERT_CLIPBOARD_NODES_COMMAND, SELECT_ALL_COMMAND, TEXT_TYPE_TO_FORMAT, TabNode, TextNode, UNDO_COMMAND, createCommand, createEditor, createState, flipDirection, getDOMOwnerDocument, getDOMSelection, getDOMSelectionFromTarget, getDOMTextNode, getEditorPropertyFromDOMNode, getNearestEditorFromDOMNode, isBlockDomNode, isCurrentlyReadOnlyMode, isDOMDocumentNode, isDOMNode, isDOMTextNode, isDOMUnmanaged, isDocumentFragment, isHTMLAnchorElement, isHTMLElement, isInlineDomNode, isLexicalEditor, isSelectionCapturedInDecoratorInput, isSelectionWithinEditor, makeStepwiseIterator, resetRandomKey, setDOMUnmanaged, setNodeIndentFromDOM };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12622, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12628, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/react/LexicalComposer.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { createLexicalComposerContext, LexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { createEditor, $getRoot, $createParagraphNode, $getSelection } from 'lexical';\nimport { useLayoutEffect, useEffect, useMemo } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst HISTORY_MERGE_OPTIONS = {\n  tag: 'history-merge'\n};\nfunction LexicalComposer({\n  initialConfig,\n  children\n}) {\n  const composerContext = useMemo(() => {\n    const {\n      theme,\n      namespace,\n      nodes,\n      onError,\n      editorState: initialEditorState,\n      html\n    } = initialConfig;\n    const context = createLexicalComposerContext(null, theme);\n    const editor = createEditor({\n      editable: initialConfig.editable,\n      html,\n      namespace,\n      nodes,\n      onError: error => onError(error, editor),\n      theme\n    });\n    initializeEditor(editor, initialEditorState);\n    return [editor, context];\n  },\n  // We only do this for init\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  useLayoutEffectImpl(() => {\n    const isEditable = initialConfig.editable;\n    const [editor] = composerContext;\n    editor.setEditable(isEditable !== undefined ? isEditable : true);\n\n    // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/jsx(LexicalComposerContext.Provider, {\n    value: composerContext,\n    children: children\n  });\n}\nfunction initializeEditor(editor, initialEditorState) {\n  if (initialEditorState === null) {\n    return;\n  } else if (initialEditorState === undefined) {\n    editor.update(() => {\n      const root = $getRoot();\n      if (root.isEmpty()) {\n        const paragraph = $createParagraphNode();\n        root.append(paragraph);\n        const activeElement = CAN_USE_DOM ? document.activeElement : null;\n        if ($getSelection() !== null || activeElement !== null && activeElement === editor.getRootElement()) {\n          paragraph.select();\n        }\n      }\n    }, HISTORY_MERGE_OPTIONS);\n  } else if (initialEditorState !== null) {\n    switch (typeof initialEditorState) {\n      case 'string':\n        {\n          const parsedEditorState = editor.parseEditorState(initialEditorState);\n          editor.setEditorState(parsedEditorState, HISTORY_MERGE_OPTIONS);\n          break;\n        }\n      case 'object':\n        {\n          editor.setEditorState(initialEditorState, HISTORY_MERGE_OPTIONS);\n          break;\n        }\n      case 'function':\n        {\n          editor.update(() => {\n            const root = $getRoot();\n            if (root.isEmpty()) {\n              initialEditorState(editor);\n            }\n          }, HISTORY_MERGE_OPTIONS);\n          break;\n        }\n    }\n  }\n}\n\nexport { LexicalComposer };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAID;AACA;AAHA;AACA;;;;;AAIA;;;;;;CAMC,GAED,MAAM,cAAc,OAAO,WAAW,eAAe,OAAO,OAAO,QAAQ,KAAK,eAAe,OAAO,OAAO,QAAQ,CAAC,aAAa,KAAK;AAExI;;;;;;CAMC,GAGD,sDAAsD;AACtD,wCAAwC;AACxC,+CAA+C;AAC/C,MAAM,sBAAsB,cAAc,6JAAA,CAAA,kBAAe,GAAG,6JAAA,CAAA,YAAS;AAErE;;;;;;CAMC,GAED,MAAM,wBAAwB;IAC5B,KAAK;AACP;AACA,SAAS,gBAAgB,EACvB,aAAa,EACb,QAAQ,EACT;IACC,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;oDAAE;YAC9B,MAAM,EACJ,KAAK,EACL,SAAS,EACT,KAAK,EACL,OAAO,EACP,aAAa,kBAAkB,EAC/B,IAAI,EACL,GAAG;YACJ,MAAM,UAAU,CAAA,GAAA,uKAAA,CAAA,+BAA4B,AAAD,EAAE,MAAM;YACnD,MAAM,SAAS,CAAA,GAAA,6IAAA,CAAA,eAAY,AAAD,EAAE;gBAC1B,UAAU,cAAc,QAAQ;gBAChC;gBACA;gBACA;gBACA,OAAO;uEAAE,CAAA,QAAS,QAAQ,OAAO;;gBACjC;YACF;YACA,iBAAiB,QAAQ;YACzB,OAAO;gBAAC;gBAAQ;aAAQ;QAC1B;mDACA,2BAA2B;IAC3B,uDAAuD;IACvD,EAAE;IACF;+CAAoB;YAClB,MAAM,aAAa,cAAc,QAAQ;YACzC,MAAM,CAAC,OAAO,GAAG;YACjB,OAAO,WAAW,CAAC,eAAe,YAAY,aAAa;QAE3D,2BAA2B;QAC3B,uDAAuD;QACzD;8CAAG,EAAE;IACL,OAAO,WAAW,GAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,uKAAA,CAAA,yBAAsB,CAAC,QAAQ,EAAE;QACvD,OAAO;QACP,UAAU;IACZ;AACF;AACA,SAAS,iBAAiB,MAAM,EAAE,kBAAkB;IAClD,IAAI,uBAAuB,MAAM;QAC/B;IACF,OAAO,IAAI,uBAAuB,WAAW;QAC3C,OAAO,MAAM,CAAC;YACZ,MAAM,OAAO,CAAA,GAAA,6IAAA,CAAA,WAAQ,AAAD;YACpB,IAAI,KAAK,OAAO,IAAI;gBAClB,MAAM,YAAY,CAAA,GAAA,6IAAA,CAAA,uBAAoB,AAAD;gBACrC,KAAK,MAAM,CAAC;gBACZ,MAAM,gBAAgB,cAAc,SAAS,aAAa,GAAG;gBAC7D,IAAI,CAAA,GAAA,6IAAA,CAAA,gBAAa,AAAD,QAAQ,QAAQ,kBAAkB,QAAQ,kBAAkB,OAAO,cAAc,IAAI;oBACnG,UAAU,MAAM;gBAClB;YACF;QACF,GAAG;IACL,OAAO,IAAI,uBAAuB,MAAM;QACtC,OAAQ,OAAO;YACb,KAAK;gBACH;oBACE,MAAM,oBAAoB,OAAO,gBAAgB,CAAC;oBAClD,OAAO,cAAc,CAAC,mBAAmB;oBACzC;gBACF;YACF,KAAK;gBACH;oBACE,OAAO,cAAc,CAAC,oBAAoB;oBAC1C;gBACF;YACF,KAAK;gBACH;oBACE,OAAO,MAAM,CAAC;wBACZ,MAAM,OAAO,CAAA,GAAA,6IAAA,CAAA,WAAQ,AAAD;wBACpB,IAAI,KAAK,OAAO,IAAI;4BAClB,mBAAmB;wBACrB;oBACF,GAAG;oBACH;gBACF;QACJ;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 12751, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12757, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/text/LexicalText.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $getRoot, $isDecoratorNode, $isElementNode, $isParagraphNode, $isTextNode, TextNode, $createTextNode } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Returns the root's text content.\n * @returns The root's text content.\n */\nfunction $rootTextContent() {\n  const root = $getRoot();\n  return root.getTextContent();\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Determines if the root has any text content and can trim any whitespace if it does.\n * @param isEditorComposing - Is the editor in composition mode due to an active Input Method Editor?\n * @param trim - Should the root text have its whitespaced trimmed? Defaults to true.\n * @returns true if text content is empty, false if there is text or isEditorComposing is true.\n */\nfunction $isRootTextContentEmpty(isEditorComposing, trim = true) {\n  if (isEditorComposing) {\n    return false;\n  }\n  let text = $rootTextContent();\n  if (trim) {\n    text = text.trim();\n  }\n  return text === '';\n}\n\n/**\n * Returns a function that executes {@link $isRootTextContentEmpty}\n * @param isEditorComposing - Is the editor in composition mode due to an active Input Method Editor?\n * @param trim - Should the root text have its whitespaced trimmed? Defaults to true.\n * @returns A function that executes $isRootTextContentEmpty based on arguments.\n */\nfunction $isRootTextContentEmptyCurry(isEditorComposing, trim) {\n  return () => $isRootTextContentEmpty(isEditorComposing, trim);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Determines if the input should show the placeholder. If anything is in\n * in the root the placeholder should not be shown.\n * @param isComposing - Is the editor in composition mode due to an active Input Method Editor?\n * @returns true if the input should show the placeholder, false otherwise.\n */\nfunction $canShowPlaceholder(isComposing) {\n  if (!$isRootTextContentEmpty(isComposing, false)) {\n    return false;\n  }\n  const root = $getRoot();\n  const children = root.getChildren();\n  const childrenLength = children.length;\n  if (childrenLength > 1) {\n    return false;\n  }\n  for (let i = 0; i < childrenLength; i++) {\n    const topBlock = children[i];\n    if ($isDecoratorNode(topBlock)) {\n      return false;\n    }\n    if ($isElementNode(topBlock)) {\n      if (!$isParagraphNode(topBlock)) {\n        return false;\n      }\n      if (topBlock.__indent !== 0) {\n        return false;\n      }\n      const topBlockChildren = topBlock.getChildren();\n      const topBlockChildrenLength = topBlockChildren.length;\n      for (let s = 0; s < topBlockChildrenLength; s++) {\n        const child = topBlockChildren[i];\n        if (!$isTextNode(child)) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * Returns a function that executes {@link $canShowPlaceholder}\n * @param isEditorComposing - Is the editor in composition mode due to an active Input Method Editor?\n * @returns A function that executes $canShowPlaceholder with arguments.\n */\nfunction $canShowPlaceholderCurry(isEditorComposing) {\n  return () => $canShowPlaceholder(isEditorComposing);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Finds a TextNode with a size larger than targetCharacters and returns\n * the node along with the remaining length of the text.\n * @param root - The RootNode.\n * @param targetCharacters - The number of characters whose TextNode must be larger than.\n * @returns The TextNode and the intersections offset, or null if no TextNode is found.\n */\nfunction $findTextIntersectionFromCharacters(root, targetCharacters) {\n  let node = root.getFirstChild();\n  let currentCharacters = 0;\n  mainLoop: while (node !== null) {\n    if ($isElementNode(node)) {\n      const child = node.getFirstChild();\n      if (child !== null) {\n        node = child;\n        continue;\n      }\n    } else if ($isTextNode(node)) {\n      const characters = node.getTextContentSize();\n      if (currentCharacters + characters > targetCharacters) {\n        return {\n          node,\n          offset: targetCharacters - currentCharacters\n        };\n      }\n      currentCharacters += characters;\n    }\n    const sibling = node.getNextSibling();\n    if (sibling !== null) {\n      node = sibling;\n      continue;\n    }\n    let parent = node.getParent();\n    while (parent !== null) {\n      const parentSibling = parent.getNextSibling();\n      if (parentSibling !== null) {\n        node = parentSibling;\n        continue mainLoop;\n      }\n      parent = parent.getParent();\n    }\n    break;\n  }\n  return null;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls.\n\nfunction formatDevErrorMessage(message) {\n  throw new Error(message);\n}\n\n/**\n * Returns a tuple that can be rested (...) into mergeRegister to clean up\n * node transforms listeners that transforms text into another node, eg. a HashtagNode.\n * @example\n * ```ts\n *   useEffect(() => {\n    return mergeRegister(\n      ...registerLexicalTextEntity(editor, getMatch, targetNode, createNode),\n    );\n  }, [createNode, editor, getMatch, targetNode]);\n * ```\n * Where targetNode is the type of node containing the text you want to transform (like a text input),\n * then getMatch uses a regex to find a matching text and creates the proper node to include the matching text.\n * @param editor - The lexical editor.\n * @param getMatch - Finds a matching string that satisfies a regex expression.\n * @param targetNode - The node type that contains text to match with. eg. HashtagNode\n * @param createNode - A function that creates a new node to contain the matched text. eg createHashtagNode\n * @returns An array containing the plain text and reverse node transform listeners.\n */\nfunction registerLexicalTextEntity(editor, getMatch, targetNode, createNode) {\n  const isTargetNode = node => {\n    return node instanceof targetNode;\n  };\n  const $replaceWithSimpleText = node => {\n    const textNode = $createTextNode(node.getTextContent());\n    textNode.setFormat(node.getFormat());\n    node.replace(textNode);\n  };\n  const getMode = node => {\n    return node.getLatest().__mode;\n  };\n  const $textNodeTransform = node => {\n    if (!node.isSimpleText()) {\n      return;\n    }\n    let prevSibling = node.getPreviousSibling();\n    let text = node.getTextContent();\n    let currentNode = node;\n    let match;\n    if ($isTextNode(prevSibling)) {\n      const previousText = prevSibling.getTextContent();\n      const combinedText = previousText + text;\n      const prevMatch = getMatch(combinedText);\n      if (isTargetNode(prevSibling)) {\n        if (prevMatch === null || getMode(prevSibling) !== 0) {\n          $replaceWithSimpleText(prevSibling);\n          return;\n        } else {\n          const diff = prevMatch.end - previousText.length;\n          if (diff > 0) {\n            const concatText = text.slice(0, diff);\n            const newTextContent = previousText + concatText;\n            prevSibling.select();\n            prevSibling.setTextContent(newTextContent);\n            if (diff === text.length) {\n              node.remove();\n            } else {\n              const remainingText = text.slice(diff);\n              node.setTextContent(remainingText);\n            }\n            return;\n          }\n        }\n      } else if (prevMatch === null || prevMatch.start < previousText.length) {\n        return;\n      }\n    }\n    let prevMatchLengthToSkip = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      match = getMatch(text);\n      let nextText = match === null ? '' : text.slice(match.end);\n      text = nextText;\n      if (nextText === '') {\n        const nextSibling = currentNode.getNextSibling();\n        if ($isTextNode(nextSibling)) {\n          nextText = currentNode.getTextContent() + nextSibling.getTextContent();\n          const nextMatch = getMatch(nextText);\n          if (nextMatch === null) {\n            if (isTargetNode(nextSibling)) {\n              $replaceWithSimpleText(nextSibling);\n            } else {\n              nextSibling.markDirty();\n            }\n            return;\n          } else if (nextMatch.start !== 0) {\n            return;\n          }\n        }\n      }\n      if (match === null) {\n        return;\n      }\n      if (match.start === 0 && $isTextNode(prevSibling) && prevSibling.isTextEntity()) {\n        prevMatchLengthToSkip += match.end;\n        continue;\n      }\n      let nodeToReplace;\n      if (match.start === 0) {\n        [nodeToReplace, currentNode] = currentNode.splitText(match.end);\n      } else {\n        [, nodeToReplace, currentNode] = currentNode.splitText(match.start + prevMatchLengthToSkip, match.end + prevMatchLengthToSkip);\n      }\n      if (!(nodeToReplace !== undefined)) {\n        formatDevErrorMessage(`${'nodeToReplace'} should not be undefined. You may want to check splitOffsets passed to the splitText.`);\n      }\n      const replacementNode = createNode(nodeToReplace);\n      replacementNode.setFormat(nodeToReplace.getFormat());\n      nodeToReplace.replace(replacementNode);\n      if (currentNode == null) {\n        return;\n      }\n      prevMatchLengthToSkip = 0;\n      prevSibling = replacementNode;\n    }\n  };\n  const $reverseNodeTransform = node => {\n    const text = node.getTextContent();\n    const match = getMatch(text);\n    if (match === null || match.start !== 0) {\n      $replaceWithSimpleText(node);\n      return;\n    }\n    if (text.length > match.end) {\n      // This will split out the rest of the text as simple text\n      node.splitText(match.end);\n      return;\n    }\n    const prevSibling = node.getPreviousSibling();\n    if ($isTextNode(prevSibling) && prevSibling.isTextEntity()) {\n      $replaceWithSimpleText(prevSibling);\n      $replaceWithSimpleText(node);\n    }\n    const nextSibling = node.getNextSibling();\n    if ($isTextNode(nextSibling) && nextSibling.isTextEntity()) {\n      $replaceWithSimpleText(nextSibling);\n\n      // This may have already been converted in the previous block\n      if (isTargetNode(node)) {\n        $replaceWithSimpleText(node);\n      }\n    }\n  };\n  const removePlainTextTransform = editor.registerNodeTransform(TextNode, $textNodeTransform);\n  const removeReverseNodeTransform = editor.registerNodeTransform(targetNode, $reverseNodeTransform);\n  return [removePlainTextTransform, removeReverseNodeTransform];\n}\n\nexport { $canShowPlaceholder, $canShowPlaceholderCurry, $findTextIntersectionFromCharacters, $isRootTextContentEmpty, $isRootTextContentEmptyCurry, $rootTextContent, registerLexicalTextEntity };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13077, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13083, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/selection/LexicalSelection.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $isTextNode, $getCharacterOffsets, $isElementNode, $isRootNode, $getNodeByKey, $getPreviousSelection, $createTextNode, $isRangeSelection, $getSelection, $caretRangeFromSelection, $isTokenOrSegmented, $createRangeSelection, INTERNAL_$isBlock, $setSelection, $isRootOrShadowRoot, $hasAncestor, $isLeafNode, $caretFromPoint, $isExtendableTextPointCaret, $extendCaretToRange, $isChildCaret, $isDecoratorNode } from 'lexical';\nexport { $cloneWithProperties, $selectAll } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls.\n\nfunction formatDevErrorMessage(message) {\n  throw new Error(message);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst CSS_TO_STYLES = new Map();\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction getDOMTextNode(element) {\n  let node = element;\n  while (node != null) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return node;\n    }\n    node = node.firstChild;\n  }\n  return null;\n}\nfunction getDOMIndexWithinParent(node) {\n  const parent = node.parentNode;\n  if (parent == null) {\n    throw new Error('Should never happen');\n  }\n  return [parent, Array.from(parent.childNodes).indexOf(node)];\n}\n\n/**\n * Creates a selection range for the DOM.\n * @param editor - The lexical editor.\n * @param anchorNode - The anchor node of a selection.\n * @param _anchorOffset - The amount of space offset from the anchor to the focus.\n * @param focusNode - The current focus.\n * @param _focusOffset - The amount of space offset from the focus to the anchor.\n * @returns The range of selection for the DOM that was created.\n */\nfunction createDOMRange(editor, anchorNode, _anchorOffset, focusNode, _focusOffset) {\n  const anchorKey = anchorNode.getKey();\n  const focusKey = focusNode.getKey();\n  const range = document.createRange();\n  let anchorDOM = editor.getElementByKey(anchorKey);\n  let focusDOM = editor.getElementByKey(focusKey);\n  let anchorOffset = _anchorOffset;\n  let focusOffset = _focusOffset;\n  if ($isTextNode(anchorNode)) {\n    anchorDOM = getDOMTextNode(anchorDOM);\n  }\n  if ($isTextNode(focusNode)) {\n    focusDOM = getDOMTextNode(focusDOM);\n  }\n  if (anchorNode === undefined || focusNode === undefined || anchorDOM === null || focusDOM === null) {\n    return null;\n  }\n  if (anchorDOM.nodeName === 'BR') {\n    [anchorDOM, anchorOffset] = getDOMIndexWithinParent(anchorDOM);\n  }\n  if (focusDOM.nodeName === 'BR') {\n    [focusDOM, focusOffset] = getDOMIndexWithinParent(focusDOM);\n  }\n  const firstChild = anchorDOM.firstChild;\n  if (anchorDOM === focusDOM && firstChild != null && firstChild.nodeName === 'BR' && anchorOffset === 0 && focusOffset === 0) {\n    focusOffset = 1;\n  }\n  try {\n    range.setStart(anchorDOM, anchorOffset);\n    range.setEnd(focusDOM, focusOffset);\n  } catch (e) {\n    return null;\n  }\n  if (range.collapsed && (anchorOffset !== focusOffset || anchorKey !== focusKey)) {\n    // Range is backwards, we need to reverse it\n    range.setStart(focusDOM, focusOffset);\n    range.setEnd(anchorDOM, anchorOffset);\n  }\n  return range;\n}\n\n/**\n * Creates DOMRects, generally used to help the editor find a specific location on the screen.\n * @param editor - The lexical editor\n * @param range - A fragment of a document that can contain nodes and parts of text nodes.\n * @returns The selectionRects as an array.\n */\nfunction createRectsFromDOMRange(editor, range) {\n  const rootElement = editor.getRootElement();\n  if (rootElement === null) {\n    return [];\n  }\n  const rootRect = rootElement.getBoundingClientRect();\n  const computedStyle = getComputedStyle(rootElement);\n  const rootPadding = parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n  const selectionRects = Array.from(range.getClientRects());\n  let selectionRectsLength = selectionRects.length;\n  //sort rects from top left to bottom right.\n  selectionRects.sort((a, b) => {\n    const top = a.top - b.top;\n    // Some rects match position closely, but not perfectly,\n    // so we give a 3px tolerance.\n    if (Math.abs(top) <= 3) {\n      return a.left - b.left;\n    }\n    return top;\n  });\n  let prevRect;\n  for (let i = 0; i < selectionRectsLength; i++) {\n    const selectionRect = selectionRects[i];\n    // Exclude rects that overlap preceding Rects in the sorted list.\n    const isOverlappingRect = prevRect && prevRect.top <= selectionRect.top && prevRect.top + prevRect.height > selectionRect.top && prevRect.left + prevRect.width > selectionRect.left;\n    // Exclude selections that span the entire element\n    const selectionSpansElement = selectionRect.width + rootPadding === rootRect.width;\n    if (isOverlappingRect || selectionSpansElement) {\n      selectionRects.splice(i--, 1);\n      selectionRectsLength--;\n      continue;\n    }\n    prevRect = selectionRect;\n  }\n  return selectionRects;\n}\n\n/**\n * Creates an object containing all the styles and their values provided in the CSS string.\n * @param css - The CSS string of styles and their values.\n * @returns The styleObject containing all the styles and their values.\n */\nfunction getStyleObjectFromRawCSS(css) {\n  const styleObject = {};\n  if (!css) {\n    return styleObject;\n  }\n  const styles = css.split(';');\n  for (const style of styles) {\n    if (style !== '') {\n      const [key, value] = style.split(/:([^]+)/); // split on first colon\n      if (key && value) {\n        styleObject[key.trim()] = value.trim();\n      }\n    }\n  }\n  return styleObject;\n}\n\n/**\n * Given a CSS string, returns an object from the style cache.\n * @param css - The CSS property as a string.\n * @returns The value of the given CSS property.\n */\nfunction getStyleObjectFromCSS(css) {\n  let value = CSS_TO_STYLES.get(css);\n  if (value === undefined) {\n    value = getStyleObjectFromRawCSS(css);\n    CSS_TO_STYLES.set(css, value);\n  }\n  {\n    // Freeze the value in DEV to prevent accidental mutations\n    Object.freeze(value);\n  }\n  return value;\n}\n\n/**\n * Gets the CSS styles from the style object.\n * @param styles - The style object containing the styles to get.\n * @returns A string containing the CSS styles and their values.\n */\nfunction getCSSFromStyleObject(styles) {\n  let css = '';\n  for (const style in styles) {\n    if (style) {\n      css += `${style}: ${styles[style]};`;\n    }\n  }\n  return css;\n}\n\n/**\n * Generally used to append text content to HTML and JSON. Grabs the text content and \"slices\"\n * it to be generated into the new TextNode.\n * @param selection - The selection containing the node whose TextNode is to be edited.\n * @param textNode - The TextNode to be edited.\n * @returns The updated TextNode.\n */\nfunction $sliceSelectedTextNodeContent(selection, textNode) {\n  const anchorAndFocus = selection.getStartEndPoints();\n  if (textNode.isSelected(selection) && !textNode.isSegmented() && !textNode.isToken() && anchorAndFocus !== null) {\n    const [anchor, focus] = anchorAndFocus;\n    const isBackward = selection.isBackward();\n    const anchorNode = anchor.getNode();\n    const focusNode = focus.getNode();\n    const isAnchor = textNode.is(anchorNode);\n    const isFocus = textNode.is(focusNode);\n    if (isAnchor || isFocus) {\n      const [anchorOffset, focusOffset] = $getCharacterOffsets(selection);\n      const isSame = anchorNode.is(focusNode);\n      const isFirst = textNode.is(isBackward ? focusNode : anchorNode);\n      const isLast = textNode.is(isBackward ? anchorNode : focusNode);\n      let startOffset = 0;\n      let endOffset = undefined;\n      if (isSame) {\n        startOffset = anchorOffset > focusOffset ? focusOffset : anchorOffset;\n        endOffset = anchorOffset > focusOffset ? anchorOffset : focusOffset;\n      } else if (isFirst) {\n        const offset = isBackward ? focusOffset : anchorOffset;\n        startOffset = offset;\n        endOffset = undefined;\n      } else if (isLast) {\n        const offset = isBackward ? anchorOffset : focusOffset;\n        startOffset = 0;\n        endOffset = offset;\n      }\n      textNode.__text = textNode.__text.slice(startOffset, endOffset);\n      return textNode;\n    }\n  }\n  return textNode;\n}\n\n/**\n * Determines if the current selection is at the end of the node.\n * @param point - The point of the selection to test.\n * @returns true if the provided point offset is in the last possible position, false otherwise.\n */\nfunction $isAtNodeEnd(point) {\n  if (point.type === 'text') {\n    return point.offset === point.getNode().getTextContentSize();\n  }\n  const node = point.getNode();\n  if (!$isElementNode(node)) {\n    formatDevErrorMessage(`isAtNodeEnd: node must be a TextNode or ElementNode`);\n  }\n  return point.offset === node.getChildrenSize();\n}\n\n/**\n * Trims text from a node in order to shorten it, eg. to enforce a text's max length. If it deletes text\n * that is an ancestor of the anchor then it will leave 2 indents, otherwise, if no text content exists, it deletes\n * the TextNode. It will move the focus to either the end of any left over text or beginning of a new TextNode.\n * @param editor - The lexical editor.\n * @param anchor - The anchor of the current selection, where the selection should be pointing.\n * @param delCount - The amount of characters to delete. Useful as a dynamic variable eg. textContentSize - maxLength;\n */\nfunction $trimTextContentFromAnchor(editor, anchor, delCount) {\n  // Work from the current selection anchor point\n  let currentNode = anchor.getNode();\n  let remaining = delCount;\n  if ($isElementNode(currentNode)) {\n    const descendantNode = currentNode.getDescendantByIndex(anchor.offset);\n    if (descendantNode !== null) {\n      currentNode = descendantNode;\n    }\n  }\n  while (remaining > 0 && currentNode !== null) {\n    if ($isElementNode(currentNode)) {\n      const lastDescendant = currentNode.getLastDescendant();\n      if (lastDescendant !== null) {\n        currentNode = lastDescendant;\n      }\n    }\n    let nextNode = currentNode.getPreviousSibling();\n    let additionalElementWhitespace = 0;\n    if (nextNode === null) {\n      let parent = currentNode.getParentOrThrow();\n      let parentSibling = parent.getPreviousSibling();\n      while (parentSibling === null) {\n        parent = parent.getParent();\n        if (parent === null) {\n          nextNode = null;\n          break;\n        }\n        parentSibling = parent.getPreviousSibling();\n      }\n      if (parent !== null) {\n        additionalElementWhitespace = parent.isInline() ? 0 : 2;\n        nextNode = parentSibling;\n      }\n    }\n    let text = currentNode.getTextContent();\n    // If the text is empty, we need to consider adding in two line breaks to match\n    // the content if we were to get it from its parent.\n    if (text === '' && $isElementNode(currentNode) && !currentNode.isInline()) {\n      // TODO: should this be handled in core?\n      text = '\\n\\n';\n    }\n    const currentNodeSize = text.length;\n    if (!$isTextNode(currentNode) || remaining >= currentNodeSize) {\n      const parent = currentNode.getParent();\n      currentNode.remove();\n      if (parent != null && parent.getChildrenSize() === 0 && !$isRootNode(parent)) {\n        parent.remove();\n      }\n      remaining -= currentNodeSize + additionalElementWhitespace;\n      currentNode = nextNode;\n    } else {\n      const key = currentNode.getKey();\n      // See if we can just revert it to what was in the last editor state\n      const prevTextContent = editor.getEditorState().read(() => {\n        const prevNode = $getNodeByKey(key);\n        if ($isTextNode(prevNode) && prevNode.isSimpleText()) {\n          return prevNode.getTextContent();\n        }\n        return null;\n      });\n      const offset = currentNodeSize - remaining;\n      const slicedText = text.slice(0, offset);\n      if (prevTextContent !== null && prevTextContent !== text) {\n        const prevSelection = $getPreviousSelection();\n        let target = currentNode;\n        if (!currentNode.isSimpleText()) {\n          const textNode = $createTextNode(prevTextContent);\n          currentNode.replace(textNode);\n          target = textNode;\n        } else {\n          currentNode.setTextContent(prevTextContent);\n        }\n        if ($isRangeSelection(prevSelection) && prevSelection.isCollapsed()) {\n          const prevOffset = prevSelection.anchor.offset;\n          target.select(prevOffset, prevOffset);\n        }\n      } else if (currentNode.isSimpleText()) {\n        // Split text\n        const isSelected = anchor.key === key;\n        let anchorOffset = anchor.offset;\n        // Move offset to end if it's less than the remaining number, otherwise\n        // we'll have a negative splitStart.\n        if (anchorOffset < remaining) {\n          anchorOffset = currentNodeSize;\n        }\n        const splitStart = isSelected ? anchorOffset - remaining : 0;\n        const splitEnd = isSelected ? anchorOffset : offset;\n        if (isSelected && splitStart === 0) {\n          const [excessNode] = currentNode.splitText(splitStart, splitEnd);\n          excessNode.remove();\n        } else {\n          const [, excessNode] = currentNode.splitText(splitStart, splitEnd);\n          excessNode.remove();\n        }\n      } else {\n        const textNode = $createTextNode(slicedText);\n        currentNode.replace(textNode);\n      }\n      remaining = 0;\n    }\n  }\n}\n\n/**\n * Gets the TextNode's style object and adds the styles to the CSS.\n * @param node - The TextNode to add styles to.\n */\nfunction $addNodeStyle(node) {\n  const CSSText = node.getStyle();\n  const styles = getStyleObjectFromRawCSS(CSSText);\n  CSS_TO_STYLES.set(CSSText, styles);\n}\n\n/**\n * Applies the provided styles to the given TextNode, ElementNode, or\n * collapsed RangeSelection.\n *\n * @param target - The TextNode, ElementNode, or collapsed RangeSelection to apply the styles to\n * @param patch - The patch to apply, which can include multiple styles. \\\\{CSSProperty: value\\\\} . Can also accept a function that returns the new property value.\n */\nfunction $patchStyle(target, patch) {\n  if (!($isRangeSelection(target) ? target.isCollapsed() : $isTextNode(target) || $isElementNode(target))) {\n    formatDevErrorMessage(`$patchStyle must only be called with a TextNode, ElementNode, or collapsed RangeSelection`);\n  }\n  const prevStyles = getStyleObjectFromCSS($isRangeSelection(target) ? target.style : $isTextNode(target) ? target.getStyle() : target.getTextStyle());\n  const newStyles = Object.entries(patch).reduce((styles, [key, value]) => {\n    if (typeof value === 'function') {\n      styles[key] = value(prevStyles[key], target);\n    } else if (value === null) {\n      delete styles[key];\n    } else {\n      styles[key] = value;\n    }\n    return styles;\n  }, {\n    ...prevStyles\n  });\n  const newCSSText = getCSSFromStyleObject(newStyles);\n  if ($isRangeSelection(target) || $isTextNode(target)) {\n    target.setStyle(newCSSText);\n  } else {\n    target.setTextStyle(newCSSText);\n  }\n  CSS_TO_STYLES.set(newCSSText, newStyles);\n}\n\n/**\n * Applies the provided styles to the TextNodes in the provided Selection.\n * Will update partially selected TextNodes by splitting the TextNode and applying\n * the styles to the appropriate one.\n * @param selection - The selected node(s) to update.\n * @param patch - The patch to apply, which can include multiple styles. \\\\{CSSProperty: value\\\\} . Can also accept a function that returns the new property value.\n */\nfunction $patchStyleText(selection, patch) {\n  if ($isRangeSelection(selection) && selection.isCollapsed()) {\n    $patchStyle(selection, patch);\n    const emptyNode = selection.anchor.getNode();\n    if ($isElementNode(emptyNode) && emptyNode.isEmpty()) {\n      $patchStyle(emptyNode, patch);\n    }\n  }\n  $forEachSelectedTextNode(textNode => {\n    $patchStyle(textNode, patch);\n  });\n}\nfunction $forEachSelectedTextNode(fn) {\n  const selection = $getSelection();\n  if (!selection) {\n    return;\n  }\n  const slicedTextNodes = new Map();\n  const getSliceIndices = node => slicedTextNodes.get(node.getKey()) || [0, node.getTextContentSize()];\n  if ($isRangeSelection(selection)) {\n    for (const slice of $caretRangeFromSelection(selection).getTextSlices()) {\n      if (slice) {\n        slicedTextNodes.set(slice.caret.origin.getKey(), slice.getSliceIndices());\n      }\n    }\n  }\n  const selectedNodes = selection.getNodes();\n  for (const selectedNode of selectedNodes) {\n    if (!($isTextNode(selectedNode) && selectedNode.canHaveFormat())) {\n      continue;\n    }\n    const [startOffset, endOffset] = getSliceIndices(selectedNode);\n    // No actual text is selected, so do nothing.\n    if (endOffset === startOffset) {\n      continue;\n    }\n\n    // The entire node is selected or a token/segment, so just format it\n    if ($isTokenOrSegmented(selectedNode) || startOffset === 0 && endOffset === selectedNode.getTextContentSize()) {\n      fn(selectedNode);\n    } else {\n      // The node is partially selected, so split it into two or three nodes\n      // and style the selected one.\n      const splitNodes = selectedNode.splitText(startOffset, endOffset);\n      const replacement = splitNodes[startOffset === 0 ? 0 : 1];\n      fn(replacement);\n    }\n  }\n  // Prior to NodeCaret #7046 this would have been a side-effect\n  // so we do this for test compatibility.\n  // TODO: we may want to consider simplifying by removing this\n  if ($isRangeSelection(selection) && selection.anchor.type === 'text' && selection.focus.type === 'text' && selection.anchor.key === selection.focus.key) {\n    $ensureForwardRangeSelection(selection);\n  }\n}\n\n/**\n * Ensure that the given RangeSelection is not backwards. If it\n * is backwards, then the anchor and focus points will be swapped\n * in-place. Ensuring that the selection is a writable RangeSelection\n * is the responsibility of the caller (e.g. in a read-only context\n * you will want to clone $getSelection() before using this).\n *\n * @param selection a writable RangeSelection\n */\nfunction $ensureForwardRangeSelection(selection) {\n  if (selection.isBackward()) {\n    const {\n      anchor,\n      focus\n    } = selection;\n    // stash for the in-place swap\n    const {\n      key,\n      offset,\n      type\n    } = anchor;\n    anchor.set(focus.key, focus.offset, focus.type);\n    focus.set(key, offset, type);\n  }\n}\n\nfunction $copyBlockFormatIndent(srcNode, destNode) {\n  const format = srcNode.getFormatType();\n  const indent = srcNode.getIndent();\n  if (format !== destNode.getFormatType()) {\n    destNode.setFormat(format);\n  }\n  if (indent !== destNode.getIndent()) {\n    destNode.setIndent(indent);\n  }\n}\n\n/**\n * Converts all nodes in the selection that are of one block type to another.\n * @param selection - The selected blocks to be converted.\n * @param $createElement - The function that creates the node. eg. $createParagraphNode.\n * @param $afterCreateElement - The function that updates the new node based on the previous one ($copyBlockFormatIndent by default)\n */\nfunction $setBlocksType(selection, $createElement, $afterCreateElement = $copyBlockFormatIndent) {\n  if (selection === null) {\n    return;\n  }\n  // Selections tend to not include their containing blocks so we effectively\n  // expand it here\n  const anchorAndFocus = selection.getStartEndPoints();\n  const blockMap = new Map();\n  let newSelection = null;\n  if (anchorAndFocus) {\n    const [anchor, focus] = anchorAndFocus;\n    newSelection = $createRangeSelection();\n    newSelection.anchor.set(anchor.key, anchor.offset, anchor.type);\n    newSelection.focus.set(focus.key, focus.offset, focus.type);\n    const anchorBlock = $getAncestor(anchor.getNode(), INTERNAL_$isBlock);\n    const focusBlock = $getAncestor(focus.getNode(), INTERNAL_$isBlock);\n    if ($isElementNode(anchorBlock)) {\n      blockMap.set(anchorBlock.getKey(), anchorBlock);\n    }\n    if ($isElementNode(focusBlock)) {\n      blockMap.set(focusBlock.getKey(), focusBlock);\n    }\n  }\n  for (const node of selection.getNodes()) {\n    if ($isElementNode(node) && INTERNAL_$isBlock(node)) {\n      blockMap.set(node.getKey(), node);\n    }\n  }\n  for (const [key, prevNode] of blockMap) {\n    const element = $createElement();\n    $afterCreateElement(prevNode, element);\n    prevNode.replace(element, true);\n    if (newSelection) {\n      if (key === newSelection.anchor.key) {\n        newSelection.anchor.set(element.getKey(), newSelection.anchor.offset, newSelection.anchor.type);\n      }\n      if (key === newSelection.focus.key) {\n        newSelection.focus.set(element.getKey(), newSelection.focus.offset, newSelection.focus.type);\n      }\n    }\n  }\n  if (newSelection && selection.is($getSelection())) {\n    $setSelection(newSelection);\n  }\n}\nfunction isPointAttached(point) {\n  return point.getNode().isAttached();\n}\nfunction $removeParentEmptyElements(startingNode) {\n  let node = startingNode;\n  while (node !== null && !$isRootOrShadowRoot(node)) {\n    const latest = node.getLatest();\n    const parentNode = node.getParent();\n    if (latest.getChildrenSize() === 0) {\n      node.remove(true);\n    }\n    node = parentNode;\n  }\n}\n\n/**\n * @deprecated\n * Wraps all nodes in the selection into another node of the type returned by createElement.\n * @param selection - The selection of nodes to be wrapped.\n * @param createElement - A function that creates the wrapping ElementNode. eg. $createParagraphNode.\n * @param wrappingElement - An element to append the wrapped selection and its children to.\n */\nfunction $wrapNodes(selection, createElement, wrappingElement = null) {\n  const anchorAndFocus = selection.getStartEndPoints();\n  const anchor = anchorAndFocus ? anchorAndFocus[0] : null;\n  const nodes = selection.getNodes();\n  const nodesLength = nodes.length;\n  if (anchor !== null && (nodesLength === 0 || nodesLength === 1 && anchor.type === 'element' && anchor.getNode().getChildrenSize() === 0)) {\n    const target = anchor.type === 'text' ? anchor.getNode().getParentOrThrow() : anchor.getNode();\n    const children = target.getChildren();\n    let element = createElement();\n    element.setFormat(target.getFormatType());\n    element.setIndent(target.getIndent());\n    children.forEach(child => element.append(child));\n    if (wrappingElement) {\n      element = wrappingElement.append(element);\n    }\n    target.replace(element);\n    return;\n  }\n  let topLevelNode = null;\n  let descendants = [];\n  for (let i = 0; i < nodesLength; i++) {\n    const node = nodes[i];\n    // Determine whether wrapping has to be broken down into multiple chunks. This can happen if the\n    // user selected multiple Root-like nodes that have to be treated separately as if they are\n    // their own branch. I.e. you don't want to wrap a whole table, but rather the contents of each\n    // of each of the cell nodes.\n    if ($isRootOrShadowRoot(node)) {\n      $wrapNodesImpl(selection, descendants, descendants.length, createElement, wrappingElement);\n      descendants = [];\n      topLevelNode = node;\n    } else if (topLevelNode === null || topLevelNode !== null && $hasAncestor(node, topLevelNode)) {\n      descendants.push(node);\n    } else {\n      $wrapNodesImpl(selection, descendants, descendants.length, createElement, wrappingElement);\n      descendants = [node];\n    }\n  }\n  $wrapNodesImpl(selection, descendants, descendants.length, createElement, wrappingElement);\n}\n\n/**\n * Wraps each node into a new ElementNode.\n * @param selection - The selection of nodes to wrap.\n * @param nodes - An array of nodes, generally the descendants of the selection.\n * @param nodesLength - The length of nodes.\n * @param createElement - A function that creates the wrapping ElementNode. eg. $createParagraphNode.\n * @param wrappingElement - An element to wrap all the nodes into.\n * @returns\n */\nfunction $wrapNodesImpl(selection, nodes, nodesLength, createElement, wrappingElement = null) {\n  if (nodes.length === 0) {\n    return;\n  }\n  const firstNode = nodes[0];\n  const elementMapping = new Map();\n  const elements = [];\n  // The below logic is to find the right target for us to\n  // either insertAfter/insertBefore/append the corresponding\n  // elements to. This is made more complicated due to nested\n  // structures.\n  let target = $isElementNode(firstNode) ? firstNode : firstNode.getParentOrThrow();\n  if (target.isInline()) {\n    target = target.getParentOrThrow();\n  }\n  let targetIsPrevSibling = false;\n  while (target !== null) {\n    const prevSibling = target.getPreviousSibling();\n    if (prevSibling !== null) {\n      target = prevSibling;\n      targetIsPrevSibling = true;\n      break;\n    }\n    target = target.getParentOrThrow();\n    if ($isRootOrShadowRoot(target)) {\n      break;\n    }\n  }\n  const emptyElements = new Set();\n\n  // Find any top level empty elements\n  for (let i = 0; i < nodesLength; i++) {\n    const node = nodes[i];\n    if ($isElementNode(node) && node.getChildrenSize() === 0) {\n      emptyElements.add(node.getKey());\n    }\n  }\n  const movedNodes = new Set();\n\n  // Move out all leaf nodes into our elements array.\n  // If we find a top level empty element, also move make\n  // an element for that.\n  for (let i = 0; i < nodesLength; i++) {\n    const node = nodes[i];\n    let parent = node.getParent();\n    if (parent !== null && parent.isInline()) {\n      parent = parent.getParent();\n    }\n    if (parent !== null && $isLeafNode(node) && !movedNodes.has(node.getKey())) {\n      const parentKey = parent.getKey();\n      if (elementMapping.get(parentKey) === undefined) {\n        const targetElement = createElement();\n        targetElement.setFormat(parent.getFormatType());\n        targetElement.setIndent(parent.getIndent());\n        elements.push(targetElement);\n        elementMapping.set(parentKey, targetElement);\n        // Move node and its siblings to the new\n        // element.\n        parent.getChildren().forEach(child => {\n          targetElement.append(child);\n          movedNodes.add(child.getKey());\n          if ($isElementNode(child)) {\n            // Skip nested leaf nodes if the parent has already been moved\n            child.getChildrenKeys().forEach(key => movedNodes.add(key));\n          }\n        });\n        $removeParentEmptyElements(parent);\n      }\n    } else if (emptyElements.has(node.getKey())) {\n      if (!$isElementNode(node)) {\n        formatDevErrorMessage(`Expected node in emptyElements to be an ElementNode`);\n      }\n      const targetElement = createElement();\n      targetElement.setFormat(node.getFormatType());\n      targetElement.setIndent(node.getIndent());\n      elements.push(targetElement);\n      node.remove(true);\n    }\n  }\n  if (wrappingElement !== null) {\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      wrappingElement.append(element);\n    }\n  }\n  let lastElement = null;\n\n  // If our target is Root-like, let's see if we can re-adjust\n  // so that the target is the first child instead.\n  if ($isRootOrShadowRoot(target)) {\n    if (targetIsPrevSibling) {\n      if (wrappingElement !== null) {\n        target.insertAfter(wrappingElement);\n      } else {\n        for (let i = elements.length - 1; i >= 0; i--) {\n          const element = elements[i];\n          target.insertAfter(element);\n        }\n      }\n    } else {\n      const firstChild = target.getFirstChild();\n      if ($isElementNode(firstChild)) {\n        target = firstChild;\n      }\n      if (firstChild === null) {\n        if (wrappingElement) {\n          target.append(wrappingElement);\n        } else {\n          for (let i = 0; i < elements.length; i++) {\n            const element = elements[i];\n            target.append(element);\n            lastElement = element;\n          }\n        }\n      } else {\n        if (wrappingElement !== null) {\n          firstChild.insertBefore(wrappingElement);\n        } else {\n          for (let i = 0; i < elements.length; i++) {\n            const element = elements[i];\n            firstChild.insertBefore(element);\n            lastElement = element;\n          }\n        }\n      }\n    }\n  } else {\n    if (wrappingElement) {\n      target.insertAfter(wrappingElement);\n    } else {\n      for (let i = elements.length - 1; i >= 0; i--) {\n        const element = elements[i];\n        target.insertAfter(element);\n        lastElement = element;\n      }\n    }\n  }\n  const prevSelection = $getPreviousSelection();\n  if ($isRangeSelection(prevSelection) && isPointAttached(prevSelection.anchor) && isPointAttached(prevSelection.focus)) {\n    $setSelection(prevSelection.clone());\n  } else if (lastElement !== null) {\n    lastElement.selectEnd();\n  } else {\n    selection.dirty = true;\n  }\n}\n\n/**\n * Determines if the default character selection should be overridden. Used with DecoratorNodes\n * @param selection - The selection whose default character selection may need to be overridden.\n * @param isBackward - Is the selection backwards (the focus comes before the anchor)?\n * @returns true if it should be overridden, false if not.\n */\nfunction $shouldOverrideDefaultCharacterSelection(selection, isBackward) {\n  const focusCaret = $caretFromPoint(selection.focus, isBackward ? 'previous' : 'next');\n  if ($isExtendableTextPointCaret(focusCaret)) {\n    return false;\n  }\n  for (const nextCaret of $extendCaretToRange(focusCaret)) {\n    if ($isChildCaret(nextCaret)) {\n      return !nextCaret.origin.isInline();\n    } else if ($isElementNode(nextCaret.origin)) {\n      continue;\n    } else if ($isDecoratorNode(nextCaret.origin)) {\n      return true;\n    }\n    break;\n  }\n  return false;\n}\n\n/**\n * Moves the selection according to the arguments.\n * @param selection - The selected text or nodes.\n * @param isHoldingShift - Is the shift key being held down during the operation.\n * @param isBackward - Is the selection selected backwards (the focus comes before the anchor)?\n * @param granularity - The distance to adjust the current selection.\n */\nfunction $moveCaretSelection(selection, isHoldingShift, isBackward, granularity) {\n  selection.modify(isHoldingShift ? 'extend' : 'move', isBackward, granularity);\n}\n\n/**\n * Tests a parent element for right to left direction.\n * @param selection - The selection whose parent is to be tested.\n * @returns true if the selections' parent element has a direction of 'rtl' (right to left), false otherwise.\n */\nfunction $isParentElementRTL(selection) {\n  const anchorNode = selection.anchor.getNode();\n  const parent = $isRootNode(anchorNode) ? anchorNode : anchorNode.getParentOrThrow();\n  return parent.getDirection() === 'rtl';\n}\n\n/**\n * Moves selection by character according to arguments.\n * @param selection - The selection of the characters to move.\n * @param isHoldingShift - Is the shift key being held down during the operation.\n * @param isBackward - Is the selection backward (the focus comes before the anchor)?\n */\nfunction $moveCharacter(selection, isHoldingShift, isBackward) {\n  const isRTL = $isParentElementRTL(selection);\n  $moveCaretSelection(selection, isHoldingShift, isBackward ? !isRTL : isRTL, 'character');\n}\n\n/**\n * Returns the current value of a CSS property for Nodes, if set. If not set, it returns the defaultValue.\n * @param node - The node whose style value to get.\n * @param styleProperty - The CSS style property.\n * @param defaultValue - The default value for the property.\n * @returns The value of the property for node.\n */\nfunction $getNodeStyleValueForProperty(node, styleProperty, defaultValue) {\n  const css = node.getStyle();\n  const styleObject = getStyleObjectFromCSS(css);\n  if (styleObject !== null) {\n    return styleObject[styleProperty] || defaultValue;\n  }\n  return defaultValue;\n}\n\n/**\n * Returns the current value of a CSS property for TextNodes in the Selection, if set. If not set, it returns the defaultValue.\n * If all TextNodes do not have the same value, it returns an empty string.\n * @param selection - The selection of TextNodes whose value to find.\n * @param styleProperty - The CSS style property.\n * @param defaultValue - The default value for the property, defaults to an empty string.\n * @returns The value of the property for the selected TextNodes.\n */\nfunction $getSelectionStyleValueForProperty(selection, styleProperty, defaultValue = '') {\n  let styleValue = null;\n  const nodes = selection.getNodes();\n  const anchor = selection.anchor;\n  const focus = selection.focus;\n  const isBackward = selection.isBackward();\n  const endOffset = isBackward ? focus.offset : anchor.offset;\n  const endNode = isBackward ? focus.getNode() : anchor.getNode();\n  if ($isRangeSelection(selection) && selection.isCollapsed() && selection.style !== '') {\n    const css = selection.style;\n    const styleObject = getStyleObjectFromCSS(css);\n    if (styleObject !== null && styleProperty in styleObject) {\n      return styleObject[styleProperty];\n    }\n  }\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    // if no actual characters in the end node are selected, we don't\n    // include it in the selection for purposes of determining style\n    // value\n    if (i !== 0 && endOffset === 0 && node.is(endNode)) {\n      continue;\n    }\n    if ($isTextNode(node)) {\n      const nodeStyleValue = $getNodeStyleValueForProperty(node, styleProperty, defaultValue);\n      if (styleValue === null) {\n        styleValue = nodeStyleValue;\n      } else if (styleValue !== nodeStyleValue) {\n        // multiple text nodes are in the selection and they don't all\n        // have the same style.\n        styleValue = '';\n        break;\n      }\n    }\n  }\n  return styleValue === null ? defaultValue : styleValue;\n}\nfunction $getAncestor(node, predicate) {\n  let parent = node;\n  while (parent !== null && parent.getParent() !== null && !predicate(parent)) {\n    parent = parent.getParentOrThrow();\n  }\n  return predicate(parent) ? parent : null;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/** @deprecated renamed to {@link $trimTextContentFromAnchor} by @lexical/eslint-plugin rules-of-lexical */\nconst trimTextContentFromAnchor = $trimTextContentFromAnchor;\n\nexport { $addNodeStyle, $copyBlockFormatIndent, $ensureForwardRangeSelection, $forEachSelectedTextNode, $getSelectionStyleValueForProperty, $isAtNodeEnd, $isParentElementRTL, $moveCaretSelection, $moveCharacter, $patchStyleText, $setBlocksType, $shouldOverrideDefaultCharacterSelection, $sliceSelectedTextNodeContent, $trimTextContentFromAnchor, $wrapNodes, createDOMRange, createRectsFromDOMRange, getCSSFromStyleObject, getStyleObjectFromCSS, trimTextContentFromAnchor };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13978, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/utils/LexicalUtils.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { isHTMLElement, $getSelection, $isRangeSelection, $isElementNode, getDOMTextNode, $getRoot, $getChildCaret, $getSiblingCaret, $getAdjacentChildCaret, $getChildCaretOrSelf, makeStepwiseIterator, $isChildCaret, $cloneWithProperties, $setSelection, $getPreviousSelection, $isRootOrShadowRoot, $getChildCaretAtIndex, $isTextNode, $splitNode, $createParagraphNode, $isSiblingCaret, $rewindSiblingCaret, $getState, $setState } from 'lexical';\nexport { $splitNode, isBlockDomNode, isHTMLAnchorElement, isHTMLElement, isInlineDomNode } from 'lexical';\nimport { createRectsFromDOMRange } from '@lexical/selection';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls.\n\nfunction formatDevErrorMessage(message) {\n  throw new Error(message);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM$1 = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst documentMode = CAN_USE_DOM$1 && 'documentMode' in document ? document.documentMode : null;\nconst IS_APPLE$1 = CAN_USE_DOM$1 && /Mac|iPod|iPhone|iPad/.test(navigator.platform);\nconst IS_FIREFOX$1 = CAN_USE_DOM$1 && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);\nconst CAN_USE_BEFORE_INPUT$1 = CAN_USE_DOM$1 && 'InputEvent' in window && !documentMode ? 'getTargetRanges' in new window.InputEvent('input') : false;\nconst IS_SAFARI$1 = CAN_USE_DOM$1 && /Version\\/[\\d.]+.*Safari/.test(navigator.userAgent);\nconst IS_IOS$1 = CAN_USE_DOM$1 && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nconst IS_ANDROID$1 = CAN_USE_DOM$1 && /Android/.test(navigator.userAgent);\n\n// Keep these in case we need to use them in the future.\n// export const IS_WINDOWS: boolean = CAN_USE_DOM && /Win/.test(navigator.platform);\nconst IS_CHROME$1 = CAN_USE_DOM$1 && /^(?=.*Chrome).*/i.test(navigator.userAgent);\n// export const canUseTextInputEvent: boolean = CAN_USE_DOM && 'TextEvent' in window && !documentMode;\n\nconst IS_ANDROID_CHROME$1 = CAN_USE_DOM$1 && IS_ANDROID$1 && IS_CHROME$1;\nconst IS_APPLE_WEBKIT$1 = CAN_USE_DOM$1 && /AppleWebKit\\/[\\d.]+/.test(navigator.userAgent) && !IS_CHROME$1;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction normalizeClassNames(...classNames) {\n  const rval = [];\n  for (const className of classNames) {\n    if (className && typeof className === 'string') {\n      for (const [s] of className.matchAll(/\\S+/g)) {\n        rval.push(s);\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Returns a function that will execute all functions passed when called. It is generally used\n * to register multiple lexical listeners and then tear them down with a single function call, such\n * as React's useEffect hook.\n * @example\n * ```ts\n * useEffect(() => {\n *   return mergeRegister(\n *     editor.registerCommand(...registerCommand1 logic),\n *     editor.registerCommand(...registerCommand2 logic),\n *     editor.registerCommand(...registerCommand3 logic)\n *   )\n * }, [editor])\n * ```\n * In this case, useEffect is returning the function returned by mergeRegister as a cleanup\n * function to be executed after either the useEffect runs again (due to one of its dependencies\n * updating) or the component it resides in unmounts.\n * Note the functions don't neccesarily need to be in an array as all arguments\n * are considered to be the func argument and spread from there.\n * The order of cleanup is the reverse of the argument order. Generally it is\n * expected that the first \"acquire\" will be \"released\" last (LIFO order),\n * because a later step may have some dependency on an earlier one.\n * @param func - An array of cleanup functions meant to be executed by the returned function.\n * @returns the function which executes all the passed cleanup functions.\n */\nfunction mergeRegister(...func) {\n  return () => {\n    for (let i = func.length - 1; i >= 0; i--) {\n      func[i]();\n    }\n    // Clean up the references and make future calls a no-op\n    func.length = 0;\n  };\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction px(value) {\n  return `${value}px`;\n}\n\nconst mutationObserverConfig = {\n  attributes: true,\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nfunction prependDOMNode(parent, node) {\n  parent.insertBefore(node, parent.firstChild);\n}\n\n/**\n * Place one or multiple newly created Nodes at the passed Range's position.\n * Multiple nodes will only be created when the Range spans multiple lines (aka\n * client rects).\n *\n * This function can come particularly useful to highlight particular parts of\n * the text without interfering with the EditorState, that will often replicate\n * the state across collab and clipboard.\n *\n * This function accounts for DOM updates which can modify the passed Range.\n * Hence, the function return to remove the listener.\n */\nfunction mlcPositionNodeOnRange(editor, range, onReposition) {\n  let rootDOMNode = null;\n  let parentDOMNode = null;\n  let observer = null;\n  let lastNodes = [];\n  const wrapperNode = document.createElement('div');\n  wrapperNode.style.position = 'relative';\n  function position() {\n    if (!(rootDOMNode !== null)) {\n      formatDevErrorMessage(`Unexpected null rootDOMNode`);\n    }\n    if (!(parentDOMNode !== null)) {\n      formatDevErrorMessage(`Unexpected null parentDOMNode`);\n    }\n    const {\n      left: parentLeft,\n      top: parentTop\n    } = parentDOMNode.getBoundingClientRect();\n    const rects = createRectsFromDOMRange(editor, range);\n    if (!wrapperNode.isConnected) {\n      prependDOMNode(parentDOMNode, wrapperNode);\n    }\n    let hasRepositioned = false;\n    for (let i = 0; i < rects.length; i++) {\n      const rect = rects[i];\n      // Try to reuse the previously created Node when possible, no need to\n      // remove/create on the most common case reposition case\n      const rectNode = lastNodes[i] || document.createElement('div');\n      const rectNodeStyle = rectNode.style;\n      if (rectNodeStyle.position !== 'absolute') {\n        rectNodeStyle.position = 'absolute';\n        hasRepositioned = true;\n      }\n      const left = px(rect.left - parentLeft);\n      if (rectNodeStyle.left !== left) {\n        rectNodeStyle.left = left;\n        hasRepositioned = true;\n      }\n      const top = px(rect.top - parentTop);\n      if (rectNodeStyle.top !== top) {\n        rectNode.style.top = top;\n        hasRepositioned = true;\n      }\n      const width = px(rect.width);\n      if (rectNodeStyle.width !== width) {\n        rectNode.style.width = width;\n        hasRepositioned = true;\n      }\n      const height = px(rect.height);\n      if (rectNodeStyle.height !== height) {\n        rectNode.style.height = height;\n        hasRepositioned = true;\n      }\n      if (rectNode.parentNode !== wrapperNode) {\n        wrapperNode.append(rectNode);\n        hasRepositioned = true;\n      }\n      lastNodes[i] = rectNode;\n    }\n    while (lastNodes.length > rects.length) {\n      lastNodes.pop();\n    }\n    if (hasRepositioned) {\n      onReposition(lastNodes);\n    }\n  }\n  function stop() {\n    parentDOMNode = null;\n    rootDOMNode = null;\n    if (observer !== null) {\n      observer.disconnect();\n    }\n    observer = null;\n    wrapperNode.remove();\n    for (const node of lastNodes) {\n      node.remove();\n    }\n    lastNodes = [];\n  }\n  function restart() {\n    const currentRootDOMNode = editor.getRootElement();\n    if (currentRootDOMNode === null) {\n      return stop();\n    }\n    const currentParentDOMNode = currentRootDOMNode.parentElement;\n    if (!isHTMLElement(currentParentDOMNode)) {\n      return stop();\n    }\n    stop();\n    rootDOMNode = currentRootDOMNode;\n    parentDOMNode = currentParentDOMNode;\n    observer = new MutationObserver(mutations => {\n      const nextRootDOMNode = editor.getRootElement();\n      const nextParentDOMNode = nextRootDOMNode && nextRootDOMNode.parentElement;\n      if (nextRootDOMNode !== rootDOMNode || nextParentDOMNode !== parentDOMNode) {\n        return restart();\n      }\n      for (const mutation of mutations) {\n        if (!wrapperNode.contains(mutation.target)) {\n          // TODO throttle\n          return position();\n        }\n      }\n    });\n    observer.observe(currentParentDOMNode, mutationObserverConfig);\n    position();\n  }\n  const removeRootListener = editor.registerRootListener(restart);\n  return () => {\n    removeRootListener();\n    stop();\n  };\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction rangeTargetFromPoint(point, node, dom) {\n  if (point.type === 'text' || !$isElementNode(node)) {\n    const textDOM = getDOMTextNode(dom) || dom;\n    return [textDOM, point.offset];\n  } else {\n    const slot = node.getDOMSlot(dom);\n    return [slot.element, slot.getFirstChildOffset() + point.offset];\n  }\n}\nfunction rangeFromPoints(editor, anchor, anchorNode, anchorDOM, focus, focusNode, focusDOM) {\n  const editorDocument = editor._window ? editor._window.document : document;\n  const range = editorDocument.createRange();\n  if (focusNode.isBefore(anchorNode)) {\n    range.setStart(...rangeTargetFromPoint(focus, focusNode, focusDOM));\n    range.setEnd(...rangeTargetFromPoint(anchor, anchorNode, anchorDOM));\n  } else {\n    range.setStart(...rangeTargetFromPoint(anchor, anchorNode, anchorDOM));\n    range.setEnd(...rangeTargetFromPoint(focus, focusNode, focusDOM));\n  }\n  return range;\n}\n/**\n * Place one or multiple newly created Nodes at the current selection. Multiple\n * nodes will only be created when the selection spans multiple lines (aka\n * client rects).\n *\n * This function can come useful when you want to show the selection but the\n * editor has been focused away.\n */\nfunction markSelection(editor, onReposition) {\n  let previousAnchorNode = null;\n  let previousAnchorNodeDOM = null;\n  let previousAnchorOffset = null;\n  let previousFocusNode = null;\n  let previousFocusNodeDOM = null;\n  let previousFocusOffset = null;\n  let removeRangeListener = () => {};\n  function compute(editorState) {\n    editorState.read(() => {\n      const selection = $getSelection();\n      if (!$isRangeSelection(selection)) {\n        // TODO\n        previousAnchorNode = null;\n        previousAnchorOffset = null;\n        previousFocusNode = null;\n        previousFocusOffset = null;\n        removeRangeListener();\n        removeRangeListener = () => {};\n        return;\n      }\n      const {\n        anchor,\n        focus\n      } = selection;\n      const currentAnchorNode = anchor.getNode();\n      const currentAnchorNodeKey = currentAnchorNode.getKey();\n      const currentAnchorOffset = anchor.offset;\n      const currentFocusNode = focus.getNode();\n      const currentFocusNodeKey = currentFocusNode.getKey();\n      const currentFocusOffset = focus.offset;\n      const currentAnchorNodeDOM = editor.getElementByKey(currentAnchorNodeKey);\n      const currentFocusNodeDOM = editor.getElementByKey(currentFocusNodeKey);\n      const differentAnchorDOM = previousAnchorNode === null || currentAnchorNodeDOM !== previousAnchorNodeDOM || currentAnchorOffset !== previousAnchorOffset || currentAnchorNodeKey !== previousAnchorNode.getKey();\n      const differentFocusDOM = previousFocusNode === null || currentFocusNodeDOM !== previousFocusNodeDOM || currentFocusOffset !== previousFocusOffset || currentFocusNodeKey !== previousFocusNode.getKey();\n      if ((differentAnchorDOM || differentFocusDOM) && currentAnchorNodeDOM !== null && currentFocusNodeDOM !== null) {\n        const range = rangeFromPoints(editor, anchor, currentAnchorNode, currentAnchorNodeDOM, focus, currentFocusNode, currentFocusNodeDOM);\n        removeRangeListener();\n        removeRangeListener = mlcPositionNodeOnRange(editor, range, domNodes => {\n          if (onReposition === undefined) {\n            for (const domNode of domNodes) {\n              const domNodeStyle = domNode.style;\n              if (domNodeStyle.background !== 'Highlight') {\n                domNodeStyle.background = 'Highlight';\n              }\n              if (domNodeStyle.color !== 'HighlightText') {\n                domNodeStyle.color = 'HighlightText';\n              }\n              if (domNodeStyle.marginTop !== px(-1.5)) {\n                domNodeStyle.marginTop = px(-1.5);\n              }\n              if (domNodeStyle.paddingTop !== px(4)) {\n                domNodeStyle.paddingTop = px(4);\n              }\n              if (domNodeStyle.paddingBottom !== px(0)) {\n                domNodeStyle.paddingBottom = px(0);\n              }\n            }\n          } else {\n            onReposition(domNodes);\n          }\n        });\n      }\n      previousAnchorNode = currentAnchorNode;\n      previousAnchorNodeDOM = currentAnchorNodeDOM;\n      previousAnchorOffset = currentAnchorOffset;\n      previousFocusNode = currentFocusNode;\n      previousFocusNodeDOM = currentFocusNodeDOM;\n      previousFocusOffset = currentFocusOffset;\n    });\n  }\n  compute(editor.getEditorState());\n  return mergeRegister(editor.registerUpdateListener(({\n    editorState\n  }) => compute(editorState)), () => {\n    removeRangeListener();\n  });\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction selectionAlwaysOnDisplay(editor) {\n  let removeSelectionMark = null;\n  const onSelectionChange = () => {\n    const domSelection = getSelection();\n    const domAnchorNode = domSelection && domSelection.anchorNode;\n    const editorRootElement = editor.getRootElement();\n    const isSelectionInsideEditor = domAnchorNode !== null && editorRootElement !== null && editorRootElement.contains(domAnchorNode);\n    if (isSelectionInsideEditor) {\n      if (removeSelectionMark !== null) {\n        removeSelectionMark();\n        removeSelectionMark = null;\n      }\n    } else {\n      if (removeSelectionMark === null) {\n        removeSelectionMark = markSelection(editor);\n      }\n    }\n  };\n  document.addEventListener('selectionchange', onSelectionChange);\n  return () => {\n    if (removeSelectionMark !== null) {\n      removeSelectionMark();\n    }\n    document.removeEventListener('selectionchange', onSelectionChange);\n  };\n}\n\n// Hotfix to export these with inlined types #5918\nconst CAN_USE_BEFORE_INPUT = CAN_USE_BEFORE_INPUT$1;\nconst CAN_USE_DOM = CAN_USE_DOM$1;\nconst IS_ANDROID = IS_ANDROID$1;\nconst IS_ANDROID_CHROME = IS_ANDROID_CHROME$1;\nconst IS_APPLE = IS_APPLE$1;\nconst IS_APPLE_WEBKIT = IS_APPLE_WEBKIT$1;\nconst IS_CHROME = IS_CHROME$1;\nconst IS_FIREFOX = IS_FIREFOX$1;\nconst IS_IOS = IS_IOS$1;\nconst IS_SAFARI = IS_SAFARI$1;\n\n/**\n * Takes an HTML element and adds the classNames passed within an array,\n * ignoring any non-string types. A space can be used to add multiple classes\n * eg. addClassNamesToElement(element, ['element-inner active', true, null])\n * will add both 'element-inner' and 'active' as classes to that element.\n * @param element - The element in which the classes are added\n * @param classNames - An array defining the class names to add to the element\n */\nfunction addClassNamesToElement(element, ...classNames) {\n  const classesToAdd = normalizeClassNames(...classNames);\n  if (classesToAdd.length > 0) {\n    element.classList.add(...classesToAdd);\n  }\n}\n\n/**\n * Takes an HTML element and removes the classNames passed within an array,\n * ignoring any non-string types. A space can be used to remove multiple classes\n * eg. removeClassNamesFromElement(element, ['active small', true, null])\n * will remove both the 'active' and 'small' classes from that element.\n * @param element - The element in which the classes are removed\n * @param classNames - An array defining the class names to remove from the element\n */\nfunction removeClassNamesFromElement(element, ...classNames) {\n  const classesToRemove = normalizeClassNames(...classNames);\n  if (classesToRemove.length > 0) {\n    element.classList.remove(...classesToRemove);\n  }\n}\n\n/**\n * Returns true if the file type matches the types passed within the acceptableMimeTypes array, false otherwise.\n * The types passed must be strings and are CASE-SENSITIVE.\n * eg. if file is of type 'text' and acceptableMimeTypes = ['TEXT', 'IMAGE'] the function will return false.\n * @param file - The file you want to type check.\n * @param acceptableMimeTypes - An array of strings of types which the file is checked against.\n * @returns true if the file is an acceptable mime type, false otherwise.\n */\nfunction isMimeType(file, acceptableMimeTypes) {\n  for (const acceptableType of acceptableMimeTypes) {\n    if (file.type.startsWith(acceptableType)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Lexical File Reader with:\n *  1. MIME type support\n *  2. batched results (HistoryPlugin compatibility)\n *  3. Order aware (respects the order when multiple Files are passed)\n *\n * const filesResult = await mediaFileReader(files, ['image/']);\n * filesResult.forEach(file => editor.dispatchCommand('INSERT_IMAGE', \\\\{\n *   src: file.result,\n * \\\\}));\n */\nfunction mediaFileReader(files, acceptableMimeTypes) {\n  const filesIterator = files[Symbol.iterator]();\n  return new Promise((resolve, reject) => {\n    const processed = [];\n    const handleNextFile = () => {\n      const {\n        done,\n        value: file\n      } = filesIterator.next();\n      if (done) {\n        return resolve(processed);\n      }\n      const fileReader = new FileReader();\n      fileReader.addEventListener('error', reject);\n      fileReader.addEventListener('load', () => {\n        const result = fileReader.result;\n        if (typeof result === 'string') {\n          processed.push({\n            file,\n            result\n          });\n        }\n        handleNextFile();\n      });\n      if (isMimeType(file, acceptableMimeTypes)) {\n        fileReader.readAsDataURL(file);\n      } else {\n        handleNextFile();\n      }\n    };\n    handleNextFile();\n  });\n}\n/**\n * \"Depth-First Search\" starts at the root/top node of a tree and goes as far as it can down a branch end\n * before backtracking and finding a new path. Consider solving a maze by hugging either wall, moving down a\n * branch until you hit a dead-end (leaf) and backtracking to find the nearest branching path and repeat.\n * It will then return all the nodes found in the search in an array of objects.\n * @param startNode - The node to start the search, if omitted, it will start at the root node.\n * @param endNode - The node to end the search, if omitted, it will find all descendants of the startingNode.\n * @returns An array of objects of all the nodes found by the search, including their depth into the tree.\n * \\\\{depth: number, node: LexicalNode\\\\} It will always return at least 1 node (the start node).\n */\nfunction $dfs(startNode, endNode) {\n  return Array.from($dfsIterator(startNode, endNode));\n}\n\n/**\n * Get the adjacent caret in the same direction\n *\n * @param caret A caret or null\n * @returns `caret.getAdjacentCaret()` or `null`\n */\nfunction $getAdjacentCaret(caret) {\n  return caret ? caret.getAdjacentCaret() : null;\n}\n\n/**\n * $dfs iterator (right to left). Tree traversal is done on the fly as new values are requested with O(1) memory.\n * @param startNode - The node to start the search, if omitted, it will start at the root node.\n * @param endNode - The node to end the search, if omitted, it will find all descendants of the startingNode.\n * @returns An iterator, each yielded value is a DFSNode. It will always return at least 1 node (the start node).\n */\nfunction $reverseDfs(startNode, endNode) {\n  return Array.from($reverseDfsIterator(startNode, endNode));\n}\n\n/**\n * $dfs iterator (left to right). Tree traversal is done on the fly as new values are requested with O(1) memory.\n * @param startNode - The node to start the search, if omitted, it will start at the root node.\n * @param endNode - The node to end the search, if omitted, it will find all descendants of the startingNode.\n * @returns An iterator, each yielded value is a DFSNode. It will always return at least 1 node (the start node).\n */\nfunction $dfsIterator(startNode, endNode) {\n  return $dfsCaretIterator('next', startNode, endNode);\n}\nfunction $getEndCaret(startNode, direction) {\n  const rval = $getAdjacentSiblingOrParentSiblingCaret($getSiblingCaret(startNode, direction));\n  return rval && rval[0];\n}\nfunction $dfsCaretIterator(direction, startNode, endNode) {\n  const root = $getRoot();\n  const start = startNode || root;\n  const startCaret = $isElementNode(start) ? $getChildCaret(start, direction) : $getSiblingCaret(start, direction);\n  const startDepth = $getDepth(start);\n  const endCaret = endNode ? $getAdjacentChildCaret($getChildCaretOrSelf($getSiblingCaret(endNode, direction))) : $getEndCaret(start, direction);\n  let depth = startDepth;\n  return makeStepwiseIterator({\n    hasNext: state => state !== null,\n    initial: startCaret,\n    map: state => ({\n      depth,\n      node: state.origin\n    }),\n    step: state => {\n      if (state.isSameNodeCaret(endCaret)) {\n        return null;\n      }\n      if ($isChildCaret(state)) {\n        depth++;\n      }\n      const rval = $getAdjacentSiblingOrParentSiblingCaret(state);\n      if (!rval || rval[0].isSameNodeCaret(endCaret)) {\n        return null;\n      }\n      depth += rval[1];\n      return rval[0];\n    }\n  });\n}\n\n/**\n * Returns the Node sibling when this exists, otherwise the closest parent sibling. For example\n * R -> P -> T1, T2\n *   -> P2\n * returns T2 for node T1, P2 for node T2, and null for node P2.\n * @param node LexicalNode.\n * @returns An array (tuple) containing the found Lexical node and the depth difference, or null, if this node doesn't exist.\n */\nfunction $getNextSiblingOrParentSibling(node) {\n  const rval = $getAdjacentSiblingOrParentSiblingCaret($getSiblingCaret(node, 'next'));\n  return rval && [rval[0].origin, rval[1]];\n}\nfunction $getDepth(node) {\n  let depth = -1;\n  for (let innerNode = node; innerNode !== null; innerNode = innerNode.getParent()) {\n    depth++;\n  }\n  return depth;\n}\n\n/**\n * Performs a right-to-left preorder tree traversal.\n * From the starting node it goes to the rightmost child, than backtracks to parent and finds new rightmost path.\n * It will return the next node in traversal sequence after the startingNode.\n * The traversal is similar to $dfs functions above, but the nodes are visited right-to-left, not left-to-right.\n * @param startingNode - The node to start the search.\n * @returns The next node in pre-order right to left traversal sequence or `null`, if the node does not exist\n */\nfunction $getNextRightPreorderNode(startingNode) {\n  const startCaret = $getChildCaretOrSelf($getSiblingCaret(startingNode, 'previous'));\n  const next = $getAdjacentSiblingOrParentSiblingCaret(startCaret, 'root');\n  return next && next[0].origin;\n}\n\n/**\n * $dfs iterator (right to left). Tree traversal is done on the fly as new values are requested with O(1) memory.\n * @param startNode - The node to start the search, if omitted, it will start at the root node.\n * @param endNode - The node to end the search, if omitted, it will find all descendants of the startingNode.\n * @returns An iterator, each yielded value is a DFSNode. It will always return at least 1 node (the start node).\n */\nfunction $reverseDfsIterator(startNode, endNode) {\n  return $dfsCaretIterator('previous', startNode, endNode);\n}\n\n/**\n * Takes a node and traverses up its ancestors (toward the root node)\n * in order to find a specific type of node.\n * @param node - the node to begin searching.\n * @param klass - an instance of the type of node to look for.\n * @returns the node of type klass that was passed, or null if none exist.\n */\nfunction $getNearestNodeOfType(node, klass) {\n  let parent = node;\n  while (parent != null) {\n    if (parent instanceof klass) {\n      return parent;\n    }\n    parent = parent.getParent();\n  }\n  return null;\n}\n\n/**\n * Returns the element node of the nearest ancestor, otherwise throws an error.\n * @param startNode - The starting node of the search\n * @returns The ancestor node found\n */\nfunction $getNearestBlockElementAncestorOrThrow(startNode) {\n  const blockNode = $findMatchingParent(startNode, node => $isElementNode(node) && !node.isInline());\n  if (!$isElementNode(blockNode)) {\n    {\n      formatDevErrorMessage(`Expected node ${startNode.__key} to have closest block element node.`);\n    }\n  }\n  return blockNode;\n}\n/**\n * Starts with a node and moves up the tree (toward the root node) to find a matching node based on\n * the search parameters of the findFn. (Consider JavaScripts' .find() function where a testing function must be\n * passed as an argument. eg. if( (node) => node.__type === 'div') ) return true; otherwise return false\n * @param startingNode - The node where the search starts.\n * @param findFn - A testing function that returns true if the current node satisfies the testing parameters.\n * @returns A parent node that matches the findFn parameters, or null if one wasn't found.\n */\nconst $findMatchingParent = (startingNode, findFn) => {\n  let curr = startingNode;\n  while (curr !== $getRoot() && curr != null) {\n    if (findFn(curr)) {\n      return curr;\n    }\n    curr = curr.getParent();\n  }\n  return null;\n};\n\n/**\n * Attempts to resolve nested element nodes of the same type into a single node of that type.\n * It is generally used for marks/commenting\n * @param editor - The lexical editor\n * @param targetNode - The target for the nested element to be extracted from.\n * @param cloneNode - See {@link $createMarkNode}\n * @param handleOverlap - Handles any overlap between the node to extract and the targetNode\n * @returns The lexical editor\n */\nfunction registerNestedElementResolver(editor, targetNode, cloneNode, handleOverlap) {\n  const $isTargetNode = node => {\n    return node instanceof targetNode;\n  };\n  const $findMatch = node => {\n    // First validate we don't have any children that are of the target,\n    // as we need to handle them first.\n    const children = node.getChildren();\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if ($isTargetNode(child)) {\n        return null;\n      }\n    }\n    let parentNode = node;\n    let childNode = node;\n    while (parentNode !== null) {\n      childNode = parentNode;\n      parentNode = parentNode.getParent();\n      if ($isTargetNode(parentNode)) {\n        return {\n          child: childNode,\n          parent: parentNode\n        };\n      }\n    }\n    return null;\n  };\n  const $elementNodeTransform = node => {\n    const match = $findMatch(node);\n    if (match !== null) {\n      const {\n        child,\n        parent\n      } = match;\n\n      // Simple path, we can move child out and siblings into a new parent.\n\n      if (child.is(node)) {\n        handleOverlap(parent, node);\n        const nextSiblings = child.getNextSiblings();\n        const nextSiblingsLength = nextSiblings.length;\n        parent.insertAfter(child);\n        if (nextSiblingsLength !== 0) {\n          const newParent = cloneNode(parent);\n          child.insertAfter(newParent);\n          for (let i = 0; i < nextSiblingsLength; i++) {\n            newParent.append(nextSiblings[i]);\n          }\n        }\n        if (!parent.canBeEmpty() && parent.getChildrenSize() === 0) {\n          parent.remove();\n        }\n      }\n    }\n  };\n  return editor.registerNodeTransform(targetNode, $elementNodeTransform);\n}\n\n/**\n * Clones the editor and marks it as dirty to be reconciled. If there was a selection,\n * it would be set back to its previous state, or null otherwise.\n * @param editor - The lexical editor\n * @param editorState - The editor's state\n */\nfunction $restoreEditorState(editor, editorState) {\n  const FULL_RECONCILE = 2;\n  const nodeMap = new Map();\n  const activeEditorState = editor._pendingEditorState;\n  for (const [key, node] of editorState._nodeMap) {\n    nodeMap.set(key, $cloneWithProperties(node));\n  }\n  if (activeEditorState) {\n    activeEditorState._nodeMap = nodeMap;\n  }\n  editor._dirtyType = FULL_RECONCILE;\n  const selection = editorState._selection;\n  $setSelection(selection === null ? null : selection.clone());\n}\n\n/**\n * If the selected insertion area is the root/shadow root node (see {@link lexical!$isRootOrShadowRoot}),\n * the node will be appended there, otherwise, it will be inserted before the insertion area.\n * If there is no selection where the node is to be inserted, it will be appended after any current nodes\n * within the tree, as a child of the root node. A paragraph node will then be added after the inserted node and selected.\n * @param node - The node to be inserted\n * @returns The node after its insertion\n */\nfunction $insertNodeToNearestRoot(node) {\n  const selection = $getSelection() || $getPreviousSelection();\n  if ($isRangeSelection(selection)) {\n    const {\n      focus\n    } = selection;\n    const focusNode = focus.getNode();\n    const focusOffset = focus.offset;\n    if ($isRootOrShadowRoot(focusNode)) {\n      $getChildCaretAtIndex(focusNode, focusOffset, 'next').insert(node);\n      node.selectNext();\n    } else {\n      let splitNode;\n      let splitOffset;\n      if ($isTextNode(focusNode)) {\n        splitNode = focusNode.getParentOrThrow();\n        splitOffset = focusNode.getIndexWithinParent();\n        if (focusOffset > 0) {\n          splitOffset += 1;\n          focusNode.splitText(focusOffset);\n        }\n      } else {\n        splitNode = focusNode;\n        splitOffset = focusOffset;\n      }\n      const [, rightTree] = $splitNode(splitNode, splitOffset);\n      rightTree.insertBefore(node);\n      rightTree.selectStart();\n    }\n  } else {\n    if (selection != null) {\n      const nodes = selection.getNodes();\n      nodes[nodes.length - 1].getTopLevelElementOrThrow().insertAfter(node);\n    } else {\n      $getRoot().append(node);\n    }\n    const paragraphNode = $createParagraphNode();\n    node.insertAfter(paragraphNode);\n    paragraphNode.select();\n  }\n  return node.getLatest();\n}\n\n/**\n * Wraps the node into another node created from a createElementNode function, eg. $createParagraphNode\n * @param node - Node to be wrapped.\n * @param createElementNode - Creates a new lexical element to wrap the to-be-wrapped node and returns it.\n * @returns A new lexical element with the previous node appended within (as a child, including its children).\n */\nfunction $wrapNodeInElement(node, createElementNode) {\n  const elementNode = createElementNode();\n  node.replace(elementNode);\n  elementNode.append(node);\n  return elementNode;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n/**\n * @param object = The instance of the type\n * @param objectClass = The class of the type\n * @returns Whether the object is has the same Klass of the objectClass, ignoring the difference across window (e.g. different iframs)\n */\nfunction objectKlassEquals(object, objectClass) {\n  return object !== null ? Object.getPrototypeOf(object).constructor.name === objectClass.name : false;\n}\n\n/**\n * Filter the nodes\n * @param nodes Array of nodes that needs to be filtered\n * @param filterFn A filter function that returns node if the current node satisfies the condition otherwise null\n * @returns Array of filtered nodes\n */\n\nfunction $filter(nodes, filterFn) {\n  const result = [];\n  for (let i = 0; i < nodes.length; i++) {\n    const node = filterFn(nodes[i]);\n    if (node !== null) {\n      result.push(node);\n    }\n  }\n  return result;\n}\n/**\n * Appends the node before the first child of the parent node\n * @param parent A parent node\n * @param node Node that needs to be appended\n */\nfunction $insertFirst(parent, node) {\n  $getChildCaret(parent, 'next').insert(node);\n}\nlet NEEDS_MANUAL_ZOOM = IS_FIREFOX || !CAN_USE_DOM ? false : undefined;\nfunction needsManualZoom() {\n  if (NEEDS_MANUAL_ZOOM === undefined) {\n    // If the browser implements standardized CSS zoom, then the client rect\n    // will be wider after zoom is applied\n    // https://chromestatus.com/feature/5198254868529152\n    // https://github.com/facebook/lexical/issues/6863\n    const div = document.createElement('div');\n    div.style.cssText = 'position: absolute; opacity: 0; width: 100px; left: -1000px;';\n    document.body.appendChild(div);\n    const noZoom = div.getBoundingClientRect();\n    div.style.setProperty('zoom', '2');\n    NEEDS_MANUAL_ZOOM = div.getBoundingClientRect().width === noZoom.width;\n    document.body.removeChild(div);\n  }\n  return NEEDS_MANUAL_ZOOM;\n}\n\n/**\n * Calculates the zoom level of an element as a result of using\n * css zoom property. For browsers that implement standardized CSS\n * zoom (Firefox, Chrome >= 128), this will always return 1.\n * @param element\n */\nfunction calculateZoomLevel(element) {\n  let zoom = 1;\n  if (needsManualZoom()) {\n    while (element) {\n      zoom *= Number(window.getComputedStyle(element).getPropertyValue('zoom'));\n      element = element.parentElement;\n    }\n  }\n  return zoom;\n}\n\n/**\n * Checks if the editor is a nested editor created by LexicalNestedComposer\n */\nfunction $isEditorIsNestedEditor(editor) {\n  return editor._parentEditor !== null;\n}\n\n/**\n * A depth first last-to-first traversal of root that stops at each node that matches\n * $predicate and ensures that its parent is root. This is typically used to discard\n * invalid or unsupported wrapping nodes. For example, a TableNode must only have\n * TableRowNode as children, but an importer might add invalid nodes based on\n * caption, tbody, thead, etc. and this will unwrap and discard those.\n *\n * @param root The root to start the traversal\n * @param $predicate Should return true for nodes that are permitted to be children of root\n * @returns true if this unwrapped or removed any nodes\n */\nfunction $unwrapAndFilterDescendants(root, $predicate) {\n  return $unwrapAndFilterDescendantsImpl(root, $predicate, null);\n}\nfunction $unwrapAndFilterDescendantsImpl(root, $predicate, $onSuccess) {\n  let didMutate = false;\n  for (const node of $lastToFirstIterator(root)) {\n    if ($predicate(node)) {\n      if ($onSuccess !== null) {\n        $onSuccess(node);\n      }\n      continue;\n    }\n    didMutate = true;\n    if ($isElementNode(node)) {\n      $unwrapAndFilterDescendantsImpl(node, $predicate, $onSuccess || (child => node.insertAfter(child)));\n    }\n    node.remove();\n  }\n  return didMutate;\n}\n\n/**\n * A depth first traversal of the children array that stops at and collects\n * each node that `$predicate` matches. This is typically used to discard\n * invalid or unsupported wrapping nodes on a children array in the `after`\n * of an {@link lexical!DOMConversionOutput}. For example, a TableNode must only have\n * TableRowNode as children, but an importer might add invalid nodes based on\n * caption, tbody, thead, etc. and this will unwrap and discard those.\n *\n * This function is read-only and performs no mutation operations, which makes\n * it suitable for import and export purposes but likely not for any in-place\n * mutation. You should use {@link $unwrapAndFilterDescendants} for in-place\n * mutations such as node transforms.\n *\n * @param children The children to traverse\n * @param $predicate Should return true for nodes that are permitted to be children of root\n * @returns The children or their descendants that match $predicate\n */\n\nfunction $descendantsMatching(children, $predicate) {\n  const result = [];\n  const stack = Array.from(children).reverse();\n  for (let child = stack.pop(); child !== undefined; child = stack.pop()) {\n    if ($predicate(child)) {\n      result.push(child);\n    } else if ($isElementNode(child)) {\n      for (const grandchild of $lastToFirstIterator(child)) {\n        stack.push(grandchild);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Return an iterator that yields each child of node from first to last, taking\n * care to preserve the next sibling before yielding the value in case the caller\n * removes the yielded node.\n *\n * @param node The node whose children to iterate\n * @returns An iterator of the node's children\n */\nfunction $firstToLastIterator(node) {\n  return $childIterator($getChildCaret(node, 'next'));\n}\n\n/**\n * Return an iterator that yields each child of node from last to first, taking\n * care to preserve the previous sibling before yielding the value in case the caller\n * removes the yielded node.\n *\n * @param node The node whose children to iterate\n * @returns An iterator of the node's children\n */\nfunction $lastToFirstIterator(node) {\n  return $childIterator($getChildCaret(node, 'previous'));\n}\nfunction $childIterator(startCaret) {\n  const seen = new Set() ;\n  return makeStepwiseIterator({\n    hasNext: $isSiblingCaret,\n    initial: startCaret.getAdjacentCaret(),\n    map: caret => {\n      const origin = caret.origin.getLatest();\n      if (seen !== null) {\n        const key = origin.getKey();\n        if (!!seen.has(key)) {\n          formatDevErrorMessage(`$childIterator: Cycle detected, node with key ${String(key)} has already been traversed`);\n        }\n        seen.add(key);\n      }\n      return origin;\n    },\n    step: caret => caret.getAdjacentCaret()\n  });\n}\n\n/**\n * Replace this node with its children\n *\n * @param node The ElementNode to unwrap and remove\n */\nfunction $unwrapNode(node) {\n  $rewindSiblingCaret($getSiblingCaret(node, 'next')).splice(1, node.getChildren());\n}\n\n/**\n * Returns the Node sibling when this exists, otherwise the closest parent sibling. For example\n * R -> P -> T1, T2\n *   -> P2\n * returns T2 for node T1, P2 for node T2, and null for node P2.\n * @param node LexicalNode.\n * @returns An array (tuple) containing the found Lexical node and the depth difference, or null, if this node doesn't exist.\n */\nfunction $getAdjacentSiblingOrParentSiblingCaret(startCaret, rootMode = 'root') {\n  let depthDiff = 0;\n  let caret = startCaret;\n  let nextCaret = $getAdjacentChildCaret(caret);\n  while (nextCaret === null) {\n    depthDiff--;\n    nextCaret = caret.getParentCaret(rootMode);\n    if (!nextCaret) {\n      return null;\n    }\n    caret = nextCaret;\n    nextCaret = $getAdjacentChildCaret(caret);\n  }\n  return nextCaret && [nextCaret, depthDiff];\n}\n\n/**\n * A wrapper that creates bound functions and methods for the\n * StateConfig to save some boilerplate when defining methods\n * or exporting only the accessors from your modules rather\n * than exposing the StateConfig directly.\n */\n\n/**\n * EXPERIMENTAL\n *\n * A convenience interface for working with {@link $getState} and\n * {@link $setState}.\n *\n * @param stateConfig The stateConfig to wrap with convenience functionality\n * @returns a StateWrapper\n */\nfunction makeStateWrapper(stateConfig) {\n  const $get = node => $getState(node, stateConfig);\n  const $set = (node, valueOrUpdater) => $setState(node, stateConfig, valueOrUpdater);\n  return {\n    $get,\n    $set,\n    accessors: [$get, $set],\n    makeGetterMethod: () => function $getter() {\n      return $get(this);\n    },\n    makeSetterMethod: () => function $setter(valueOrUpdater) {\n      return $set(this, valueOrUpdater);\n    },\n    stateConfig\n  };\n}\n\nexport { $descendantsMatching, $dfs, $dfsIterator, $filter, $findMatchingParent, $firstToLastIterator, $getAdjacentCaret, $getAdjacentSiblingOrParentSiblingCaret, $getDepth, $getNearestBlockElementAncestorOrThrow, $getNearestNodeOfType, $getNextRightPreorderNode, $getNextSiblingOrParentSibling, $insertFirst, $insertNodeToNearestRoot, $isEditorIsNestedEditor, $lastToFirstIterator, $restoreEditorState, $reverseDfs, $reverseDfsIterator, $unwrapAndFilterDescendants, $unwrapNode, $wrapNodeInElement, CAN_USE_BEFORE_INPUT, CAN_USE_DOM, IS_ANDROID, IS_ANDROID_CHROME, IS_APPLE, IS_APPLE_WEBKIT, IS_CHROME, IS_FIREFOX, IS_IOS, IS_SAFARI, addClassNamesToElement, calculateZoomLevel, isMimeType, makeStateWrapper, markSelection, mediaFileReader, mergeRegister, objectKlassEquals, mlcPositionNodeOnRange as positionNodeOnRange, registerNestedElementResolver, removeClassNamesFromElement, selectionAlwaysOnDisplay };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15030, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15036, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/html/LexicalHtml.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $sliceSelectedTextNodeContent } from '@lexical/selection';\nimport { isHTMLElement, isBlockDomNode } from '@lexical/utils';\nimport { $getRoot, $isElementNode, $cloneWithProperties, $isTextNode, isDocumentFragment, $isRootOrShadowRoot, $isBlockElementNode, $createLineBreakNode, ArtificialNode__DO_NOT_USE, isInlineDomNode, $createParagraphNode } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n/**\n * How you parse your html string to get a document is left up to you. In the browser you can use the native\n * DOMParser API to generate a document (see clipboard.ts), but to use in a headless environment you can use JSDom\n * or an equivalent library and pass in the document here.\n */\nfunction $generateNodesFromDOM(editor, dom) {\n  const elements = dom.body ? dom.body.childNodes : [];\n  let lexicalNodes = [];\n  const allArtificialNodes = [];\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n    if (!IGNORE_TAGS.has(element.nodeName)) {\n      const lexicalNode = $createNodesFromDOM(element, editor, allArtificialNodes, false);\n      if (lexicalNode !== null) {\n        lexicalNodes = lexicalNodes.concat(lexicalNode);\n      }\n    }\n  }\n  $unwrapArtificalNodes(allArtificialNodes);\n  return lexicalNodes;\n}\nfunction $generateHtmlFromNodes(editor, selection) {\n  if (typeof document === 'undefined' || typeof window === 'undefined' && typeof global.window === 'undefined') {\n    throw new Error('To use $generateHtmlFromNodes in headless mode please initialize a headless browser implementation such as JSDom before calling this function.');\n  }\n  const container = document.createElement('div');\n  const root = $getRoot();\n  const topLevelChildren = root.getChildren();\n  for (let i = 0; i < topLevelChildren.length; i++) {\n    const topLevelNode = topLevelChildren[i];\n    $appendNodesToHTML(editor, topLevelNode, container, selection);\n  }\n  return container.innerHTML;\n}\nfunction $appendNodesToHTML(editor, currentNode, parentElement, selection = null) {\n  let shouldInclude = selection !== null ? currentNode.isSelected(selection) : true;\n  const shouldExclude = $isElementNode(currentNode) && currentNode.excludeFromCopy('html');\n  let target = currentNode;\n  if (selection !== null) {\n    let clone = $cloneWithProperties(currentNode);\n    clone = $isTextNode(clone) && selection !== null ? $sliceSelectedTextNodeContent(selection, clone) : clone;\n    target = clone;\n  }\n  const children = $isElementNode(target) ? target.getChildren() : [];\n  const registeredNode = editor._nodes.get(target.getType());\n  let exportOutput;\n\n  // Use HTMLConfig overrides, if available.\n  if (registeredNode && registeredNode.exportDOM !== undefined) {\n    exportOutput = registeredNode.exportDOM(editor, target);\n  } else {\n    exportOutput = target.exportDOM(editor);\n  }\n  const {\n    element,\n    after\n  } = exportOutput;\n  if (!element) {\n    return false;\n  }\n  const fragment = document.createDocumentFragment();\n  for (let i = 0; i < children.length; i++) {\n    const childNode = children[i];\n    const shouldIncludeChild = $appendNodesToHTML(editor, childNode, fragment, selection);\n    if (!shouldInclude && $isElementNode(currentNode) && shouldIncludeChild && currentNode.extractWithChild(childNode, selection, 'html')) {\n      shouldInclude = true;\n    }\n  }\n  if (shouldInclude && !shouldExclude) {\n    if (isHTMLElement(element) || isDocumentFragment(element)) {\n      element.append(fragment);\n    }\n    parentElement.append(element);\n    if (after) {\n      const newElement = after.call(target, element);\n      if (newElement) {\n        if (isDocumentFragment(element)) {\n          element.replaceChildren(newElement);\n        } else {\n          element.replaceWith(newElement);\n        }\n      }\n    }\n  } else {\n    parentElement.append(fragment);\n  }\n  return shouldInclude;\n}\nfunction getConversionFunction(domNode, editor) {\n  const {\n    nodeName\n  } = domNode;\n  const cachedConversions = editor._htmlConversions.get(nodeName.toLowerCase());\n  let currentConversion = null;\n  if (cachedConversions !== undefined) {\n    for (const cachedConversion of cachedConversions) {\n      const domConversion = cachedConversion(domNode);\n      if (domConversion !== null && (currentConversion === null ||\n      // Given equal priority, prefer the last registered importer\n      // which is typically an application custom node or HTMLConfig['import']\n      (currentConversion.priority || 0) <= (domConversion.priority || 0))) {\n        currentConversion = domConversion;\n      }\n    }\n  }\n  return currentConversion !== null ? currentConversion.conversion : null;\n}\nconst IGNORE_TAGS = new Set(['STYLE', 'SCRIPT']);\nfunction $createNodesFromDOM(node, editor, allArtificialNodes, hasBlockAncestorLexicalNode, forChildMap = new Map(), parentLexicalNode) {\n  let lexicalNodes = [];\n  if (IGNORE_TAGS.has(node.nodeName)) {\n    return lexicalNodes;\n  }\n  let currentLexicalNode = null;\n  const transformFunction = getConversionFunction(node, editor);\n  const transformOutput = transformFunction ? transformFunction(node) : null;\n  let postTransform = null;\n  if (transformOutput !== null) {\n    postTransform = transformOutput.after;\n    const transformNodes = transformOutput.node;\n    currentLexicalNode = Array.isArray(transformNodes) ? transformNodes[transformNodes.length - 1] : transformNodes;\n    if (currentLexicalNode !== null) {\n      for (const [, forChildFunction] of forChildMap) {\n        currentLexicalNode = forChildFunction(currentLexicalNode, parentLexicalNode);\n        if (!currentLexicalNode) {\n          break;\n        }\n      }\n      if (currentLexicalNode) {\n        lexicalNodes.push(...(Array.isArray(transformNodes) ? transformNodes : [currentLexicalNode]));\n      }\n    }\n    if (transformOutput.forChild != null) {\n      forChildMap.set(node.nodeName, transformOutput.forChild);\n    }\n  }\n\n  // If the DOM node doesn't have a transformer, we don't know what\n  // to do with it but we still need to process any childNodes.\n  const children = node.childNodes;\n  let childLexicalNodes = [];\n  const hasBlockAncestorLexicalNodeForChildren = currentLexicalNode != null && $isRootOrShadowRoot(currentLexicalNode) ? false : currentLexicalNode != null && $isBlockElementNode(currentLexicalNode) || hasBlockAncestorLexicalNode;\n  for (let i = 0; i < children.length; i++) {\n    childLexicalNodes.push(...$createNodesFromDOM(children[i], editor, allArtificialNodes, hasBlockAncestorLexicalNodeForChildren, new Map(forChildMap), currentLexicalNode));\n  }\n  if (postTransform != null) {\n    childLexicalNodes = postTransform(childLexicalNodes);\n  }\n  if (isBlockDomNode(node)) {\n    if (!hasBlockAncestorLexicalNodeForChildren) {\n      childLexicalNodes = wrapContinuousInlines(node, childLexicalNodes, $createParagraphNode);\n    } else {\n      childLexicalNodes = wrapContinuousInlines(node, childLexicalNodes, () => {\n        const artificialNode = new ArtificialNode__DO_NOT_USE();\n        allArtificialNodes.push(artificialNode);\n        return artificialNode;\n      });\n    }\n  }\n  if (currentLexicalNode == null) {\n    if (childLexicalNodes.length > 0) {\n      // If it hasn't been converted to a LexicalNode, we hoist its children\n      // up to the same level as it.\n      lexicalNodes = lexicalNodes.concat(childLexicalNodes);\n    } else {\n      if (isBlockDomNode(node) && isDomNodeBetweenTwoInlineNodes(node)) {\n        // Empty block dom node that hasnt been converted, we replace it with a linebreak if its between inline nodes\n        lexicalNodes = lexicalNodes.concat($createLineBreakNode());\n      }\n    }\n  } else {\n    if ($isElementNode(currentLexicalNode)) {\n      // If the current node is a ElementNode after conversion,\n      // we can append all the children to it.\n      currentLexicalNode.append(...childLexicalNodes);\n    }\n  }\n  return lexicalNodes;\n}\nfunction wrapContinuousInlines(domNode, nodes, createWrapperFn) {\n  const textAlign = domNode.style.textAlign;\n  const out = [];\n  let continuousInlines = [];\n  // wrap contiguous inline child nodes in para\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if ($isBlockElementNode(node)) {\n      if (textAlign && !node.getFormat()) {\n        node.setFormat(textAlign);\n      }\n      out.push(node);\n    } else {\n      continuousInlines.push(node);\n      if (i === nodes.length - 1 || i < nodes.length - 1 && $isBlockElementNode(nodes[i + 1])) {\n        const wrapper = createWrapperFn();\n        wrapper.setFormat(textAlign);\n        wrapper.append(...continuousInlines);\n        out.push(wrapper);\n        continuousInlines = [];\n      }\n    }\n  }\n  return out;\n}\nfunction $unwrapArtificalNodes(allArtificialNodes) {\n  for (const node of allArtificialNodes) {\n    if (node.getNextSibling() instanceof ArtificialNode__DO_NOT_USE) {\n      node.insertAfter($createLineBreakNode());\n    }\n  }\n  // Replace artificial node with it's children\n  for (const node of allArtificialNodes) {\n    const children = node.getChildren();\n    for (const child of children) {\n      node.insertBefore(child);\n    }\n    node.remove();\n  }\n}\nfunction isDomNodeBetweenTwoInlineNodes(node) {\n  if (node.nextSibling == null || node.previousSibling == null) {\n    return false;\n  }\n  return isInlineDomNode(node.nextSibling) && isInlineDomNode(node.previousSibling);\n}\n\nexport { $generateHtmlFromNodes, $generateNodesFromDOM };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 15279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15285, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/clipboard/LexicalClipboard.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $generateHtmlFromNodes, $generateNodesFromDOM } from '@lexical/html';\nimport { $addNodeStyle, $sliceSelectedTextNodeContent } from '@lexical/selection';\nimport { objectKlassEquals } from '@lexical/utils';\nimport { $isRangeSelection, $getSelection, $createTabNode, SELECTION_INSERT_CLIPBOARD_NODES_COMMAND, $getRoot, $parseSerializedNode, $isTextNode, getDOMSelection, COPY_COMMAND, COMMAND_PRIORITY_CRITICAL, isSelectionWithinEditor, $getEditor, $isElementNode, $cloneWithProperties } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls.\n\nfunction formatDevErrorMessage(message) {\n  throw new Error(message);\n}\n\n/**\n * Returns the *currently selected* Lexical content as an HTML string, relying on the\n * logic defined in the exportDOM methods on the LexicalNode classes. Note that\n * this will not return the HTML content of the entire editor (unless all the content is included\n * in the current selection).\n *\n * @param editor - LexicalEditor instance to get HTML content from\n * @param selection - The selection to use (default is $getSelection())\n * @returns a string of HTML content\n */\nfunction $getHtmlContent(editor, selection = $getSelection()) {\n  if (selection == null) {\n    {\n      formatDevErrorMessage(`Expected valid LexicalSelection`);\n    }\n  }\n\n  // If we haven't selected anything\n  if ($isRangeSelection(selection) && selection.isCollapsed() || selection.getNodes().length === 0) {\n    return '';\n  }\n  return $generateHtmlFromNodes(editor, selection);\n}\n\n/**\n * Returns the *currently selected* Lexical content as a JSON string, relying on the\n * logic defined in the exportJSON methods on the LexicalNode classes. Note that\n * this will not return the JSON content of the entire editor (unless all the content is included\n * in the current selection).\n *\n * @param editor  - LexicalEditor instance to get the JSON content from\n * @param selection - The selection to use (default is $getSelection())\n * @returns\n */\nfunction $getLexicalContent(editor, selection = $getSelection()) {\n  if (selection == null) {\n    {\n      formatDevErrorMessage(`Expected valid LexicalSelection`);\n    }\n  }\n\n  // If we haven't selected anything\n  if ($isRangeSelection(selection) && selection.isCollapsed() || selection.getNodes().length === 0) {\n    return null;\n  }\n  return JSON.stringify($generateJSONFromSelectedNodes(editor, selection));\n}\n\n/**\n * Attempts to insert content of the mime-types text/plain or text/uri-list from\n * the provided DataTransfer object into the editor at the provided selection.\n * text/uri-list is only used if text/plain is not also provided.\n *\n * @param dataTransfer an object conforming to the [DataTransfer interface] (https://html.spec.whatwg.org/multipage/dnd.html#the-datatransfer-interface)\n * @param selection the selection to use as the insertion point for the content in the DataTransfer object\n */\nfunction $insertDataTransferForPlainText(dataTransfer, selection) {\n  const text = dataTransfer.getData('text/plain') || dataTransfer.getData('text/uri-list');\n  if (text != null) {\n    selection.insertRawText(text);\n  }\n}\n\n/**\n * Attempts to insert content of the mime-types application/x-lexical-editor, text/html,\n * text/plain, or text/uri-list (in descending order of priority) from the provided DataTransfer\n * object into the editor at the provided selection.\n *\n * @param dataTransfer an object conforming to the [DataTransfer interface] (https://html.spec.whatwg.org/multipage/dnd.html#the-datatransfer-interface)\n * @param selection the selection to use as the insertion point for the content in the DataTransfer object\n * @param editor the LexicalEditor the content is being inserted into.\n */\nfunction $insertDataTransferForRichText(dataTransfer, selection, editor) {\n  const lexicalString = dataTransfer.getData('application/x-lexical-editor');\n  if (lexicalString) {\n    try {\n      const payload = JSON.parse(lexicalString);\n      if (payload.namespace === editor._config.namespace && Array.isArray(payload.nodes)) {\n        const nodes = $generateNodesFromSerializedNodes(payload.nodes);\n        return $insertGeneratedNodes(editor, nodes, selection);\n      }\n    } catch (_unused) {\n      // Fail silently.\n    }\n  }\n  const htmlString = dataTransfer.getData('text/html');\n  const plainString = dataTransfer.getData('text/plain');\n\n  // Skip HTML handling if it matches the plain text representation.\n  // This avoids unnecessary processing for plain text strings created by\n  // iOS Safari autocorrect, which incorrectly includes a `text/html` type.\n  if (htmlString && plainString !== htmlString) {\n    try {\n      const parser = new DOMParser();\n      const dom = parser.parseFromString(trustHTML(htmlString), 'text/html');\n      const nodes = $generateNodesFromDOM(editor, dom);\n      return $insertGeneratedNodes(editor, nodes, selection);\n    } catch (_unused2) {\n      // Fail silently.\n    }\n  }\n\n  // Multi-line plain text in rich text mode pasted as separate paragraphs\n  // instead of single paragraph with linebreaks.\n  // Webkit-specific: Supports read 'text/uri-list' in clipboard.\n  const text = plainString || dataTransfer.getData('text/uri-list');\n  if (text != null) {\n    if ($isRangeSelection(selection)) {\n      const parts = text.split(/(\\r?\\n|\\t)/);\n      if (parts[parts.length - 1] === '') {\n        parts.pop();\n      }\n      for (let i = 0; i < parts.length; i++) {\n        const currentSelection = $getSelection();\n        if ($isRangeSelection(currentSelection)) {\n          const part = parts[i];\n          if (part === '\\n' || part === '\\r\\n') {\n            currentSelection.insertParagraph();\n          } else if (part === '\\t') {\n            currentSelection.insertNodes([$createTabNode()]);\n          } else {\n            currentSelection.insertText(part);\n          }\n        }\n      }\n    } else {\n      selection.insertRawText(text);\n    }\n  }\n}\nfunction trustHTML(html) {\n  if (window.trustedTypes && window.trustedTypes.createPolicy) {\n    const policy = window.trustedTypes.createPolicy('lexical', {\n      createHTML: input => input\n    });\n    return policy.createHTML(html);\n  }\n  return html;\n}\n\n/**\n * Inserts Lexical nodes into the editor using different strategies depending on\n * some simple selection-based heuristics. If you're looking for a generic way to\n * to insert nodes into the editor at a specific selection point, you probably want\n * {@link lexical.$insertNodes}\n *\n * @param editor LexicalEditor instance to insert the nodes into.\n * @param nodes The nodes to insert.\n * @param selection The selection to insert the nodes into.\n */\nfunction $insertGeneratedNodes(editor, nodes, selection) {\n  if (!editor.dispatchCommand(SELECTION_INSERT_CLIPBOARD_NODES_COMMAND, {\n    nodes,\n    selection\n  })) {\n    selection.insertNodes(nodes);\n  }\n  return;\n}\nfunction exportNodeToJSON(node) {\n  const serializedNode = node.exportJSON();\n  const nodeClass = node.constructor;\n  if (serializedNode.type !== nodeClass.getType()) {\n    {\n      formatDevErrorMessage(`LexicalNode: Node ${nodeClass.name} does not implement .exportJSON().`);\n    }\n  }\n  if ($isElementNode(node)) {\n    const serializedChildren = serializedNode.children;\n    if (!Array.isArray(serializedChildren)) {\n      {\n        formatDevErrorMessage(`LexicalNode: Node ${nodeClass.name} is an element but .exportJSON() does not have a children array.`);\n      }\n    }\n  }\n  return serializedNode;\n}\nfunction $appendNodesToJSON(editor, selection, currentNode, targetArray = []) {\n  let shouldInclude = selection !== null ? currentNode.isSelected(selection) : true;\n  const shouldExclude = $isElementNode(currentNode) && currentNode.excludeFromCopy('html');\n  let target = currentNode;\n  if (selection !== null) {\n    let clone = $cloneWithProperties(currentNode);\n    clone = $isTextNode(clone) && selection !== null ? $sliceSelectedTextNodeContent(selection, clone) : clone;\n    target = clone;\n  }\n  const children = $isElementNode(target) ? target.getChildren() : [];\n  const serializedNode = exportNodeToJSON(target);\n\n  // TODO: TextNode calls getTextContent() (NOT node.__text) within its exportJSON method\n  // which uses getLatest() to get the text from the original node with the same key.\n  // This is a deeper issue with the word \"clone\" here, it's still a reference to the\n  // same node as far as the LexicalEditor is concerned since it shares a key.\n  // We need a way to create a clone of a Node in memory with its own key, but\n  // until then this hack will work for the selected text extract use case.\n  if ($isTextNode(target)) {\n    const text = target.__text;\n    // If an uncollapsed selection ends or starts at the end of a line of specialized,\n    // TextNodes, such as code tokens, we will get a 'blank' TextNode here, i.e., one\n    // with text of length 0. We don't want this, it makes a confusing mess. Reset!\n    if (text.length > 0) {\n      serializedNode.text = text;\n    } else {\n      shouldInclude = false;\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    const childNode = children[i];\n    const shouldIncludeChild = $appendNodesToJSON(editor, selection, childNode, serializedNode.children);\n    if (!shouldInclude && $isElementNode(currentNode) && shouldIncludeChild && currentNode.extractWithChild(childNode, selection, 'clone')) {\n      shouldInclude = true;\n    }\n  }\n  if (shouldInclude && !shouldExclude) {\n    targetArray.push(serializedNode);\n  } else if (Array.isArray(serializedNode.children)) {\n    for (let i = 0; i < serializedNode.children.length; i++) {\n      const serializedChildNode = serializedNode.children[i];\n      targetArray.push(serializedChildNode);\n    }\n  }\n  return shouldInclude;\n}\n\n// TODO why $ function with Editor instance?\n/**\n * Gets the Lexical JSON of the nodes inside the provided Selection.\n *\n * @param editor LexicalEditor to get the JSON content from.\n * @param selection Selection to get the JSON content from.\n * @returns an object with the editor namespace and a list of serializable nodes as JavaScript objects.\n */\nfunction $generateJSONFromSelectedNodes(editor, selection) {\n  const nodes = [];\n  const root = $getRoot();\n  const topLevelChildren = root.getChildren();\n  for (let i = 0; i < topLevelChildren.length; i++) {\n    const topLevelNode = topLevelChildren[i];\n    $appendNodesToJSON(editor, selection, topLevelNode, nodes);\n  }\n  return {\n    namespace: editor._config.namespace,\n    nodes\n  };\n}\n\n/**\n * This method takes an array of objects conforming to the BaseSeralizedNode interface and returns\n * an Array containing instances of the corresponding LexicalNode classes registered on the editor.\n * Normally, you'd get an Array of BaseSerialized nodes from {@link $generateJSONFromSelectedNodes}\n *\n * @param serializedNodes an Array of objects conforming to the BaseSerializedNode interface.\n * @returns an Array of Lexical Node objects.\n */\nfunction $generateNodesFromSerializedNodes(serializedNodes) {\n  const nodes = [];\n  for (let i = 0; i < serializedNodes.length; i++) {\n    const serializedNode = serializedNodes[i];\n    const node = $parseSerializedNode(serializedNode);\n    if ($isTextNode(node)) {\n      $addNodeStyle(node);\n    }\n    nodes.push(node);\n  }\n  return nodes;\n}\nconst EVENT_LATENCY = 50;\nlet clipboardEventTimeout = null;\n\n// TODO custom selection\n// TODO potentially have a node customizable version for plain text\n/**\n * Copies the content of the current selection to the clipboard in\n * text/plain, text/html, and application/x-lexical-editor (Lexical JSON)\n * formats.\n *\n * @param editor the LexicalEditor instance to copy content from\n * @param event the native browser ClipboardEvent to add the content to.\n * @returns\n */\nasync function copyToClipboard(editor, event, data) {\n  if (clipboardEventTimeout !== null) {\n    // Prevent weird race conditions that can happen when this function is run multiple times\n    // synchronously. In the future, we can do better, we can cancel/override the previously running job.\n    return false;\n  }\n  if (event !== null) {\n    return new Promise((resolve, reject) => {\n      editor.update(() => {\n        resolve($copyToClipboardEvent(editor, event, data));\n      });\n    });\n  }\n  const rootElement = editor.getRootElement();\n  const editorWindow = editor._window || window;\n  const windowDocument = window.document;\n  const domSelection = getDOMSelection(editorWindow);\n  if (rootElement === null || domSelection === null) {\n    return false;\n  }\n  const element = windowDocument.createElement('span');\n  element.style.cssText = 'position: fixed; top: -1000px;';\n  element.append(windowDocument.createTextNode('#'));\n  rootElement.append(element);\n  const range = new Range();\n  range.setStart(element, 0);\n  range.setEnd(element, 1);\n  domSelection.removeAllRanges();\n  domSelection.addRange(range);\n  return new Promise((resolve, reject) => {\n    const removeListener = editor.registerCommand(COPY_COMMAND, secondEvent => {\n      if (objectKlassEquals(secondEvent, ClipboardEvent)) {\n        removeListener();\n        if (clipboardEventTimeout !== null) {\n          window.clearTimeout(clipboardEventTimeout);\n          clipboardEventTimeout = null;\n        }\n        resolve($copyToClipboardEvent(editor, secondEvent, data));\n      }\n      // Block the entire copy flow while we wait for the next ClipboardEvent\n      return true;\n    }, COMMAND_PRIORITY_CRITICAL);\n    // If the above hack execCommand hack works, this timeout code should never fire. Otherwise,\n    // the listener will be quickly freed so that the user can reuse it again\n    clipboardEventTimeout = window.setTimeout(() => {\n      removeListener();\n      clipboardEventTimeout = null;\n      resolve(false);\n    }, EVENT_LATENCY);\n    windowDocument.execCommand('copy');\n    element.remove();\n  });\n}\n\n// TODO shouldn't pass editor (pass namespace directly)\nfunction $copyToClipboardEvent(editor, event, data) {\n  if (data === undefined) {\n    const domSelection = getDOMSelection(editor._window);\n    if (!domSelection) {\n      return false;\n    }\n    const anchorDOM = domSelection.anchorNode;\n    const focusDOM = domSelection.focusNode;\n    if (anchorDOM !== null && focusDOM !== null && !isSelectionWithinEditor(editor, anchorDOM, focusDOM)) {\n      return false;\n    }\n    const selection = $getSelection();\n    if (selection === null) {\n      return false;\n    }\n    data = $getClipboardDataFromSelection(selection);\n  }\n  event.preventDefault();\n  const clipboardData = event.clipboardData;\n  if (clipboardData === null) {\n    return false;\n  }\n  setLexicalClipboardDataTransfer(clipboardData, data);\n  return true;\n}\nconst clipboardDataFunctions = [['text/html', $getHtmlContent], ['application/x-lexical-editor', $getLexicalContent]];\n\n/**\n * Serialize the content of the current selection to strings in\n * text/plain, text/html, and application/x-lexical-editor (Lexical JSON)\n * formats (as available).\n *\n * @param selection the selection to serialize (defaults to $getSelection())\n * @returns LexicalClipboardData\n */\nfunction $getClipboardDataFromSelection(selection = $getSelection()) {\n  const clipboardData = {\n    'text/plain': selection ? selection.getTextContent() : ''\n  };\n  if (selection) {\n    const editor = $getEditor();\n    for (const [mimeType, $editorFn] of clipboardDataFunctions) {\n      const v = $editorFn(editor, selection);\n      if (v !== null) {\n        clipboardData[mimeType] = v;\n      }\n    }\n  }\n  return clipboardData;\n}\n\n/**\n * Call setData on the given clipboardData for each MIME type present\n * in the given data (from {@link $getClipboardDataFromSelection})\n *\n * @param clipboardData the event.clipboardData to populate from data\n * @param data The lexical data\n */\nfunction setLexicalClipboardDataTransfer(clipboardData, data) {\n  for (const k in data) {\n    const v = data[k];\n    if (v !== undefined) {\n      clipboardData.setData(k, v);\n    }\n  }\n}\n\nexport { $generateJSONFromSelectedNodes, $generateNodesFromSerializedNodes, $getClipboardDataFromSelection, $getHtmlContent, $getLexicalContent, $insertDataTransferForPlainText, $insertDataTransferForRichText, $insertGeneratedNodes, copyToClipboard, setLexicalClipboardDataTransfer };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;;;;;;;;AAKD;AAHA;AACA;AACA;;;;;AAGA;;;;;;CAMC,GAED,qEAAqE;AAErE,SAAS,sBAAsB,OAAO;IACpC,MAAM,IAAI,MAAM;AAClB;AAEA;;;;;;;;;CASC,GACD,SAAS,gBAAgB,MAAM,EAAE,YAAY,CAAA,GAAA,6IAAA,CAAA,gBAAa,AAAD,GAAG;IAC1D,IAAI,aAAa,MAAM;QACrB;YACE,sBAAsB,CAAC,+BAA+B,CAAC;QACzD;IACF;IAEA,kCAAkC;IAClC,IAAI,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,cAAc,UAAU,WAAW,MAAM,UAAU,QAAQ,GAAG,MAAM,KAAK,GAAG;QAChG,OAAO;IACT;IACA,OAAO,CAAA,GAAA,2JAAA,CAAA,yBAAsB,AAAD,EAAE,QAAQ;AACxC;AAEA;;;;;;;;;CASC,GACD,SAAS,mBAAmB,MAAM,EAAE,YAAY,CAAA,GAAA,6IAAA,CAAA,gBAAa,AAAD,GAAG;IAC7D,IAAI,aAAa,MAAM;QACrB;YACE,sBAAsB,CAAC,+BAA+B,CAAC;QACzD;IACF;IAEA,kCAAkC;IAClC,IAAI,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,cAAc,UAAU,WAAW,MAAM,UAAU,QAAQ,GAAG,MAAM,KAAK,GAAG;QAChG,OAAO;IACT;IACA,OAAO,KAAK,SAAS,CAAC,+BAA+B,QAAQ;AAC/D;AAEA;;;;;;;CAOC,GACD,SAAS,gCAAgC,YAAY,EAAE,SAAS;IAC9D,MAAM,OAAO,aAAa,OAAO,CAAC,iBAAiB,aAAa,OAAO,CAAC;IACxE,IAAI,QAAQ,MAAM;QAChB,UAAU,aAAa,CAAC;IAC1B;AACF;AAEA;;;;;;;;CAQC,GACD,SAAS,+BAA+B,YAAY,EAAE,SAAS,EAAE,MAAM;IACrE,MAAM,gBAAgB,aAAa,OAAO,CAAC;IAC3C,IAAI,eAAe;QACjB,IAAI;YACF,MAAM,UAAU,KAAK,KAAK,CAAC;YAC3B,IAAI,QAAQ,SAAS,KAAK,OAAO,OAAO,CAAC,SAAS,IAAI,MAAM,OAAO,CAAC,QAAQ,KAAK,GAAG;gBAClF,MAAM,QAAQ,kCAAkC,QAAQ,KAAK;gBAC7D,OAAO,sBAAsB,QAAQ,OAAO;YAC9C;QACF,EAAE,OAAO,SAAS;QAChB,iBAAiB;QACnB;IACF;IACA,MAAM,aAAa,aAAa,OAAO,CAAC;IACxC,MAAM,cAAc,aAAa,OAAO,CAAC;IAEzC,kEAAkE;IAClE,uEAAuE;IACvE,yEAAyE;IACzE,IAAI,cAAc,gBAAgB,YAAY;QAC5C,IAAI;YACF,MAAM,SAAS,IAAI;YACnB,MAAM,MAAM,OAAO,eAAe,CAAC,UAAU,aAAa;YAC1D,MAAM,QAAQ,CAAA,GAAA,2JAAA,CAAA,wBAAqB,AAAD,EAAE,QAAQ;YAC5C,OAAO,sBAAsB,QAAQ,OAAO;QAC9C,EAAE,OAAO,UAAU;QACjB,iBAAiB;QACnB;IACF;IAEA,wEAAwE;IACxE,+CAA+C;IAC/C,+DAA+D;IAC/D,MAAM,OAAO,eAAe,aAAa,OAAO,CAAC;IACjD,IAAI,QAAQ,MAAM;QAChB,IAAI,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY;YAChC,MAAM,QAAQ,KAAK,KAAK,CAAC;YACzB,IAAI,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,KAAK,IAAI;gBAClC,MAAM,GAAG;YACX;YACA,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;gBACrC,MAAM,mBAAmB,CAAA,GAAA,6IAAA,CAAA,gBAAa,AAAD;gBACrC,IAAI,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,mBAAmB;oBACvC,MAAM,OAAO,KAAK,CAAC,EAAE;oBACrB,IAAI,SAAS,QAAQ,SAAS,QAAQ;wBACpC,iBAAiB,eAAe;oBAClC,OAAO,IAAI,SAAS,MAAM;wBACxB,iBAAiB,WAAW,CAAC;4BAAC,CAAA,GAAA,6IAAA,CAAA,iBAAc,AAAD;yBAAI;oBACjD,OAAO;wBACL,iBAAiB,UAAU,CAAC;oBAC9B;gBACF;YACF;QACF,OAAO;YACL,UAAU,aAAa,CAAC;QAC1B;IACF;AACF;AACA,SAAS,UAAU,IAAI;IACrB,IAAI,OAAO,YAAY,IAAI,OAAO,YAAY,CAAC,YAAY,EAAE;QAC3D,MAAM,SAAS,OAAO,YAAY,CAAC,YAAY,CAAC,WAAW;YACzD,YAAY,CAAA,QAAS;QACvB;QACA,OAAO,OAAO,UAAU,CAAC;IAC3B;IACA,OAAO;AACT;AAEA;;;;;;;;;CASC,GACD,SAAS,sBAAsB,MAAM,EAAE,KAAK,EAAE,SAAS;IACrD,IAAI,CAAC,OAAO,eAAe,CAAC,6IAAA,CAAA,2CAAwC,EAAE;QACpE;QACA;IACF,IAAI;QACF,UAAU,WAAW,CAAC;IACxB;IACA;AACF;AACA,SAAS,iBAAiB,IAAI;IAC5B,MAAM,iBAAiB,KAAK,UAAU;IACtC,MAAM,YAAY,KAAK,WAAW;IAClC,IAAI,eAAe,IAAI,KAAK,UAAU,OAAO,IAAI;QAC/C;YACE,sBAAsB,CAAC,kBAAkB,EAAE,UAAU,IAAI,CAAC,kCAAkC,CAAC;QAC/F;IACF;IACA,IAAI,CAAA,GAAA,6IAAA,CAAA,iBAAc,AAAD,EAAE,OAAO;QACxB,MAAM,qBAAqB,eAAe,QAAQ;QAClD,IAAI,CAAC,MAAM,OAAO,CAAC,qBAAqB;YACtC;gBACE,sBAAsB,CAAC,kBAAkB,EAAE,UAAU,IAAI,CAAC,gEAAgE,CAAC;YAC7H;QACF;IACF;IACA,OAAO;AACT;AACA,SAAS,mBAAmB,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,EAAE;IAC1E,IAAI,gBAAgB,cAAc,OAAO,YAAY,UAAU,CAAC,aAAa;IAC7E,MAAM,gBAAgB,CAAA,GAAA,6IAAA,CAAA,iBAAc,AAAD,EAAE,gBAAgB,YAAY,eAAe,CAAC;IACjF,IAAI,SAAS;IACb,IAAI,cAAc,MAAM;QACtB,IAAI,QAAQ,CAAA,GAAA,6IAAA,CAAA,uBAAoB,AAAD,EAAE;QACjC,QAAQ,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,UAAU,cAAc,OAAO,CAAA,GAAA,qLAAA,CAAA,gCAA6B,AAAD,EAAE,WAAW,SAAS;QACrG,SAAS;IACX;IACA,MAAM,WAAW,CAAA,GAAA,6IAAA,CAAA,iBAAc,AAAD,EAAE,UAAU,OAAO,WAAW,KAAK,EAAE;IACnE,MAAM,iBAAiB,iBAAiB;IAExC,uFAAuF;IACvF,mFAAmF;IACnF,mFAAmF;IACnF,4EAA4E;IAC5E,4EAA4E;IAC5E,yEAAyE;IACzE,IAAI,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,SAAS;QACvB,MAAM,OAAO,OAAO,MAAM;QAC1B,kFAAkF;QAClF,iFAAiF;QACjF,+EAA+E;QAC/E,IAAI,KAAK,MAAM,GAAG,GAAG;YACnB,eAAe,IAAI,GAAG;QACxB,OAAO;YACL,gBAAgB;QAClB;IACF;IACA,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;QACxC,MAAM,YAAY,QAAQ,CAAC,EAAE;QAC7B,MAAM,qBAAqB,mBAAmB,QAAQ,WAAW,WAAW,eAAe,QAAQ;QACnG,IAAI,CAAC,iBAAiB,CAAA,GAAA,6IAAA,CAAA,iBAAc,AAAD,EAAE,gBAAgB,sBAAsB,YAAY,gBAAgB,CAAC,WAAW,WAAW,UAAU;YACtI,gBAAgB;QAClB;IACF;IACA,IAAI,iBAAiB,CAAC,eAAe;QACnC,YAAY,IAAI,CAAC;IACnB,OAAO,IAAI,MAAM,OAAO,CAAC,eAAe,QAAQ,GAAG;QACjD,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,QAAQ,CAAC,MAAM,EAAE,IAAK;YACvD,MAAM,sBAAsB,eAAe,QAAQ,CAAC,EAAE;YACtD,YAAY,IAAI,CAAC;QACnB;IACF;IACA,OAAO;AACT;AAEA,4CAA4C;AAC5C;;;;;;CAMC,GACD,SAAS,+BAA+B,MAAM,EAAE,SAAS;IACvD,MAAM,QAAQ,EAAE;IAChB,MAAM,OAAO,CAAA,GAAA,6IAAA,CAAA,WAAQ,AAAD;IACpB,MAAM,mBAAmB,KAAK,WAAW;IACzC,IAAK,IAAI,IAAI,GAAG,IAAI,iBAAiB,MAAM,EAAE,IAAK;QAChD,MAAM,eAAe,gBAAgB,CAAC,EAAE;QACxC,mBAAmB,QAAQ,WAAW,cAAc;IACtD;IACA,OAAO;QACL,WAAW,OAAO,OAAO,CAAC,SAAS;QACnC;IACF;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,kCAAkC,eAAe;IACxD,MAAM,QAAQ,EAAE;IAChB,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;QAC/C,MAAM,iBAAiB,eAAe,CAAC,EAAE;QACzC,MAAM,OAAO,CAAA,GAAA,6IAAA,CAAA,uBAAoB,AAAD,EAAE;QAClC,IAAI,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,OAAO;YACrB,CAAA,GAAA,qLAAA,CAAA,gBAAa,AAAD,EAAE;QAChB;QACA,MAAM,IAAI,CAAC;IACb;IACA,OAAO;AACT;AACA,MAAM,gBAAgB;AACtB,IAAI,wBAAwB;AAE5B,wBAAwB;AACxB,mEAAmE;AACnE;;;;;;;;CAQC,GACD,eAAe,gBAAgB,MAAM,EAAE,KAAK,EAAE,IAAI;IAChD,IAAI,0BAA0B,MAAM;QAClC,yFAAyF;QACzF,qGAAqG;QACrG,OAAO;IACT;IACA,IAAI,UAAU,MAAM;QAClB,OAAO,IAAI,QAAQ,CAAC,SAAS;YAC3B,OAAO,MAAM,CAAC;gBACZ,QAAQ,sBAAsB,QAAQ,OAAO;YAC/C;QACF;IACF;IACA,MAAM,cAAc,OAAO,cAAc;IACzC,MAAM,eAAe,OAAO,OAAO,IAAI;IACvC,MAAM,iBAAiB,OAAO,QAAQ;IACtC,MAAM,eAAe,CAAA,GAAA,6IAAA,CAAA,kBAAe,AAAD,EAAE;IACrC,IAAI,gBAAgB,QAAQ,iBAAiB,MAAM;QACjD,OAAO;IACT;IACA,MAAM,UAAU,eAAe,aAAa,CAAC;IAC7C,QAAQ,KAAK,CAAC,OAAO,GAAG;IACxB,QAAQ,MAAM,CAAC,eAAe,cAAc,CAAC;IAC7C,YAAY,MAAM,CAAC;IACnB,MAAM,QAAQ,IAAI;IAClB,MAAM,QAAQ,CAAC,SAAS;IACxB,MAAM,MAAM,CAAC,SAAS;IACtB,aAAa,eAAe;IAC5B,aAAa,QAAQ,CAAC;IACtB,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,iBAAiB,OAAO,eAAe,CAAC,6IAAA,CAAA,eAAY,EAAE,CAAA;YAC1D,IAAI,CAAA,GAAA,6KAAA,CAAA,oBAAiB,AAAD,EAAE,aAAa,iBAAiB;gBAClD;gBACA,IAAI,0BAA0B,MAAM;oBAClC,OAAO,YAAY,CAAC;oBACpB,wBAAwB;gBAC1B;gBACA,QAAQ,sBAAsB,QAAQ,aAAa;YACrD;YACA,uEAAuE;YACvE,OAAO;QACT,GAAG,6IAAA,CAAA,4BAAyB;QAC5B,4FAA4F;QAC5F,yEAAyE;QACzE,wBAAwB,OAAO,UAAU,CAAC;YACxC;YACA,wBAAwB;YACxB,QAAQ;QACV,GAAG;QACH,eAAe,WAAW,CAAC;QAC3B,QAAQ,MAAM;IAChB;AACF;AAEA,uDAAuD;AACvD,SAAS,sBAAsB,MAAM,EAAE,KAAK,EAAE,IAAI;IAChD,IAAI,SAAS,WAAW;QACtB,MAAM,eAAe,CAAA,GAAA,6IAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,OAAO;QACnD,IAAI,CAAC,cAAc;YACjB,OAAO;QACT;QACA,MAAM,YAAY,aAAa,UAAU;QACzC,MAAM,WAAW,aAAa,SAAS;QACvC,IAAI,cAAc,QAAQ,aAAa,QAAQ,CAAC,CAAA,GAAA,6IAAA,CAAA,0BAAuB,AAAD,EAAE,QAAQ,WAAW,WAAW;YACpG,OAAO;QACT;QACA,MAAM,YAAY,CAAA,GAAA,6IAAA,CAAA,gBAAa,AAAD;QAC9B,IAAI,cAAc,MAAM;YACtB,OAAO;QACT;QACA,OAAO,+BAA+B;IACxC;IACA,MAAM,cAAc;IACpB,MAAM,gBAAgB,MAAM,aAAa;IACzC,IAAI,kBAAkB,MAAM;QAC1B,OAAO;IACT;IACA,gCAAgC,eAAe;IAC/C,OAAO;AACT;AACA,MAAM,yBAAyB;IAAC;QAAC;QAAa;KAAgB;IAAE;QAAC;QAAgC;KAAmB;CAAC;AAErH;;;;;;;CAOC,GACD,SAAS,+BAA+B,YAAY,CAAA,GAAA,6IAAA,CAAA,gBAAa,AAAD,GAAG;IACjE,MAAM,gBAAgB;QACpB,cAAc,YAAY,UAAU,cAAc,KAAK;IACzD;IACA,IAAI,WAAW;QACb,MAAM,SAAS,CAAA,GAAA,6IAAA,CAAA,aAAU,AAAD;QACxB,KAAK,MAAM,CAAC,UAAU,UAAU,IAAI,uBAAwB;YAC1D,MAAM,IAAI,UAAU,QAAQ;YAC5B,IAAI,MAAM,MAAM;gBACd,aAAa,CAAC,SAAS,GAAG;YAC5B;QACF;IACF;IACA,OAAO;AACT;AAEA;;;;;;CAMC,GACD,SAAS,gCAAgC,aAAa,EAAE,IAAI;IAC1D,IAAK,MAAM,KAAK,KAAM;QACpB,MAAM,IAAI,IAAI,CAAC,EAAE;QACjB,IAAI,MAAM,WAAW;YACnB,cAAc,OAAO,CAAC,GAAG;QAC3B;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 15709, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15715, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/rich-text/LexicalRichText.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $insertDataTransferForRichText, copyToClipboard } from '@lexical/clipboard';\nimport { $shouldOverrideDefaultCharacterSelection, $moveCharacter } from '@lexical/selection';\nimport { addClassNamesToElement, isHTMLElement, objectKlassEquals, mergeRegister, $findMatchingParent, $getNearestBlockElementAncestorOrThrow } from '@lexical/utils';\nimport { createCommand, ElementNode, $createParagraphNode, $applyNodeReplacement, setNodeIndentFromDOM, CLICK_COMMAND, $getSelection, $isNodeSelection, DELETE_CHARACTER_COMMAND, $isRangeSelection, COMMAND_PRIORITY_EDITOR, DELETE_WORD_COMMAND, DELETE_LINE_COMMAND, CONTROLLED_TEXT_INSERTION_COMMAND, REMOVE_TEXT_COMMAND, FORMAT_TEXT_COMMAND, FORMAT_ELEMENT_COMMAND, $isElementNode, INSERT_LINE_BREAK_COMMAND, INSERT_PARAGRAPH_COMMAND, INSERT_TAB_COMMAND, $insertNodes, $createTabNode, INDENT_CONTENT_COMMAND, OUTDENT_CONTENT_COMMAND, KEY_ARROW_UP_COMMAND, $getAdjacentNode, $isDecoratorNode, KEY_ARROW_DOWN_COMMAND, KEY_ARROW_LEFT_COMMAND, KEY_ARROW_RIGHT_COMMAND, KEY_BACKSPACE_COMMAND, $isRootNode, KEY_DELETE_COMMAND, KEY_ENTER_COMMAND, KEY_ESCAPE_COMMAND, DROP_COMMAND, $getNearestNodeFromDOMNode, $createRangeSelection, $isTextNode, $normalizeSelection__EXPERIMENTAL, $setSelection, DRAGSTART_COMMAND, DRAGOVER_COMMAND, SELECT_ALL_COMMAND, $selectAll, COPY_COMMAND, CUT_COMMAND, PASTE_COMMAND, isDOMNode, isSelectionCapturedInDecoratorInput, KEY_SPACE_COMMAND, KEY_TAB_COMMAND, $getRoot } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction caretFromPoint(x, y) {\n  if (typeof document.caretRangeFromPoint !== 'undefined') {\n    const range = document.caretRangeFromPoint(x, y);\n    if (range === null) {\n      return null;\n    }\n    return {\n      node: range.startContainer,\n      offset: range.startOffset\n    };\n    // @ts-ignore\n  } else if (document.caretPositionFromPoint !== 'undefined') {\n    // @ts-ignore FF - no types\n    const range = document.caretPositionFromPoint(x, y);\n    if (range === null) {\n      return null;\n    }\n    return {\n      node: range.offsetNode,\n      offset: range.offset\n    };\n  } else {\n    // Gracefully handle IE\n    return null;\n  }\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst documentMode = CAN_USE_DOM && 'documentMode' in document ? document.documentMode : null;\nconst CAN_USE_BEFORE_INPUT = CAN_USE_DOM && 'InputEvent' in window && !documentMode ? 'getTargetRanges' in new window.InputEvent('input') : false;\nconst IS_SAFARI = CAN_USE_DOM && /Version\\/[\\d.]+.*Safari/.test(navigator.userAgent);\nconst IS_IOS = CAN_USE_DOM && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n// Keep these in case we need to use them in the future.\n// export const IS_WINDOWS: boolean = CAN_USE_DOM && /Win/.test(navigator.platform);\nconst IS_CHROME = CAN_USE_DOM && /^(?=.*Chrome).*/i.test(navigator.userAgent);\nconst IS_APPLE_WEBKIT = CAN_USE_DOM && /AppleWebKit\\/[\\d.]+/.test(navigator.userAgent) && !IS_CHROME;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst DRAG_DROP_PASTE = createCommand('DRAG_DROP_PASTE_FILE');\n/** @noInheritDoc */\nclass QuoteNode extends ElementNode {\n  static getType() {\n    return 'quote';\n  }\n  static clone(node) {\n    return new QuoteNode(node.__key);\n  }\n\n  // View\n\n  createDOM(config) {\n    const element = document.createElement('blockquote');\n    addClassNamesToElement(element, config.theme.quote);\n    return element;\n  }\n  updateDOM(prevNode, dom) {\n    return false;\n  }\n  static importDOM() {\n    return {\n      blockquote: node => ({\n        conversion: $convertBlockquoteElement,\n        priority: 0\n      })\n    };\n  }\n  exportDOM(editor) {\n    const {\n      element\n    } = super.exportDOM(editor);\n    if (isHTMLElement(element)) {\n      if (this.isEmpty()) {\n        element.append(document.createElement('br'));\n      }\n      const formatType = this.getFormatType();\n      element.style.textAlign = formatType;\n      const direction = this.getDirection();\n      if (direction) {\n        element.dir = direction;\n      }\n    }\n    return {\n      element\n    };\n  }\n  static importJSON(serializedNode) {\n    return $createQuoteNode().updateFromJSON(serializedNode);\n  }\n\n  // Mutation\n\n  insertNewAfter(_, restoreSelection) {\n    const newBlock = $createParagraphNode();\n    const direction = this.getDirection();\n    newBlock.setDirection(direction);\n    this.insertAfter(newBlock, restoreSelection);\n    return newBlock;\n  }\n  collapseAtStart() {\n    const paragraph = $createParagraphNode();\n    const children = this.getChildren();\n    children.forEach(child => paragraph.append(child));\n    this.replace(paragraph);\n    return true;\n  }\n  canMergeWhenEmpty() {\n    return true;\n  }\n}\nfunction $createQuoteNode() {\n  return $applyNodeReplacement(new QuoteNode());\n}\nfunction $isQuoteNode(node) {\n  return node instanceof QuoteNode;\n}\n/** @noInheritDoc */\nclass HeadingNode extends ElementNode {\n  /** @internal */\n\n  static getType() {\n    return 'heading';\n  }\n  static clone(node) {\n    return new HeadingNode(node.__tag, node.__key);\n  }\n  constructor(tag, key) {\n    super(key);\n    this.__tag = tag;\n  }\n  getTag() {\n    return this.__tag;\n  }\n  setTag(tag) {\n    const self = this.getWritable();\n    this.__tag = tag;\n    return self;\n  }\n\n  // View\n\n  createDOM(config) {\n    const tag = this.__tag;\n    const element = document.createElement(tag);\n    const theme = config.theme;\n    const classNames = theme.heading;\n    if (classNames !== undefined) {\n      const className = classNames[tag];\n      addClassNamesToElement(element, className);\n    }\n    return element;\n  }\n  updateDOM(prevNode, dom, config) {\n    return prevNode.__tag !== this.__tag;\n  }\n  static importDOM() {\n    return {\n      h1: node => ({\n        conversion: $convertHeadingElement,\n        priority: 0\n      }),\n      h2: node => ({\n        conversion: $convertHeadingElement,\n        priority: 0\n      }),\n      h3: node => ({\n        conversion: $convertHeadingElement,\n        priority: 0\n      }),\n      h4: node => ({\n        conversion: $convertHeadingElement,\n        priority: 0\n      }),\n      h5: node => ({\n        conversion: $convertHeadingElement,\n        priority: 0\n      }),\n      h6: node => ({\n        conversion: $convertHeadingElement,\n        priority: 0\n      }),\n      p: node => {\n        // domNode is a <p> since we matched it by nodeName\n        const paragraph = node;\n        const firstChild = paragraph.firstChild;\n        if (firstChild !== null && isGoogleDocsTitle(firstChild)) {\n          return {\n            conversion: () => ({\n              node: null\n            }),\n            priority: 3\n          };\n        }\n        return null;\n      },\n      span: node => {\n        if (isGoogleDocsTitle(node)) {\n          return {\n            conversion: domNode => {\n              return {\n                node: $createHeadingNode('h1')\n              };\n            },\n            priority: 3\n          };\n        }\n        return null;\n      }\n    };\n  }\n  exportDOM(editor) {\n    const {\n      element\n    } = super.exportDOM(editor);\n    if (isHTMLElement(element)) {\n      if (this.isEmpty()) {\n        element.append(document.createElement('br'));\n      }\n      const formatType = this.getFormatType();\n      element.style.textAlign = formatType;\n      const direction = this.getDirection();\n      if (direction) {\n        element.dir = direction;\n      }\n    }\n    return {\n      element\n    };\n  }\n  static importJSON(serializedNode) {\n    return $createHeadingNode(serializedNode.tag).updateFromJSON(serializedNode);\n  }\n  updateFromJSON(serializedNode) {\n    return super.updateFromJSON(serializedNode).setTag(serializedNode.tag);\n  }\n  exportJSON() {\n    return {\n      ...super.exportJSON(),\n      tag: this.getTag()\n    };\n  }\n\n  // Mutation\n  insertNewAfter(selection, restoreSelection = true) {\n    const anchorOffet = selection ? selection.anchor.offset : 0;\n    const lastDesc = this.getLastDescendant();\n    const isAtEnd = !lastDesc || selection && selection.anchor.key === lastDesc.getKey() && anchorOffet === lastDesc.getTextContentSize();\n    const newElement = isAtEnd || !selection ? $createParagraphNode() : $createHeadingNode(this.getTag());\n    const direction = this.getDirection();\n    newElement.setDirection(direction);\n    this.insertAfter(newElement, restoreSelection);\n    if (anchorOffet === 0 && !this.isEmpty() && selection) {\n      const paragraph = $createParagraphNode();\n      paragraph.select();\n      this.replace(paragraph, true);\n    }\n    return newElement;\n  }\n  collapseAtStart() {\n    const newElement = !this.isEmpty() ? $createHeadingNode(this.getTag()) : $createParagraphNode();\n    const children = this.getChildren();\n    children.forEach(child => newElement.append(child));\n    this.replace(newElement);\n    return true;\n  }\n  extractWithChild() {\n    return true;\n  }\n}\nfunction isGoogleDocsTitle(domNode) {\n  if (domNode.nodeName.toLowerCase() === 'span') {\n    return domNode.style.fontSize === '26pt';\n  }\n  return false;\n}\nfunction $convertHeadingElement(element) {\n  const nodeName = element.nodeName.toLowerCase();\n  let node = null;\n  if (nodeName === 'h1' || nodeName === 'h2' || nodeName === 'h3' || nodeName === 'h4' || nodeName === 'h5' || nodeName === 'h6') {\n    node = $createHeadingNode(nodeName);\n    if (element.style !== null) {\n      setNodeIndentFromDOM(element, node);\n      node.setFormat(element.style.textAlign);\n    }\n  }\n  return {\n    node\n  };\n}\nfunction $convertBlockquoteElement(element) {\n  const node = $createQuoteNode();\n  if (element.style !== null) {\n    node.setFormat(element.style.textAlign);\n    setNodeIndentFromDOM(element, node);\n  }\n  return {\n    node\n  };\n}\nfunction $createHeadingNode(headingTag = 'h1') {\n  return $applyNodeReplacement(new HeadingNode(headingTag));\n}\nfunction $isHeadingNode(node) {\n  return node instanceof HeadingNode;\n}\nfunction onPasteForRichText(event, editor) {\n  event.preventDefault();\n  editor.update(() => {\n    const selection = $getSelection();\n    const clipboardData = objectKlassEquals(event, InputEvent) || objectKlassEquals(event, KeyboardEvent) ? null : event.clipboardData;\n    if (clipboardData != null && selection !== null) {\n      $insertDataTransferForRichText(clipboardData, selection, editor);\n    }\n  }, {\n    tag: 'paste'\n  });\n}\nasync function onCutForRichText(event, editor) {\n  await copyToClipboard(editor, objectKlassEquals(event, ClipboardEvent) ? event : null);\n  editor.update(() => {\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      selection.removeText();\n    } else if ($isNodeSelection(selection)) {\n      selection.getNodes().forEach(node => node.remove());\n    }\n  });\n}\n\n// Clipboard may contain files that we aren't allowed to read. While the event is arguably useless,\n// in certain occasions, we want to know whether it was a file transfer, as opposed to text. We\n// control this with the first boolean flag.\nfunction eventFiles(event) {\n  let dataTransfer = null;\n  if (objectKlassEquals(event, DragEvent)) {\n    dataTransfer = event.dataTransfer;\n  } else if (objectKlassEquals(event, ClipboardEvent)) {\n    dataTransfer = event.clipboardData;\n  }\n  if (dataTransfer === null) {\n    return [false, [], false];\n  }\n  const types = dataTransfer.types;\n  const hasFiles = types.includes('Files');\n  const hasContent = types.includes('text/html') || types.includes('text/plain');\n  return [hasFiles, Array.from(dataTransfer.files), hasContent];\n}\nfunction $handleIndentAndOutdent(indentOrOutdent) {\n  const selection = $getSelection();\n  if (!$isRangeSelection(selection)) {\n    return false;\n  }\n  const alreadyHandled = new Set();\n  const nodes = selection.getNodes();\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    const key = node.getKey();\n    if (alreadyHandled.has(key)) {\n      continue;\n    }\n    const parentBlock = $findMatchingParent(node, parentNode => $isElementNode(parentNode) && !parentNode.isInline());\n    if (parentBlock === null) {\n      continue;\n    }\n    const parentKey = parentBlock.getKey();\n    if (parentBlock.canIndent() && !alreadyHandled.has(parentKey)) {\n      alreadyHandled.add(parentKey);\n      indentOrOutdent(parentBlock);\n    }\n  }\n  return alreadyHandled.size > 0;\n}\nfunction $isTargetWithinDecorator(target) {\n  const node = $getNearestNodeFromDOMNode(target);\n  return $isDecoratorNode(node);\n}\nfunction $isSelectionAtEndOfRoot(selection) {\n  const focus = selection.focus;\n  return focus.key === 'root' && focus.offset === $getRoot().getChildrenSize();\n}\n\n/**\n * Resets the capitalization of the selection to default.\n * Called when the user presses space, tab, or enter key.\n * @param selection The selection to reset the capitalization of.\n */\nfunction $resetCapitalization(selection) {\n  for (const format of ['lowercase', 'uppercase', 'capitalize']) {\n    if (selection.hasFormat(format)) {\n      selection.toggleFormat(format);\n    }\n  }\n}\nfunction registerRichText(editor) {\n  const removeListener = mergeRegister(editor.registerCommand(CLICK_COMMAND, payload => {\n    const selection = $getSelection();\n    if ($isNodeSelection(selection)) {\n      selection.clear();\n      return true;\n    }\n    return false;\n  }, 0), editor.registerCommand(DELETE_CHARACTER_COMMAND, isBackward => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    selection.deleteCharacter(isBackward);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(DELETE_WORD_COMMAND, isBackward => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    selection.deleteWord(isBackward);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(DELETE_LINE_COMMAND, isBackward => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    selection.deleteLine(isBackward);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(CONTROLLED_TEXT_INSERTION_COMMAND, eventOrText => {\n    const selection = $getSelection();\n    if (typeof eventOrText === 'string') {\n      if (selection !== null) {\n        selection.insertText(eventOrText);\n      }\n    } else {\n      if (selection === null) {\n        return false;\n      }\n      const dataTransfer = eventOrText.dataTransfer;\n      if (dataTransfer != null) {\n        $insertDataTransferForRichText(dataTransfer, selection, editor);\n      } else if ($isRangeSelection(selection)) {\n        const data = eventOrText.data;\n        if (data) {\n          selection.insertText(data);\n        }\n        return true;\n      }\n    }\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(REMOVE_TEXT_COMMAND, () => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    selection.removeText();\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(FORMAT_TEXT_COMMAND, format => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    selection.formatText(format);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(FORMAT_ELEMENT_COMMAND, format => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection) && !$isNodeSelection(selection)) {\n      return false;\n    }\n    const nodes = selection.getNodes();\n    for (const node of nodes) {\n      const element = $findMatchingParent(node, parentNode => $isElementNode(parentNode) && !parentNode.isInline());\n      if (element !== null) {\n        element.setFormat(format);\n      }\n    }\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(INSERT_LINE_BREAK_COMMAND, selectStart => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    selection.insertLineBreak(selectStart);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(INSERT_PARAGRAPH_COMMAND, () => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    selection.insertParagraph();\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(INSERT_TAB_COMMAND, () => {\n    $insertNodes([$createTabNode()]);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(INDENT_CONTENT_COMMAND, () => {\n    return $handleIndentAndOutdent(block => {\n      const indent = block.getIndent();\n      block.setIndent(indent + 1);\n    });\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(OUTDENT_CONTENT_COMMAND, () => {\n    return $handleIndentAndOutdent(block => {\n      const indent = block.getIndent();\n      if (indent > 0) {\n        block.setIndent(indent - 1);\n      }\n    });\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_ARROW_UP_COMMAND, event => {\n    const selection = $getSelection();\n    if ($isNodeSelection(selection) && !$isTargetWithinDecorator(event.target)) {\n      // If selection is on a node, let's try and move selection\n      // back to being a range selection.\n      const nodes = selection.getNodes();\n      if (nodes.length > 0) {\n        nodes[0].selectPrevious();\n        return true;\n      }\n    } else if ($isRangeSelection(selection)) {\n      const possibleNode = $getAdjacentNode(selection.focus, true);\n      if (!event.shiftKey && $isDecoratorNode(possibleNode) && !possibleNode.isIsolated() && !possibleNode.isInline()) {\n        possibleNode.selectPrevious();\n        event.preventDefault();\n        return true;\n      }\n    }\n    return false;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_ARROW_DOWN_COMMAND, event => {\n    const selection = $getSelection();\n    if ($isNodeSelection(selection)) {\n      // If selection is on a node, let's try and move selection\n      // back to being a range selection.\n      const nodes = selection.getNodes();\n      if (nodes.length > 0) {\n        nodes[0].selectNext(0, 0);\n        return true;\n      }\n    } else if ($isRangeSelection(selection)) {\n      if ($isSelectionAtEndOfRoot(selection)) {\n        event.preventDefault();\n        return true;\n      }\n      const possibleNode = $getAdjacentNode(selection.focus, false);\n      if (!event.shiftKey && $isDecoratorNode(possibleNode) && !possibleNode.isIsolated() && !possibleNode.isInline()) {\n        possibleNode.selectNext();\n        event.preventDefault();\n        return true;\n      }\n    }\n    return false;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_ARROW_LEFT_COMMAND, event => {\n    const selection = $getSelection();\n    if ($isNodeSelection(selection)) {\n      // If selection is on a node, let's try and move selection\n      // back to being a range selection.\n      const nodes = selection.getNodes();\n      if (nodes.length > 0) {\n        event.preventDefault();\n        nodes[0].selectPrevious();\n        return true;\n      }\n    }\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    if ($shouldOverrideDefaultCharacterSelection(selection, true)) {\n      const isHoldingShift = event.shiftKey;\n      event.preventDefault();\n      $moveCharacter(selection, isHoldingShift, true);\n      return true;\n    }\n    return false;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_ARROW_RIGHT_COMMAND, event => {\n    const selection = $getSelection();\n    if ($isNodeSelection(selection) && !$isTargetWithinDecorator(event.target)) {\n      // If selection is on a node, let's try and move selection\n      // back to being a range selection.\n      const nodes = selection.getNodes();\n      if (nodes.length > 0) {\n        event.preventDefault();\n        nodes[0].selectNext(0, 0);\n        return true;\n      }\n    }\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    const isHoldingShift = event.shiftKey;\n    if ($shouldOverrideDefaultCharacterSelection(selection, false)) {\n      event.preventDefault();\n      $moveCharacter(selection, isHoldingShift, false);\n      return true;\n    }\n    return false;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_BACKSPACE_COMMAND, event => {\n    if ($isTargetWithinDecorator(event.target)) {\n      return false;\n    }\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    const {\n      anchor\n    } = selection;\n    const anchorNode = anchor.getNode();\n    if (selection.isCollapsed() && anchor.offset === 0 && !$isRootNode(anchorNode)) {\n      const element = $getNearestBlockElementAncestorOrThrow(anchorNode);\n      if (element.getIndent() > 0) {\n        event.preventDefault();\n        return editor.dispatchCommand(OUTDENT_CONTENT_COMMAND, undefined);\n      }\n    }\n\n    // Exception handling for iOS native behavior instead of Lexical's behavior when using Korean on iOS devices.\n    // more details - https://github.com/facebook/lexical/issues/5841\n    if (IS_IOS && navigator.language === 'ko-KR') {\n      return false;\n    }\n    event.preventDefault();\n    return editor.dispatchCommand(DELETE_CHARACTER_COMMAND, true);\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_DELETE_COMMAND, event => {\n    if ($isTargetWithinDecorator(event.target)) {\n      return false;\n    }\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    event.preventDefault();\n    return editor.dispatchCommand(DELETE_CHARACTER_COMMAND, false);\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_ENTER_COMMAND, event => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    $resetCapitalization(selection);\n    if (event !== null) {\n      // If we have beforeinput, then we can avoid blocking\n      // the default behavior. This ensures that the iOS can\n      // intercept that we're actually inserting a paragraph,\n      // and autocomplete, autocapitalize etc work as intended.\n      // This can also cause a strange performance issue in\n      // Safari, where there is a noticeable pause due to\n      // preventing the key down of enter.\n      if ((IS_IOS || IS_SAFARI || IS_APPLE_WEBKIT) && CAN_USE_BEFORE_INPUT) {\n        return false;\n      }\n      event.preventDefault();\n      if (event.shiftKey) {\n        return editor.dispatchCommand(INSERT_LINE_BREAK_COMMAND, false);\n      }\n    }\n    return editor.dispatchCommand(INSERT_PARAGRAPH_COMMAND, undefined);\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_ESCAPE_COMMAND, () => {\n    const selection = $getSelection();\n    if (!$isRangeSelection(selection)) {\n      return false;\n    }\n    editor.blur();\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(DROP_COMMAND, event => {\n    const [, files] = eventFiles(event);\n    if (files.length > 0) {\n      const x = event.clientX;\n      const y = event.clientY;\n      const eventRange = caretFromPoint(x, y);\n      if (eventRange !== null) {\n        const {\n          offset: domOffset,\n          node: domNode\n        } = eventRange;\n        const node = $getNearestNodeFromDOMNode(domNode);\n        if (node !== null) {\n          const selection = $createRangeSelection();\n          if ($isTextNode(node)) {\n            selection.anchor.set(node.getKey(), domOffset, 'text');\n            selection.focus.set(node.getKey(), domOffset, 'text');\n          } else {\n            const parentKey = node.getParentOrThrow().getKey();\n            const offset = node.getIndexWithinParent() + 1;\n            selection.anchor.set(parentKey, offset, 'element');\n            selection.focus.set(parentKey, offset, 'element');\n          }\n          const normalizedSelection = $normalizeSelection__EXPERIMENTAL(selection);\n          $setSelection(normalizedSelection);\n        }\n        editor.dispatchCommand(DRAG_DROP_PASTE, files);\n      }\n      event.preventDefault();\n      return true;\n    }\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      return true;\n    }\n    return false;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(DRAGSTART_COMMAND, event => {\n    const [isFileTransfer] = eventFiles(event);\n    const selection = $getSelection();\n    if (isFileTransfer && !$isRangeSelection(selection)) {\n      return false;\n    }\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(DRAGOVER_COMMAND, event => {\n    const [isFileTransfer] = eventFiles(event);\n    const selection = $getSelection();\n    if (isFileTransfer && !$isRangeSelection(selection)) {\n      return false;\n    }\n    const x = event.clientX;\n    const y = event.clientY;\n    const eventRange = caretFromPoint(x, y);\n    if (eventRange !== null) {\n      const node = $getNearestNodeFromDOMNode(eventRange.node);\n      if ($isDecoratorNode(node)) {\n        // Show browser caret as the user is dragging the media across the screen. Won't work\n        // for DecoratorNode nor it's relevant.\n        event.preventDefault();\n      }\n    }\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(SELECT_ALL_COMMAND, () => {\n    $selectAll();\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(COPY_COMMAND, event => {\n    copyToClipboard(editor, objectKlassEquals(event, ClipboardEvent) ? event : null);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(CUT_COMMAND, event => {\n    onCutForRichText(event, editor);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(PASTE_COMMAND, event => {\n    const [, files, hasTextContent] = eventFiles(event);\n    if (files.length > 0 && !hasTextContent) {\n      editor.dispatchCommand(DRAG_DROP_PASTE, files);\n      return true;\n    }\n\n    // if inputs then paste within the input ignore creating a new node on paste event\n    if (isDOMNode(event.target) && isSelectionCapturedInDecoratorInput(event.target)) {\n      return false;\n    }\n    const selection = $getSelection();\n    if (selection !== null) {\n      onPasteForRichText(event, editor);\n      return true;\n    }\n    return false;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_SPACE_COMMAND, _ => {\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      $resetCapitalization(selection);\n    }\n    return false;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(KEY_TAB_COMMAND, _ => {\n    const selection = $getSelection();\n    if ($isRangeSelection(selection)) {\n      $resetCapitalization(selection);\n    }\n    return false;\n  }, COMMAND_PRIORITY_EDITOR));\n  return removeListener;\n}\n\nexport { $createHeadingNode, $createQuoteNode, $isHeadingNode, $isQuoteNode, DRAG_DROP_PASTE, HeadingNode, QuoteNode, eventFiles, registerRichText };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16511, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/dragon/LexicalDragon.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { $getSelection, $isRangeSelection, $isTextNode } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction registerDragonSupport(editor) {\n  const origin = window.location.origin;\n  const handler = event => {\n    if (event.origin !== origin) {\n      return;\n    }\n    const rootElement = editor.getRootElement();\n    if (document.activeElement !== rootElement) {\n      return;\n    }\n    const data = event.data;\n    if (typeof data === 'string') {\n      let parsedData;\n      try {\n        parsedData = JSON.parse(data);\n      } catch (e) {\n        return;\n      }\n      if (parsedData && parsedData.protocol === 'nuanria_messaging' && parsedData.type === 'request') {\n        const payload = parsedData.payload;\n        if (payload && payload.functionId === 'makeChanges') {\n          const args = payload.args;\n          if (args) {\n            const [elementStart, elementLength, text, selStart, selLength, formatCommand] = args;\n            editor.update(() => {\n              const selection = $getSelection();\n              if ($isRangeSelection(selection)) {\n                const anchor = selection.anchor;\n                let anchorNode = anchor.getNode();\n                let setSelStart = 0;\n                let setSelEnd = 0;\n                if ($isTextNode(anchorNode)) {\n                  // set initial selection\n                  if (elementStart >= 0 && elementLength >= 0) {\n                    setSelStart = elementStart;\n                    setSelEnd = elementStart + elementLength;\n                    // If the offset is more than the end, make it the end\n                    selection.setTextNodeRange(anchorNode, setSelStart, anchorNode, setSelEnd);\n                  }\n                }\n                if (setSelStart !== setSelEnd || text !== '') {\n                  selection.insertRawText(text);\n                  anchorNode = anchor.getNode();\n                }\n                if ($isTextNode(anchorNode)) {\n                  // set final selection\n                  setSelStart = selStart;\n                  setSelEnd = selStart + selLength;\n                  const anchorNodeTextLength = anchorNode.getTextContentSize();\n                  // If the offset is more than the end, make it the end\n                  setSelStart = setSelStart > anchorNodeTextLength ? anchorNodeTextLength : setSelStart;\n                  setSelEnd = setSelEnd > anchorNodeTextLength ? anchorNodeTextLength : setSelEnd;\n                  selection.setTextNodeRange(anchorNode, setSelStart, anchorNode, setSelEnd);\n                }\n\n                // block the chrome extension from handling this event\n                event.stopImmediatePropagation();\n              }\n            });\n          }\n        }\n      }\n    }\n  };\n  window.addEventListener('message', handler, true);\n  return () => {\n    window.removeEventListener('message', handler, true);\n  };\n}\n\nexport { registerDragonSupport };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAED;;AAEA;;;;;;CAMC,GAED,SAAS,sBAAsB,MAAM;IACnC,MAAM,SAAS,OAAO,QAAQ,CAAC,MAAM;IACrC,MAAM,UAAU,CAAA;QACd,IAAI,MAAM,MAAM,KAAK,QAAQ;YAC3B;QACF;QACA,MAAM,cAAc,OAAO,cAAc;QACzC,IAAI,SAAS,aAAa,KAAK,aAAa;YAC1C;QACF;QACA,MAAM,OAAO,MAAM,IAAI;QACvB,IAAI,OAAO,SAAS,UAAU;YAC5B,IAAI;YACJ,IAAI;gBACF,aAAa,KAAK,KAAK,CAAC;YAC1B,EAAE,OAAO,GAAG;gBACV;YACF;YACA,IAAI,cAAc,WAAW,QAAQ,KAAK,uBAAuB,WAAW,IAAI,KAAK,WAAW;gBAC9F,MAAM,UAAU,WAAW,OAAO;gBAClC,IAAI,WAAW,QAAQ,UAAU,KAAK,eAAe;oBACnD,MAAM,OAAO,QAAQ,IAAI;oBACzB,IAAI,MAAM;wBACR,MAAM,CAAC,cAAc,eAAe,MAAM,UAAU,WAAW,cAAc,GAAG;wBAChF,OAAO,MAAM,CAAC;4BACZ,MAAM,YAAY,CAAA,GAAA,6IAAA,CAAA,gBAAa,AAAD;4BAC9B,IAAI,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,YAAY;gCAChC,MAAM,SAAS,UAAU,MAAM;gCAC/B,IAAI,aAAa,OAAO,OAAO;gCAC/B,IAAI,cAAc;gCAClB,IAAI,YAAY;gCAChB,IAAI,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;oCAC3B,wBAAwB;oCACxB,IAAI,gBAAgB,KAAK,iBAAiB,GAAG;wCAC3C,cAAc;wCACd,YAAY,eAAe;wCAC3B,sDAAsD;wCACtD,UAAU,gBAAgB,CAAC,YAAY,aAAa,YAAY;oCAClE;gCACF;gCACA,IAAI,gBAAgB,aAAa,SAAS,IAAI;oCAC5C,UAAU,aAAa,CAAC;oCACxB,aAAa,OAAO,OAAO;gCAC7B;gCACA,IAAI,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;oCAC3B,sBAAsB;oCACtB,cAAc;oCACd,YAAY,WAAW;oCACvB,MAAM,uBAAuB,WAAW,kBAAkB;oCAC1D,sDAAsD;oCACtD,cAAc,cAAc,uBAAuB,uBAAuB;oCAC1E,YAAY,YAAY,uBAAuB,uBAAuB;oCACtE,UAAU,gBAAgB,CAAC,YAAY,aAAa,YAAY;gCAClE;gCAEA,sDAAsD;gCACtD,MAAM,wBAAwB;4BAChC;wBACF;oBACF;gBACF;YACF;QACF;IACF;IACA,OAAO,gBAAgB,CAAC,WAAW,SAAS;IAC5C,OAAO;QACL,OAAO,mBAAmB,CAAC,WAAW,SAAS;IACjD;AACF","ignoreList":[0]}},
    {"offset": {"line": 16597, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16603, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/react/useLexicalEditable.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect, useMemo, useState, useRef } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Shortcut to Lexical subscriptions when values are used for render.\n * @param subscription - The function to create the {@link LexicalSubscription}. This function's identity must be stable (e.g. defined at module scope or with useCallback).\n */\nfunction useLexicalSubscription(subscription) {\n  const [editor] = useLexicalComposerContext();\n  const initializedSubscription = useMemo(() => subscription(editor), [editor, subscription]);\n  const [value, setValue] = useState(() => initializedSubscription.initialValueFn());\n  const valueRef = useRef(value);\n  useLayoutEffectImpl(() => {\n    const {\n      initialValueFn,\n      subscribe\n    } = initializedSubscription;\n    const currentValue = initialValueFn();\n    if (valueRef.current !== currentValue) {\n      valueRef.current = currentValue;\n      setValue(currentValue);\n    }\n    return subscribe(newValue => {\n      valueRef.current = newValue;\n      setValue(newValue);\n    });\n  }, [initializedSubscription, subscription]);\n  return value;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction subscription(editor) {\n  return {\n    initialValueFn: () => editor.isEditable(),\n    subscribe: callback => {\n      return editor.registerEditableListener(callback);\n    }\n  };\n}\n\n/**\n * Get the current value for {@link LexicalEditor.isEditable}\n * using {@link useLexicalSubscription}.\n * You should prefer this over manually observing the value with\n * {@link LexicalEditor.registerEditableListener},\n * which is a bit tricky to do correctly, particularly when using\n * React StrictMode (the default for development) or concurrency.\n */\nfunction useLexicalEditable() {\n  return useLexicalSubscription(subscription);\n}\n\nexport { useLexicalEditable };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAGD;AADA;;;AAGA;;;;;;CAMC,GAED,MAAM,cAAc,OAAO,WAAW,eAAe,OAAO,OAAO,QAAQ,KAAK,eAAe,OAAO,OAAO,QAAQ,CAAC,aAAa,KAAK;AAExI;;;;;;CAMC,GAGD,sDAAsD;AACtD,wCAAwC;AACxC,+CAA+C;AAC/C,MAAM,sBAAsB,cAAc,6JAAA,CAAA,kBAAe,GAAG,6JAAA,CAAA,YAAS;AAErE;;;;;;CAMC,GAED;;;CAGC,GACD,SAAS,uBAAuB,YAAY;IAC1C,MAAM,CAAC,OAAO,GAAG,CAAA,GAAA,uKAAA,CAAA,4BAAyB,AAAD;IACzC,MAAM,0BAA0B,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;mEAAE,IAAM,aAAa;kEAAS;QAAC;QAAQ;KAAa;IAC1F,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;2CAAE,IAAM,wBAAwB,cAAc;;IAC/E,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IACxB;sDAAoB;YAClB,MAAM,EACJ,cAAc,EACd,SAAS,EACV,GAAG;YACJ,MAAM,eAAe;YACrB,IAAI,SAAS,OAAO,KAAK,cAAc;gBACrC,SAAS,OAAO,GAAG;gBACnB,SAAS;YACX;YACA,OAAO;8DAAU,CAAA;oBACf,SAAS,OAAO,GAAG;oBACnB,SAAS;gBACX;;QACF;qDAAG;QAAC;QAAyB;KAAa;IAC1C,OAAO;AACT;AAEA;;;;;;CAMC,GAED,SAAS,aAAa,MAAM;IAC1B,OAAO;QACL,gBAAgB,IAAM,OAAO,UAAU;QACvC,WAAW,CAAA;YACT,OAAO,OAAO,wBAAwB,CAAC;QACzC;IACF;AACF;AAEA;;;;;;;CAOC,GACD,SAAS;IACP,OAAO,uBAAuB;AAChC","ignoreList":[0]}},
    {"offset": {"line": 16700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16706, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/react/LexicalRichTextPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLexicalEditable } from '@lexical/react/useLexicalEditable';\nimport { $canShowPlaceholderCurry } from '@lexical/text';\nimport { mergeRegister } from '@lexical/utils';\nimport { useLayoutEffect, useEffect, useState, useMemo, Suspense } from 'react';\nimport { flushSync, createPortal } from 'react-dom';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { registerDragonSupport } from '@lexical/dragon';\nimport { registerRichText } from '@lexical/rich-text';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read($canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffectImpl(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useDecorators(editor, ErrorBoundary) {\n  const [decorators, setDecorators] = useState(() => editor.getDecorators());\n\n  // Subscribe to changes\n  useLayoutEffectImpl(() => {\n    return editor.registerDecoratorListener(nextDecorators => {\n      flushSync(() => {\n        setDecorators(nextDecorators);\n      });\n    });\n  }, [editor]);\n  useEffect(() => {\n    // If the content editable mounts before the subscription is added, then\n    // nothing will be rendered on initial pass. We can get around that by\n    // ensuring that we set the value.\n    setDecorators(editor.getDecorators());\n  }, [editor]);\n\n  // Return decorators defined as React Portals\n  return useMemo(() => {\n    const decoratedPortals = [];\n    const decoratorKeys = Object.keys(decorators);\n    for (let i = 0; i < decoratorKeys.length; i++) {\n      const nodeKey = decoratorKeys[i];\n      const reactDecorator = /*#__PURE__*/jsx(ErrorBoundary, {\n        onError: e => editor._onError(e),\n        children: /*#__PURE__*/jsx(Suspense, {\n          fallback: null,\n          children: decorators[nodeKey]\n        })\n      });\n      const element = editor.getElementByKey(nodeKey);\n      if (element !== null) {\n        decoratedPortals.push(/*#__PURE__*/createPortal(reactDecorator, element, nodeKey));\n      }\n    }\n    return decoratedPortals;\n  }, [ErrorBoundary, decorators, editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useRichTextSetup(editor) {\n  useLayoutEffectImpl(() => {\n    return mergeRegister(registerRichText(editor), registerDragonSupport(editor));\n\n    // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction RichTextPlugin({\n  contentEditable,\n  // TODO Remove. This property is now part of ContentEditable\n  placeholder = null,\n  ErrorBoundary\n}) {\n  const [editor] = useLexicalComposerContext();\n  const decorators = useDecorators(editor, ErrorBoundary);\n  useRichTextSetup(editor);\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [contentEditable, /*#__PURE__*/jsx(Placeholder, {\n      content: placeholder\n    }), decorators]\n  });\n}\n\n// TODO remove\nfunction Placeholder({\n  content\n}) {\n  const [editor] = useLexicalComposerContext();\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const editable = useLexicalEditable();\n  if (!showPlaceholder) {\n    return null;\n  }\n  if (typeof content === 'function') {\n    return content(editable);\n  } else {\n    return content;\n  }\n}\n\nexport { RichTextPlugin };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 16904, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16910, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/react/LexicalContentEditable.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect, forwardRef, useState, useCallback, useMemo } from 'react';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { $canShowPlaceholderCurry } from '@lexical/text';\nimport { mergeRegister } from '@lexical/utils';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n// Source: https://github.com/gregberge/react-merge-refs/blob/main/src/index.tsx\n\nfunction mergeRefs(...refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction ContentEditableElementImpl({\n  editor,\n  ariaActiveDescendant,\n  ariaAutoComplete,\n  ariaControls,\n  ariaDescribedBy,\n  ariaErrorMessage,\n  ariaExpanded,\n  ariaInvalid,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaMultiline,\n  ariaOwns,\n  ariaRequired,\n  autoCapitalize,\n  className,\n  id,\n  role = 'textbox',\n  spellCheck = true,\n  style,\n  tabIndex,\n  'data-testid': testid,\n  ...rest\n}, ref) {\n  const [isEditable, setEditable] = useState(editor.isEditable());\n  const handleRef = useCallback(rootElement => {\n    // defaultView is required for a root element.\n    // In multi-window setups, the defaultView may not exist at certain points.\n    if (rootElement && rootElement.ownerDocument && rootElement.ownerDocument.defaultView) {\n      editor.setRootElement(rootElement);\n    } else {\n      editor.setRootElement(null);\n    }\n  }, [editor]);\n  const mergedRefs = useMemo(() => mergeRefs(ref, handleRef), [handleRef, ref]);\n  useLayoutEffectImpl(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/jsx(\"div\", {\n    \"aria-activedescendant\": isEditable ? ariaActiveDescendant : undefined,\n    \"aria-autocomplete\": isEditable ? ariaAutoComplete : 'none',\n    \"aria-controls\": isEditable ? ariaControls : undefined,\n    \"aria-describedby\": ariaDescribedBy\n    // for compat, only override aria-errormessage if ariaErrorMessage is defined\n    ,\n    ...(ariaErrorMessage != null ? {\n      'aria-errormessage': ariaErrorMessage\n    } : {}),\n    \"aria-expanded\": isEditable && role === 'combobox' ? !!ariaExpanded : undefined\n    // for compat, only override aria-invalid if ariaInvalid is defined\n    ,\n    ...(ariaInvalid != null ? {\n      'aria-invalid': ariaInvalid\n    } : {}),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": isEditable ? ariaOwns : undefined,\n    \"aria-readonly\": isEditable ? undefined : true,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: mergedRefs,\n    role: isEditable ? role : undefined,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex,\n    ...rest\n  });\n}\nconst ContentEditableElement = /*#__PURE__*/forwardRef(ContentEditableElementImpl);\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read($canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffectImpl(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst ContentEditable = /*#__PURE__*/forwardRef(ContentEditableImpl);\nfunction ContentEditableImpl(props, ref) {\n  const {\n    placeholder,\n    ...rest\n  } = props;\n  const [editor] = useLexicalComposerContext();\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [/*#__PURE__*/jsx(ContentEditableElement, {\n      editor: editor,\n      ...rest,\n      ref: ref\n    }), placeholder != null && /*#__PURE__*/jsx(Placeholder, {\n      editor: editor,\n      content: placeholder\n    })]\n  });\n}\nfunction Placeholder({\n  content,\n  editor\n}) {\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const [isEditable, setEditable] = useState(editor.isEditable());\n  useLayoutEffect(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  if (!showPlaceholder) {\n    return null;\n  }\n  let placeholder = null;\n  if (typeof content === 'function') {\n    placeholder = content(isEditable);\n  } else if (content !== null) {\n    placeholder = content;\n  }\n  if (placeholder === null) {\n    return null;\n  }\n  return /*#__PURE__*/jsx(\"div\", {\n    \"aria-hidden\": true,\n    children: placeholder\n  });\n}\n\nexport { ContentEditable };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 17128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17134, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/history/LexicalHistory.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { mergeRegister } from '@lexical/utils';\nimport { UNDO_COMMAND, COMMAND_PRIORITY_EDITOR, REDO_COMMAND, CLEAR_EDITOR_COMMAND, CLEAR_HISTORY_COMMAND, CAN_REDO_COMMAND, CAN_UNDO_COMMAND, $isRangeSelection, $isTextNode, $isRootNode } from 'lexical';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst HISTORY_MERGE = 0;\nconst HISTORY_PUSH = 1;\nconst DISCARD_HISTORY_CANDIDATE = 2;\nconst OTHER = 0;\nconst COMPOSING_CHARACTER = 1;\nconst INSERT_CHARACTER_AFTER_SELECTION = 2;\nconst DELETE_CHARACTER_BEFORE_SELECTION = 3;\nconst DELETE_CHARACTER_AFTER_SELECTION = 4;\nfunction getDirtyNodes(editorState, dirtyLeaves, dirtyElements) {\n  const nodeMap = editorState._nodeMap;\n  const nodes = [];\n  for (const dirtyLeafKey of dirtyLeaves) {\n    const dirtyLeaf = nodeMap.get(dirtyLeafKey);\n    if (dirtyLeaf !== undefined) {\n      nodes.push(dirtyLeaf);\n    }\n  }\n  for (const [dirtyElementKey, intentionallyMarkedAsDirty] of dirtyElements) {\n    if (!intentionallyMarkedAsDirty) {\n      continue;\n    }\n    const dirtyElement = nodeMap.get(dirtyElementKey);\n    if (dirtyElement !== undefined && !$isRootNode(dirtyElement)) {\n      nodes.push(dirtyElement);\n    }\n  }\n  return nodes;\n}\nfunction getChangeType(prevEditorState, nextEditorState, dirtyLeavesSet, dirtyElementsSet, isComposing) {\n  if (prevEditorState === null || dirtyLeavesSet.size === 0 && dirtyElementsSet.size === 0 && !isComposing) {\n    return OTHER;\n  }\n  const nextSelection = nextEditorState._selection;\n  const prevSelection = prevEditorState._selection;\n  if (isComposing) {\n    return COMPOSING_CHARACTER;\n  }\n  if (!$isRangeSelection(nextSelection) || !$isRangeSelection(prevSelection) || !prevSelection.isCollapsed() || !nextSelection.isCollapsed()) {\n    return OTHER;\n  }\n  const dirtyNodes = getDirtyNodes(nextEditorState, dirtyLeavesSet, dirtyElementsSet);\n  if (dirtyNodes.length === 0) {\n    return OTHER;\n  }\n\n  // Catching the case when inserting new text node into an element (e.g. first char in paragraph/list),\n  // or after existing node.\n  if (dirtyNodes.length > 1) {\n    const nextNodeMap = nextEditorState._nodeMap;\n    const nextAnchorNode = nextNodeMap.get(nextSelection.anchor.key);\n    const prevAnchorNode = nextNodeMap.get(prevSelection.anchor.key);\n    if (nextAnchorNode && prevAnchorNode && !prevEditorState._nodeMap.has(nextAnchorNode.__key) && $isTextNode(nextAnchorNode) && nextAnchorNode.__text.length === 1 && nextSelection.anchor.offset === 1) {\n      return INSERT_CHARACTER_AFTER_SELECTION;\n    }\n    return OTHER;\n  }\n  const nextDirtyNode = dirtyNodes[0];\n  const prevDirtyNode = prevEditorState._nodeMap.get(nextDirtyNode.__key);\n  if (!$isTextNode(prevDirtyNode) || !$isTextNode(nextDirtyNode) || prevDirtyNode.__mode !== nextDirtyNode.__mode) {\n    return OTHER;\n  }\n  const prevText = prevDirtyNode.__text;\n  const nextText = nextDirtyNode.__text;\n  if (prevText === nextText) {\n    return OTHER;\n  }\n  const nextAnchor = nextSelection.anchor;\n  const prevAnchor = prevSelection.anchor;\n  if (nextAnchor.key !== prevAnchor.key || nextAnchor.type !== 'text') {\n    return OTHER;\n  }\n  const nextAnchorOffset = nextAnchor.offset;\n  const prevAnchorOffset = prevAnchor.offset;\n  const textDiff = nextText.length - prevText.length;\n  if (textDiff === 1 && prevAnchorOffset === nextAnchorOffset - 1) {\n    return INSERT_CHARACTER_AFTER_SELECTION;\n  }\n  if (textDiff === -1 && prevAnchorOffset === nextAnchorOffset + 1) {\n    return DELETE_CHARACTER_BEFORE_SELECTION;\n  }\n  if (textDiff === -1 && prevAnchorOffset === nextAnchorOffset) {\n    return DELETE_CHARACTER_AFTER_SELECTION;\n  }\n  return OTHER;\n}\nfunction isTextNodeUnchanged(key, prevEditorState, nextEditorState) {\n  const prevNode = prevEditorState._nodeMap.get(key);\n  const nextNode = nextEditorState._nodeMap.get(key);\n  const prevSelection = prevEditorState._selection;\n  const nextSelection = nextEditorState._selection;\n  const isDeletingLine = $isRangeSelection(prevSelection) && $isRangeSelection(nextSelection) && prevSelection.anchor.type === 'element' && prevSelection.focus.type === 'element' && nextSelection.anchor.type === 'text' && nextSelection.focus.type === 'text';\n  if (!isDeletingLine && $isTextNode(prevNode) && $isTextNode(nextNode) && prevNode.__parent === nextNode.__parent) {\n    // This has the assumption that object key order won't change if the\n    // content did not change, which should normally be safe given\n    // the manner in which nodes and exportJSON are typically implemented.\n    return JSON.stringify(prevEditorState.read(() => prevNode.exportJSON())) === JSON.stringify(nextEditorState.read(() => nextNode.exportJSON()));\n  }\n  return false;\n}\nfunction createMergeActionGetter(editor, delay) {\n  let prevChangeTime = Date.now();\n  let prevChangeType = OTHER;\n  return (prevEditorState, nextEditorState, currentHistoryEntry, dirtyLeaves, dirtyElements, tags) => {\n    const changeTime = Date.now();\n\n    // If applying changes from history stack there's no need\n    // to run history logic again, as history entries already calculated\n    if (tags.has('historic')) {\n      prevChangeType = OTHER;\n      prevChangeTime = changeTime;\n      return DISCARD_HISTORY_CANDIDATE;\n    }\n    const changeType = getChangeType(prevEditorState, nextEditorState, dirtyLeaves, dirtyElements, editor.isComposing());\n    const mergeAction = (() => {\n      const isSameEditor = currentHistoryEntry === null || currentHistoryEntry.editor === editor;\n      const shouldPushHistory = tags.has('history-push');\n      const shouldMergeHistory = !shouldPushHistory && isSameEditor && tags.has('history-merge');\n      if (shouldMergeHistory) {\n        return HISTORY_MERGE;\n      }\n      if (prevEditorState === null) {\n        return HISTORY_PUSH;\n      }\n      const selection = nextEditorState._selection;\n      const hasDirtyNodes = dirtyLeaves.size > 0 || dirtyElements.size > 0;\n      if (!hasDirtyNodes) {\n        if (selection !== null) {\n          return HISTORY_MERGE;\n        }\n        return DISCARD_HISTORY_CANDIDATE;\n      }\n      if (shouldPushHistory === false && changeType !== OTHER && changeType === prevChangeType && changeTime < prevChangeTime + delay && isSameEditor) {\n        return HISTORY_MERGE;\n      }\n\n      // A single node might have been marked as dirty, but not have changed\n      // due to some node transform reverting the change.\n      if (dirtyLeaves.size === 1) {\n        const dirtyLeafKey = Array.from(dirtyLeaves)[0];\n        if (isTextNodeUnchanged(dirtyLeafKey, prevEditorState, nextEditorState)) {\n          return HISTORY_MERGE;\n        }\n      }\n      return HISTORY_PUSH;\n    })();\n    prevChangeTime = changeTime;\n    prevChangeType = changeType;\n    return mergeAction;\n  };\n}\nfunction redo(editor, historyState) {\n  const redoStack = historyState.redoStack;\n  const undoStack = historyState.undoStack;\n  if (redoStack.length !== 0) {\n    const current = historyState.current;\n    if (current !== null) {\n      undoStack.push(current);\n      editor.dispatchCommand(CAN_UNDO_COMMAND, true);\n    }\n    const historyStateEntry = redoStack.pop();\n    if (redoStack.length === 0) {\n      editor.dispatchCommand(CAN_REDO_COMMAND, false);\n    }\n    historyState.current = historyStateEntry || null;\n    if (historyStateEntry) {\n      historyStateEntry.editor.setEditorState(historyStateEntry.editorState, {\n        tag: 'historic'\n      });\n    }\n  }\n}\nfunction undo(editor, historyState) {\n  const redoStack = historyState.redoStack;\n  const undoStack = historyState.undoStack;\n  const undoStackLength = undoStack.length;\n  if (undoStackLength !== 0) {\n    const current = historyState.current;\n    const historyStateEntry = undoStack.pop();\n    if (current !== null) {\n      redoStack.push(current);\n      editor.dispatchCommand(CAN_REDO_COMMAND, true);\n    }\n    if (undoStack.length === 0) {\n      editor.dispatchCommand(CAN_UNDO_COMMAND, false);\n    }\n    historyState.current = historyStateEntry || null;\n    if (historyStateEntry) {\n      historyStateEntry.editor.setEditorState(historyStateEntry.editorState, {\n        tag: 'historic'\n      });\n    }\n  }\n}\nfunction clearHistory(historyState) {\n  historyState.undoStack = [];\n  historyState.redoStack = [];\n  historyState.current = null;\n}\n\n/**\n * Registers necessary listeners to manage undo/redo history stack and related editor commands.\n * It returns `unregister` callback that cleans up all listeners and should be called on editor unmount.\n * @param editor - The lexical editor.\n * @param historyState - The history state, containing the current state and the undo/redo stack.\n * @param delay - The time (in milliseconds) the editor should delay generating a new history stack,\n * instead of merging the current changes with the current stack.\n * @returns The listeners cleanup callback function.\n */\nfunction registerHistory(editor, historyState, delay) {\n  const getMergeAction = createMergeActionGetter(editor, delay);\n  const applyChange = ({\n    editorState,\n    prevEditorState,\n    dirtyLeaves,\n    dirtyElements,\n    tags\n  }) => {\n    const current = historyState.current;\n    const redoStack = historyState.redoStack;\n    const undoStack = historyState.undoStack;\n    const currentEditorState = current === null ? null : current.editorState;\n    if (current !== null && editorState === currentEditorState) {\n      return;\n    }\n    const mergeAction = getMergeAction(prevEditorState, editorState, current, dirtyLeaves, dirtyElements, tags);\n    if (mergeAction === HISTORY_PUSH) {\n      if (redoStack.length !== 0) {\n        historyState.redoStack = [];\n        editor.dispatchCommand(CAN_REDO_COMMAND, false);\n      }\n      if (current !== null) {\n        undoStack.push({\n          ...current\n        });\n        editor.dispatchCommand(CAN_UNDO_COMMAND, true);\n      }\n    } else if (mergeAction === DISCARD_HISTORY_CANDIDATE) {\n      return;\n    }\n\n    // Else we merge\n    historyState.current = {\n      editor,\n      editorState\n    };\n  };\n  const unregister = mergeRegister(editor.registerCommand(UNDO_COMMAND, () => {\n    undo(editor, historyState);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(REDO_COMMAND, () => {\n    redo(editor, historyState);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(CLEAR_EDITOR_COMMAND, () => {\n    clearHistory(historyState);\n    return false;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerCommand(CLEAR_HISTORY_COMMAND, () => {\n    clearHistory(historyState);\n    editor.dispatchCommand(CAN_REDO_COMMAND, false);\n    editor.dispatchCommand(CAN_UNDO_COMMAND, false);\n    return true;\n  }, COMMAND_PRIORITY_EDITOR), editor.registerUpdateListener(applyChange));\n  return unregister;\n}\n\n/**\n * Creates an empty history state.\n * @returns - The empty history state, as an object.\n */\nfunction createEmptyHistoryState() {\n  return {\n    current: null,\n    redoStack: [],\n    undoStack: []\n  };\n}\n\nexport { createEmptyHistoryState, registerHistory };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;AAGD;AADA;;;AAGA;;;;;;CAMC,GAED,MAAM,gBAAgB;AACtB,MAAM,eAAe;AACrB,MAAM,4BAA4B;AAClC,MAAM,QAAQ;AACd,MAAM,sBAAsB;AAC5B,MAAM,mCAAmC;AACzC,MAAM,oCAAoC;AAC1C,MAAM,mCAAmC;AACzC,SAAS,cAAc,WAAW,EAAE,WAAW,EAAE,aAAa;IAC5D,MAAM,UAAU,YAAY,QAAQ;IACpC,MAAM,QAAQ,EAAE;IAChB,KAAK,MAAM,gBAAgB,YAAa;QACtC,MAAM,YAAY,QAAQ,GAAG,CAAC;QAC9B,IAAI,cAAc,WAAW;YAC3B,MAAM,IAAI,CAAC;QACb;IACF;IACA,KAAK,MAAM,CAAC,iBAAiB,2BAA2B,IAAI,cAAe;QACzE,IAAI,CAAC,4BAA4B;YAC/B;QACF;QACA,MAAM,eAAe,QAAQ,GAAG,CAAC;QACjC,IAAI,iBAAiB,aAAa,CAAC,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,eAAe;YAC5D,MAAM,IAAI,CAAC;QACb;IACF;IACA,OAAO;AACT;AACA,SAAS,cAAc,eAAe,EAAE,eAAe,EAAE,cAAc,EAAE,gBAAgB,EAAE,WAAW;IACpG,IAAI,oBAAoB,QAAQ,eAAe,IAAI,KAAK,KAAK,iBAAiB,IAAI,KAAK,KAAK,CAAC,aAAa;QACxG,OAAO;IACT;IACA,MAAM,gBAAgB,gBAAgB,UAAU;IAChD,MAAM,gBAAgB,gBAAgB,UAAU;IAChD,IAAI,aAAa;QACf,OAAO;IACT;IACA,IAAI,CAAC,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,kBAAkB,CAAC,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,kBAAkB,CAAC,cAAc,WAAW,MAAM,CAAC,cAAc,WAAW,IAAI;QAC1I,OAAO;IACT;IACA,MAAM,aAAa,cAAc,iBAAiB,gBAAgB;IAClE,IAAI,WAAW,MAAM,KAAK,GAAG;QAC3B,OAAO;IACT;IAEA,sGAAsG;IACtG,0BAA0B;IAC1B,IAAI,WAAW,MAAM,GAAG,GAAG;QACzB,MAAM,cAAc,gBAAgB,QAAQ;QAC5C,MAAM,iBAAiB,YAAY,GAAG,CAAC,cAAc,MAAM,CAAC,GAAG;QAC/D,MAAM,iBAAiB,YAAY,GAAG,CAAC,cAAc,MAAM,CAAC,GAAG;QAC/D,IAAI,kBAAkB,kBAAkB,CAAC,gBAAgB,QAAQ,CAAC,GAAG,CAAC,eAAe,KAAK,KAAK,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,mBAAmB,eAAe,MAAM,CAAC,MAAM,KAAK,KAAK,cAAc,MAAM,CAAC,MAAM,KAAK,GAAG;YACrM,OAAO;QACT;QACA,OAAO;IACT;IACA,MAAM,gBAAgB,UAAU,CAAC,EAAE;IACnC,MAAM,gBAAgB,gBAAgB,QAAQ,CAAC,GAAG,CAAC,cAAc,KAAK;IACtE,IAAI,CAAC,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,kBAAkB,CAAC,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,kBAAkB,cAAc,MAAM,KAAK,cAAc,MAAM,EAAE;QAC/G,OAAO;IACT;IACA,MAAM,WAAW,cAAc,MAAM;IACrC,MAAM,WAAW,cAAc,MAAM;IACrC,IAAI,aAAa,UAAU;QACzB,OAAO;IACT;IACA,MAAM,aAAa,cAAc,MAAM;IACvC,MAAM,aAAa,cAAc,MAAM;IACvC,IAAI,WAAW,GAAG,KAAK,WAAW,GAAG,IAAI,WAAW,IAAI,KAAK,QAAQ;QACnE,OAAO;IACT;IACA,MAAM,mBAAmB,WAAW,MAAM;IAC1C,MAAM,mBAAmB,WAAW,MAAM;IAC1C,MAAM,WAAW,SAAS,MAAM,GAAG,SAAS,MAAM;IAClD,IAAI,aAAa,KAAK,qBAAqB,mBAAmB,GAAG;QAC/D,OAAO;IACT;IACA,IAAI,aAAa,CAAC,KAAK,qBAAqB,mBAAmB,GAAG;QAChE,OAAO;IACT;IACA,IAAI,aAAa,CAAC,KAAK,qBAAqB,kBAAkB;QAC5D,OAAO;IACT;IACA,OAAO;AACT;AACA,SAAS,oBAAoB,GAAG,EAAE,eAAe,EAAE,eAAe;IAChE,MAAM,WAAW,gBAAgB,QAAQ,CAAC,GAAG,CAAC;IAC9C,MAAM,WAAW,gBAAgB,QAAQ,CAAC,GAAG,CAAC;IAC9C,MAAM,gBAAgB,gBAAgB,UAAU;IAChD,MAAM,gBAAgB,gBAAgB,UAAU;IAChD,MAAM,iBAAiB,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,kBAAkB,CAAA,GAAA,6IAAA,CAAA,oBAAiB,AAAD,EAAE,kBAAkB,cAAc,MAAM,CAAC,IAAI,KAAK,aAAa,cAAc,KAAK,CAAC,IAAI,KAAK,aAAa,cAAc,MAAM,CAAC,IAAI,KAAK,UAAU,cAAc,KAAK,CAAC,IAAI,KAAK;IACzP,IAAI,CAAC,kBAAkB,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,aAAa,CAAA,GAAA,6IAAA,CAAA,cAAW,AAAD,EAAE,aAAa,SAAS,QAAQ,KAAK,SAAS,QAAQ,EAAE;QAChH,oEAAoE;QACpE,8DAA8D;QAC9D,sEAAsE;QACtE,OAAO,KAAK,SAAS,CAAC,gBAAgB,IAAI,CAAC,IAAM,SAAS,UAAU,SAAS,KAAK,SAAS,CAAC,gBAAgB,IAAI,CAAC,IAAM,SAAS,UAAU;IAC5I;IACA,OAAO;AACT;AACA,SAAS,wBAAwB,MAAM,EAAE,KAAK;IAC5C,IAAI,iBAAiB,KAAK,GAAG;IAC7B,IAAI,iBAAiB;IACrB,OAAO,CAAC,iBAAiB,iBAAiB,qBAAqB,aAAa,eAAe;QACzF,MAAM,aAAa,KAAK,GAAG;QAE3B,yDAAyD;QACzD,oEAAoE;QACpE,IAAI,KAAK,GAAG,CAAC,aAAa;YACxB,iBAAiB;YACjB,iBAAiB;YACjB,OAAO;QACT;QACA,MAAM,aAAa,cAAc,iBAAiB,iBAAiB,aAAa,eAAe,OAAO,WAAW;QACjH,MAAM,cAAc,CAAC;YACnB,MAAM,eAAe,wBAAwB,QAAQ,oBAAoB,MAAM,KAAK;YACpF,MAAM,oBAAoB,KAAK,GAAG,CAAC;YACnC,MAAM,qBAAqB,CAAC,qBAAqB,gBAAgB,KAAK,GAAG,CAAC;YAC1E,IAAI,oBAAoB;gBACtB,OAAO;YACT;YACA,IAAI,oBAAoB,MAAM;gBAC5B,OAAO;YACT;YACA,MAAM,YAAY,gBAAgB,UAAU;YAC5C,MAAM,gBAAgB,YAAY,IAAI,GAAG,KAAK,cAAc,IAAI,GAAG;YACnE,IAAI,CAAC,eAAe;gBAClB,IAAI,cAAc,MAAM;oBACtB,OAAO;gBACT;gBACA,OAAO;YACT;YACA,IAAI,sBAAsB,SAAS,eAAe,SAAS,eAAe,kBAAkB,aAAa,iBAAiB,SAAS,cAAc;gBAC/I,OAAO;YACT;YAEA,sEAAsE;YACtE,mDAAmD;YACnD,IAAI,YAAY,IAAI,KAAK,GAAG;gBAC1B,MAAM,eAAe,MAAM,IAAI,CAAC,YAAY,CAAC,EAAE;gBAC/C,IAAI,oBAAoB,cAAc,iBAAiB,kBAAkB;oBACvE,OAAO;gBACT;YACF;YACA,OAAO;QACT,CAAC;QACD,iBAAiB;QACjB,iBAAiB;QACjB,OAAO;IACT;AACF;AACA,SAAS,KAAK,MAAM,EAAE,YAAY;IAChC,MAAM,YAAY,aAAa,SAAS;IACxC,MAAM,YAAY,aAAa,SAAS;IACxC,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,MAAM,UAAU,aAAa,OAAO;QACpC,IAAI,YAAY,MAAM;YACpB,UAAU,IAAI,CAAC;YACf,OAAO,eAAe,CAAC,6IAAA,CAAA,mBAAgB,EAAE;QAC3C;QACA,MAAM,oBAAoB,UAAU,GAAG;QACvC,IAAI,UAAU,MAAM,KAAK,GAAG;YAC1B,OAAO,eAAe,CAAC,6IAAA,CAAA,mBAAgB,EAAE;QAC3C;QACA,aAAa,OAAO,GAAG,qBAAqB;QAC5C,IAAI,mBAAmB;YACrB,kBAAkB,MAAM,CAAC,cAAc,CAAC,kBAAkB,WAAW,EAAE;gBACrE,KAAK;YACP;QACF;IACF;AACF;AACA,SAAS,KAAK,MAAM,EAAE,YAAY;IAChC,MAAM,YAAY,aAAa,SAAS;IACxC,MAAM,YAAY,aAAa,SAAS;IACxC,MAAM,kBAAkB,UAAU,MAAM;IACxC,IAAI,oBAAoB,GAAG;QACzB,MAAM,UAAU,aAAa,OAAO;QACpC,MAAM,oBAAoB,UAAU,GAAG;QACvC,IAAI,YAAY,MAAM;YACpB,UAAU,IAAI,CAAC;YACf,OAAO,eAAe,CAAC,6IAAA,CAAA,mBAAgB,EAAE;QAC3C;QACA,IAAI,UAAU,MAAM,KAAK,GAAG;YAC1B,OAAO,eAAe,CAAC,6IAAA,CAAA,mBAAgB,EAAE;QAC3C;QACA,aAAa,OAAO,GAAG,qBAAqB;QAC5C,IAAI,mBAAmB;YACrB,kBAAkB,MAAM,CAAC,cAAc,CAAC,kBAAkB,WAAW,EAAE;gBACrE,KAAK;YACP;QACF;IACF;AACF;AACA,SAAS,aAAa,YAAY;IAChC,aAAa,SAAS,GAAG,EAAE;IAC3B,aAAa,SAAS,GAAG,EAAE;IAC3B,aAAa,OAAO,GAAG;AACzB;AAEA;;;;;;;;CAQC,GACD,SAAS,gBAAgB,MAAM,EAAE,YAAY,EAAE,KAAK;IAClD,MAAM,iBAAiB,wBAAwB,QAAQ;IACvD,MAAM,cAAc,CAAC,EACnB,WAAW,EACX,eAAe,EACf,WAAW,EACX,aAAa,EACb,IAAI,EACL;QACC,MAAM,UAAU,aAAa,OAAO;QACpC,MAAM,YAAY,aAAa,SAAS;QACxC,MAAM,YAAY,aAAa,SAAS;QACxC,MAAM,qBAAqB,YAAY,OAAO,OAAO,QAAQ,WAAW;QACxE,IAAI,YAAY,QAAQ,gBAAgB,oBAAoB;YAC1D;QACF;QACA,MAAM,cAAc,eAAe,iBAAiB,aAAa,SAAS,aAAa,eAAe;QACtG,IAAI,gBAAgB,cAAc;YAChC,IAAI,UAAU,MAAM,KAAK,GAAG;gBAC1B,aAAa,SAAS,GAAG,EAAE;gBAC3B,OAAO,eAAe,CAAC,6IAAA,CAAA,mBAAgB,EAAE;YAC3C;YACA,IAAI,YAAY,MAAM;gBACpB,UAAU,IAAI,CAAC;oBACb,GAAG,OAAO;gBACZ;gBACA,OAAO,eAAe,CAAC,6IAAA,CAAA,mBAAgB,EAAE;YAC3C;QACF,OAAO,IAAI,gBAAgB,2BAA2B;YACpD;QACF;QAEA,gBAAgB;QAChB,aAAa,OAAO,GAAG;YACrB;YACA;QACF;IACF;IACA,MAAM,aAAa,CAAA,GAAA,6KAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,eAAe,CAAC,6IAAA,CAAA,eAAY,EAAE;QACpE,KAAK,QAAQ;QACb,OAAO;IACT,GAAG,6IAAA,CAAA,0BAAuB,GAAG,OAAO,eAAe,CAAC,6IAAA,CAAA,eAAY,EAAE;QAChE,KAAK,QAAQ;QACb,OAAO;IACT,GAAG,6IAAA,CAAA,0BAAuB,GAAG,OAAO,eAAe,CAAC,6IAAA,CAAA,uBAAoB,EAAE;QACxE,aAAa;QACb,OAAO;IACT,GAAG,6IAAA,CAAA,0BAAuB,GAAG,OAAO,eAAe,CAAC,6IAAA,CAAA,wBAAqB,EAAE;QACzE,aAAa;QACb,OAAO,eAAe,CAAC,6IAAA,CAAA,mBAAgB,EAAE;QACzC,OAAO,eAAe,CAAC,6IAAA,CAAA,mBAAgB,EAAE;QACzC,OAAO;IACT,GAAG,6IAAA,CAAA,0BAAuB,GAAG,OAAO,sBAAsB,CAAC;IAC3D,OAAO;AACT;AAEA;;;CAGC,GACD,SAAS;IACP,OAAO;QACL,SAAS;QACT,WAAW,EAAE;QACb,WAAW,EAAE;IACf;AACF","ignoreList":[0]}},
    {"offset": {"line": 17416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17422, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/react/LexicalHistoryPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { createEmptyHistoryState, registerHistory } from '@lexical/history';\nexport { createEmptyHistoryState } from '@lexical/history';\nimport { useMemo, useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useHistory(editor, externalHistoryState, delay = 1000) {\n  const historyState = useMemo(() => externalHistoryState || createEmptyHistoryState(), [externalHistoryState]);\n  useEffect(() => {\n    return registerHistory(editor, historyState, delay);\n  }, [delay, editor, historyState]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction HistoryPlugin({\n  delay,\n  externalHistoryState\n}) {\n  const [editor] = useLexicalComposerContext();\n  useHistory(editor, externalHistoryState, delay);\n  return null;\n}\n\nexport { HistoryPlugin };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAKD;AAFA;AADA;;;;;AAKA;;;;;;CAMC,GAED,SAAS,WAAW,MAAM,EAAE,oBAAoB,EAAE,QAAQ,IAAI;IAC5D,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;4CAAE,IAAM,wBAAwB,CAAA,GAAA,iKAAA,CAAA,0BAAuB,AAAD;2CAAK;QAAC;KAAqB;IAC5G,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,OAAO,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,cAAc;QAC/C;+BAAG;QAAC;QAAO;QAAQ;KAAa;AAClC;AAEA;;;;;;CAMC,GAED,SAAS,cAAc,EACrB,KAAK,EACL,oBAAoB,EACrB;IACC,MAAM,CAAC,OAAO,GAAG,CAAA,GAAA,uKAAA,CAAA,4BAAyB,AAAD;IACzC,WAAW,QAAQ,sBAAsB;IACzC,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 17472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17478, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/%40lexical/react/LexicalOnChangePlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction OnChangePlugin({\n  ignoreHistoryMergeTagChange = true,\n  ignoreSelectionChange = false,\n  onChange\n}) {\n  const [editor] = useLexicalComposerContext();\n  useLayoutEffectImpl(() => {\n    if (onChange) {\n      return editor.registerUpdateListener(({\n        editorState,\n        dirtyElements,\n        dirtyLeaves,\n        prevEditorState,\n        tags\n      }) => {\n        if (ignoreSelectionChange && dirtyElements.size === 0 && dirtyLeaves.size === 0 || ignoreHistoryMergeTagChange && tags.has('history-merge') || prevEditorState.isEmpty()) {\n          return;\n        }\n        onChange(editorState, editor, tags);\n      });\n    }\n  }, [editor, ignoreHistoryMergeTagChange, ignoreSelectionChange, onChange]);\n  return null;\n}\n\nexport { OnChangePlugin };\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AAGD;AADA;;;AAGA;;;;;;CAMC,GAED,MAAM,cAAc,OAAO,WAAW,eAAe,OAAO,OAAO,QAAQ,KAAK,eAAe,OAAO,OAAO,QAAQ,CAAC,aAAa,KAAK;AAExI;;;;;;CAMC,GAGD,sDAAsD;AACtD,wCAAwC;AACxC,+CAA+C;AAC/C,MAAM,sBAAsB,cAAc,6JAAA,CAAA,kBAAe,GAAG,6JAAA,CAAA,YAAS;AAErE;;;;;;CAMC,GAED,SAAS,eAAe,EACtB,8BAA8B,IAAI,EAClC,wBAAwB,KAAK,EAC7B,QAAQ,EACT;IACC,MAAM,CAAC,OAAO,GAAG,CAAA,GAAA,uKAAA,CAAA,4BAAyB,AAAD;IACzC;8CAAoB;YAClB,IAAI,UAAU;gBACZ,OAAO,OAAO,sBAAsB;0DAAC,CAAC,EACpC,WAAW,EACX,aAAa,EACb,WAAW,EACX,eAAe,EACf,IAAI,EACL;wBACC,IAAI,yBAAyB,cAAc,IAAI,KAAK,KAAK,YAAY,IAAI,KAAK,KAAK,+BAA+B,KAAK,GAAG,CAAC,oBAAoB,gBAAgB,OAAO,IAAI;4BACxK;wBACF;wBACA,SAAS,aAAa,QAAQ;oBAChC;;YACF;QACF;6CAAG;QAAC;QAAQ;QAA6B;QAAuB;KAAS;IACzE,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 17538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17544, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/defaults/transitional.js"],"sourcesContent":["'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n"],"names":[],"mappings":";;;AAAA;uCAEe;IACb,mBAAmB;IACnB,mBAAmB;IACnB,qBAAqB;AACvB","ignoreList":[0]}},
    {"offset": {"line": 17553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17559, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/bind.js"],"sourcesContent":["'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AAEe,SAAS,KAAK,EAAE,EAAE,OAAO;IACtC,OAAO,SAAS;QACd,OAAO,GAAG,KAAK,CAAC,SAAS;IAC3B;AACF","ignoreList":[0]}},
    {"offset": {"line": 17568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 17574, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/utils.js"],"sourcesContent":["'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 18180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18186, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/null.js"],"sourcesContent":["// eslint-disable-next-line strict\nexport default null;\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;uCACnB","ignoreList":[0]}},
    {"offset": {"line": 18191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18197, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/AxiosError.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIA;;;;;;;;;;CAUC,GACD,SAAS,WAAW,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;IAC1D,MAAM,IAAI,CAAC,IAAI;IAEf,IAAI,MAAM,iBAAiB,EAAE;QAC3B,MAAM,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW;IAChD,OAAO;QACL,IAAI,CAAC,KAAK,GAAG,AAAC,IAAI,QAAS,KAAK;IAClC;IAEA,IAAI,CAAC,OAAO,GAAG;IACf,IAAI,CAAC,IAAI,GAAG;IACZ,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI;IACzB,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM;IAC/B,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO;IAClC,IAAI,UAAU;QACZ,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG,SAAS,MAAM,GAAG,SAAS,MAAM,GAAG;IACpD;AACF;AAEA,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,YAAY,OAAO;IAChC,QAAQ,SAAS;QACf,OAAO;YACL,WAAW;YACX,SAAS,IAAI,CAAC,OAAO;YACrB,MAAM,IAAI,CAAC,IAAI;YACf,YAAY;YACZ,aAAa,IAAI,CAAC,WAAW;YAC7B,QAAQ,IAAI,CAAC,MAAM;YACnB,UAAU;YACV,UAAU,IAAI,CAAC,QAAQ;YACvB,YAAY,IAAI,CAAC,UAAU;YAC3B,cAAc,IAAI,CAAC,YAAY;YAC/B,OAAO,IAAI,CAAC,KAAK;YACjB,QAAQ;YACR,QAAQ,wIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM;YACtC,MAAM,IAAI,CAAC,IAAI;YACf,QAAQ,IAAI,CAAC,MAAM;QACrB;IACF;AACF;AAEA,MAAM,YAAY,WAAW,SAAS;AACtC,MAAM,cAAc,CAAC;AAErB;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CAED,CAAC,OAAO,CAAC,CAAA;IACR,WAAW,CAAC,KAAK,GAAG;QAAC,OAAO;IAAI;AAClC;AAEA,OAAO,gBAAgB,CAAC,YAAY;AACpC,OAAO,cAAc,CAAC,WAAW,gBAAgB;IAAC,OAAO;AAAI;AAE7D,sCAAsC;AACtC,WAAW,IAAI,GAAG,CAAC,OAAO,MAAM,QAAQ,SAAS,UAAU;IACzD,MAAM,aAAa,OAAO,MAAM,CAAC;IAEjC,wIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,OAAO,YAAY,SAAS,OAAO,GAAG;QACvD,OAAO,QAAQ,MAAM,SAAS;IAChC,GAAG,CAAA;QACD,OAAO,SAAS;IAClB;IAEA,WAAW,IAAI,CAAC,YAAY,MAAM,OAAO,EAAE,MAAM,QAAQ,SAAS;IAElE,WAAW,KAAK,GAAG;IAEnB,WAAW,IAAI,GAAG,MAAM,IAAI;IAE5B,eAAe,OAAO,MAAM,CAAC,YAAY;IAEzC,OAAO;AACT;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 18290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18295, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/next/dist/compiled/buffer/index.js"],"sourcesContent":["(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 19817, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19823, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/toFormData.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20005, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20011, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/platform/common/utils.js"],"sourcesContent":["const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n"],"names":[],"mappings":";;;;;;;AAAA,MAAM,gBAAgB,OAAO,WAAW,eAAe,OAAO,aAAa;AAE3E,MAAM,aAAa,OAAO,cAAc,YAAY,aAAa;AAEjE;;;;;;;;;;;;;;;;CAgBC,GACD,MAAM,wBAAwB,iBAC5B,CAAC,CAAC,cAAc;IAAC;IAAe;IAAgB;CAAK,CAAC,OAAO,CAAC,WAAW,OAAO,IAAI,CAAC;AAEvF;;;;;;;;CAQC,GACD,MAAM,iCAAiC,CAAC;IACtC,OACE,OAAO,sBAAsB,eAC7B,oCAAoC;IACpC,gBAAgB,qBAChB,OAAO,KAAK,aAAa,KAAK;AAElC,CAAC;AAED,MAAM,SAAS,iBAAiB,OAAO,QAAQ,CAAC,IAAI,IAAI","ignoreList":[0]}},
    {"offset": {"line": 20055, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20061, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/AxiosURLSearchParams.js"],"sourcesContent":["'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIA;;;;;;;CAOC,GACD,SAAS,OAAO,GAAG;IACjB,MAAM,UAAU;QACd,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,OAAO;QACP,OAAO;IACT;IACA,OAAO,mBAAmB,KAAK,OAAO,CAAC,oBAAoB,SAAS,SAAS,KAAK;QAChF,OAAO,OAAO,CAAC,MAAM;IACvB;AACF;AAEA;;;;;;;CAOC,GACD,SAAS,qBAAqB,MAAM,EAAE,OAAO;IAC3C,IAAI,CAAC,MAAM,GAAG,EAAE;IAEhB,UAAU,CAAA,GAAA,wJAAA,CAAA,UAAU,AAAD,EAAE,QAAQ,IAAI,EAAE;AACrC;AAEA,MAAM,YAAY,qBAAqB,SAAS;AAEhD,UAAU,MAAM,GAAG,SAAS,OAAO,IAAI,EAAE,KAAK;IAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAAC;QAAM;KAAM;AAChC;AAEA,UAAU,QAAQ,GAAG,SAAS,SAAS,OAAO;IAC5C,MAAM,UAAU,UAAU,SAAS,KAAK;QACtC,OAAO,QAAQ,IAAI,CAAC,IAAI,EAAE,OAAO;IACnC,IAAI;IAEJ,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,KAAK,IAAI;QACvC,OAAO,QAAQ,IAAI,CAAC,EAAE,IAAI,MAAM,QAAQ,IAAI,CAAC,EAAE;IACjD,GAAG,IAAI,IAAI,CAAC;AACd;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 20115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20121, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js"],"sourcesContent":["'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n"],"names":[],"mappings":";;;AAEA;AAFA;;uCAGe,OAAO,oBAAoB,cAAc,kBAAkB,kKAAA,CAAA,UAAoB","ignoreList":[0]}},
    {"offset": {"line": 20128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20134, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/platform/browser/classes/FormData.js"],"sourcesContent":["'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n"],"names":[],"mappings":";;;AAAA;uCAEe,OAAO,aAAa,cAAc,WAAW","ignoreList":[0]}},
    {"offset": {"line": 20139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20145, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/platform/browser/classes/Blob.js"],"sourcesContent":["'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n"],"names":[],"mappings":";;;AAAA;uCAEe,OAAO,SAAS,cAAc,OAAO","ignoreList":[0]}},
    {"offset": {"line": 20150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20156, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/platform/browser/index.js"],"sourcesContent":["import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;uCAEe;IACb,WAAW;IACX,SAAS;QACP,iBAAA,oLAAA,CAAA,UAAe;QACf,UAAA,6KAAA,CAAA,UAAQ;QACR,MAAA,yKAAA,CAAA,UAAI;IACN;IACA,WAAW;QAAC;QAAQ;QAAS;QAAQ;QAAQ;QAAO;KAAO;AAC7D","ignoreList":[0]}},
    {"offset": {"line": 20181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20187, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/platform/index.js"],"sourcesContent":["import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n"],"names":[],"mappings":";;;AACA;AADA;;;uCAGe;IACb,GAAG,8JAAK;IACR,GAAG,+JAAA,CAAA,UAAQ;AACb","ignoreList":[0]}},
    {"offset": {"line": 20198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20204, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/toURLEncodedForm.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n"],"names":[],"mappings":";;;AAGA;AACA;AAFA;AAFA;;;;AAMe,SAAS,iBAAiB,IAAI,EAAE,OAAO;IACpD,OAAO,CAAA,GAAA,wJAAA,CAAA,UAAU,AAAD,EAAE,MAAM,IAAI,oJAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,eAAe,IAAI,OAAO,MAAM,CAAC;QAC5E,SAAS,SAAS,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO;YACzC,IAAI,oJAAA,CAAA,UAAQ,CAAC,MAAM,IAAI,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,QAAQ;gBAC5C,IAAI,CAAC,MAAM,CAAC,KAAK,MAAM,QAAQ,CAAC;gBAChC,OAAO;YACT;YAEA,OAAO,QAAQ,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE;QAC5C;IACF,GAAG;AACL","ignoreList":[0]}},
    {"offset": {"line": 20225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20231, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/formDataToJSON.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIA;;;;;;CAMC,GACD,SAAS,cAAc,IAAI;IACzB,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,OAAO,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,iBAAiB,MAAM,GAAG,CAAC,CAAA;QAC/C,OAAO,KAAK,CAAC,EAAE,KAAK,OAAO,KAAK,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE;IACtD;AACF;AAEA;;;;;;CAMC,GACD,SAAS,cAAc,GAAG;IACxB,MAAM,MAAM,CAAC;IACb,MAAM,OAAO,OAAO,IAAI,CAAC;IACzB,IAAI;IACJ,MAAM,MAAM,KAAK,MAAM;IACvB,IAAI;IACJ,IAAK,IAAI,GAAG,IAAI,KAAK,IAAK;QACxB,MAAM,IAAI,CAAC,EAAE;QACb,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI;IACrB;IACA,OAAO;AACT;AAEA;;;;;;CAMC,GACD,SAAS,eAAe,QAAQ;IAC9B,SAAS,UAAU,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK;QAC3C,IAAI,OAAO,IAAI,CAAC,QAAQ;QAExB,IAAI,SAAS,aAAa,OAAO;QAEjC,MAAM,eAAe,OAAO,QAAQ,CAAC,CAAC;QACtC,MAAM,SAAS,SAAS,KAAK,MAAM;QACnC,OAAO,CAAC,QAAQ,wIAAA,CAAA,UAAK,CAAC,OAAO,CAAC,UAAU,OAAO,MAAM,GAAG;QAExD,IAAI,QAAQ;YACV,IAAI,wIAAA,CAAA,UAAK,CAAC,UAAU,CAAC,QAAQ,OAAO;gBAClC,MAAM,CAAC,KAAK,GAAG;oBAAC,MAAM,CAAC,KAAK;oBAAE;iBAAM;YACtC,OAAO;gBACL,MAAM,CAAC,KAAK,GAAG;YACjB;YAEA,OAAO,CAAC;QACV;QAEA,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG;YAClD,MAAM,CAAC,KAAK,GAAG,EAAE;QACnB;QAEA,MAAM,SAAS,UAAU,MAAM,OAAO,MAAM,CAAC,KAAK,EAAE;QAEpD,IAAI,UAAU,wIAAA,CAAA,UAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG;YACzC,MAAM,CAAC,KAAK,GAAG,cAAc,MAAM,CAAC,KAAK;QAC3C;QAEA,OAAO,CAAC;IACV;IAEA,IAAI,wIAAA,CAAA,UAAK,CAAC,UAAU,CAAC,aAAa,wIAAA,CAAA,UAAK,CAAC,UAAU,CAAC,SAAS,OAAO,GAAG;QACpE,MAAM,MAAM,CAAC;QAEb,wIAAA,CAAA,UAAK,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM;YAClC,UAAU,cAAc,OAAO,OAAO,KAAK;QAC7C;QAEA,OAAO;IACT;IAEA,OAAO;AACT;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 20313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20319, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/defaults/index.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20471, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/env/data.js"],"sourcesContent":["export const VERSION = \"1.8.3\";"],"names":[],"mappings":";;;AAAO,MAAM,UAAU","ignoreList":[0]}},
    {"offset": {"line": 20475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20481, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/validator.js"],"sourcesContent":["'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n"],"names":[],"mappings":";;;AAGA;AADA;AAFA;;;AAKA,MAAM,aAAa,CAAC;AAEpB,sCAAsC;AACtC;IAAC;IAAU;IAAW;IAAU;IAAY;IAAU;CAAS,CAAC,OAAO,CAAC,CAAC,MAAM;IAC7E,UAAU,CAAC,KAAK,GAAG,SAAS,UAAU,KAAK;QACzC,OAAO,OAAO,UAAU,QAAQ,MAAM,CAAC,IAAI,IAAI,OAAO,GAAG,IAAI;IAC/D;AACF;AAEA,MAAM,qBAAqB,CAAC;AAE5B;;;;;;;;CAQC,GACD,WAAW,YAAY,GAAG,SAAS,aAAa,SAAS,EAAE,OAAO,EAAE,OAAO;IACzE,SAAS,cAAc,GAAG,EAAE,IAAI;QAC9B,OAAO,aAAa,8IAAA,CAAA,UAAO,GAAG,6BAA6B,MAAM,OAAO,OAAO,CAAC,UAAU,OAAO,UAAU,EAAE;IAC/G;IAEA,sCAAsC;IACtC,OAAO,CAAC,OAAO,KAAK;QAClB,IAAI,cAAc,OAAO;YACvB,MAAM,IAAI,qJAAA,CAAA,UAAU,CAClB,cAAc,KAAK,sBAAsB,CAAC,UAAU,SAAS,UAAU,EAAE,IACzE,qJAAA,CAAA,UAAU,CAAC,cAAc;QAE7B;QAEA,IAAI,WAAW,CAAC,kBAAkB,CAAC,IAAI,EAAE;YACvC,kBAAkB,CAAC,IAAI,GAAG;YAC1B,sCAAsC;YACtC,QAAQ,IAAI,CACV,cACE,KACA,iCAAiC,UAAU;QAGjD;QAEA,OAAO,YAAY,UAAU,OAAO,KAAK,QAAQ;IACnD;AACF;AAEA,WAAW,QAAQ,GAAG,SAAS,SAAS,eAAe;IACrD,OAAO,CAAC,OAAO;QACb,sCAAsC;QACtC,QAAQ,IAAI,CAAC,GAAG,IAAI,4BAA4B,EAAE,iBAAiB;QACnE,OAAO;IACT;AACF;AAEA;;;;;;;;CAQC,GAED,SAAS,cAAc,OAAO,EAAE,MAAM,EAAE,YAAY;IAClD,IAAI,OAAO,YAAY,UAAU;QAC/B,MAAM,IAAI,qJAAA,CAAA,UAAU,CAAC,6BAA6B,qJAAA,CAAA,UAAU,CAAC,oBAAoB;IACnF;IACA,MAAM,OAAO,OAAO,IAAI,CAAC;IACzB,IAAI,IAAI,KAAK,MAAM;IACnB,MAAO,MAAM,EAAG;QACd,MAAM,MAAM,IAAI,CAAC,EAAE;QACnB,MAAM,YAAY,MAAM,CAAC,IAAI;QAC7B,IAAI,WAAW;YACb,MAAM,QAAQ,OAAO,CAAC,IAAI;YAC1B,MAAM,SAAS,UAAU,aAAa,UAAU,OAAO,KAAK;YAC5D,IAAI,WAAW,MAAM;gBACnB,MAAM,IAAI,qJAAA,CAAA,UAAU,CAAC,YAAY,MAAM,cAAc,QAAQ,qJAAA,CAAA,UAAU,CAAC,oBAAoB;YAC9F;YACA;QACF;QACA,IAAI,iBAAiB,MAAM;YACzB,MAAM,IAAI,qJAAA,CAAA,UAAU,CAAC,oBAAoB,KAAK,qJAAA,CAAA,UAAU,CAAC,cAAc;QACzE;IACF;AACF;uCAEe;IACb;IACA;AACF","ignoreList":[0]}},
    {"offset": {"line": 20570, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20576, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/InterceptorManager.js"],"sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIA,MAAM;IACJ,aAAc;QACZ,IAAI,CAAC,QAAQ,GAAG,EAAE;IACpB;IAEA;;;;;;;GAOC,GACD,IAAI,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB;YACA;YACA,aAAa,UAAU,QAAQ,WAAW,GAAG;YAC7C,SAAS,UAAU,QAAQ,OAAO,GAAG;QACvC;QACA,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG;IAChC;IAEA;;;;;;GAMC,GACD,MAAM,EAAE,EAAE;QACR,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG;QACtB;IACF;IAEA;;;;GAIC,GACD,QAAQ;QACN,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,GAAG,EAAE;QACpB;IACF;IAEA;;;;;;;;;GASC,GACD,QAAQ,EAAE,EAAE;QACV,wIAAA,CAAA,UAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,eAAe,CAAC;YACpD,IAAI,MAAM,MAAM;gBACd,GAAG;YACL;QACF;IACF;AACF;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 20640, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20646, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/parseHeaders.js"],"sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIA,uDAAuD;AACvD,6DAA6D;AAC7D,MAAM,oBAAoB,wIAAA,CAAA,UAAK,CAAC,WAAW,CAAC;IAC1C;IAAO;IAAiB;IAAkB;IAAgB;IAC1D;IAAW;IAAQ;IAAQ;IAAqB;IAChD;IAAiB;IAAY;IAAgB;IAC7C;IAAW;IAAe;CAC3B;uCAgBc,CAAA;IACb,MAAM,SAAS,CAAC;IAChB,IAAI;IACJ,IAAI;IACJ,IAAI;IAEJ,cAAc,WAAW,KAAK,CAAC,MAAM,OAAO,CAAC,SAAS,OAAO,IAAI;QAC/D,IAAI,KAAK,OAAO,CAAC;QACjB,MAAM,KAAK,SAAS,CAAC,GAAG,GAAG,IAAI,GAAG,WAAW;QAC7C,MAAM,KAAK,SAAS,CAAC,IAAI,GAAG,IAAI;QAEhC,IAAI,CAAC,OAAQ,MAAM,CAAC,IAAI,IAAI,iBAAiB,CAAC,IAAI,EAAG;YACnD;QACF;QAEA,IAAI,QAAQ,cAAc;YACxB,IAAI,MAAM,CAAC,IAAI,EAAE;gBACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YACnB,OAAO;gBACL,MAAM,CAAC,IAAI,GAAG;oBAAC;iBAAI;YACrB;QACF,OAAO;YACL,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,OAAO,MAAM;QACzD;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 20699, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20705, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/AxiosHeaders.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 20944, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20950, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/mergeConfig.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21051, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/transformData.js"],"sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n"],"names":[],"mappings":";;;AAGA;AACA;AAFA;AAFA;;;;AAce,SAAS,cAAc,GAAG,EAAE,QAAQ;IACjD,MAAM,SAAS,IAAI,IAAI,oJAAA,CAAA,UAAQ;IAC/B,MAAM,UAAU,YAAY;IAC5B,MAAM,UAAU,uJAAA,CAAA,UAAY,CAAC,IAAI,CAAC,QAAQ,OAAO;IACjD,IAAI,OAAO,QAAQ,IAAI;IAEvB,wIAAA,CAAA,UAAK,CAAC,OAAO,CAAC,KAAK,SAAS,UAAU,EAAE;QACtC,OAAO,GAAG,IAAI,CAAC,QAAQ,MAAM,QAAQ,SAAS,IAAI,WAAW,SAAS,MAAM,GAAG;IACjF;IAEA,QAAQ,SAAS;IAEjB,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 21072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21078, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/speedometer.js"],"sourcesContent":["'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;;;CAKC,GACD,SAAS,YAAY,YAAY,EAAE,GAAG;IACpC,eAAe,gBAAgB;IAC/B,MAAM,QAAQ,IAAI,MAAM;IACxB,MAAM,aAAa,IAAI,MAAM;IAC7B,IAAI,OAAO;IACX,IAAI,OAAO;IACX,IAAI;IAEJ,MAAM,QAAQ,YAAY,MAAM;IAEhC,OAAO,SAAS,KAAK,WAAW;QAC9B,MAAM,MAAM,KAAK,GAAG;QAEpB,MAAM,YAAY,UAAU,CAAC,KAAK;QAElC,IAAI,CAAC,eAAe;YAClB,gBAAgB;QAClB;QAEA,KAAK,CAAC,KAAK,GAAG;QACd,UAAU,CAAC,KAAK,GAAG;QAEnB,IAAI,IAAI;QACR,IAAI,aAAa;QAEjB,MAAO,MAAM,KAAM;YACjB,cAAc,KAAK,CAAC,IAAI;YACxB,IAAI,IAAI;QACV;QAEA,OAAO,CAAC,OAAO,CAAC,IAAI;QAEpB,IAAI,SAAS,MAAM;YACjB,OAAO,CAAC,OAAO,CAAC,IAAI;QACtB;QAEA,IAAI,MAAM,gBAAgB,KAAK;YAC7B;QACF;QAEA,MAAM,SAAS,aAAa,MAAM;QAElC,OAAO,SAAS,KAAK,KAAK,CAAC,aAAa,OAAO,UAAU;IAC3D;AACF;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 21121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21127, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/throttle.js"],"sourcesContent":["/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;AACD,SAAS,SAAS,EAAE,EAAE,IAAI;IACxB,IAAI,YAAY;IAChB,IAAI,YAAY,OAAO;IACvB,IAAI;IACJ,IAAI;IAEJ,MAAM,SAAS,CAAC,MAAM,MAAM,KAAK,GAAG,EAAE;QACpC,YAAY;QACZ,WAAW;QACX,IAAI,OAAO;YACT,aAAa;YACb,QAAQ;QACV;QACA,GAAG,KAAK,CAAC,MAAM;IACjB;IAEA,MAAM,YAAY,CAAC,GAAG;QACpB,MAAM,MAAM,KAAK,GAAG;QACpB,MAAM,SAAS,MAAM;QACrB,IAAK,UAAU,WAAW;YACxB,OAAO,MAAM;QACf,OAAO;YACL,WAAW;YACX,IAAI,CAAC,OAAO;gBACV,QAAQ,WAAW;oBACjB,QAAQ;oBACR,OAAO;gBACT,GAAG,YAAY;YACjB;QACF;IACF;IAEA,MAAM,QAAQ,IAAM,YAAY,OAAO;IAEvC,OAAO;QAAC;QAAW;KAAM;AAC3B;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 21171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21177, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/progressEventReducer.js"],"sourcesContent":["import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,MAAM,uBAAuB,CAAC,UAAU,kBAAkB,OAAO,CAAC;IACvE,IAAI,gBAAgB;IACpB,MAAM,eAAe,CAAA,GAAA,yJAAA,CAAA,UAAW,AAAD,EAAE,IAAI;IAErC,OAAO,CAAA,GAAA,sJAAA,CAAA,UAAQ,AAAD,EAAE,CAAA;QACd,MAAM,SAAS,EAAE,MAAM;QACvB,MAAM,QAAQ,EAAE,gBAAgB,GAAG,EAAE,KAAK,GAAG;QAC7C,MAAM,gBAAgB,SAAS;QAC/B,MAAM,OAAO,aAAa;QAC1B,MAAM,UAAU,UAAU;QAE1B,gBAAgB;QAEhB,MAAM,OAAO;YACX;YACA;YACA,UAAU,QAAS,SAAS,QAAS;YACrC,OAAO;YACP,MAAM,OAAO,OAAO;YACpB,WAAW,QAAQ,SAAS,UAAU,CAAC,QAAQ,MAAM,IAAI,OAAO;YAChE,OAAO;YACP,kBAAkB,SAAS;YAC3B,CAAC,mBAAmB,aAAa,SAAS,EAAE;QAC9C;QAEA,SAAS;IACX,GAAG;AACL;AAEO,MAAM,yBAAyB,CAAC,OAAO;IAC5C,MAAM,mBAAmB,SAAS;IAElC,OAAO;QAAC,CAAC,SAAW,SAAS,CAAC,EAAE,CAAC;gBAC/B;gBACA;gBACA;YACF;QAAI,SAAS,CAAC,EAAE;KAAC;AACnB;AAEO,MAAM,iBAAiB,CAAC,KAAO,CAAC,GAAG,OAAS,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,IAAM,MAAM","ignoreList":[0]}},
    {"offset": {"line": 21224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21230, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/cancel/CanceledError.js"],"sourcesContent":["'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n"],"names":[],"mappings":";;;AAGA;AADA;AAFA;;;AAKA;;;;;;;;CAQC,GACD,SAAS,cAAc,OAAO,EAAE,MAAM,EAAE,OAAO;IAC7C,6CAA6C;IAC7C,qJAAA,CAAA,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,OAAO,aAAa,SAAS,qJAAA,CAAA,UAAU,CAAC,YAAY,EAAE,QAAQ;IAC/F,IAAI,CAAC,IAAI,GAAG;AACd;AAEA,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,eAAe,qJAAA,CAAA,UAAU,EAAE;IACxC,YAAY;AACd;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 21255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21261, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/parseProtocol.js"],"sourcesContent":["'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n"],"names":[],"mappings":";;;AAAA;AAEe,SAAS,cAAc,GAAG;IACvC,MAAM,QAAQ,4BAA4B,IAAI,CAAC;IAC/C,OAAO,SAAS,KAAK,CAAC,EAAE,IAAI;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 21269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21275, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/buildURL.js"],"sourcesContent":["'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAKA;;;;;;;CAOC,GACD,SAAS,OAAO,GAAG;IACjB,OAAO,mBAAmB,KACxB,OAAO,CAAC,SAAS,KACjB,OAAO,CAAC,QAAQ,KAChB,OAAO,CAAC,SAAS,KACjB,OAAO,CAAC,QAAQ,KAChB,OAAO,CAAC,SAAS,KACjB,OAAO,CAAC,SAAS;AACrB;AAWe,SAAS,SAAS,GAAG,EAAE,MAAM,EAAE,OAAO;IACnD,4BAA4B,GAC5B,IAAI,CAAC,QAAQ;QACX,OAAO;IACT;IAEA,MAAM,UAAU,WAAW,QAAQ,MAAM,IAAI;IAE7C,IAAI,wIAAA,CAAA,UAAK,CAAC,UAAU,CAAC,UAAU;QAC7B,UAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,cAAc,WAAW,QAAQ,SAAS;IAEhD,IAAI;IAEJ,IAAI,aAAa;QACf,mBAAmB,YAAY,QAAQ;IACzC,OAAO;QACL,mBAAmB,wIAAA,CAAA,UAAK,CAAC,iBAAiB,CAAC,UACzC,OAAO,QAAQ,KACf,IAAI,kKAAA,CAAA,UAAoB,CAAC,QAAQ,SAAS,QAAQ,CAAC;IACvD;IAEA,IAAI,kBAAkB;QACpB,MAAM,gBAAgB,IAAI,OAAO,CAAC;QAElC,IAAI,kBAAkB,CAAC,GAAG;YACxB,MAAM,IAAI,KAAK,CAAC,GAAG;QACrB;QACA,OAAO,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM,GAAG,IAAI;IACjD;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 21319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21325, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/isAbsoluteURL.js"],"sourcesContent":["'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n"],"names":[],"mappings":";;;AAAA;AASe,SAAS,cAAc,GAAG;IACvC,gGAAgG;IAChG,gGAAgG;IAChG,kEAAkE;IAClE,OAAO,8BAA8B,IAAI,CAAC;AAC5C","ignoreList":[0]}},
    {"offset": {"line": 21335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21341, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/combineURLs.js"],"sourcesContent":["'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n"],"names":[],"mappings":";;;AAAA;AAUe,SAAS,YAAY,OAAO,EAAE,WAAW;IACtD,OAAO,cACH,QAAQ,OAAO,CAAC,UAAU,MAAM,MAAM,YAAY,OAAO,CAAC,QAAQ,MAClE;AACN","ignoreList":[0]}},
    {"offset": {"line": 21348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21354, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/buildFullPath.js"],"sourcesContent":["'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && isRelativeUrl || allowAbsoluteUrls == false) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAee,SAAS,cAAc,OAAO,EAAE,YAAY,EAAE,iBAAiB;IAC5E,IAAI,gBAAgB,CAAC,CAAA,GAAA,2JAAA,CAAA,UAAa,AAAD,EAAE;IACnC,IAAI,WAAW,iBAAiB,qBAAqB,OAAO;QAC1D,OAAO,CAAA,GAAA,yJAAA,CAAA,UAAW,AAAD,EAAE,SAAS;IAC9B;IACA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 21369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21375, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/isURLSameOrigin.js"],"sourcesContent":["import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n"],"names":[],"mappings":";;;AAAA;;uCAEe,oJAAA,CAAA,UAAQ,CAAC,qBAAqB,GAAG,CAAC,CAAC,QAAQ,SAAW,CAAC;QACpE,MAAM,IAAI,IAAI,KAAK,oJAAA,CAAA,UAAQ,CAAC,MAAM;QAElC,OACE,OAAO,QAAQ,KAAK,IAAI,QAAQ,IAChC,OAAO,IAAI,KAAK,IAAI,IAAI,IACxB,CAAC,UAAU,OAAO,IAAI,KAAK,IAAI,IAAI;IAEvC,CAAC,EACC,IAAI,IAAI,oJAAA,CAAA,UAAQ,CAAC,MAAM,GACvB,oJAAA,CAAA,UAAQ,CAAC,SAAS,IAAI,kBAAkB,IAAI,CAAC,oJAAA,CAAA,UAAQ,CAAC,SAAS,CAAC,SAAS,KACvE,IAAM","ignoreList":[0]}},
    {"offset": {"line": 21384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21390, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/cookies.js"],"sourcesContent":["import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n"],"names":[],"mappings":";;;AACA;AADA;;;uCAGe,oJAAA,CAAA,UAAQ,CAAC,qBAAqB,GAE3C,gDAAgD;AAChD;IACE,OAAM,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM;QAC9C,MAAM,SAAS;YAAC,OAAO,MAAM,mBAAmB;SAAO;QAEvD,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,YAAY,OAAO,IAAI,CAAC,aAAa,IAAI,KAAK,SAAS,WAAW;QAEjF,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,SAAS,OAAO,IAAI,CAAC,UAAU;QAE9C,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,WAAW,OAAO,IAAI,CAAC,YAAY;QAElD,WAAW,QAAQ,OAAO,IAAI,CAAC;QAE/B,SAAS,MAAM,GAAG,OAAO,IAAI,CAAC;IAChC;IAEA,MAAK,IAAI;QACP,MAAM,QAAQ,SAAS,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,eAAe,OAAO;QACrE,OAAQ,QAAQ,mBAAmB,KAAK,CAAC,EAAE,IAAI;IACjD;IAEA,QAAO,IAAI;QACT,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,GAAG,KAAK;IACpC;AACF,IAIA,4EAA4E;AAC5E;IACE,UAAS;IACT;QACE,OAAO;IACT;IACA,WAAU;AACZ","ignoreList":[0]}},
    {"offset": {"line": 21424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21430, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/resolveConfig.js"],"sourcesContent":["import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n"],"names":[],"mappings":";;;AAKA;AACA;AACA;AAHA;AAHA;AADA;AAEA;AACA;;;;;;;;;uCAMe,CAAC;IACd,MAAM,YAAY,CAAA,GAAA,sJAAA,CAAA,UAAW,AAAD,EAAE,CAAC,GAAG;IAElC,IAAI,EAAC,IAAI,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc,EAAE,OAAO,EAAE,IAAI,EAAC,GAAG;IAE3E,UAAU,OAAO,GAAG,UAAU,uJAAA,CAAA,UAAY,CAAC,IAAI,CAAC;IAEhD,UAAU,GAAG,GAAG,CAAA,GAAA,sJAAA,CAAA,UAAQ,AAAD,EAAE,CAAA,GAAA,wJAAA,CAAA,UAAa,AAAD,EAAE,UAAU,OAAO,EAAE,UAAU,GAAG,EAAE,UAAU,iBAAiB,GAAG,OAAO,MAAM,EAAE,OAAO,gBAAgB;IAE7I,4BAA4B;IAC5B,IAAI,MAAM;QACR,QAAQ,GAAG,CAAC,iBAAiB,WAC3B,KAAK,CAAC,KAAK,QAAQ,IAAI,EAAE,IAAI,MAAM,CAAC,KAAK,QAAQ,GAAG,SAAS,mBAAmB,KAAK,QAAQ,KAAK,EAAE;IAExG;IAEA,IAAI;IAEJ,IAAI,wIAAA,CAAA,UAAK,CAAC,UAAU,CAAC,OAAO;QAC1B,IAAI,oJAAA,CAAA,UAAQ,CAAC,qBAAqB,IAAI,oJAAA,CAAA,UAAQ,CAAC,8BAA8B,EAAE;YAC7E,QAAQ,cAAc,CAAC,YAAY,yBAAyB;QAC9D,OAAO,IAAI,CAAC,cAAc,QAAQ,cAAc,EAAE,MAAM,OAAO;YAC7D,0EAA0E;YAC1E,MAAM,CAAC,MAAM,GAAG,OAAO,GAAG,cAAc,YAAY,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,QAAS,MAAM,IAAI,IAAI,MAAM,CAAC,WAAW,EAAE;YAC9G,QAAQ,cAAc,CAAC;gBAAC,QAAQ;mBAA0B;aAAO,CAAC,IAAI,CAAC;QACzE;IACF;IAEA,kBAAkB;IAClB,kEAAkE;IAClE,8DAA8D;IAE9D,IAAI,oJAAA,CAAA,UAAQ,CAAC,qBAAqB,EAAE;QAClC,iBAAiB,wIAAA,CAAA,UAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC,gBAAgB,cAAc,UAAU;QAE7F,IAAI,iBAAkB,kBAAkB,SAAS,CAAA,GAAA,6JAAA,CAAA,UAAe,AAAD,EAAE,UAAU,GAAG,GAAI;YAChF,kBAAkB;YAClB,MAAM,YAAY,kBAAkB,kBAAkB,qJAAA,CAAA,UAAO,CAAC,IAAI,CAAC;YAEnE,IAAI,WAAW;gBACb,QAAQ,GAAG,CAAC,gBAAgB;YAC9B;QACF;IACF;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 21486, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21492, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/settle.js"],"sourcesContent":["'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAae,SAAS,OAAO,OAAO,EAAE,MAAM,EAAE,QAAQ;IACtD,MAAM,iBAAiB,SAAS,MAAM,CAAC,cAAc;IACrD,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC,kBAAkB,eAAe,SAAS,MAAM,GAAG;QAC1E,QAAQ;IACV,OAAO;QACL,OAAO,IAAI,qJAAA,CAAA,UAAU,CACnB,qCAAqC,SAAS,MAAM,EACpD;YAAC,qJAAA,CAAA,UAAU,CAAC,eAAe;YAAE,qJAAA,CAAA,UAAU,CAAC,gBAAgB;SAAC,CAAC,KAAK,KAAK,CAAC,SAAS,MAAM,GAAG,OAAO,EAAE,EAChG,SAAS,MAAM,EACf,SAAS,OAAO,EAChB;IAEJ;AACF","ignoreList":[0]}},
    {"offset": {"line": 21509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21515, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21684, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21690, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/composeSignals.js"],"sourcesContent":["import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n"],"names":[],"mappings":";;;AACA;AADA;AAEA;;;;AAEA,MAAM,iBAAiB,CAAC,SAAS;IAC/B,MAAM,EAAC,MAAM,EAAC,GAAI,UAAU,UAAU,QAAQ,MAAM,CAAC,WAAW,EAAE;IAElE,IAAI,WAAW,QAAQ;QACrB,IAAI,aAAa,IAAI;QAErB,IAAI;QAEJ,MAAM,UAAU,SAAU,MAAM;YAC9B,IAAI,CAAC,SAAS;gBACZ,UAAU;gBACV;gBACA,MAAM,MAAM,kBAAkB,QAAQ,SAAS,IAAI,CAAC,MAAM;gBAC1D,WAAW,KAAK,CAAC,eAAe,qJAAA,CAAA,UAAU,GAAG,MAAM,IAAI,0JAAA,CAAA,UAAa,CAAC,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC5G;QACF;QAEA,IAAI,QAAQ,WAAW,WAAW;YAChC,QAAQ;YACR,QAAQ,IAAI,qJAAA,CAAA,UAAU,CAAC,CAAC,QAAQ,EAAE,QAAQ,eAAe,CAAC,EAAE,qJAAA,CAAA,UAAU,CAAC,SAAS;QAClF,GAAG;QAEH,MAAM,cAAc;YAClB,IAAI,SAAS;gBACX,SAAS,aAAa;gBACtB,QAAQ;gBACR,QAAQ,OAAO,CAAC,CAAA;oBACd,OAAO,WAAW,GAAG,OAAO,WAAW,CAAC,WAAW,OAAO,mBAAmB,CAAC,SAAS;gBACzF;gBACA,UAAU;YACZ;QACF;QAEA,QAAQ,OAAO,CAAC,CAAC,SAAW,OAAO,gBAAgB,CAAC,SAAS;QAE7D,MAAM,EAAC,MAAM,EAAC,GAAG;QAEjB,OAAO,WAAW,GAAG,IAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC;QAEtC,OAAO;IACT;AACF;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 21733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21739, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/trackStream.js"],"sourcesContent":["\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n"],"names":[],"mappings":";;;;;AACO,MAAM,cAAc,UAAW,KAAK,EAAE,SAAS;IACpD,IAAI,MAAM,MAAM,UAAU;IAE1B,IAAI,CAAC,aAAa,MAAM,WAAW;QACjC,MAAM;QACN;IACF;IAEA,IAAI,MAAM;IACV,IAAI;IAEJ,MAAO,MAAM,IAAK;QAChB,MAAM,MAAM;QACZ,MAAM,MAAM,KAAK,CAAC,KAAK;QACvB,MAAM;IACR;AACF;AAEO,MAAM,YAAY,gBAAiB,QAAQ,EAAE,SAAS;IAC3D,WAAW,MAAM,SAAS,WAAW,UAAW;QAC9C,OAAO,YAAY,OAAO;IAC5B;AACF;AAEA,MAAM,aAAa,gBAAiB,MAAM;IACxC,IAAI,MAAM,CAAC,OAAO,aAAa,CAAC,EAAE;QAChC,OAAO;QACP;IACF;IAEA,MAAM,SAAS,OAAO,SAAS;IAC/B,IAAI;QACF,OAAS;YACP,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,OAAO,IAAI;YACvC,IAAI,MAAM;gBACR;YACF;YACA,MAAM;QACR;IACF,SAAU;QACR,MAAM,OAAO,MAAM;IACrB;AACF;AAEO,MAAM,cAAc,CAAC,QAAQ,WAAW,YAAY;IACzD,MAAM,WAAW,UAAU,QAAQ;IAEnC,IAAI,QAAQ;IACZ,IAAI;IACJ,IAAI,YAAY,CAAC;QACf,IAAI,CAAC,MAAM;YACT,OAAO;YACP,YAAY,SAAS;QACvB;IACF;IAEA,OAAO,IAAI,eAAe;QACxB,MAAM,MAAK,UAAU;YACnB,IAAI;gBACF,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,SAAS,IAAI;gBAEzC,IAAI,MAAM;oBACT;oBACC,WAAW,KAAK;oBAChB;gBACF;gBAEA,IAAI,MAAM,MAAM,UAAU;gBAC1B,IAAI,YAAY;oBACd,IAAI,cAAc,SAAS;oBAC3B,WAAW;gBACb;gBACA,WAAW,OAAO,CAAC,IAAI,WAAW;YACpC,EAAE,OAAO,KAAK;gBACZ,UAAU;gBACV,MAAM;YACR;QACF;QACA,QAAO,MAAM;YACX,UAAU;YACV,OAAO,SAAS,MAAM;QACxB;IACF,GAAG;QACD,eAAe;IACjB;AACF","ignoreList":[0]}},
    {"offset": {"line": 21819, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21825, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/adapters/fetch.js"],"sourcesContent":["import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 21999, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22005, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/adapters/adapters.js"],"sourcesContent":["import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AAHA;AAIA;;;;;;AAEA,MAAM,gBAAgB;IACpB,MAAM,kJAAA,CAAA,UAAW;IACjB,KAAK,kJAAA,CAAA,UAAU;IACf,OAAO,oJAAA,CAAA,UAAY;AACrB;AAEA,wIAAA,CAAA,UAAK,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI;IAChC,IAAI,IAAI;QACN,IAAI;YACF,OAAO,cAAc,CAAC,IAAI,QAAQ;gBAAC;YAAK;QAC1C,EAAE,OAAO,GAAG;QACV,oCAAoC;QACtC;QACA,OAAO,cAAc,CAAC,IAAI,eAAe;YAAC;QAAK;IACjD;AACF;AAEA,MAAM,eAAe,CAAC,SAAW,CAAC,EAAE,EAAE,QAAQ;AAE9C,MAAM,mBAAmB,CAAC,UAAY,wIAAA,CAAA,UAAK,CAAC,UAAU,CAAC,YAAY,YAAY,QAAQ,YAAY;uCAEpF;IACb,YAAY,CAAC;QACX,WAAW,wIAAA,CAAA,UAAK,CAAC,OAAO,CAAC,YAAY,WAAW;YAAC;SAAS;QAE1D,MAAM,EAAC,MAAM,EAAC,GAAG;QACjB,IAAI;QACJ,IAAI;QAEJ,MAAM,kBAAkB,CAAC;QAEzB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;YAC/B,gBAAgB,QAAQ,CAAC,EAAE;YAC3B,IAAI;YAEJ,UAAU;YAEV,IAAI,CAAC,iBAAiB,gBAAgB;gBACpC,UAAU,aAAa,CAAC,CAAC,KAAK,OAAO,cAAc,EAAE,WAAW,GAAG;gBAEnE,IAAI,YAAY,WAAW;oBACzB,MAAM,IAAI,qJAAA,CAAA,UAAU,CAAC,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;gBAChD;YACF;YAEA,IAAI,SAAS;gBACX;YACF;YAEA,eAAe,CAAC,MAAM,MAAM,EAAE,GAAG;QACnC;QAEA,IAAI,CAAC,SAAS;YAEZ,MAAM,UAAU,OAAO,OAAO,CAAC,iBAC5B,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,GAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GACpC,CAAC,UAAU,QAAQ,wCAAwC,+BAA+B;YAG9F,IAAI,IAAI,SACL,QAAQ,MAAM,GAAG,IAAI,cAAc,QAAQ,GAAG,CAAC,cAAc,IAAI,CAAC,QAAQ,MAAM,aAAa,OAAO,CAAC,EAAE,IACxG;YAEF,MAAM,IAAI,qJAAA,CAAA,UAAU,CAClB,CAAC,qDAAqD,CAAC,GAAG,GAC1D;QAEJ;QAEA,OAAO;IACT;IACA,UAAU;AACZ","ignoreList":[0]}},
    {"offset": {"line": 22072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22078, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/cancel/isCancel.js"],"sourcesContent":["'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n"],"names":[],"mappings":";;;AAAA;AAEe,SAAS,SAAS,KAAK;IACpC,OAAO,CAAC,CAAC,CAAC,SAAS,MAAM,UAAU;AACrC","ignoreList":[0]}},
    {"offset": {"line": 22085, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22091, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/dispatchRequest.js"],"sourcesContent":["'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n"],"names":[],"mappings":";;;AAMA;AAJA;AAKA;AAHA;AADA;AAEA;AALA;;;;;;;AASA;;;;;;CAMC,GACD,SAAS,6BAA6B,MAAM;IAC1C,IAAI,OAAO,WAAW,EAAE;QACtB,OAAO,WAAW,CAAC,gBAAgB;IACrC;IAEA,IAAI,OAAO,MAAM,IAAI,OAAO,MAAM,CAAC,OAAO,EAAE;QAC1C,MAAM,IAAI,0JAAA,CAAA,UAAa,CAAC,MAAM;IAChC;AACF;AASe,SAAS,gBAAgB,MAAM;IAC5C,6BAA6B;IAE7B,OAAO,OAAO,GAAG,uJAAA,CAAA,UAAY,CAAC,IAAI,CAAC,OAAO,OAAO;IAEjD,yBAAyB;IACzB,OAAO,IAAI,GAAG,wJAAA,CAAA,UAAa,CAAC,IAAI,CAC9B,QACA,OAAO,gBAAgB;IAGzB,IAAI;QAAC;QAAQ;QAAO;KAAQ,CAAC,OAAO,CAAC,OAAO,MAAM,MAAM,CAAC,GAAG;QAC1D,OAAO,OAAO,CAAC,cAAc,CAAC,qCAAqC;IACrE;IAEA,MAAM,UAAU,uJAAA,CAAA,UAAQ,CAAC,UAAU,CAAC,OAAO,OAAO,IAAI,oJAAA,CAAA,UAAQ,CAAC,OAAO;IAEtE,OAAO,QAAQ,QAAQ,IAAI,CAAC,SAAS,oBAAoB,QAAQ;QAC/D,6BAA6B;QAE7B,0BAA0B;QAC1B,SAAS,IAAI,GAAG,wJAAA,CAAA,UAAa,CAAC,IAAI,CAChC,QACA,OAAO,iBAAiB,EACxB;QAGF,SAAS,OAAO,GAAG,uJAAA,CAAA,UAAY,CAAC,IAAI,CAAC,SAAS,OAAO;QAErD,OAAO;IACT,GAAG,SAAS,mBAAmB,MAAM;QACnC,IAAI,CAAC,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE,SAAS;YACrB,6BAA6B;YAE7B,0BAA0B;YAC1B,IAAI,UAAU,OAAO,QAAQ,EAAE;gBAC7B,OAAO,QAAQ,CAAC,IAAI,GAAG,wJAAA,CAAA,UAAa,CAAC,IAAI,CACvC,QACA,OAAO,iBAAiB,EACxB,OAAO,QAAQ;gBAEjB,OAAO,QAAQ,CAAC,OAAO,GAAG,uJAAA,CAAA,UAAY,CAAC,IAAI,CAAC,OAAO,QAAQ,CAAC,OAAO;YACrE;QACF;QAEA,OAAO,QAAQ,MAAM,CAAC;IACxB;AACF","ignoreList":[0]}},
    {"offset": {"line": 22152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22158, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/core/Axios.js"],"sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22384, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/cancel/CancelToken.js"],"sourcesContent":["'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIA;;;;;;CAMC,GACD,MAAM;IACJ,YAAY,QAAQ,CAAE;QACpB,IAAI,OAAO,aAAa,YAAY;YAClC,MAAM,IAAI,UAAU;QACtB;QAEA,IAAI;QAEJ,IAAI,CAAC,OAAO,GAAG,IAAI,QAAQ,SAAS,gBAAgB,OAAO;YACzD,iBAAiB;QACnB;QAEA,MAAM,QAAQ,IAAI;QAElB,sCAAsC;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YAChB,IAAI,CAAC,MAAM,UAAU,EAAE;YAEvB,IAAI,IAAI,MAAM,UAAU,CAAC,MAAM;YAE/B,MAAO,MAAM,EAAG;gBACd,MAAM,UAAU,CAAC,EAAE,CAAC;YACtB;YACA,MAAM,UAAU,GAAG;QACrB;QAEA,sCAAsC;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAA;YAClB,IAAI;YACJ,sCAAsC;YACtC,MAAM,UAAU,IAAI,QAAQ,CAAA;gBAC1B,MAAM,SAAS,CAAC;gBAChB,WAAW;YACb,GAAG,IAAI,CAAC;YAER,QAAQ,MAAM,GAAG,SAAS;gBACxB,MAAM,WAAW,CAAC;YACpB;YAEA,OAAO;QACT;QAEA,SAAS,SAAS,OAAO,OAAO,EAAE,MAAM,EAAE,OAAO;YAC/C,IAAI,MAAM,MAAM,EAAE;gBAChB,0CAA0C;gBAC1C;YACF;YAEA,MAAM,MAAM,GAAG,IAAI,0JAAA,CAAA,UAAa,CAAC,SAAS,QAAQ;YAClD,eAAe,MAAM,MAAM;QAC7B;IACF;IAEA;;GAEC,GACD,mBAAmB;QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,IAAI,CAAC,MAAM;QACnB;IACF;IAEA;;GAEC,GAED,UAAU,QAAQ,EAAE;QAClB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,SAAS,IAAI,CAAC,MAAM;YACpB;QACF;QAEA,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACvB,OAAO;YACL,IAAI,CAAC,UAAU,GAAG;gBAAC;aAAS;QAC9B;IACF;IAEA;;GAEC,GAED,YAAY,QAAQ,EAAE;QACpB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB;QACF;QACA,MAAM,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QACtC,IAAI,UAAU,CAAC,GAAG;YAChB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO;QAChC;IACF;IAEA,gBAAgB;QACd,MAAM,aAAa,IAAI;QAEvB,MAAM,QAAQ,CAAC;YACb,WAAW,KAAK,CAAC;QACnB;QAEA,IAAI,CAAC,SAAS,CAAC;QAEf,WAAW,MAAM,CAAC,WAAW,GAAG,IAAM,IAAI,CAAC,WAAW,CAAC;QAEvD,OAAO,WAAW,MAAM;IAC1B;IAEA;;;GAGC,GACD,OAAO,SAAS;QACd,IAAI;QACJ,MAAM,QAAQ,IAAI,YAAY,SAAS,SAAS,CAAC;YAC/C,SAAS;QACX;QACA,OAAO;YACL;YACA;QACF;IACF;AACF;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 22494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22500, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/spread.js"],"sourcesContent":["'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AAuBe,SAAS,OAAO,QAAQ;IACrC,OAAO,SAAS,KAAK,GAAG;QACtB,OAAO,SAAS,KAAK,CAAC,MAAM;IAC9B;AACF","ignoreList":[0]}},
    {"offset": {"line": 22509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22515, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/isAxiosError.js"],"sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAWe,SAAS,aAAa,OAAO;IAC1C,OAAO,wIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,YAAa,QAAQ,YAAY,KAAK;AAC9D","ignoreList":[0]}},
    {"offset": {"line": 22524, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22530, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/helpers/HttpStatusCode.js"],"sourcesContent":["const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n"],"names":[],"mappings":";;;AAAA,MAAM,iBAAiB;IACrB,UAAU;IACV,oBAAoB;IACpB,YAAY;IACZ,YAAY;IACZ,IAAI;IACJ,SAAS;IACT,UAAU;IACV,6BAA6B;IAC7B,WAAW;IACX,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,iBAAiB;IACjB,QAAQ;IACR,iBAAiB;IACjB,kBAAkB;IAClB,OAAO;IACP,UAAU;IACV,aAAa;IACb,UAAU;IACV,QAAQ;IACR,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,cAAc;IACd,iBAAiB;IACjB,WAAW;IACX,UAAU;IACV,kBAAkB;IAClB,eAAe;IACf,6BAA6B;IAC7B,gBAAgB;IAChB,UAAU;IACV,MAAM;IACN,gBAAgB;IAChB,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;IACZ,sBAAsB;IACtB,qBAAqB;IACrB,mBAAmB;IACnB,WAAW;IACX,oBAAoB;IACpB,qBAAqB;IACrB,QAAQ;IACR,kBAAkB;IAClB,UAAU;IACV,iBAAiB;IACjB,sBAAsB;IACtB,iBAAiB;IACjB,6BAA6B;IAC7B,4BAA4B;IAC5B,qBAAqB;IACrB,gBAAgB;IAChB,YAAY;IACZ,oBAAoB;IACpB,gBAAgB;IAChB,yBAAyB;IACzB,uBAAuB;IACvB,qBAAqB;IACrB,cAAc;IACd,aAAa;IACb,+BAA+B;AACjC;AAEA,OAAO,OAAO,CAAC,gBAAgB,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;IAClD,cAAc,CAAC,MAAM,GAAG;AAC1B;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 22602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22608, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/axios/lib/axios.js"],"sourcesContent":["'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n"],"names":[],"mappings":";;;AAMA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAWA;AATA;AALA;AAeA;AACA;AAfA;AAHA;;;;;;;;;;;;;;;;;;AAoBA;;;;;;CAMC,GACD,SAAS,eAAe,aAAa;IACnC,MAAM,UAAU,IAAI,gJAAA,CAAA,UAAK,CAAC;IAC1B,MAAM,WAAW,CAAA,GAAA,kJAAA,CAAA,UAAI,AAAD,EAAE,gJAAA,CAAA,UAAK,CAAC,SAAS,CAAC,OAAO,EAAE;IAE/C,mCAAmC;IACnC,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,UAAU,gJAAA,CAAA,UAAK,CAAC,SAAS,EAAE,SAAS;QAAC,YAAY;IAAI;IAElE,2BAA2B;IAC3B,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,UAAU,SAAS,MAAM;QAAC,YAAY;IAAI;IAEvD,qCAAqC;IACrC,SAAS,MAAM,GAAG,SAAS,OAAO,cAAc;QAC9C,OAAO,eAAe,CAAA,GAAA,sJAAA,CAAA,UAAW,AAAD,EAAE,eAAe;IACnD;IAEA,OAAO;AACT;AAEA,6CAA6C;AAC7C,MAAM,QAAQ,eAAe,oJAAA,CAAA,UAAQ;AAErC,gDAAgD;AAChD,MAAM,KAAK,GAAG,gJAAA,CAAA,UAAK;AAEnB,8BAA8B;AAC9B,MAAM,aAAa,GAAG,0JAAA,CAAA,UAAa;AACnC,MAAM,WAAW,GAAG,wJAAA,CAAA,UAAW;AAC/B,MAAM,QAAQ,GAAG,qJAAA,CAAA,UAAQ;AACzB,MAAM,OAAO,GAAG,8IAAA,CAAA,UAAO;AACvB,MAAM,UAAU,GAAG,wJAAA,CAAA,UAAU;AAE7B,0BAA0B;AAC1B,MAAM,UAAU,GAAG,qJAAA,CAAA,UAAU;AAE7B,qDAAqD;AACrD,MAAM,MAAM,GAAG,MAAM,aAAa;AAElC,oBAAoB;AACpB,MAAM,GAAG,GAAG,SAAS,IAAI,QAAQ;IAC/B,OAAO,QAAQ,GAAG,CAAC;AACrB;AAEA,MAAM,MAAM,GAAG,oJAAA,CAAA,UAAM;AAErB,sBAAsB;AACtB,MAAM,YAAY,GAAG,0JAAA,CAAA,UAAY;AAEjC,qBAAqB;AACrB,MAAM,WAAW,GAAG,sJAAA,CAAA,UAAW;AAE/B,MAAM,YAAY,GAAG,uJAAA,CAAA,UAAY;AAEjC,MAAM,UAAU,GAAG,CAAA,QAAS,CAAA,GAAA,4JAAA,CAAA,UAAc,AAAD,EAAE,wIAAA,CAAA,UAAK,CAAC,UAAU,CAAC,SAAS,IAAI,SAAS,SAAS;AAE3F,MAAM,UAAU,GAAG,uJAAA,CAAA,UAAQ,CAAC,UAAU;AAEtC,MAAM,cAAc,GAAG,4JAAA,CAAA,UAAc;AAErC,MAAM,OAAO,GAAG;uCAGD","ignoreList":[0]}},
    {"offset": {"line": 22698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22704, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/node_modules/better-react-mathjax/esm/MathJaxContext/MathJaxContext.js"],"sourcesContent":["var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,o=1,n=arguments.length;o<n;o++)for(var a in t=arguments[o])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};import React,{createContext,useContext,useRef}from\"react\";var v2Promise,v3Promise,MathJaxBaseContext=createContext(void 0),DEFAULT_V2_SRC=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-MML-AM_CHTML\",DEFAULT_V3_SRC=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js\",MathJaxContext=function(e){var n=e.config,t=e.version,t=void 0===t?3:t,o=e.src,o=void 0===o?2===t?DEFAULT_V2_SRC:DEFAULT_V3_SRC:o,a=e.onStartup,r=e.onLoad,i=e.asyncLoad,s=void 0!==i&&i,h=e.onError,i=e.typesettingOptions,d=e.renderMode,d=void 0===d?\"post\":d,c=e.hideUntilTypeset,e=e.children,u=useContext(MathJaxBaseContext);if(void 0!==(null==u?void 0:u.version)&&(null==u?void 0:u.version)!==t)throw Error(\"Cannot nest MathJaxContexts with different versions. MathJaxContexts should not be nested at all but if they are, they cannot have different versions. Stick with one version of MathJax in your app and avoid using more than one MathJaxContext.\");if(2===t&&void 0!==v3Promise||3===t&&void 0!==v2Promise)throw Error(\"Cannot use MathJax versions 2 and 3 simultaneously in the same app due to how MathJax is set up in the browser; either you have multiple MathJaxContexts with different versions or you have mounted and unmounted MathJaxContexts with different versions. Please stick with one version of MathJax in your app. File an issue in the project Github page if you need this feature.\");var v=useRef(u),u=useRef((null==u?void 0:u.version)||null);if(null===u.current)u.current=t;else if(u.current!==t)throw Error(\"Cannot change version of MathJax in a MathJaxContext after it has mounted. Reload the page with a new version when this must happen.\");var f=o||(2===t?DEFAULT_V2_SRC:DEFAULT_V3_SRC);function l(t,o){n&&(window.MathJax=n);var e=document.createElement(\"script\");e.type=\"text/javascript\",e.src=f,e.async=s,e.addEventListener(\"load\",function(){var e=window.MathJax;a&&a(e),t(e),r&&r()}),e.addEventListener(\"error\",function(e){return o(e)}),document.getElementsByTagName(\"head\")[0].appendChild(e)}return void 0===v.current&&(u={typesettingOptions:i,renderMode:d,hideUntilTypeset:c},2===t?void 0===v2Promise&&(\"undefined\"!=typeof window?(v2Promise=new Promise(l)).catch(function(e){if(!h)throw Error(\"Failed to download MathJax version 2 from '\".concat(f,\"' due to: \").concat(JSON.stringify(e)));h(e)}):(v2Promise=Promise.reject()).catch(function(e){})):void 0===v3Promise&&(\"undefined\"!=typeof window?(v3Promise=new Promise(l)).catch(function(e){if(!h)throw Error(\"Failed to download MathJax version 3 from '\".concat(f,\"' due to: \").concat(e));h(e)}):(v3Promise=Promise.reject()).catch(function(e){})),v.current=__assign(__assign({},u),2===t?{version:2,promise:v2Promise}:{version:3,promise:v3Promise})),React.createElement(MathJaxBaseContext.Provider,{value:v.current},e)};export default MathJaxContext;export{MathJaxBaseContext};"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 22756, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}