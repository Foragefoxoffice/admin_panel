{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Mitos/admin/src/app/admin/banners/page.jsx"],"sourcesContent":["'use client';\r\nimport { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nexport default function BannerListPage() {\r\n  const [banners, setBanners] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [deleteError, setDeleteError] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    const fetchBanners = async () => {\r\n      try {\r\n        const response = await fetch('https://mitoslearning.in/api/banners');\r\n        if (!response.ok) throw new Error('Failed to fetch banners');\r\n        const data = await response.json();\r\n\r\n        // Normalize ID to always have `_id`\r\n        const normalized = data.map(banner => ({\r\n          ...banner,\r\n          _id: banner._id || banner.id || null,\r\n        }));\r\n\r\n        console.log('Normalized Banners:', normalized);\r\n        setBanners(normalized);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBanners();\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!id) {\r\n      console.error('No ID provided for deletion');\r\n      setDeleteError('No ID provided for deletion');\r\n      return;\r\n    }\r\n\r\n    if (!confirm('Are you sure you want to delete this banner?')) return;\r\n\r\n    try {\r\n      const response = await fetch(`https://mitoslearning.in/api/banners/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to delete banner');\r\n      }\r\n\r\n      setBanners((prev) => prev.filter(b => b._id !== id));\r\n      setSuccessMessage('Banner deleted successfully!');\r\n      setDeleteError(null);\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (err) {\r\n      console.error('Delete error:', err);\r\n      setDeleteError(err.message);\r\n      setTimeout(() => setDeleteError(null), 3000);\r\n    }\r\n  };\r\n\r\n  const toggleBannerStatus = async (id) => {\r\n    try {\r\n      const bannerToUpdate = banners.find(b => b._id === id);\r\n      if (!bannerToUpdate) return;\r\n  \r\n      const updatedBanner = {\r\n        ...bannerToUpdate,\r\n        isActive: !bannerToUpdate.isActive\r\n      };\r\n  \r\n      const response = await fetch(`https://mitoslearning.in/api/banners/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedBanner),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to update banner status');\r\n      }\r\n  \r\n      setBanners(banners.map(banner => \r\n        banner._id === id ? updatedBanner : banner\r\n      ));\r\n      \r\n      setSuccessMessage(`Banner marked as ${updatedBanner.isActive ? 'active' : 'inactive'}!`);\r\n      setTimeout(() => setSuccessMessage(null), 3000);\r\n    } catch (err) {\r\n      console.error('Toggle status error:', err);\r\n      setDeleteError(err.message);\r\n      setTimeout(() => setDeleteError(null), 3000);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"text-center py-8\">Loading banners...</div>;\r\n  if (error) return <div className=\"text-center py-8 text-red-500\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\" py-8 px-4\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Success/Error Messages */}\r\n        <AnimatePresence>\r\n          {successMessage && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -20 }}\r\n              className=\"fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50\"\r\n            >\r\n              {successMessage}\r\n            </motion.div>\r\n          )}\r\n          {deleteError && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -20 }}\r\n              className=\"fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg z-50\"\r\n            >\r\n              Error: {deleteError}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <div className=\"grid gap-4 md:flex  justify-between items-center mb-6\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800\">Banner List</h1>\r\n          <Link \r\n            href=\"/admin/addbanners\"\r\n            className=\"btn\"\r\n          >\r\n            Create New Banner\r\n          </Link>\r\n        </div>\r\n\r\n        {banners.length === 0 ? (\r\n          <div className=\"text-center py-12 bg-white rounded-lg shadow\">\r\n            <p className=\"text-gray-500\">No banners found. Create your first banner!</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {banners.map((banner) => (\r\n              <div \r\n                key={banner._id || banner.id} \r\n                className=\"bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-shadow\"\r\n              >\r\n                <div className=\"relative h-48 bg-gray-100\">\r\n                  {banner.imageUrl ? (\r\n                    <img \r\n                      src={`https://mitoslearning.in${banner.imageUrl}`} \r\n                      alt={banner.title}\r\n                      className=\"w-full h-full object-cover\"\r\n                      onError={(e) => {\r\n                        e.target.src = '/placeholder-image.jpg'; // Fallback image\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"w-full h-full flex items-center justify-center bg-gray-200\">\r\n                      <span className=\"text-gray-500\">No Image</span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"absolute top-2 right-2 flex items-center space-x-2\">\r\n                    <button \r\n                      onClick={() => toggleBannerStatus(banner._id)}\r\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                        banner.isActive \r\n                          ? 'bg-green-100 text-green-800 hover:bg-green-200' \r\n                          : 'bg-gray-100 text-gray-800 hover:bg-gray-200'\r\n                      } transition-colors`}\r\n                    >\r\n                      {banner.isActive ? 'Active' : 'Inactive'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"p-4\">\r\n                  <h3 className=\"font-semibold text-lg mb-1 text-[#35095E] truncate capitalize\">{banner.title}</h3>\r\n                  <p className=\"text-sm text-gray-600 mb-2 truncate\">\r\n                    Redirects to: <a href={banner.redirectUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">{banner.redirectUrl}</a>\r\n                  </p>\r\n                  <div className=\"flex justify-between items-center mt-4\">\r\n                    <button\r\n                      onClick={() => handleDelete(banner._id)}\r\n                      className=\"text-white hover:text-[#35095E] text-sm font-medium px-3 py-1 rounded hover:bg-red-50 transition-colors\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}